<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>cron脚本相关的记录</title>
      <link href="/blog/2021/11/21/cron-tips/"/>
      <url>/blog/2021/11/21/cron-tips/</url>
      
        <content type="html"><![CDATA[<p>为了让之后的人少走弯路</p><a id="more"></a><h2 id="cron-日志按日期划分"><a class="header-anchor" href="#cron-日志按日期划分">#</a>cron 日志按日期划分</h2><p>先说结果的例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ONNS_HOME=/Users/onns</span><br><span class="line">ONNS_ROOT=/Users/onns/Onns</span><br><span class="line">ONNS_CONFIG_DIR=/Users/onns/Onns/code/config/bash</span><br><span class="line">ONNS_PLATFORM=macmini</span><br><span class="line">cron_log_dir=/Users/onns/Onns/code/<span class="built_in">log</span>/cron</span><br><span class="line">30 * * * * zsh /Users/onns/Onns/code/bash/oclear &gt;&gt;<span class="variable">$&#123;cron_log_dir&#125;</span>/out-<span class="variable">$&#123;ONNS_PLATFORM&#125;</span>-`date <span class="string">"+\%Y\%m"</span>`.<span class="built_in">log</span> 2&gt;&gt;<span class="variable">$&#123;cron_log_dir&#125;</span>/err-<span class="variable">$&#123;ONNS_PLATFORM&#125;</span>-`date <span class="string">"+\%Y\%m"</span>`.<span class="built_in">log</span></span><br><span class="line">0 22 * * * zsh /Users/onns/Onns/code/bash/obackup &gt;&gt;<span class="variable">$&#123;cron_log_dir&#125;</span>/out-<span class="variable">$&#123;ONNS_PLATFORM&#125;</span>-`date <span class="string">"+\%Y\%m"</span>`.<span class="built_in">log</span> 2&gt;&gt;<span class="variable">$&#123;cron_log_dir&#125;</span>/err-<span class="variable">$&#123;ONNS_PLATFORM&#125;</span>-`date <span class="string">"+\%Y\%m"</span>`.<span class="built_in">log</span></span><br><span class="line">*/10 * * * * /Users/onns/Downloads/github/ddns/ddns &gt;&gt;<span class="variable">$&#123;cron_log_dir&#125;</span>/out-<span class="variable">$&#123;ONNS_PLATFORM&#125;</span>-`date <span class="string">"+\%Y\%m"</span>`.<span class="built_in">log</span> 2&gt;&gt;<span class="variable">$&#123;cron_log_dir&#125;</span>/err-<span class="variable">$&#123;ONNS_PLATFORM&#125;</span>-`date <span class="string">"+\%Y\%m"</span>`.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>日期很好拿，通过<code>date +%Y%m</code>就拿到了，但是想要写在文件名里需要注意几点：</p><ol><li><p>不能写在变量里，不知道是不是我写的有问题，我试过如下的写法都失败了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log_date=$(date +%Y%m)</span><br><span class="line">log_date=`date +%Y%m`</span><br><span class="line">log_date=`date <span class="string">"+\%Y\%m"</span>`</span><br></pre></td></tr></table></figure></li><li><p><code>%</code>需要转义（下面这种写法我试过也不行）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * /Users/onns/Downloads/github/ddns/ddns &gt;&gt;<span class="variable">$&#123;cron_log_dir&#125;</span>/out-<span class="variable">$&#123;ONNS_PLATFORM&#125;</span>-`date +%Y%m`.<span class="built_in">log</span> 2&gt;&gt;<span class="variable">$&#123;cron_log_dir&#125;</span>/err-<span class="variable">$&#123;ONNS_PLATFORM&#125;</span>-`date +%Y%m`.<span class="built_in">log</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="todo"><a class="header-anchor" href="#todo">#</a>TODO</h3><ul><li>总感觉有通过变量的方式定义时间日期的方法，不然现在这种太呆了。</li></ul><h2 id="cron-使用变量"><a class="header-anchor" href="#cron-使用变量">#</a>cron 使用变量</h2><p>很奇怪，不能定义多级变量，不然会索引不到。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这样可以</span></span><br><span class="line">ONNS_HOME=/Users/onns</span><br><span class="line">ONNS_ROOT=/Users/onns/Onns</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这样就不行</span></span><br><span class="line">ONNS_HOME=/Users/onns</span><br><span class="line">ONNS_ROOT=<span class="variable">$ONNS_HOME</span>/Onns</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> zsh </tag>
            
            <tag> cron </tag>
            
            <tag> crontab </tag>
            
            <tag> macos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>postman配置预处理脚本等</title>
      <link href="/blog/2021/11/16/postman-script/"/>
      <url>/blog/2021/11/16/postman-script/</url>
      
        <content type="html"><![CDATA[<p>记录 postman 相关用法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> city_id = pm.request.url.query.get(<span class="string">"cityId"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(city_id);</span><br><span class="line"><span class="keyword">var</span> ts = <span class="built_in">parseInt</span>(<span class="built_in">Date</span>.now() / <span class="number">1000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(ts);</span><br><span class="line"><span class="keyword">var</span> hash = CryptoJS.MD5(password + ts + city_id).toString();</span><br><span class="line">pm.globals.set(<span class="string">"moji_key"</span>, hash);</span><br><span class="line">pm.globals.set(<span class="string">"ts"</span>, ts);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> postman </tag>
            
            <tag> work </tag>
            
            <tag> curl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git hook删除项目配置</title>
      <link href="/blog/2021/11/14/git-hook-usage/"/>
      <url>/blog/2021/11/14/git-hook-usage/</url>
      
        <content type="html"><![CDATA[<p>昨晚犯了一个蠢事，不小心把一个权限很大的 key 传上 GitHub 了，记录一下问题以及解决方案。</p><h2 id="事发原因"><a class="header-anchor" href="#事发原因">#</a>事发原因</h2><p>我有一个动态解析域名的代码：<a href="https://github.com/onns/ddns" target="_blank" rel="noopener">https://github.com/onns/ddns</a>，因为最近需要一个将内网 ip 映射到域名的功能所以修改了一部分代码，但是不小心<strong>将我的阿里云 accesskey 和 secret 传上去了</strong>，它能获取我在阿里云的全部权限= =，所以还是蛮可怕的，为了下次不发生类似的问题，找寻解决方案并以我为戒。</p><p>不得不说阿里云这方便做的还是蛮好的，我传上去的一瞬间就收到了告警短信。</p><blockquote><p>【阿里云】尊敬的onns@onns.xyz：阿里云云安全中心检测到您账号的 AccessKey：LTAIMwxO3zIjXWiQ 被公开在 Github 代码库中，建议您立即登录云安全中心，AK&amp;帐密泄露检测查看详情，建议核实后，尽快禁用。</p></blockquote><a id="more"></a><h2 id="思考"><a class="header-anchor" href="#思考">#</a>思考</h2><p>对于此类问题，其实一个最好的解决方案是<strong>将配置与主代码分离</strong>，将配置放到配置文件里，或者是<strong>通过参数手动写入</strong>。</p><p>但我的应用场景是，很多台机器跑定时任务更新 ip，如果走配置文件的话换起来成本并不会降低，而且到时候还要考虑文件依赖的问题，所以最好的写法是将配置直接硬编码在代码里，单文件到处可用。</p><p>所以问题的解决方案就变成了：<strong>如何不把配置信息传上 GitHub</strong>。</p><p>那问题的解答就变得清晰了起来：<code>git hook</code>，<code>git hook</code>可以保证帮我在代码提交前删除对应的配置文件代码。</p><h2 id="解决"><a class="header-anchor" href="#解决">#</a>解决</h2><p><code>git hook</code>本身已经集成在<code>git</code>上了，无需再安装任何插件即可使用。</p><h3 id="hook-流程"><a class="header-anchor" href="#hook-流程">#</a>hook 流程</h3><ol><li>找到所有的变更文件</li><li>筛选符合要求的文件</li><li>对敏感信息进行文本替换</li></ol><h3 id="文件筛选"><a class="header-anchor" href="#文件筛选">#</a>文件筛选</h3><p>所幸 Google 下很多，不过有一些有问题，大家直接抄作业即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">go_files=($(git diff --cached --name-only | grep <span class="string">".go$"</span>))</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$&#123;go_files&#125;</span>"</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>这里有个问题是网上的版本都是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go_files=$(git diff --cached --name-only | grep <span class="string">".go$"</span>) <span class="comment"># 没有最外层的括号，相比于上面的代码</span></span><br></pre></td></tr></table></figure><p>但是这个得到的结果是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a.go</span><br><span class="line">b.go</span><br></pre></td></tr></table></figure><p>是一个带换行的字符串变量，不是一个数组，这个可能是 zsh 的问题，我用的是<code> macOS</code>，大家到时候可以先自己在命令行试一下这个<code>go_files</code>是否可迭代。</p><h3 id="文本替换"><a class="header-anchor" href="#文本替换">#</a>文本替换</h3><p>以前写正则的时候这个匹配 10s 内解决，但是在 shell 下真的花了半个小时。</p><p>先说结论：</p><ol><li>sed 的正则模式没有<code>\S</code>这种写法。</li><li>macOS 下开启正则需要<code>-E</code>参数。</li><li>macOS 下在原文件上变更需要<code>-i</code>参数后加一个<code>''</code>空。</li><li>大多数教程上说<code>()</code>这两个括号也要转义，但是我没转义才成功的，不知道为什么，感觉被误导了好久= =。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -E -i <span class="string">''</span> <span class="string">'s/var AccessKeyId = "[_A-Za-z0-9]+"/var AccessKeyId = ""/g'</span> main.go</span><br><span class="line">sed -E -i <span class="string">''</span> <span class="string">'s/var AccessKeyId = "([\S]+)"/var AccessKeyId = ""/g'</span> main.go</span><br><span class="line">sed -E -i <span class="string">''</span> <span class="string">'s/var AccessKeyId = ".*"/var AccessKeyId = ""/g'</span> main.go</span><br><span class="line">sed -i <span class="string">''</span> <span class="string">'s/var AccessKeyId = "LTAIMwxO3zIjXWiQ"/var AccessKeyId = ""/g'</span> main.go</span><br></pre></td></tr></table></figure><p>真的试了半小时，感兴趣的可以自己去试试，这里直接上结论：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -E -i <span class="string">''</span> <span class="string">'s/var AccessKeyId = "[_A-Za-z0-9]+"/var AccessKeyId = ""/g'</span> <span class="variable">$&#123;file&#125;</span></span><br><span class="line">sed -E -i <span class="string">''</span> <span class="string">'s/var AccessKeySecret = "[_A-Za-z0-9]+"/var AccessKeySecret = ""/g'</span> <span class="variable">$&#123;file&#125;</span></span><br></pre></td></tr></table></figure><p>上述代码可以替换：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> AccessKeyId = <span class="string">"LTAIMwxO3zIjXWiQ"</span></span><br><span class="line"><span class="keyword">var</span> AccessKeySecret = <span class="string">"sPvzjjMMA66RaOT0OGiDSkUcAmys5W"</span></span><br></pre></td></tr></table></figure><h3 id="打包"><a class="header-anchor" href="#打包">#</a>打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/zsh</span></span><br><span class="line"></span><br><span class="line">go_files=($(git diff --cached --name-only | grep <span class="string">".go$"</span>))</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$&#123;go_files&#125;</span>"</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> <span class="variable">$&#123;go_files&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># tmpdate=$(date +%Y%m%d-%H%M%S%N) macOS 没有毫秒</span></span><br><span class="line">  tmpdate=$(perl -MTime::HiRes -e <span class="string">'printf("%.0f",Time::HiRes::time()*1000)'</span>)</span><br><span class="line">  cp <span class="variable">$&#123;file&#125;</span> /tmp/git-temp-<span class="variable">$&#123;tmpdate&#125;</span></span><br><span class="line">  sed -E -i <span class="string">''</span> <span class="string">'s/var AccessKeyId = "[_A-Za-z0-9]+"/var AccessKeyId = ""/g'</span> <span class="variable">$&#123;file&#125;</span></span><br><span class="line">  sed -E -i <span class="string">''</span> <span class="string">'s/var AccessKeySecret = "[_A-Za-z0-9]+"/var AccessKeySecret = ""/g'</span> <span class="variable">$&#123;file&#125;</span></span><br><span class="line">  git add <span class="variable">$&#123;file&#125;</span></span><br><span class="line">  mv /tmp/git-temp-<span class="variable">$&#123;tmpdate&#125;</span> <span class="variable">$&#123;file&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"clear access key successfully.\n"</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>最后的代码添加了保存配置的功能，这样不会每次都重新把配置加回去。</p><p>需要注意的问题是：</p><ul><li>需要赋予这个<code>pre-commit</code>文件可执行权限。</li></ul><center><p><img src="//onns.xyz/blog/image/20211114-1.png" alt="图1"></p></center><ul><li>修改的时候要加<code>git add ${file}</code>，不然你会发现你变更了但是 commit 的记录里没有= =。</li></ul><h2 id="测试"><a class="header-anchor" href="#测试">#</a>测试</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> t</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/11/14 11:59</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : t/t.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> AccessKeyId = <span class="string">"LTAIMwxO3zIjXWiQ"</span></span><br><span class="line"><span class="keyword">var</span> AccessKeySecret = <span class="string">"sPvzjjMMA66RaOT0OGiDSkUcAmys5W"</span></span><br></pre></td></tr></table></figure><p>在子目录下创建了一个测试文件。</p><center><p><img src="//onns.xyz/blog/image/20211114-2.png" alt="测试图"></p></center><p>有效，完工！</p><h2 id="todo"><a class="header-anchor" href="#todo">#</a>TODO</h2><ul><li>~~我测试的时候不论我在<strong>当前项目</strong>的哪个子目录下执行，变更的文件列表都是从根目录下算起的，不知道到时候的文件名会不会有问题，待测试。~~测试通过，没问题。</li></ul><center><p><img src="//onns.xyz/blog/image/20211114-3.png" alt="测试子目录"></p></center><ul><li>更优雅的方案，毕竟当前的方案可能会误伤，不过大概率没问题。这里不得不说，golang 的强制格式化 nb！</li></ul><h2 id="参考资料"><a class="header-anchor" href="#参考资料">#</a>参考资料</h2><ul><li><a href="https://medium.com/@radlinskii/writing-the-pre-commit-git-hook-for-go-files-810f8d5f1c6f" target="_blank" rel="noopener">Writing a pre-commit git hook for Go files.</a></li><li><a href="https://superuser.com/questions/599072/how-to-get-bash-execution-time-in-milliseconds-under-mac-os-x" target="_blank" rel="noopener">How to get Bash execution time in milliseconds under Mac OS X?</a></li><li><a href="https://githooks.com/" target="_blank" rel="noopener">https://githooks.com/</a></li><li><a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks" target="_blank" rel="noopener">8.3 Customizing Git - Git Hooks</a></li><li><a href="https://support.gitkraken.com/working-with-repositories/githooksexample/" target="_blank" rel="noopener">Git Hooks Example</a></li></ul><h2 id="总结"><a class="header-anchor" href="#总结">#</a>总结</h2><ul><li>好多时间都花在了 sed 的文档查询上，结果最后还是我自己试出来的。</li><li>没记错的话 git 好像也是 Linux 的作者写的？</li></ul><p>如有不规范之处，欢迎批评指正，望大家以我为戒。</p><p>2021.11.14 13:23:22</p>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zsh </tag>
            
            <tag> macos </tag>
            
            <tag> git </tag>
            
            <tag> git hook </tag>
            
            <tag> sed </tag>
            
            <tag> grep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git相关使用</title>
      <link href="/blog/2021/10/07/git-doc/"/>
      <url>/blog/2021/10/07/git-doc/</url>
      
        <content type="html"><![CDATA[<p>记录问题</p><a id="more"></a><h2 id="修改默认分支名为-main"><a class="header-anchor" href="#修改默认分支名为-main">#</a>修改默认分支名为 main</h2><p>= = 历史原因</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global init.defaultBranch main</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> doc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang一些问题记录</title>
      <link href="/blog/2021/10/07/golang-doc/"/>
      <url>/blog/2021/10/07/golang-doc/</url>
      
        <content type="html"><![CDATA[<p>一些问题的解答</p><a id="more"></a><h2 id="go111module-用途"><a class="header-anchor" href="#go111module-用途">#</a>GO111MODULE 用途</h2><p><code>golang</code>从 1.11 版本之后开始用<code>go mod</code>来管理依赖包了，所以默认这个是开启的，但是像<code>ngrok</code>这种很老的，又不再更新开源版本的代码，不支持这个特性，需要关闭次功能：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env -w GO111MODULE=off</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> doc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL问题查阅</title>
      <link href="/blog/2021/09/11/mysql-doc/"/>
      <url>/blog/2021/09/11/mysql-doc/</url>
      
        <content type="html"><![CDATA[<p>记录问题</p><a id="more"></a><h2 id="mysql-的count-和count-1-有什么区别"><a class="header-anchor" href="#mysql-的count-和count-1-有什么区别">#</a>Mysql 的<code>COUNT(*)</code>和<code>COUNT(1)</code>有什么区别</h2><p>5.6 的官方文档中介绍如下：</p><blockquote><p><code>InnoDB</code> handles SELECT <code>COUNT(*)</code> and SELECT <code>COUNT(1)</code> operations in the same way. There is no performance difference.</p></blockquote><p>所以答案是没区别。<code>COUNT(name)</code>会算非空的个数。</p><ul><li><a href="https://dev.mysql.com/doc/refman/5.6/en/aggregate-functions.html#function_count" target="_blank" rel="noopener">12.19.1 Aggregate Function Descriptions</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> doc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang中文显示问题</title>
      <link href="/blog/2021/09/08/golang-utf8-chinese/"/>
      <url>/blog/2021/09/08/golang-utf8-chinese/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h1><p>在使用<code>golang</code>的日志系统时，有时会出现一些看起来知道是什么编码但实际上解析不出来的内容：</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="number">350</span>\<span class="number">277</span>\<span class="number">231</span>\<span class="number">346</span>\<span class="number">230</span>\<span class="number">257</span>\<span class="number">344</span>\<span class="number">270</span>\<span class="number">200</span>\<span class="number">346</span>\<span class="number">256</span>\<span class="number">265</span>\<span class="number">344</span>\<span class="number">270</span>\<span class="number">255</span>\<span class="number">346</span>\<span class="number">226</span>\<span class="number">207</span></span><br></pre></td></tr></table></figure><p>找了好久终于知道怎么读了～</p><h2 id="太长不看版"><a class="header-anchor" href="#太长不看版">#</a>太长不看版</h2><p>直接用<code>python2</code>的<code>print</code>方法即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">➜  ~  python2                                               [2021/09/08 23:11] </span><br><span class="line"></span><br><span class="line">WARNING: Python 2.7 is not recommended. </span><br><span class="line">This version is included <span class="keyword">in</span> macOS <span class="keyword">for</span> compatibility with legacy software. </span><br><span class="line">Future versions of macOS will not include Python 2.7. </span><br><span class="line">Instead, it is recommended that you transition to using <span class="string">'python3'</span> from within Terminal.</span><br><span class="line"></span><br><span class="line">Python 2.7.16 (default, Jun 18 2021, 03:23:52) </span><br><span class="line">[GCC Apple LLVM 12.0.5 (clang-1205.0.19.59.6) [+internal-os, ptrauth-isa=deploy on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">"\350\277\231\346\230\257\344\270\200\346\256\265\344\270\255\346\226\207"</span>)</span><br><span class="line">这是一段中文</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="转换"><a class="header-anchor" href="#转换">#</a>转换</h2><p>理论上我们常用的编码类型无非就是<code>gbk</code>、<code>ascii</code>、<code>utf-8</code>。</p><p>直接从<code>utf-8</code>开始（因为我阴差阳错试出来了编码，所以我直接逆向推回去了）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="string">"这是一段中文"</span>.encode(<span class="string">'utf-8'</span>)</span><br><span class="line">b<span class="string">'\xe8\xbf\x99\xe6\x98\xaf\xe4\xb8\x80\xe6\xae\xb5\xe4\xb8\xad\xe6\x96\x87'</span></span><br></pre></td></tr></table></figure><p>其实可以发现<code>\</code>的个数是一样的，因此就是<code>\350</code>和<code>\xe8</code>之间有一个对应关系。</p><p>基本上到这里就可以猜测一个是八进制一个是十六进制了= =</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; hex(int(<span class="string">"350"</span>,8))</span><br><span class="line"><span class="string">'0xe8'</span></span><br></pre></td></tr></table></figure><p>收工。</p><p>有时候运气也很重要。</p><p>我用了<code>chardet</code>库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Python 2.7.17 (default, Jul 20 2020, 15:37:01) </span><br><span class="line">[GCC 7.5.0] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; import chardet</span><br><span class="line">&gt;&gt;&gt; chardet.detect(<span class="string">"\350\277\231\346\230\257\344\270\200\346\256\265\344\270\255\346\226\207"</span>)</span><br><span class="line">&#123;<span class="string">'confidence'</span>: 0.99, <span class="string">'language'</span>: <span class="string">''</span>, <span class="string">'encoding'</span>: <span class="string">'utf-8'</span>&#125;</span><br></pre></td></tr></table></figure><p>晚安 😴</p>]]></content>
      
      
      <categories>
          
          <category> findout </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> utf8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bash环境变了重载问题</title>
      <link href="/blog/2021/08/21/bash-variables-reload/"/>
      <url>/blog/2021/08/21/bash-variables-reload/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h1><p>因为会在多台机器里用我自己写的一个脚本库，如何快速的配置生效就是需要解决的问题，我的解决方法是用环境变量包。</p><p>定义一个默认的环境变量文件，再定义各个平台独立的环境变量文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~/Onns/code/config/bash git:(main) ✗  ls                                                                                                                        [2021/08/21 10:50]</span><br><span class="line">README.md       default         lab_desktop     macmini         oinit_python.py template-bashrc ubuntu</span><br><span class="line">aliyun          deploy          macbook         oinit           raspi           <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>之前在使用过程中一直没什么问题，而且我还制作了一个 python 解析的脚本，使得 python 也能够使用同一套定义。</p><p>不过昨天在使用的时候突然想到一个问题，比如我在 default（默认的环境变量）里配置了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ONNS_HOME=/User/onns</span><br><span class="line">document_dir=<span class="variable">$&#123;ONNS_HOME&#125;</span>/Documents</span><br></pre></td></tr></table></figure><p>然后又在专门的配置文件里配置了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ONNS_HOME=/User/macmini</span><br></pre></td></tr></table></figure><p>这样确实可以做到在不同的电脑上应用专门配置的变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$ONNS_HOME</span></span><br><span class="line">/User/macmini</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$document_dir</span></span><br><span class="line">/User/onns/Documents</span><br></pre></td></tr></table></figure><p>但是子变量是不会改变的，除非你在专门的配置文件里再配置一次。。</p><p>害，期待解决办法～</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><p>在 stackoverflow 上的提问：<a href="https://stackoverflow.com/questions/68869659/is-there-a-way-to-load-bash-variables-dynamically" target="_blank" rel="noopener">Is there a way to load bash variables dynamically</a></p>]]></content>
      
      
      <categories>
          
          <category> accumulate </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> bash </tag>
            
            <tag> macos </tag>
            
            <tag> environment variables </tag>
            
            <tag> question </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>csv乱码问题解决</title>
      <link href="/blog/2021/08/18/csv-gibberish/"/>
      <url>/blog/2021/08/18/csv-gibberish/</url>
      
        <content type="html"><![CDATA[<h1 id="csv-乱码问题解决"><a class="header-anchor" href="#csv-乱码问题解决">#</a>csv 乱码问题解决</h1><p>csv 是比较好整理数据的语言，经常就用字符串直接拼接了，然后用 Excel 做后续处理，但是中文会乱码。</p><h2 id="解决方案"><a class="header-anchor" href="#解决方案">#</a>解决方案</h2><p>加一个 bom 头即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">"reply.csv"</span>, <span class="string">"r"</span>)</span><br><span class="line">data = f.read()</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">"reply.csv"</span>, <span class="string">"r"</span>, encoding=<span class="string">"utf-8-sig"</span>)</span><br><span class="line">f.write(data)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> linux </tag>
            
            <tag> tips </tag>
            
            <tag> macos </tag>
            
            <tag> excel </tag>
            
            <tag> csv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Elasticsearch</title>
      <link href="/blog/2021/06/14/install-elasticsearch/"/>
      <url>/blog/2021/06/14/install-elasticsearch/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>博客的搜索有点难用，经常找不到东西，因为现在还是基于字符串匹配的，也没有办法进行模糊搜索，所以折腾一下，顺便学习一下<code>Elasticsearch</code>，记录之。</p><a id="more"></a><h2 id="安装openjdk"><a class="header-anchor" href="#安装openjdk">#</a>安装OpenJDK</h2><blockquote><p>Elasticsearch is built using Java, and includes a bundled version of OpenJDK from the JDK maintainers (GPLv2+CE) within each distribution. The bundled JVM is the recommended JVM and is located within the jdk directory of the Elasticsearch home directory.</p></blockquote><p>官网的描述如上，所以跟着官网去 <a href="https://jdk.java.net/" target="_blank" rel="noopener">https://jdk.java.net/</a> 下了<code>OpenJDK</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.java.net/java/GA/jdk16.0.1/7147401fd7354114ac51ef3e1328291f/9/GPL/openjdk-16.0.1_linux-x64_bin.tar.gz</span><br><span class="line">wget https://download.java.net/java/GA/jdk16.0.1/7147401fd7354114ac51ef3e1328291f/9/GPL/openjdk-16.0.1_linux-x64_bin.tar.gz.sha256</span><br></pre></td></tr></table></figure><p>本来还想皮一下，结果发现验证不了。。。。只能手动验证了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@onns:~$ shasum -a 256 openjdk-16.0.1_linux-x64_bin.tar.gz</span><br><span class="line">b1198ffffb7d26a3fdedc0fa599f60a0d12aa60da1714b56c1defbce95d8b235  openjdk-16.0.1_linux-x64_bin.tar.gz</span><br><span class="line">onns@onns:~$ cat openjdk-16.0.1_linux-x64_bin.tar.gz.sha256 </span><br><span class="line">b1198ffffb7d26a3fdedc0fa599f60a0d12aa60da1714b56c1defbce95d8b235</span><br></pre></td></tr></table></figure><p>然后解压安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar xvf openjdk-16.0.1_linux-x64_bin.tar.gz</span><br><span class="line">vi .bashrc</span><br><span class="line"><span class="built_in">source</span> .bashrc</span><br></pre></td></tr></table></figure><p>添加的内容是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/home/onns/jdk-16.0.1</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin</span><br></pre></td></tr></table></figure><p>测试一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@onns:~$ javac -version</span><br><span class="line">javac 16.0.1</span><br></pre></td></tr></table></figure><h2 id="安装elasticsearch"><a class="header-anchor" href="#安装elasticsearch">#</a>安装Elasticsearch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.13.1-linux-x86_64.tar.gz</span><br><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.13.1-linux-x86_64.tar.gz.sha512</span><br></pre></td></tr></table></figure><p>这个就能验证成功 😂 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@onns:~$ shasum -a 512 -c elasticsearch-7.13.1-linux-x86_64.tar.gz.sha512</span><br><span class="line">elasticsearch-7.13.1-linux-x86_64.tar.gz: OK</span><br></pre></td></tr></table></figure><p>然后正常解压即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf elasticsearch-7.13.1-linux-x86_64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-7.13.1/</span><br></pre></td></tr></table></figure><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch</span><br></pre></td></tr></table></figure><p>尴尬，我的云服务器居然内存不够开启这个服务。。。换了个服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:~$ curl localhost:9200</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"hs-Z390-AORUS-PRO"</span>,</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elasticsearch"</span>,</span><br><span class="line">  <span class="string">"cluster_uuid"</span> : <span class="string">"b6FAZNuyRxG1dVoY6Gbtog"</span>,</span><br><span class="line">  <span class="string">"version"</span> : &#123;</span><br><span class="line">    <span class="string">"number"</span> : <span class="string">"7.13.1"</span>,</span><br><span class="line">    <span class="string">"build_flavor"</span> : <span class="string">"default"</span>,</span><br><span class="line">    <span class="string">"build_type"</span> : <span class="string">"tar"</span>,</span><br><span class="line">    <span class="string">"build_hash"</span> : <span class="string">"9a7758028e4ea59bcab41c12004603c5a7dd84a9"</span>,</span><br><span class="line">    <span class="string">"build_date"</span> : <span class="string">"2021-05-28T17:40:59.346932922Z"</span>,</span><br><span class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"lucene_version"</span> : <span class="string">"8.8.2"</span>,</span><br><span class="line">    <span class="string">"minimum_wire_compatibility_version"</span> : <span class="string">"6.8.0"</span>,</span><br><span class="line">    <span class="string">"minimum_index_compatibility_version"</span> : <span class="string">"6.0.0-beta1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还是我太天真了，这个东西啥也不干就<code>2G</code>内存没了，害。</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html" target="_blank" rel="noopener">Set up Elasticsearch</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/targz.html" target="_blank" rel="noopener">Install Elasticsearch from archive on Linux or MacOS</a></li><li><a href="https://www.ruanyifeng.com/blog/2017/08/elasticsearch.html" target="_blank" rel="noopener">全文搜索引擎 Elasticsearch 入门教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> java - shasum </tag>
            
            <tag> openjdk </tag>
            
            <tag> elastic </tag>
            
            <tag> elastic search </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（20）</title>
      <link href="/blog/2021/06/12/the-go-programming-language-note-20/"/>
      <url>/blog/2021/06/12/the-go-programming-language-note-20/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="接口"><a class="header-anchor" href="#接口">#</a>接口</h1><p>接口类型是一种抽象的类型。</p><p>空接口类型对实现它的类型没有要求，所以可以将任意一个值赋给空接口类型。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> any <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">any = <span class="literal">true</span></span><br><span class="line">any = <span class="number">12.34</span></span><br><span class="line">any = <span class="string">"hello"</span></span><br><span class="line">any = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;<span class="string">"one"</span>: <span class="number">1</span>&#125;</span><br><span class="line">any = <span class="built_in">new</span>(bytes.Buffer)</span><br></pre></td></tr></table></figure><p>因为接口与实现只依赖于判断两个类型的方法，所以没有必要定义一个具体类型和它实现的接口之间的关系。</p><hr><p>感觉现在看书学习效率好低，这本书暂时先告一段落吧！</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（19）</title>
      <link href="/blog/2021/06/10/the-go-programming-language-note-19/"/>
      <url>/blog/2021/06/10/the-go-programming-language-note-19/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> intset</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bytes"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/6/8 15:48</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch6/intset/intset.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> platform = <span class="number">32</span> &lt;&lt; (^<span class="keyword">uint</span>(<span class="number">0</span>) &gt;&gt; <span class="number">63</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IntSet <span class="keyword">struct</span> &#123;</span><br><span class="line">words []<span class="keyword">uint64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *IntSet)</span> <span class="title">Has</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">word, bit := x/<span class="number">64</span>, <span class="keyword">uint</span>(x%<span class="number">64</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(s.words) &gt; word &amp;&amp; s.words[word]&amp;(<span class="number">1</span>&lt;&lt;bit) != <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *IntSet)</span> <span class="title">Add</span><span class="params">(x <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">word, bit := x/<span class="number">64</span>, <span class="keyword">uint</span>(x%<span class="number">64</span>)</span><br><span class="line"><span class="keyword">for</span> word &gt;= <span class="built_in">len</span>(s.words) &#123;</span><br><span class="line">s.words = <span class="built_in">append</span>(s.words, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line">s.words[word] |= <span class="number">1</span> &lt;&lt; bit</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *IntSet)</span> <span class="title">UnionWith</span><span class="params">(t *IntSet)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i, tword := <span class="keyword">range</span> t.words &#123;</span><br><span class="line"><span class="keyword">if</span> i &lt; <span class="built_in">len</span>(s.words) &#123;</span><br><span class="line">s.words[i] |= tword</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">s.words = <span class="built_in">append</span>(s.words, tword)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *IntSet)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> buf bytes.Buffer</span><br><span class="line">buf.WriteByte(<span class="string">'&#123;'</span>)</span><br><span class="line"><span class="keyword">for</span> i, word := <span class="keyword">range</span> s.words &#123;</span><br><span class="line"><span class="keyword">if</span> word == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="number">64</span>; j++ &#123;</span><br><span class="line"><span class="keyword">if</span> word&amp;(<span class="number">1</span>&lt;&lt;<span class="keyword">uint</span>(j)) != <span class="number">0</span> &#123; <span class="comment">// 这里为什么要用 uint() ?</span></span><br><span class="line"><span class="keyword">if</span> buf.Len() &gt; <span class="built_in">len</span>(<span class="string">"&#123;"</span>) &#123;</span><br><span class="line">buf.WriteByte(<span class="string">' '</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Fprintf(&amp;buf, <span class="string">"%d"</span>, <span class="number">64</span>*i+j)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">buf.WriteByte(<span class="string">'&#125;'</span>)</span><br><span class="line"><span class="keyword">return</span> buf.String()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *IntSet)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">eleNum := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, word := <span class="keyword">range</span> s.words &#123;</span><br><span class="line"><span class="keyword">if</span> word == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="number">64</span>; j++ &#123;</span><br><span class="line"><span class="keyword">if</span> word&amp;(<span class="number">1</span>&lt;&lt;j) != <span class="number">0</span> &#123;</span><br><span class="line">eleNum += <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> eleNum</span><br><span class="line">&#125; <span class="comment">// return the number of elements</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *IntSet)</span> <span class="title">AddAll</span><span class="params">(xList ...<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, x := <span class="keyword">range</span> xList &#123;</span><br><span class="line">s.Add(x)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> intset</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"testing"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/6/10 15:00</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch6/intset/intset_test.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x, y IntSet</span><br><span class="line">x.Add(<span class="number">1</span>)</span><br><span class="line">x.Add(<span class="number">144</span>)</span><br><span class="line">x.Add(<span class="number">9</span>)</span><br><span class="line">x.AddAll(<span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">fmt.Println(x.String())</span><br><span class="line">fmt.Println(x.Len())</span><br><span class="line"></span><br><span class="line">y.Add(<span class="number">9</span>)</span><br><span class="line">y.Add(<span class="number">42</span>)</span><br><span class="line">fmt.Println(y.String())</span><br><span class="line">fmt.Println(y.Len())</span><br><span class="line"></span><br><span class="line">x.UnionWith(&amp;y)</span><br><span class="line">fmt.Println(x.String())</span><br><span class="line">fmt.Println(x.Has(<span class="number">9</span>), x.Has(<span class="number">123</span>))</span><br><span class="line"></span><br><span class="line">fmt.Println(&amp;x)</span><br><span class="line">fmt.Println(x.String())</span><br><span class="line">fmt.Println(x)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="number">32</span> &lt;&lt; (^<span class="keyword">uint</span>(<span class="number">0</span>) &gt;&gt; <span class="number">63</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;1 2 3 5 9 144&#125;</span><br><span class="line">6</span><br><span class="line">&#123;9 42&#125;</span><br><span class="line">2</span><br><span class="line">&#123;1 2 3 5 9 42 144&#125;</span><br><span class="line"><span class="literal">true</span> <span class="literal">false</span></span><br><span class="line">&#123;1 2 3 5 9 42 144&#125;</span><br><span class="line">&#123;1 2 3 5 9 42 144&#125;</span><br><span class="line">&#123;[4398046511662 0 65536]&#125;</span><br><span class="line">64</span><br></pre></td></tr></table></figure><p>有几个疑问：</p><ol><li><p><code>32</code>位机器下可以定义<code>int64</code>吗？自行实现还是<code>Go</code>帮忙实现呢？</p></li><li><p>练习 6.5： 我们这章定义的IntSet里的每个字都是用的uint64类型，但是64位的数值可能在32位的平台上不高效。修改程序，使其使用uint类型，这种类型对于32位平台来说更合适。当然了，这里我们可以不用简单粗暴地除64，可以定义一个常量来决定是用32还是64，这里你可能会用到平台的自动判断的一个智能表达式：32 &lt;&lt; (^uint(0) &gt;&gt; 63)<br>那定义结构体的时候怎么比较优雅呢？</p> <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> platform = <span class="number">32</span> &lt;&lt; (^<span class="keyword">uint</span>(<span class="number">0</span>) &gt;&gt; <span class="number">63</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> platform == <span class="number">32</span> &#123;</span><br><span class="line"><span class="keyword">type</span> IntSet <span class="keyword">struct</span> &#123;</span><br><span class="line">words []<span class="keyword">uint32</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">type</span> IntSet <span class="keyword">struct</span> &#123;</span><br><span class="line">words []<span class="keyword">uint64</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似这种应该不合适吧？</p></li><li><p>其实方法到底是和<code>对象本身</code>还是<code>它的地址</code>绑定我还是有疑问，这种情况下可能会写出来<code>bug</code>我觉得。。。</p></li></ol><h2 id="封装"><a class="header-anchor" href="#封装">#</a>封装</h2><p><code>Go</code>语言只有一种控制可见性的手段：<strong>大写首字母的标识符会从定义它们的包中被导出，小写字母的则不会</strong>。这种限制包内成员的方式同样适用于<code>struct</code>或者一个类型的方法。因而如果想要封装一个对象，必须将其定义为一个<code>struct</code>。</p><p>这种基于名字的手段使得在语言中最小的封装单元是<code>package</code>，而不是像其它语言一样的类型。</p><p>一个<code>struct</code>类型的字段对同一个包的所有代码都有可见性，无论你的代码是写在一个函数还是一个方法里。</p><p>在命名一个<code>getter</code>方法时，通常会省略掉前面的<code>Get</code>前缀。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> log</span><br><span class="line"><span class="keyword">type</span> Logger <span class="keyword">struct</span> &#123;</span><br><span class="line">    flags  <span class="keyword">int</span></span><br><span class="line">    prefix <span class="keyword">string</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *Logger)</span> <span class="title">Flags</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *Logger)</span> <span class="title">SetFlags</span><span class="params">(flag <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *Logger)</span> <span class="title">Prefix</span><span class="params">()</span> <span class="title">string</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *Logger)</span> <span class="title">SetPrefix</span><span class="params">(prefix <span class="keyword">string</span>)</span></span></span><br></pre></td></tr></table></figure><p><code>Go</code>的编码风格不禁止直接导出字段。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>导出怎么理解？ <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（18）</title>
      <link href="/blog/2021/06/06/the-go-programming-language-note-18/"/>
      <url>/blog/2021/06/06/the-go-programming-language-note-18/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h2 id="panic-异常"><a class="header-anchor" href="#panic-异常">#</a>Panic 异常</h2><h2 id="recover-捕获异常"><a class="header-anchor" href="#recover-捕获异常">#</a>Recover 捕获异常</h2><p>看不懂。。待看。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><h1 id="方法"><a class="header-anchor" href="#方法">#</a>方法</h1><h2 id="方法声明"><a class="header-anchor" href="#方法声明">#</a>方法声明</h2><p>在函数声明时，在其名字之前放上一个变量，即是一个方法。这个附加的参数会将该函数附加到这种类型上，即相当于为这种类型定义了一个独占的方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/6/6 18:57</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch6/geometry/geometry.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span>&#123; X, Y <span class="keyword">float64</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// traditional function</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Distance</span><span class="params">(p, q Point)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> math.Hypot(q.X-p.X, q.Y-p.Y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// same thing, but as a method of the Point type</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Point)</span> <span class="title">Distance</span><span class="params">(q Point)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> math.Hypot(q.X-p.X, q.Y-p.Y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span> <span class="params">()</span></span> &#123;</span><br><span class="line">p := Point&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">q := Point&#123;<span class="number">4</span>, <span class="number">6</span>&#125;</span><br><span class="line">fmt.Println(Distance(p, q))</span><br><span class="line">fmt.Println(p.Distance(q))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码里那个附加的参数<code>p</code>，叫做方法的接收器（receiver）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[18:59:54] onns@Onns ~/Onns/code/go/go-bible/ch6 $ go run geometry/geometry.go</span><br><span class="line">5</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>在<code>Go</code>语言中可以任意的选择接收器的名字。由于接收器的名字经常会被使用到，建议是可以使用其类型的第一个字母。</p><p>在方法调用过程中，接收器参数一般会在方法名之前出现。</p><p>第一个<code>Distance</code>的调用实际上用的是包级别的函数<code>geometry.Distance</code>，而第二个则是使用刚刚声明的<code>Point</code>，调用的是<code>Point</code>类下声明的<code>Point.Distance</code>方法。</p><p>这种<code>p.Distance</code>的表达式叫做选择器，因为他会选择合适的对应<code>p</code>这个对象的<code>Distance</code>方法来执行。选择器也会被用来选择一个<code>struct</code>类型的字段，比如<code>p.X</code>。由于方法和字段都是在同一命名空间，所以如果我们在这里声明一个<code>X</code>方法的话，编译器会报错，因为在调用<code>p.X</code>时会有歧义。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A Path is a journey connecting the points with straight lines.</span></span><br><span class="line"><span class="keyword">type</span> Path []Point</span><br><span class="line"><span class="comment">// Distance returns the distance traveled along the path.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(path Path)</span> <span class="title">Distance</span><span class="params">()</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">sum := <span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> path &#123;</span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">0</span> &#123;</span><br><span class="line">sum += path[i<span class="number">-1</span>].Distance(path[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以给同一个包内的任意命名类型定义方法，只要这个命名类型的底层类型不是<code>指针</code>或者<code>interface</code>。</p><p>对于一个给定的类型，其内部的方法都必须有唯一的方法名，但是不同的类型却可以有同样的方法名。</p><h2 id="基于指针对象的方法"><a class="header-anchor" href="#基于指针对象的方法">#</a>基于指针对象的方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Point)</span> <span class="title">ScaleBy</span><span class="params">(factor <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line">p.X *= factor</span><br><span class="line">p.Y *= factor</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法的名字是<code>(*Point).ScaleBy</code>，这里的括号是必须的，没有括号的话这个表达式可能会被理解为<code>*(Point.ScaleBy)</code>。</p><p>在现实的程序里，一般会约定如果<code>Point</code>这个类有一个指针作为接收器的方法，那么所有<code>Point</code>的方法都必须有一个指针接收器，即使是那些并不需要这个指针接收器的函数。</p><p>只有类型<code>Point</code>和指向他们的指针<code>(*Point)</code>，才可能是出现在接收器声明里的两种接收器。</p><p>为了避免歧义，在声明方法时，如果一个类型名本身是一个指针的话，是不允许其出现在接收器中的：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> P *<span class="keyword">int</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(P)</span> <span class="title">f</span><span class="params">()</span></span> &#123; <span class="comment">/* ... */</span> &#125; <span class="comment">// compile error: invalid receiver type</span></span><br></pre></td></tr></table></figure><p>如果接收器<code>p</code>是一个<code>Point</code>类型的变量，并且其方法需要一个<code>Point</code>指针作为接收器，我们可以用下面这种简短的写法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.ScaleBy(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>编译器会隐式地帮我们用<code>&amp;p</code>去调用<code>ScaleBy</code>这个方法。</p><p>不能通过一个无法取到地址的接收器来调用指针方法，比如临时变量的内存地址就无法获取得到：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Point&#123;<span class="number">1</span>, <span class="number">2</span>&#125;.ScaleBy(<span class="number">2</span>) <span class="comment">// compile error: can't take address of Point literal</span></span><br></pre></td></tr></table></figure><p><strong>不管你的 method 的 receiver 是指针类型还是非指针类型，都是可以通过指针/非指针类型进行调用的，编译器会帮你做类型转换。</strong></p><p><strong>在声明一个 method 的 receiver 该是指针还是非指针类型时，你需要考虑两方面的因素，第一方面是这个对象本身是不是特别大，如果声明为非指针变量时，调用会产生一次拷贝；第二方面是如果你用指针类型作为 receiver，那么你一定要注意，这种指针类型指向的始终是一块内存地址，就算你对其进行了拷贝。</strong></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://github.com/gopl-zh/gopl-zh.github.com/blob/master/ch5/ch5-10.md" target="_blank" rel="noopener">https://github.com/gopl-zh/gopl-zh.github.com/blob/master/ch5/ch5-10.md</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（17）</title>
      <link href="/blog/2021/06/05/the-go-programming-language-note-17/"/>
      <url>/blog/2021/06/05/the-go-programming-language-note-17/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h2 id="可变参数"><a class="header-anchor" href="#可变参数">#</a>可变参数</h2><p>在声明可变参数函数时，需要在参数列表的最后一个参数类型之前加上省略符号<code>...</code>，这表示该函数会接收任意数量的该类型参数。</p><p>调用者隐式的创建一个数组，并将原始参数复制到数组中，再把数组的一个切片作为参数传给被调用函数。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/6/5 16:04</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch5/sum/sum.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(vals ...<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">total := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, val := <span class="keyword">range</span> vals &#123;</span><br><span class="line">total += val</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> total</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(...<span class="keyword">int</span>)</span></span> &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">g</span><span class="params">([]<span class="keyword">int</span>)</span></span>  &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(sum())</span><br><span class="line">fmt.Println(sum(<span class="number">3</span>))</span><br><span class="line">fmt.Println(sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">values := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">fmt.Println(sum(values...))</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, f)</span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, g)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[16:13:49] onns@Onns ~/Onns/code/go/go-bible/ch5 $ go run sum/sum.go</span><br><span class="line">0</span><br><span class="line">3</span><br><span class="line">10</span><br><span class="line">10</span><br><span class="line">func(...int)</span><br><span class="line">func([]int)</span><br></pre></td></tr></table></figure><p>如果原始参数已经是切片类型，只需在最后一个参数后加上省略符。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">values := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">fmt.Println(sum(values...))</span><br></pre></td></tr></table></figure><p>虽然在可变参数函数内部，<code>...int</code>型参数的行为看起来很像切片类型，但实际上，可变参数函数和以切片作为参数的函数<code>是不同的</code>。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(...<span class="keyword">int</span>)</span></span> &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">g</span><span class="params">([]<span class="keyword">int</span>)</span></span> &#123;&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, f) <span class="comment">// "func(...int)"</span></span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, g) <span class="comment">// "func([]int)"</span></span><br></pre></td></tr></table></figure><blockquote><p>许多文件系统，尤其是NFS，写入文件时发生的错误会被延迟到文件关闭时反馈。如果没有检查文件关闭时的反馈信息，可能会导致数据丢失，而我们还误以为写入操作成功。如果io.Copy和f.close都失败了，我们倾向于将io.Copy的错误信息反馈给调用者，因为它先于f.close发生，更有可能接近问题的本质。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（16）</title>
      <link href="/blog/2021/06/02/the-go-programming-language-note-16/"/>
      <url>/blog/2021/06/02/the-go-programming-language-note-16/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h2 id="匿名函数"><a class="header-anchor" href="#匿名函数">#</a>匿名函数</h2><p>拥有函数名的函数只能在包级语法块中被声明，通过<code>函数字面量</code>（function literal），我们可绕过这一限制，在任何表达式中表示一个函数值。</p><p>函数值字面量是一种表达式，它的值被称为<code>匿名函数</code>（anonymous function）。</p><p>函数字面量允许我们在使用函数时，再定义它。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/6/2 13:36</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch5/5.2.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">squares</span><span class="params">()</span> <span class="title">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x <span class="keyword">int</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">x += <span class="number">2</span></span><br><span class="line"><span class="keyword">return</span> x * x</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f := squares()</span><br><span class="line">fmt.Println(f())</span><br><span class="line">fmt.Println(f())</span><br><span class="line">fmt.Println(f())</span><br><span class="line">fmt.Println(f())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[13:36:09] onns@Onns ~/Onns/code/go/go-bible/ch5 $ go run 5.2.go </span><br><span class="line">4</span><br><span class="line">16</span><br><span class="line">36</span><br><span class="line">64</span><br></pre></td></tr></table></figure><blockquote><p><code>squares</code>的例子证明，函数值不仅仅是一串代码，还记录了状态。在<code>squares</code>中定义的匿名内部函数可以访问和更新<code>squares</code>中的局部变量，这意味着匿名函数和<code>squares</code>中，存在变量引用。这就是函数值属于引用类型和函数值不可比较的原因。<code>Go</code>使用闭包（<code>closures</code>）技术实现函数值，<code>Go</code>程序员也把函数值叫做闭包。</p></blockquote><p>当匿名函数需要被递归调用时，必须首先声明一个变量，再将匿名函数赋值给这个变量。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"sort"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/6/2 13:46</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch5/5.3.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// prereqs记录了每个课程的前置课程</span></span><br><span class="line"><span class="keyword">var</span> prereqs = <span class="keyword">map</span>[<span class="keyword">string</span>][]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">"algorithms"</span>:            &#123;<span class="string">"data structures"</span>&#125;,</span><br><span class="line"><span class="string">"calculus"</span>:              &#123;<span class="string">"linear algebra"</span>&#125;,</span><br><span class="line"><span class="string">"compilers"</span>:             &#123;<span class="string">"data structures"</span>, <span class="string">"formal languages"</span>, <span class="string">"computer organization"</span>&#125;,</span><br><span class="line"><span class="string">"data structures"</span>:       &#123;<span class="string">"discrete math"</span>&#125;,</span><br><span class="line"><span class="string">"databases"</span>:             &#123;<span class="string">"data structures"</span>&#125;,</span><br><span class="line"><span class="string">"discrete math"</span>:         &#123;<span class="string">"intro to programming"</span>&#125;,</span><br><span class="line"><span class="string">"formal languages"</span>:      &#123;<span class="string">"discrete math"</span>&#125;,</span><br><span class="line"><span class="string">"networks"</span>:              &#123;<span class="string">"operating systems"</span>&#125;,</span><br><span class="line"><span class="string">"operating systems"</span>:     &#123;<span class="string">"data structures"</span>, <span class="string">"computer organization"</span>&#125;,</span><br><span class="line"><span class="string">"programming languages"</span>: &#123;<span class="string">"data structures"</span>, <span class="string">"computer organization"</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">topoSort</span><span class="params">(m <span class="keyword">map</span>[<span class="keyword">string</span>][]<span class="keyword">string</span>)</span> []<span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> order []<span class="keyword">string</span></span><br><span class="line">seen := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>)</span><br><span class="line"><span class="keyword">var</span> learn <span class="function"><span class="keyword">func</span><span class="params">(items []<span class="keyword">string</span>)</span></span></span><br><span class="line">learn = <span class="function"><span class="keyword">func</span><span class="params">(items []<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, item := <span class="keyword">range</span> items &#123;</span><br><span class="line"><span class="keyword">if</span> !seen[item] &#123;</span><br><span class="line">seen[item] = <span class="literal">true</span></span><br><span class="line">learn(m[item])</span><br><span class="line">order = <span class="built_in">append</span>(order, item)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> keys []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">for</span> key := <span class="keyword">range</span> m &#123;</span><br><span class="line">keys = <span class="built_in">append</span>(keys, key)</span><br><span class="line">&#125;</span><br><span class="line">sort.Strings(keys)</span><br><span class="line">learn(keys)</span><br><span class="line"><span class="keyword">return</span> order</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i, course := <span class="keyword">range</span> topoSort(prereqs) &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%d:\t%s\n"</span>, i+<span class="number">1</span>, course)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[14:45:42] onns@Onns ~/Onns/code/go/go-bible/ch5 $ go run 5.3.go</span><br><span class="line">1:      intro to programming</span><br><span class="line">2:      discrete math</span><br><span class="line">3:      data structures</span><br><span class="line">4:      algorithms</span><br><span class="line">5:      linear algebra</span><br><span class="line">6:      calculus</span><br><span class="line">7:      formal languages</span><br><span class="line">8:      computer organization</span><br><span class="line">9:      compilers</span><br><span class="line">10:     databases</span><br><span class="line">11:     operating systems</span><br><span class="line">12:     networks</span><br><span class="line">13:     programming languages</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/6/2 16:17</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch5/itertest/main.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createdir</span><span class="params">(s <span class="keyword">int</span>, _ <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Create "</span> + strconv.Itoa((s)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">removedir</span><span class="params">(s <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Remove "</span> + strconv.Itoa((s)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">tempList := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line"><span class="keyword">var</span> rmdirs []<span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">for</span> _, d := <span class="keyword">range</span> tempList &#123;</span><br><span class="line">dir := d</span><br><span class="line">createdir(dir, <span class="number">0755</span>)</span><br><span class="line">rmdirs = <span class="built_in">append</span>(rmdirs, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">removedir(dir)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, rmdir := <span class="keyword">range</span> rmdirs &#123;</span><br><span class="line">rmdir()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, dir := <span class="keyword">range</span> tempList &#123;</span><br><span class="line">createdir(dir, <span class="number">0755</span>)</span><br><span class="line">rmdirs = <span class="built_in">append</span>(rmdirs, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">removedir(dir)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, rmdir := <span class="keyword">range</span> rmdirs &#123;</span><br><span class="line">rmdir()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[16:27:50] onns@Onns ~/Onns/code/go/go-bible/ch5/itertest $ ./itertest</span><br><span class="line">Create 1</span><br><span class="line">Create 2</span><br><span class="line">Create 3</span><br><span class="line">Create 4</span><br><span class="line">Create 5</span><br><span class="line">Create 6</span><br><span class="line">Create 7</span><br><span class="line">Remove 1</span><br><span class="line">Remove 2</span><br><span class="line">Remove 3</span><br><span class="line">Remove 4</span><br><span class="line">Remove 5</span><br><span class="line">Remove 6</span><br><span class="line">Remove 7</span><br><span class="line">Create 1</span><br><span class="line">Create 2</span><br><span class="line">Create 3</span><br><span class="line">Create 4</span><br><span class="line">Create 5</span><br><span class="line">Create 6</span><br><span class="line">Create 7</span><br><span class="line">Remove 1</span><br><span class="line">Remove 2</span><br><span class="line">Remove 3</span><br><span class="line">Remove 4</span><br><span class="line">Remove 5</span><br><span class="line">Remove 6</span><br><span class="line">Remove 7</span><br><span class="line">Remove 7</span><br><span class="line">Remove 7</span><br><span class="line">Remove 7</span><br><span class="line">Remove 7</span><br><span class="line">Remove 7</span><br><span class="line">Remove 7</span><br><span class="line">Remove 7</span><br></pre></td></tr></table></figure><blockquote><p>问题的原因在于循环变量的作用域。在上面的程序中，for循环语句引入了新的词法块，循环变量dir在这个词法块中被声明。在该循环中生成的所有函数值都共享相同的循环变量。需要注意，**函数值中记录的是循环变量的内存地址，而不是循环变量某一时刻的值。**以dir为例，后续的迭代会不断更新dir的值，当删除操作执行时，for循环已完成，dir中存储的值等于最后一次迭代的值。这意味着，每次对os.RemoveAll的调用删除的都是相同的目录。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p></blockquote><p>通常，为了解决这个问题，我们会引入一个与循环变量同名的局部变量，作为循环变量的副本。比如下面的变量dir，虽然这看起来很奇怪，但却很有用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, dir := <span class="keyword">range</span> tempDirs() &#123;</span><br><span class="line">dir := dir <span class="comment">// declares inner dir, initialized to outer dir</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>好奇为什么会出现这样的情况？ <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让VLC Media Player支持毫秒</title>
      <link href="/blog/2021/05/22/vlc-millisecond-support/"/>
      <url>/blog/2021/05/22/vlc-millisecond-support/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>为了制作一个视频标注工具，需要视频播放器，选取<code>VLC Media Player</code>，它虽然可以通过<code>web</code>控制但是不能显示毫秒，为了精细化标注，肯定是要解决这个问题的，记录之。</p><a id="more"></a><h2 id="办法"><a class="header-anchor" href="#办法">#</a>办法</h2><p>受到一个插件的启发，修改 vlc 的源代码即可。</p><p>找到<code>D:\Program Files\VideoLAN\VLC\lua\http\requests</code>文件夹下的<code>status.xml</code>文件，添加如下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print('<span class="tag">&lt;<span class="name">root</span>&gt;</span>\n')</span><br><span class="line">print('<span class="tag">&lt;<span class="name">onnstime</span>&gt;</span>'..(vlc.var.get(vlc.object.input(),"time")/1000000)..'<span class="tag">&lt;/<span class="name">onnstime</span>&gt;</span>')</span><br><span class="line">print('<span class="tag">&lt;<span class="name">onnslength</span>&gt;</span>'..(vlc.var.get(vlc.object.input(),"length")/1000000)..'<span class="tag">&lt;/<span class="name">onnslength</span>&gt;</span>')</span><br><span class="line">httprequests.printTableAsXml(statusTable,0)</span><br></pre></td></tr></table></figure><p>因为文档不健全，我是一点点试出来的= =，完成。</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://addons.videolan.org/p/1154013/" target="_blank" rel="noopener">Jump to time Previous frame v3</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vlc </tag>
            
            <tag> lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（15）</title>
      <link href="/blog/2021/05/20/the-go-programming-language-note-15/"/>
      <url>/blog/2021/05/20/the-go-programming-language-note-15/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><p>虽然<code>Go</code>的垃圾回收机制会回收不被使用的内存，但是这不包括操作系统层面的资源，比如打开的文件、网络连接。因此我们必须显式的释放这些资源。</p><p>如果一个函数所有的返回值都有显式的变量名，那么该函数的<code>return</code>语句可以省略操作数。</p><p>不宜过度使用<code>bare return</code>。</p><p><code>error</code>类型可能是<code>nil</code>或者<code>non-nil</code>。<code>nil</code>意味着函数运行成功，<code>non-nil</code>表示失败。</p><p>对于<code>non-nil</code>的<code>error</code>类型，我们可以通过调用<code>error</code>的<code>Error</code>函数或者输出函数获得字符串类型的错误信息。</p><blockquote><p>通常，当函数返回 non-nil 的 error 时，其他的返回值是未定义的（undefined），这些未定义的返回值应该被忽略。然而，有少部分函数在发生错误时，仍然会返回一些有用的返回值。比如，当读取文件发生错误时，Read 函数会返回可以读取的字节数以及错误信息。对于这种情况，正确的处理方式应该是先处理这些不完整的数据，再处理错误。因此对函数的返回值要有清晰的说明，以便于其他人使用。</p></blockquote><p>四种错误处理方式：</p><ol><li><strong>传播错误</strong>。这意味着函数中某个子程序的失败，会变成该函数的失败。</li><li><strong>重试</strong>。如果错误的发生是偶然性的，或由不可预知的问题导致的。一个明智的选择是重新尝试失败的操作。在重试时，我们需要限制重试的时间间隔或重试的次数，防止无限制的重试。</li><li><strong>输出错误信息并结束程序</strong>。如果错误发生后，程序无法继续运行，我们就可以采用第三种策略：输出错误信息并结束程序。需要注意的是，这种策略只应在 main 中执行。对库函数而言，应仅向上传播错误，除非该错误意味着程序内部包含不一致性，即遇到了 bug，才能在库函数中结束程序。</li><li><strong>输出错误信息</strong>。程序继续运行。</li><li><strong>忽略错误</strong>。</li></ol><p><code>log</code>中的所有函数，都默认会在错误信息之前输出时间信息。</p><p>在<code>Go</code>中，错误处理有一套独特的编码风格。检查某个子函数是否失败后，我们通常将处理失败的逻辑代码放在处理成功的代码之前。如果某个错误会导致函数返回，那么成功时的逻辑代码不应放在<code>else</code>语句块中，而应直接放在函数体中。<code>Go</code>中大部分函数的代码结构几乎相同，首先是一系列的初始检查，防止错误发生，之后是函数的实际逻辑。</p><h2 id="函数值"><a class="header-anchor" href="#函数值">#</a>函数值</h2><p>函数像其他值一样，拥有类型，可以被赋值给其他变量，传递给函数，从函数返回。对函数值（function value）的调用类似函数调用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/5/20 20:29</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch5/5.1.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">square</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span>     &#123; <span class="keyword">return</span> n * n &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">negative</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span>   &#123; <span class="keyword">return</span> -n &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">product</span><span class="params">(m, n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123; <span class="keyword">return</span> m * n &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f := square</span><br><span class="line">fmt.Println(f(<span class="number">3</span>)) <span class="comment">// "9"</span></span><br><span class="line"></span><br><span class="line">f = negative</span><br><span class="line">fmt.Println(f(<span class="number">3</span>))     <span class="comment">// "-3"</span></span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, f) <span class="comment">// "func(int) int"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// f = product // compile error: can't assign func(int, int) int to func(int) int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[20:30:24] onns@Onns ~/Onns/code/go/go-bible/ch5 $ go run 5.1.go</span><br><span class="line">9</span><br><span class="line">-3</span><br><span class="line">func(int) int</span><br></pre></td></tr></table></figure><p>函数类型的零值是<code>nil</code>。调用值为<code>nil</code>的函数值会引起<code>panic</code>错误。</p><p>函数值可以与<code>nil</code>比较：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f <span class="function"><span class="keyword">func</span><span class="params">(<span class="keyword">int</span>)</span> <span class="title">int</span></span></span><br><span class="line"><span class="keyword">if</span> f != <span class="literal">nil</span> &#123;</span><br><span class="line">f(<span class="number">3</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是函数值之间是不可比较的，也不能用函数值作为<code>map</code>的<code>key</code>。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（14）</title>
      <link href="/blog/2021/05/14/the-go-programming-language-note-14/"/>
      <url>/blog/2021/05/14/the-go-programming-language-note-14/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h2 id="函数声明"><a class="header-anchor" href="#函数声明">#</a>函数声明</h2><p>函数声明包括函数名、形式参数列表、返回值列表（可省略）以及函数体。</p><p>如果一个函数声明不包括返回值列表，那么函数体执行完毕后，不会返回任何值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">name</span><span class="params">(parameter-list)</span> <span class="params">(result-list)</span></span> &#123;</span><br><span class="line">body</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回值也可以像形式参数一样被命名。在这种情况下，每个返回值被声明成一个局部变量，并根据该返回值的类型，将其初始化为该类型的零值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span> <span class="title">int</span></span>   &#123;<span class="keyword">return</span> x + y&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="params">(z <span class="keyword">int</span>)</span></span>   &#123; z = x - y; <span class="keyword">return</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">first</span><span class="params">(x <span class="keyword">int</span>, _ <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123; <span class="keyword">return</span> x &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">zero</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span> <span class="title">int</span></span>      &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, add)   <span class="comment">// "func(int, int) int"</span></span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, sub)   <span class="comment">// "func(int, int) int"</span></span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, first) <span class="comment">// "func(int, int) int"</span></span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, zero)  <span class="comment">// "func(int, int) int"</span></span><br></pre></td></tr></table></figure><p><code>_</code>可以强调某个参数未被使用。</p><p>如果一组形参或返回值有相同的类型，不必为每个形参都写出参数类型：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(i, j, k <span class="keyword">int</span>, s, t <span class="keyword">string</span>)</span></span>                 &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(i <span class="keyword">int</span>, j <span class="keyword">int</span>, k <span class="keyword">int</span>,  s <span class="keyword">string</span>, t <span class="keyword">string</span>)</span></span> &#123; <span class="comment">/* ... */</span> &#125;</span><br></pre></td></tr></table></figure><p>**函数的类型被称为函数的签名。**如果两个函数形式参数列表和返回值列表中的变量类型一一对应，那么这两个函数被认为有相同的类型或签名。</p><p>形参和返回值的变量名不影响函数签名，也不影响它们是否可以以省略参数类型的形式表示。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>每一次函数调用都必须按照声明顺序为所有参数提供实参（参数值）。</p><p>在函数调用时，<code>Go</code>语言<strong>没有默认参数值</strong>，也<strong>没有任何方法可以通过参数名指定形参</strong>，因此形参和返回值的变量名对于函数调用者而言没有意义。</p><p>在函数体中，函数的形参作为局部变量，被初始化为调用者提供的值。函数的形参和有名返回值作为函数最外层的局部变量，被存储在相同的词法块中。</p><p>如果没有函数体的函数声明，这表示该函数不是以<code>Go</code>实现的。这样的声明定义了函数签名：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sin</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="title">float</span> // <span class="title">implemented</span> <span class="title">in</span> <span class="title">assembly</span> <span class="title">language</span></span></span><br></pre></td></tr></table></figure><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>后面这半句我没懂是什么意思？ <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（13）</title>
      <link href="/blog/2021/05/13/the-go-programming-language-note-13/"/>
      <url>/blog/2021/05/13/the-go-programming-language-note-13/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><p>编组（marshaling）函数会返回一个编码后的字节<code>slice</code>，包含很长的字符串，并且没有空白缩进。</p><p><code>json.MarshalIndent</code>函数产生整齐缩进的输出，该函数有两个额外的字符串参数用于表示每一行输出的前缀和每一个层级的缩进。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>一个结构体成员<code>Tag</code>是和在编译阶段关联到该成员的元信息字符串。</p><p><code>omitempty</code>选项表示当<code>Go</code>语言结构体成员为空或零值时不生成该<code>JSON</code>对象（这里<code>false</code>为零值）。</p><h2 id="文本和html模板"><a class="header-anchor" href="#文本和html模板">#</a>文本和HTML模板</h2><p>生成模板的输出需要两个处理步骤。第一步是要分析模板并转为内部表示，然后基于指定的输入执行模板。<br>分析模板部分一般只需要执行一次。</p><ol><li>template.New先创建并返回一个模板。</li><li>Funcs方法将daysAgo等自定义函数注册到模板中，并返回模板。</li><li>调用Parse函数分析模板。</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/5/20 19:43</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : 4.10.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Movie <span class="keyword">struct</span> &#123;</span><br><span class="line">Title  <span class="keyword">string</span></span><br><span class="line">Year   <span class="keyword">int</span>  <span class="string">`json:"relased"`</span></span><br><span class="line">Color  <span class="keyword">bool</span> <span class="string">`json:"color,omitempty"`</span></span><br><span class="line">Actors []<span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> movies = []Movie&#123;</span><br><span class="line">&#123;Title: <span class="string">"Casablanca"</span>, Year: <span class="number">1942</span>, Color: <span class="literal">false</span>,</span><br><span class="line">Actors: []<span class="keyword">string</span>&#123;<span class="string">"Humphrey Bogart"</span>, <span class="string">"Ingrid Bergman"</span>&#125;&#125;,</span><br><span class="line">&#123;Title: <span class="string">"Cool Hand Luke"</span>, Year: <span class="number">1967</span>, Color: <span class="literal">true</span>,</span><br><span class="line">Actors: []<span class="keyword">string</span>&#123;<span class="string">"Paul Newman"</span>&#125;&#125;,</span><br><span class="line">&#123;Title: <span class="string">"Bullitt"</span>, Year: <span class="number">1968</span>, Color: <span class="literal">true</span>,</span><br><span class="line">Actors: []<span class="keyword">string</span>&#123;<span class="string">"Steve McQueen"</span>, <span class="string">"Jacqueline Bisset"</span>&#125;&#125;,</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">data, err := json.Marshal(movies)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"JSON marshaling failed: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s\n"</span>, data)</span><br><span class="line"></span><br><span class="line">data2, err := json.MarshalIndent(movies, <span class="string">""</span>, <span class="string">"    "</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"JSON marshaling failed: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%s\n"</span>, data2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> titles []<span class="keyword">struct</span> &#123;</span><br><span class="line">Title <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err = json.Unmarshal(data2, &amp;titles); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"JSON unmarshaling failed: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(titles)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[19:40:54] onns@Onns ~/Onns/code/go/go-bible/ch4 $ go run 4.10.go </span><br><span class="line">[&#123;<span class="string">"Title"</span>:<span class="string">"Casablanca"</span>,<span class="string">"relased"</span>:1942,<span class="string">"Actors"</span>:[<span class="string">"Humphrey Bogart"</span>,<span class="string">"Ingrid Bergman"</span>]&#125;,&#123;<span class="string">"Title"</span>:<span class="string">"Cool Hand Luke"</span>,<span class="string">"relased"</span>:1967,<span class="string">"color"</span>:<span class="literal">true</span>,<span class="string">"Actors"</span>:[<span class="string">"Paul Newman"</span>]&#125;,&#123;<span class="string">"Title"</span>:<span class="string">"Bullitt"</span>,<span class="string">"relased"</span>:1968,<span class="string">"color"</span>:<span class="literal">true</span>,<span class="string">"Actors"</span>:[<span class="string">"Steve McQueen"</span>,<span class="string">"Jacqueline Bisset"</span>]&#125;]</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"Title"</span>: <span class="string">"Casablanca"</span>,</span><br><span class="line">        <span class="string">"relased"</span>: 1942,</span><br><span class="line">        <span class="string">"Actors"</span>: [</span><br><span class="line">            <span class="string">"Humphrey Bogart"</span>,</span><br><span class="line">            <span class="string">"Ingrid Bergman"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"Title"</span>: <span class="string">"Cool Hand Luke"</span>,</span><br><span class="line">        <span class="string">"relased"</span>: 1967,</span><br><span class="line">        <span class="string">"color"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"Actors"</span>: [</span><br><span class="line">            <span class="string">"Paul Newman"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"Title"</span>: <span class="string">"Bullitt"</span>,</span><br><span class="line">        <span class="string">"relased"</span>: 1968,</span><br><span class="line">        <span class="string">"color"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"Actors"</span>: [</span><br><span class="line">            <span class="string">"Steve McQueen"</span>,</span><br><span class="line">            <span class="string">"Jacqueline Bisset"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">[&#123;Casablanca&#125; &#123;Cool Hand Luke&#125; &#123;Bullitt&#125;]</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> github</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/5/20 19:46</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch4/github/github.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> IssuesURL = <span class="string">"https://api.github.com/search/issues"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IssuesSearchResult <span class="keyword">struct</span> &#123;</span><br><span class="line">TotalCount <span class="keyword">int</span> <span class="string">`json:"total_count"`</span></span><br><span class="line">Items      []*Issue</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Issue <span class="keyword">struct</span> &#123;</span><br><span class="line">Number   <span class="keyword">int</span></span><br><span class="line">HTMLURL  <span class="keyword">string</span> <span class="string">`json:"html_url"`</span></span><br><span class="line">Title    <span class="keyword">string</span></span><br><span class="line">State    <span class="keyword">string</span></span><br><span class="line">User     *User</span><br><span class="line">CreateAt time.Time <span class="string">`json:"create_at"`</span></span><br><span class="line">Body     <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Login   <span class="keyword">string</span></span><br><span class="line">HTMLURL <span class="keyword">string</span> <span class="string">`json:"html_url"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> github</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/5/20 19:46</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch4/github/search.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"net/url"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SearchIssues</span><span class="params">(terms []<span class="keyword">string</span>)</span> <span class="params">(*IssuesSearchResult, error)</span></span> &#123;</span><br><span class="line">q := url.QueryEscape(strings.Join(terms, <span class="string">" "</span>))</span><br><span class="line">resp, err := http.Get(IssuesURL + <span class="string">"?q="</span> + q)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> resp.StatusCode != http.StatusOK &#123;</span><br><span class="line">resp.Body.Close()</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">"search query failed: %s"</span>, resp.Status)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result IssuesSearchResult</span><br><span class="line"><span class="keyword">if</span> err := json.NewDecoder(resp.Body).Decode(&amp;result); err != <span class="literal">nil</span> &#123;</span><br><span class="line">resp.Body.Close()</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp.Body.Close()</span><br><span class="line"><span class="keyword">return</span> &amp;result, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/5/20 19:49</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch4/4.11.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"./github"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">result, err := github.SearchIssues(os.Args[<span class="number">1</span>:])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%d issues:\n"</span>, result.TotalCount)</span><br><span class="line"><span class="keyword">for</span> _, item := <span class="keyword">range</span> result.Items &#123;</span><br><span class="line">fmt.Printf(<span class="string">"#%-5d %9.9s %.55s\n"</span>,</span><br><span class="line">item.Number, item.User.Login, item.Title)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[19:48:17] onns@Onns ~/Onns/code/go/go-bible/ch4 $ go build 4.11.go </span><br><span class="line">[19:50:55] onns@Onns ~/Onns/code/go/go-bible/ch4 $ ./4.11 repo:golang/go is:open json decoder</span><br><span class="line">60 issues:</span><br><span class="line"><span class="comment">#33416   bserdar encoding/json: This CL adds Decoder.InternKeys</span></span><br><span class="line"><span class="comment">#45628 pgundlach encoding/xml: add Decoder.InputPos</span></span><br><span class="line"><span class="comment">#43716 ggaaooppe encoding/json: increment byte counter when using decode</span></span><br><span class="line"><span class="comment">#42571     dsnet encoding/json: clarify Decoder.InputOffset semantics</span></span><br><span class="line"><span class="comment">#32779       rsc encoding/json: memoize strings during decode</span></span><br><span class="line"><span class="comment">#11046     kurin encoding/json: Decoder internally buffers full input</span></span><br><span class="line"><span class="comment">#5901        rsc encoding/json: allow per-Encoder/per-Decoder registrati</span></span><br><span class="line"><span class="comment">#34543  maxatome encoding/json: Unmarshal &amp; json.(*Decoder).Token report</span></span><br><span class="line"><span class="comment">#36225     dsnet encoding/json: the Decoder.Decode API lends itself to m</span></span><br><span class="line"><span class="comment">#14750 cyberphon encoding/json: parser ignores the case of member names</span></span><br><span class="line"><span class="comment">#43401  opennota proposal: encoding/csv: add Reader.InputOffset method</span></span><br><span class="line"><span class="comment">#29035    jaswdr proposal: encoding/json: add error var to compare  the </span></span><br><span class="line"><span class="comment">#31701    lr1980 encoding/json: second decode after error impossible</span></span><br><span class="line"><span class="comment">#40128  rogpeppe proposal: encoding/json: garbage-free reading of tokens</span></span><br><span class="line"><span class="comment">#40127  rogpeppe encoding/json: add Encoder.EncodeToken method</span></span><br><span class="line"><span class="comment">#45512 colin-sit encoding/json: cannot unmarshal custom interface value</span></span><br><span class="line"><span class="comment">#40982   Segflow encoding/json: use different error type for unknown fie</span></span><br><span class="line"><span class="comment">#40983   Segflow encoding/json: return a different error type for unknow</span></span><br><span class="line"><span class="comment">#28923     mvdan encoding/json: speed up the decoding scanner</span></span><br><span class="line"><span class="comment">#43513 Alexander encoding/json: add line number to SyntaxError</span></span><br><span class="line"><span class="comment">#41144 alvaroale encoding/json: Unmarshaler breaks DisallowUnknownFields</span></span><br><span class="line"><span class="comment">#16212 josharian encoding/json: do all reflect work before decoding</span></span><br><span class="line"><span class="comment">#6647    btracey x/tools/cmd/godoc: display type kind of each named type</span></span><br><span class="line"><span class="comment">#29750  jacoelho cmd/vet: stdmethods check gets confused if run on a pac</span></span><br><span class="line"><span class="comment">#34564  mdempsky go/internal/gcimporter: single source of truth for deco</span></span><br><span class="line"><span class="comment">#33835     Qhesz encoding/json: unmarshalling null into non-nullable gol</span></span><br><span class="line"><span class="comment">#33854     Qhesz encoding/json: unmarshal option to treat omitted fields</span></span><br><span class="line"><span class="comment">#30301     zelch encoding/xml: option to treat unknown fields as an erro</span></span><br><span class="line"><span class="comment">#26946    deuill encoding/json: clarify what happens when unmarshaling i</span></span><br><span class="line"><span class="comment">#22752  buyology proposal: encoding/json: add access to the underlying d</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/5/20 19:53</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : ch4/4.12.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"./github"</span></span><br><span class="line"><span class="comment">// "fmt"</span></span><br><span class="line"><span class="string">"html/template"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> templ = <span class="string">`&#123;&#123;.TotalCount&#125;&#125; issues:</span></span><br><span class="line"><span class="string">&#123;&#123;range .Items&#125;&#125;----------------------------------------</span></span><br><span class="line"><span class="string">Number: &#123;&#123;.Number&#125;&#125;</span></span><br><span class="line"><span class="string">User:   &#123;&#123;.User.Login&#125;&#125;</span></span><br><span class="line"><span class="string">Title:  &#123;&#123;.Title | printf "%.64s"&#125;&#125;</span></span><br><span class="line"><span class="string">Age:    &#123;&#123;.CreatedAt | daysAgo&#125;&#125; days</span></span><br><span class="line"><span class="string">&#123;&#123;end&#125;&#125;`</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">daysAgo</span><span class="params">(t time.Time)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">int</span>(time.Since(t).Hours() / <span class="number">24</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">report, err := template.New(<span class="string">"report"</span>).</span><br><span class="line">Funcs(template.FuncMap&#123;<span class="string">"daysAgo"</span>: daysAgo&#125;).</span><br><span class="line">Parse(templ)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">result, err := github.SearchIssues(os.Args[<span class="number">1</span>:])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := report.Execute(os.Stdout, result); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[19:51:47] onns@Onns ~/Onns/code/go/go-bible/ch4 $ go build 4.12.go                          </span><br><span class="line">[19:53:52] onns@Onns ~/Onns/code/go/go-bible/ch4 $ ./4.12 repo:golang/go is:open json decoder</span><br><span class="line">60 issues:</span><br><span class="line">----------------------------------------</span><br><span class="line">Number: 33416</span><br><span class="line">User:   bserdar</span><br><span class="line">Title:  encoding/json: This CL adds Decoder.InternKeys</span><br><span class="line">Age:    2021/05/20 19:54:35 template: report:6:10: executing <span class="string">"report"</span> at &lt;.CreatedAt&gt;: can<span class="string">'t evaluate field CreatedAt in type *github.Issue</span></span><br></pre></td></tr></table></figure><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>在最后一个成员或元素后面并没有逗号分隔符。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（12）</title>
      <link href="/blog/2021/05/12/the-go-programming-language-note-12/"/>
      <url>/blog/2021/05/12/the-go-programming-language-note-12/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><p>结构体可以作为函数的参数和返回值。</p><p>如果考虑效率的话，较大的结构体通常会用指针的方式传入和返回，</p><p>因为结构体通常通过指针处理，可以用下面的写法来创建并初始化一个结构体变量，并返回结构体的地址：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pp := &amp;Point&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br></pre></td></tr></table></figure><p>如果结构体的全部成员都是可以比较的，那么结构体也是可以比较的。</p><p>Go语言有一个特性让我们只声明一个成员对应的数据类型而不指名成员的名字；这类成员就叫<strong>匿名成员</strong>。<br>匿名成员的数据类型必须是<strong>命名的类型</strong>或<strong>指向一个命名的类型的指针</strong>。</p><p>全称访问的方式依然可以。</p><p>我们在访问子成员的时候可以忽略任何匿名成员部分。</p><p>结构体字面值并没有简短表示匿名成员的语法。</p><p><code>Printf</code>函数中<code>%v</code>参数包含的<code>#</code>副词，它表示用和<code>Go</code>语言类似的语法打印值。</p><p>成员的名字是由其类型隐式地决定的，所以匿名成员也有可见性的规则约束。</p><p>在包外部，如果<code>circle</code>和<code>point</code>没有导出，则不能访问它们的成员，因此简短的匿名成员访问语法也是禁止的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/5/20 18:53</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : 4.8.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span>&#123; X, Y <span class="keyword">int</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Scale</span><span class="params">(p Point, factor <span class="keyword">int</span>)</span> <span class="title">Point</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> Point&#123;p.X * factor, p.Y * factor&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Scale2</span><span class="params">(p *Point, factor <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">p.X *= factor</span><br><span class="line">p.Y *= factor</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p := Point&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line"><span class="comment">// pp = &amp;p</span></span><br><span class="line">fmt.Println(p)</span><br><span class="line"><span class="comment">// fmt.Println(&amp;p)</span></span><br><span class="line">p = Scale(p, <span class="number">4</span>)</span><br><span class="line">fmt.Println(p)</span><br><span class="line">Scale2(&amp;p, <span class="number">4</span>)</span><br><span class="line">fmt.Println(p)</span><br><span class="line"><span class="comment">// fmt.Println(&amp;p)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[19:26:42] onns@Onns ~/Onns/code/go/go-bible/ch4 $ go run 4.8.go </span><br><span class="line">&#123;1 2&#125;</span><br><span class="line">&#123;4 8&#125;</span><br><span class="line">&#123;16 32&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Time : 2021/5/20 19:35</span></span><br><span class="line"><span class="comment">@Author : onns</span></span><br><span class="line"><span class="comment">@File : 4.9.go</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Circle <span class="keyword">struct</span> &#123;</span><br><span class="line">X, Y, Radius <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Wheel <span class="keyword">struct</span> &#123;</span><br><span class="line">X, Y, Radius, Spokes <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">X, Y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Circle2 <span class="keyword">struct</span> &#123;</span><br><span class="line">Center Point</span><br><span class="line">Radius <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Wheel2 <span class="keyword">struct</span> &#123;</span><br><span class="line">Circle Circle2</span><br><span class="line">Spokes <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Circle3 <span class="keyword">struct</span> &#123;</span><br><span class="line">Point</span><br><span class="line">Radius <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Wheel3 <span class="keyword">struct</span> &#123;</span><br><span class="line">Circle3</span><br><span class="line">Spokes <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> w Wheel</span><br><span class="line">w.X = <span class="number">8</span></span><br><span class="line">w.Y = <span class="number">8</span></span><br><span class="line">w.Radius = <span class="number">5</span></span><br><span class="line">w.Spokes = <span class="number">20</span></span><br><span class="line">fmt.Println(w)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> w2 Wheel2</span><br><span class="line">w2.Circle.Center.X = <span class="number">8</span></span><br><span class="line">w2.Circle.Center.Y = <span class="number">8</span></span><br><span class="line">w2.Circle.Radius = <span class="number">5</span></span><br><span class="line">w2.Spokes = <span class="number">20</span></span><br><span class="line">fmt.Println(w2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> w3 Wheel3</span><br><span class="line"><span class="comment">// fmt.Println(w3)</span></span><br><span class="line">w3.X = <span class="number">8</span>      <span class="comment">// equivalent to w3.Circle3.Point.X = 8</span></span><br><span class="line">w3.Y = <span class="number">8</span>      <span class="comment">// equivalent to w3.Circle3.Point.Y = 8</span></span><br><span class="line">w3.Radius = <span class="number">5</span> <span class="comment">// equivalent to w3.Circle3.Radius = 5</span></span><br><span class="line">w3.Spokes = <span class="number">20</span></span><br><span class="line">fmt.Println(w3.Circle3.Point.X)</span><br><span class="line">fmt.Println(w3)</span><br><span class="line"></span><br><span class="line">w4 := Wheel3&#123;Circle3&#123;Point&#123;<span class="number">8</span>, <span class="number">8</span>&#125;, <span class="number">5</span>&#125;, <span class="number">20</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%#v\n"</span>, w4)</span><br><span class="line"></span><br><span class="line">w5 := Wheel3&#123;</span><br><span class="line">Circle3: Circle3&#123;</span><br><span class="line">Point:  Point&#123;X: <span class="number">8</span>, Y: <span class="number">8</span>&#125;,</span><br><span class="line">Radius: <span class="number">5</span>,</span><br><span class="line">&#125;,</span><br><span class="line">Spokes: <span class="number">20</span>, <span class="comment">// <span class="doctag">NOTE:</span> trailing comma necessary here (and at Radius)</span></span><br><span class="line">&#125;</span><br><span class="line">w5.X = <span class="number">42</span></span><br><span class="line">fmt.Printf(<span class="string">"%#v\n"</span>, w5)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[19:30:42] onns@Onns ~/Onns/code/go/go-bible/ch4 $ go run 4.9.go </span><br><span class="line">&#123;8 8 5 20&#125;</span><br><span class="line">&#123;&#123;&#123;8 8&#125; 5&#125; 20&#125;</span><br><span class="line">8</span><br><span class="line">&#123;&#123;&#123;8 8&#125; 5&#125; 20&#125;</span><br><span class="line">main.Wheel3&#123;Circle3:main.Circle3&#123;Point:main.Point&#123;X:8, Y:8&#125;, Radius:5&#125;, Spokes:20&#125;</span><br><span class="line">main.Wheel3&#123;Circle3:main.Circle3&#123;Point:main.Point&#123;X:42, Y:8&#125;, Radius:5&#125;, Spokes:20&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（27）</title>
      <link href="/blog/2021/05/02/the-linux-command-line-note-27/"/>
      <url>/blog/2021/05/02/the-linux-command-line-note-27/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="for"><a class="header-anchor" href="#for">#</a>for</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> variable [<span class="keyword">in</span> words]; <span class="keyword">do</span></span><br><span class="line">commands</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>最新版本的<code>bash</code>已经添加了第二种格式的<code>for</code>命令语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (( expression1; expression2; expression3 )); <span class="keyword">do</span></span><br><span class="line">commands</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>下述命令用来设置默认值：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;parameter:-word&#125;</span></span><br></pre></td></tr></table></figure><p>下述命令用来设置默认值，并且将<code>word</code>的值赋值给<code>parameter</code>（位置参数或其它的特殊参数不能以这种方式赋值）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;parameter:=word&#125;</span></span><br></pre></td></tr></table></figure><p>若<code>parameter</code>没有设置或为空，这种展开导致脚本带有错误退出，并且<code>word</code>的内容会发送到标准错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;parameter:?word&#125;</span></span><br></pre></td></tr></table></figure><p>若<code>parameter</code>没有设置或为空，展开结果为空。若<code>parameter</code>不为空，展开结果是<code>word</code>的值，<code>parameter</code>的值不会改变：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;parameter:+word&#125;</span></span><br></pre></td></tr></table></figure><p>返回以<code>prefix</code>开头的已有变量名的展开：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两者等效</span></span><br><span class="line"><span class="variable">$&#123;!prefix*&#125;</span></span><br><span class="line"><span class="variable">$&#123;!prefix@&#125;</span></span><br></pre></td></tr></table></figure><p><code>${#parameter}</code>展开成<code>parameter</code>所包含的字符串的长度。<br>如果<code>parameter</code>是<code>@</code>或者是<code>*</code>，展开结果是位置参数的个数。</p><p><code>${parameter:offset}</code> <code>${parameter:offset:length}</code>展开<code>parameter</code>第<code>offset</code>个字符（从字符串开头算起）直到字符串的末尾，除非指定提取的长度。<br>若<code>offset</code>的值为负数，则认为<code>offset</code>值是从字符串的末尾开始算起。负数前面必须有一个空格，为防止与<code>${parameter:-word}</code>展开形式混淆。<code>length</code>若出现，则必须不能小于零。<br>如果<code>parameter</code>是<code>@</code>，展开结果是<code>length</code>个位置参数，从第<code>offset</code>个位置参数开始。</p><p><code>${parameter#pattern}</code> <code>${parameter##pattern}</code>从<code>paramter</code>所包含的字符串<strong>开头</strong>中清除<code>pattern</code>匹配的字符串。<code>#</code>形式清除最短的匹配结果，<code>##</code>模式清除最长的匹配结果。</p><p><code>${parameter%pattern}</code> <code>${parameter%%pattern}</code>从<code>paramter</code>所包含的字符串<strong>结尾</strong>中清除<code>pattern</code>匹配的字符串。</p><p><code>${parameter/pattern/string}</code> <code>${parameter//pattern/string}</code> <code>${parameter/#pattern/string}</code> <code>${parameter/%pattern/string}</code>对<code>parameter</code>的内容执行查找和替换操作。<br>在正常形式下，只有第一个匹配项会被替换掉。<br><code>//</code>形式下，所有的匹配项都会被替换掉。<br><code>/#</code>要求匹配项出现在字符串的<strong>开头</strong>。<br><code>/#</code>要求匹配项出现在字符串的<strong>结尾</strong>。<br><code>/string</code>可能会省略掉，这样会导致删除匹配的文本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ foo=JPG.JPG</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;foo/JPG/jpg&#125;</span></span><br><span class="line">jpg.JPG</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;foo//JPG/jpg&#125;</span></span><br><span class="line">jpg.jpg</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;foo/#JPG/jpg&#125;</span></span><br><span class="line">jpg.JPG</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;foo/%JPG/jpg&#125;</span></span><br><span class="line">JPG.jpg</span><br></pre></td></tr></table></figure><p><code>${parameter,,}</code>把<code>parameter</code>的值全部展开成小写字母。<br><code>${parameter,}</code>把<code>parameter</code>的第一个字符展开成小写字母。<br><code>${parameter^^}</code>把<code>parameter</code>的值全部转换成大写字母。<br><code>${parameter^}</code>把<code>parameter</code>的第一个字符转换成大写字母（首字母大写）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ul-param - demonstrate case conversion via parameter expansion</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$1</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;1,,&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;1,&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;1^^&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;1^&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ vi ul-param</span><br><span class="line">$ chmod +x ul-param</span><br><span class="line">$ ./ul-param aBc</span><br><span class="line">abc</span><br><span class="line">aBc</span><br><span class="line">ABC</span><br><span class="line">ABc</span><br></pre></td></tr></table></figure><p>在算术表达式中，以<code>0</code>开头的数字被认为是八进制数，<code>0x</code>代表十六进制，<code>base#number</code>指定任意进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:&#x2F;mnt&#x2F;data&#x2F;onns&#x2F;Desktop$ echo $((0xff))</span><br><span class="line">255</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:&#x2F;mnt&#x2F;data&#x2F;onns&#x2F;Desktop$ echo $((2#11111111))</span><br><span class="line">255</span><br></pre></td></tr></table></figure><h2 id="数组"><a class="header-anchor" href="#数组">#</a>数组</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单个赋值</span></span><br><span class="line">name[subscript]=value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多个赋值</span></span><br><span class="line">name=(value1 value2 ...)</span><br></pre></td></tr></table></figure><p>下标<code>*</code>和<code>@</code>可以被用来访问数组中的每一个元素。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TDN Temporal Difference Networks for Efficient Action Recognition</title>
      <link href="/blog/2021/04/28/tdn-temporal-difference-networks-for-efficient-action-recognition/"/>
      <url>/blog/2021/04/28/tdn-temporal-difference-networks-for-efficient-action-recognition/</url>
      
        <content type="html"><![CDATA[<h1 id="tdn-temporal-difference-networks-for-efficient-action-recognition"><a class="header-anchor" href="#tdn-temporal-difference-networks-for-efficient-action-recognition">#</a>TDN: Temporal Difference Networks for Efficient Action Recognition</h1><h2 id="摘要"><a class="header-anchor" href="#摘要">#</a>摘要</h2><p>提出了一种<code>Motion Band-pass Module</code>模块。</p><p>时间建模仍然是视频动作识别的难点。为了解决这一问题，本文提出了一种新的视频体系结构，即时域差分网络(TDN)，其核心是通过明确地利用时域差分算子来设计一个有效的时域模块(TDM)，从而实现对多尺度时域信息的高效动作识别。并系统评估其对短期和长期运动建模的影响。为了充分捕获整个视频的时间信息，我们的 TDN 采用了两级差分建模范式。在局部运动建模中，利用连续帧间的时域差分为二维 cnn 提供更精细的运动模式;在全局运动建模中，利用分段间的时域差分捕获长距离结构，激发运动特征。TDN 提供了一个简单的、有原则的时间建模框架，可以用现有的 cnn 实例化，并且只需要少量额外的计算成本。我们 TDN 提出了一种新的先进的事情 VI 和 V2 数据集,并与动力学- 400 数据集的最佳性能,我们进行深入消融研究和 TDN plor 可视化结果,希望提供有见地的分析建模时间差异。我们在https://github.com/MCG-NJU/TDN上发布了代码。</p><h2 id="相关工作"><a class="header-anchor" href="#相关工作">#</a>相关工作</h2><h3 id="时序差分表征"><a class="header-anchor" href="#时序差分表征">#</a>时序差分表征</h3><p>主要有两种方式，<code>RGB差分</code>和<code>特征差分</code>。</p><p>作者说这些方法只是简单地进行了差分，相比<code>3D卷积</code>而言，获得的研究关注更少。</p><blockquote><p>simply used a simple difference operator for single-level motion extraction and received less research attention than 3D convolutions.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> CVPR </tag>
            
            <tag> 2021 </tag>
            
            <tag> CVPR 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（26）</title>
      <link href="/blog/2021/04/26/the-linux-command-line-note-26/"/>
      <url>/blog/2021/04/26/the-linux-command-line-note-26/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id=""><a class="header-anchor" href="#">#</a>[[]]</h2><p><code>[[string1 =~ regex]]</code>可以匹配正则表达式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test-integer2: evaluate the value of an integer.</span></span><br><span class="line"></span><br><span class="line">INT=-5</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$INT</span>"</span> =~ ^-?[0-9]+$ ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$INT</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"INT is zero."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$INT</span> -lt 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"INT is negative."</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"INT is positive."</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">if</span> [ $((INT % 2)) -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"INT is even."</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"INT is odd."</span></span><br><span class="line"><span class="keyword">fi</span> <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"INT is not an integer."</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x <span class="built_in">test</span>-integer2.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">test</span>-integer2.sh</span><br><span class="line">INT is negative.</span><br><span class="line">INT is odd.</span><br></pre></td></tr></table></figure><p><code>[[ ]]</code>添加的另一个功能是<code>==</code>操作符支持类型匹配。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">FILE=foo.bar</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> == foo.* ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$FILE</span> matches pattern 'foo.*'"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x <span class="built_in">test</span>-equal.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">test</span>-equal.sh</span><br><span class="line">foo.bar matches pattern <span class="string">'foo.*'</span></span><br></pre></td></tr></table></figure><h2 id="-2"><a class="header-anchor" href="#-2">#</a>(( ))</h2><p><code>(( ))</code>被用来执行算术真测试，如果算术计算的结果是非零值，则其测试值为真。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ <span class="keyword">if</span> ((1)); <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">"It is true."</span>; <span class="keyword">fi</span></span><br><span class="line">It is <span class="literal">true</span>.</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ <span class="keyword">if</span> ((0)); <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">"It is true."</span>; f</span><br></pre></td></tr></table></figure><h2 id="read"><a class="header-anchor" href="#read">#</a>read</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">read</span> --<span class="built_in">help</span></span><br><span class="line"><span class="built_in">read</span>: <span class="built_in">read</span> [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name ...]</span><br><span class="line">    Read a line from the standard input and split it into fields.</span><br><span class="line"></span><br><span class="line">    Reads a single line from the standard input, or from file descriptor FD</span><br><span class="line">    <span class="keyword">if</span> the -u option is supplied.  The line is split into fields as with word</span><br><span class="line">    splitting, and the first word is assigned to the first NAME, the second</span><br><span class="line">    word to the second NAME, and so on, with any leftover words assigned to</span><br><span class="line">    the last NAME.  Only the characters found <span class="keyword">in</span> <span class="variable">$IFS</span> are recognized as word</span><br><span class="line">    delimiters.</span><br><span class="line"></span><br><span class="line">    If no NAMEs are supplied, the line <span class="built_in">read</span> is stored <span class="keyword">in</span> the REPLY variable.</span><br><span class="line"></span><br><span class="line">    Options:</span><br><span class="line">      -a arrayassign the words <span class="built_in">read</span> to sequential indices of the array</span><br><span class="line">    variable ARRAY, starting at zero</span><br><span class="line">      -d delim<span class="built_in">continue</span> until the first character of DELIM is <span class="built_in">read</span>, rather</span><br><span class="line">    than newline</span><br><span class="line">      -euse Readline to obtain the line <span class="keyword">in</span> an interactive shell</span><br><span class="line">      -i textuse TEXT as the initial text <span class="keyword">for</span> Readline</span><br><span class="line">      -n nchars<span class="built_in">return</span> after reading NCHARS characters rather than waiting</span><br><span class="line">    <span class="keyword">for</span> a newline, but honor a delimiter <span class="keyword">if</span> fewer than</span><br><span class="line">    NCHARS characters are <span class="built_in">read</span> before the delimiter</span><br><span class="line">      -N nchars<span class="built_in">return</span> only after reading exactly NCHARS characters, unless</span><br><span class="line">    EOF is encountered or <span class="built_in">read</span> <span class="built_in">times</span> out, ignoring any</span><br><span class="line">    delimiter</span><br><span class="line">      -p promptoutput the string PROMPT without a trailing newline before</span><br><span class="line">    attempting to <span class="built_in">read</span></span><br><span class="line">      -r<span class="keyword">do</span> not allow backslashes to escape any characters</span><br><span class="line">      -s<span class="keyword">do</span> not <span class="built_in">echo</span> input coming from a terminal</span><br><span class="line">      -t timeouttime out and <span class="built_in">return</span> failure <span class="keyword">if</span> a complete line of</span><br><span class="line">    input is not <span class="built_in">read</span> within TIMEOUT seconds.  The value of the</span><br><span class="line">    TMOUT variable is the default timeout.  TIMEOUT may be a</span><br><span class="line">    fractional number.  If TIMEOUT is 0, <span class="built_in">read</span> returns</span><br><span class="line">    immediately, without trying to <span class="built_in">read</span> any data, returning</span><br><span class="line">    success only <span class="keyword">if</span> input is available on the specified</span><br><span class="line">    file descriptor.  The <span class="built_in">exit</span> status is greater than 128</span><br><span class="line">    <span class="keyword">if</span> the timeout is exceeded</span><br><span class="line">      -u fd<span class="built_in">read</span> from file descriptor FD instead of the standard input</span><br><span class="line"></span><br><span class="line">    Exit Status:</span><br><span class="line">    The <span class="built_in">return</span> code is zero, unless end-of-file is encountered, <span class="built_in">read</span> <span class="built_in">times</span> out</span><br><span class="line">    (<span class="keyword">in</span> <span class="built_in">which</span> <span class="keyword">case</span> it<span class="string">'s greater than 128), a variable assignment error occurs,</span></span><br><span class="line"><span class="string">    or an invalid file descriptor is supplied as the argument to -u.</span></span><br></pre></td></tr></table></figure><p><code>read</code>命令可以用来读取键盘输入，当使用重定向的时候，读取文件中的一行数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># read-integer: evaluate the value of an integer.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"Please enter an integer -&gt; "</span></span><br><span class="line"><span class="built_in">read</span> int</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$int</span>"</span> =~ ^-?[0-9]+$ ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$int</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$int</span> is zero."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$int</span> -lt 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$int</span> is negative."</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$int</span> is positive."</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">if</span> [ $((int % 2)) -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$int</span> is even."</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$int</span> is odd."</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Input value is not an integer."</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x <span class="built_in">read</span>-integer.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-integer.sh</span><br><span class="line">Please enter an <span class="built_in">integer</span> -&gt; q</span><br><span class="line">Input value is not an <span class="built_in">integer</span>.</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-integer.sh</span><br><span class="line">Please enter an <span class="built_in">integer</span> -&gt; 1</span><br><span class="line">1 is positive.</span><br><span class="line">1 is odd.</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-integer.sh</span><br><span class="line">Please enter an <span class="built_in">integer</span> -&gt; 0</span><br><span class="line">0 is zero.</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-integer.sh</span><br><span class="line">Please enter an <span class="built_in">integer</span> -&gt; -5</span><br><span class="line">-5 is negative.</span><br><span class="line">-5 is odd.</span><br></pre></td></tr></table></figure><p>如果<code>read</code>命令接受到变量值数目少于期望的数字，那么额外的变量值为空，而多余的输入数据则会被包含到最后一个变量中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># read-multiple: read multiple values from keyboard</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"Enter one or more values &gt; "</span></span><br><span class="line"><span class="built_in">read</span> var1 var2 var3 var4 var5</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"var1 = '<span class="variable">$var1</span>'"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"var2 = '<span class="variable">$var2</span>'"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"var3 = '<span class="variable">$var3</span>'"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"var4 = '<span class="variable">$var4</span>'"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"var5 = '<span class="variable">$var5</span>'"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x <span class="built_in">read</span>-multiple.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-multiple.sh</span><br><span class="line">Enter one or more values &gt; a b c d e</span><br><span class="line">var1 = <span class="string">'a'</span></span><br><span class="line">var2 = <span class="string">'b'</span></span><br><span class="line">var3 = <span class="string">'c'</span></span><br><span class="line">var4 = <span class="string">'d'</span></span><br><span class="line">var5 = <span class="string">'e'</span></span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-multiple.sh</span><br><span class="line">Enter one or more values &gt; a</span><br><span class="line">var1 = <span class="string">'a'</span></span><br><span class="line">var2 = <span class="string">''</span></span><br><span class="line">var3 = <span class="string">''</span></span><br><span class="line">var4 = <span class="string">''</span></span><br><span class="line">var5 = <span class="string">''</span></span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-multiple.sh</span><br><span class="line">Enter one or more values &gt; a b c d e f g</span><br><span class="line">var1 = <span class="string">'a'</span></span><br><span class="line">var2 = <span class="string">'b'</span></span><br><span class="line">var3 = <span class="string">'c'</span></span><br><span class="line">var4 = <span class="string">'d'</span></span><br><span class="line">var5 = <span class="string">'e f g</span></span><br></pre></td></tr></table></figure><p>如果<code>read</code>命令之后没有列出变量名，则一个<code>shell</code>变量<code>REPLY</code>将会包含所有的输入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># read-single: read multiple values into default variable</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"Enter one or more values &gt; "</span></span><br><span class="line"><span class="built_in">read</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"REPLY = '<span class="variable">$REPLY</span>'"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x <span class="built_in">read</span>-single.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-single.sh</span><br><span class="line">Enter one or more values &gt; a b c d</span><br><span class="line">REPLY = <span class="string">'a b c d'</span></span><br></pre></td></tr></table></figure><p><code>-p</code>选项，指定提示信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># read-single: read multiple values into default variable</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Enter one or more values &gt; "</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"REPLY = '<span class="variable">$REPLY</span>'"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x <span class="built_in">read</span>-single2.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-single2.sh</span><br><span class="line">Enter one or more values &gt; 127309 218741</span><br><span class="line">REPLY = <span class="string">'127309 218741'</span></span><br></pre></td></tr></table></figure><p><code>-t</code>指定超时时间。<br><code>-s</code>指定不在屏幕上显示输入的字符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># read-secret: input a secret pass phrase</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(date +%Y%m%d-%H%M%S)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">read</span> -t 10 -sp <span class="string">"Enter secret pass phrase &gt; "</span> secret_pass; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"\nSecret pass phrase = '<span class="variable">$secret_pass</span>'"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$(date +%Y%m%d-%H%M%S)</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"\nInput timed out"</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x <span class="built_in">read</span>-secret.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-secret.sh</span><br><span class="line">20210426-154024</span><br><span class="line">Enter secret pass phrase &gt; 20210426-154034</span><br><span class="line">\nInput timed out</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-secret.sh</span><br><span class="line">20210426-154040</span><br><span class="line">Enter secret pass phrase &gt; \nSecret pass phrase = <span class="string">'qqqaqwerqwe'</span></span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$</span><br></pre></td></tr></table></figure><h2 id="ifs"><a class="header-anchor" href="#ifs">#</a>IFS</h2><p>内部字符分隔符，默认值包含一个<code>空格</code>、一个<code>tab</code>和一个<code>换行符</code>，每一个都会把字段分割开。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># read-ifs: read fields from a file</span></span><br><span class="line"></span><br><span class="line">FILE=/etc/passwd</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Enter a user name &gt; "</span> user_name</span><br><span class="line">file_info=$(grep <span class="string">"^<span class="variable">$user_name</span>:"</span> <span class="variable">$FILE</span>)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$file_info</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    IFS=<span class="string">":"</span> <span class="built_in">read</span> user pw uid gid name home shell &lt;&lt;&lt;<span class="string">"<span class="variable">$file_info</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"User = '<span class="variable">$user</span>'"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"UID = '<span class="variable">$uid</span>'"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"GID = '<span class="variable">$gid</span>'"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Full Name = '<span class="variable">$name</span>'"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Home Dir. = '<span class="variable">$home</span>'"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Shell = '<span class="variable">$shell</span>'"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"No such user '<span class="variable">$user_name</span>'"</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x <span class="built_in">read</span>-ifs.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-ifs.sh</span><br><span class="line">Enter a user name &gt; onns</span><br><span class="line">No such user <span class="string">'onns'</span></span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-ifs.sh</span><br><span class="line">Enter a user name &gt; hs</span><br><span class="line">User = <span class="string">'hs'</span></span><br><span class="line">UID = <span class="string">'1000'</span></span><br><span class="line">GID = <span class="string">'1000'</span></span><br><span class="line">Full Name = <span class="string">'hs,,,'</span></span><br><span class="line">Home Dir. = <span class="string">'/home/hs'</span></span><br><span class="line">Shell = <span class="string">'/bin/bash'</span></span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-ifs.sh</span><br><span class="line">Enter a user name &gt; git</span><br><span class="line">User = <span class="string">'git'</span></span><br><span class="line">UID = <span class="string">'1001'</span></span><br><span class="line">GID = <span class="string">'1001'</span></span><br><span class="line">Full Name = <span class="string">',,,'</span></span><br><span class="line">Home Dir. = <span class="string">'/home/git'</span></span><br><span class="line">Shell = <span class="string">'/usr/bin/git-shell'</span></span><br></pre></td></tr></table></figure><p><code>shell</code>允许在一个命令之前给一个或多个变量赋值。这些赋值会<strong>暂时</strong>改变之后的命令的环境变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">IFS=<span class="string">":"</span> <span class="built_in">read</span> user pw uid gid name home shell &lt;&lt;&lt;<span class="string">"<span class="variable">$file_info</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等价于👇</span></span><br><span class="line"></span><br><span class="line">OLD_IFS=<span class="string">"<span class="variable">$IFS</span>"</span></span><br><span class="line">IFS=<span class="string">":"</span></span><br><span class="line"><span class="built_in">read</span> user pw uid gid name home shell &lt;&lt;&lt; <span class="string">"<span class="variable">$file_info</span>"</span></span><br><span class="line">IFS=<span class="string">"<span class="variable">$OLD_IFS</span>"</span></span><br></pre></td></tr></table></figure><p>不能把管道用在<code>read</code>上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># read-validate: validate input</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">invalid_input</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Invalid input '<span class="variable">$REPLY</span>'"</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Enter a single item &gt; "</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># input is empty (invalid)</span></span><br><span class="line">[[ -z <span class="variable">$REPLY</span> ]] &amp;&amp; invalid_input</span><br><span class="line"></span><br><span class="line"><span class="comment"># input is multiple items (invalid)</span></span><br><span class="line">(($(<span class="built_in">echo</span> <span class="variable">$REPLY</span> | wc -w) &gt; 1)) &amp;&amp; invalid_input</span><br><span class="line"></span><br><span class="line"><span class="comment"># is input a valid filename?</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$REPLY</span> =~ ^[-[:alnum:]\._]+$ ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is a valid filename."</span></span><br><span class="line">    <span class="keyword">if</span> [[ -e <span class="variable">$REPLY</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"And file '<span class="variable">$REPLY</span>' exists."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"However, file '<span class="variable">$REPLY</span>' does not exist."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># is input a floating point number?</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$REPLY</span> =~ ^-?[[:digit:]]*\.[[:digit:]]+$ ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is a floating point number."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is not a floating point number."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># is input an integer?</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$REPLY</span> =~ ^-?[[:digit:]]+$ ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is an integer."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is not an integer."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The string '<span class="variable">$REPLY</span>' is not a valid filename."</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x <span class="built_in">read</span>-validate.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-validate.sh</span><br><span class="line">Enter a single item &gt; <span class="built_in">read</span>-validate.sh</span><br><span class="line"><span class="string">'read-validate.sh'</span> is a valid filename.</span><br><span class="line">And file <span class="string">'read-validate.sh'</span> exists.</span><br><span class="line"><span class="string">'read-validate.sh'</span> is not a floating point number.</span><br><span class="line"><span class="string">'read-validate.sh'</span> is not an <span class="built_in">integer</span>.</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-validate.sh</span><br><span class="line">Enter a single item &gt; -1.234</span><br><span class="line"><span class="string">'-1.234'</span> is a valid filename.</span><br><span class="line">However, file <span class="string">'-1.234'</span> does not exist.</span><br><span class="line"><span class="string">'-1.234'</span> is a floating point number.</span><br><span class="line"><span class="string">'-1.234'</span> is not an <span class="built_in">integer</span>.</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-validate.sh</span><br><span class="line">Enter a single item &gt; -3</span><br><span class="line"><span class="string">'-3'</span> is a valid filename.</span><br><span class="line">However, file <span class="string">'-3'</span> does not exist.</span><br><span class="line"><span class="string">'-3'</span> is not a floating point number.</span><br><span class="line"><span class="string">'-3'</span> is an <span class="built_in">integer</span>.</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./<span class="built_in">read</span>-validate.sh</span><br><span class="line">Enter a single item &gt; ,,..eqwehu</span><br><span class="line">The string <span class="string">',,..eqwehu'</span> is not a valid filename.</span><br></pre></td></tr></table></figure><h2 id="追踪"><a class="header-anchor" href="#追踪">#</a>追踪</h2><p><code>set</code>命令加上<code>-x</code>选项来启动追踪，<code>+x</code>选项关闭追踪。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># trouble: script to demonstrate common errors</span></span><br><span class="line"></span><br><span class="line">number=1</span><br><span class="line"><span class="built_in">set</span> -x <span class="comment"># Turn on tracing</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$number</span> = 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Number is equal to 1."</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Number is not equal to 1."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">set</span> +x <span class="comment"># Turn off tracing</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x trouble.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./trouble.sh</span><br><span class="line">+ <span class="string">'['</span> 1 = 1 <span class="string">']'</span></span><br><span class="line">+ <span class="built_in">echo</span> <span class="string">'Number is equal to 1.'</span></span><br><span class="line">Number is equal to 1.</span><br><span class="line">+ <span class="built_in">set</span> +x</span><br></pre></td></tr></table></figure><h2 id="case"><a class="header-anchor" href="#case">#</a>case</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> word <span class="keyword">in</span></span><br><span class="line">    [pattern [| pattern]...) commands ;;]...</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">模式</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>a)</code></td><td style="text-align:left">若单词为<code>a</code>，则匹配</td></tr><tr><td style="text-align:left"><code>[[:alpha:]])</code></td><td style="text-align:left">若单词是一个字母字符，则匹配</td></tr><tr><td style="text-align:left"><code>???)</code></td><td style="text-align:left">若单词只有<code>3</code>个字符，则匹配</td></tr><tr><td style="text-align:left"><code>*.txt)</code></td><td style="text-align:left">若单词以<code>.txt</code>字符结尾，则匹配</td></tr><tr><td style="text-align:left"><code>*)</code></td><td style="text-align:left">匹配任意单词</td></tr></tbody></table><p>添加<code>;;&amp;</code>的语法允许<code>case</code>语句继续执行下一条测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># case4-2: test a character</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -n 1 -p <span class="string">"Type a character &gt; "</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$REPLY</span> <span class="keyword">in</span></span><br><span class="line">    [[:upper:]]) <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is upper case."</span> ;;&amp;</span><br><span class="line">    [[:lower:]]) <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is lower case."</span> ;;&amp;</span><br><span class="line">    [[:alpha:]]) <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is alphabetic."</span> ;;&amp;</span><br><span class="line">    [[:digit:]]) <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is a digit."</span> ;;&amp;</span><br><span class="line">    [[:graph:]]) <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is a visible character."</span> ;;&amp;</span><br><span class="line">    [[:punct:]]) <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is a punctuation symbol."</span> ;;&amp;</span><br><span class="line">    [[:space:]]) <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is a whitespace character."</span> ;;&amp;</span><br><span class="line">    [[:xdigit:]]) <span class="built_in">echo</span> <span class="string">"'<span class="variable">$REPLY</span>' is a hexadecimal digit."</span> ;;&amp;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x case4-2.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./case4-2.sh</span><br><span class="line">Type a character &gt; a</span><br><span class="line"><span class="string">'a'</span> is lower <span class="keyword">case</span>.</span><br><span class="line"><span class="string">'a'</span> is alphabetic.</span><br><span class="line"><span class="string">'a'</span> is a visible character.</span><br><span class="line"><span class="string">'a'</span> is a hexadecimal digit.</span><br></pre></td></tr></table></figure><h2 id="访问命令行"><a class="header-anchor" href="#访问命令行">#</a>访问命令行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># posit-param: script to view command line parameters</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"\$0 = <span class="variable">$0</span></span></span><br><span class="line"><span class="string">\$1 = <span class="variable">$1</span></span></span><br><span class="line"><span class="string">\$2 = <span class="variable">$2</span></span></span><br><span class="line"><span class="string">\$3 = <span class="variable">$3</span></span></span><br><span class="line"><span class="string">\$4 = <span class="variable">$4</span></span></span><br><span class="line"><span class="string">\$5 = <span class="variable">$5</span></span></span><br><span class="line"><span class="string">\$6 = <span class="variable">$6</span></span></span><br><span class="line"><span class="string">\$7 = <span class="variable">$7</span></span></span><br><span class="line"><span class="string">\$8 = <span class="variable">$8</span></span></span><br><span class="line"><span class="string">\$9 = <span class="variable">$9</span>"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x posit-param.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./posit-param.sh</span><br><span class="line"><span class="variable">$0</span> = ./posit-param.sh</span><br><span class="line"><span class="variable">$1</span> =</span><br><span class="line"><span class="variable">$2</span> =</span><br><span class="line"><span class="variable">$3</span> =</span><br><span class="line"><span class="variable">$4</span> =</span><br><span class="line"><span class="variable">$5</span> =</span><br><span class="line"><span class="variable">$6</span> =</span><br><span class="line"><span class="variable">$7</span> =</span><br><span class="line"><span class="variable">$8</span> =</span><br><span class="line"><span class="variable">$9</span> =</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./posit-param.sh a b c d</span><br><span class="line"><span class="variable">$0</span> = ./posit-param.sh</span><br><span class="line"><span class="variable">$1</span> = a</span><br><span class="line"><span class="variable">$2</span> = b</span><br><span class="line"><span class="variable">$3</span> = c</span><br><span class="line"><span class="variable">$4</span> = d</span><br><span class="line"><span class="variable">$5</span> =</span><br><span class="line"><span class="variable">$6</span> =</span><br><span class="line"><span class="variable">$7</span> =</span><br><span class="line"><span class="variable">$8</span> =</span><br><span class="line"><span class="variable">$9</span> =</span><br></pre></td></tr></table></figure><p>超过<code>9</code>的变量用花括号包裹<code>${10}</code>。</p><p><code>$#</code>可以确定参数个数。</p><p>执行一次<code>shift</code>命令可以让所有的位置参数<strong>向下移动一个位置</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># posit-param: script to view command line parameters</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"\$0 = <span class="variable">$0</span></span></span><br><span class="line"><span class="string">\$1 = <span class="variable">$1</span></span></span><br><span class="line"><span class="string">\$2 = <span class="variable">$2</span></span></span><br><span class="line"><span class="string">\$3 = <span class="variable">$3</span></span></span><br><span class="line"><span class="string">\$4 = <span class="variable">$4</span></span></span><br><span class="line"><span class="string">\$5 = <span class="variable">$5</span></span></span><br><span class="line"><span class="string">\$6 = <span class="variable">$6</span></span></span><br><span class="line"><span class="string">\$7 = <span class="variable">$7</span></span></span><br><span class="line"><span class="string">\$8 = <span class="variable">$8</span></span></span><br><span class="line"><span class="string">\$9 = <span class="variable">$9</span>"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x posit-param2.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./posit-param2.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./posit-param2.sh a b c d</span><br><span class="line">Argument 1 = a</span><br><span class="line">Argument 2 = b</span><br><span class="line">Argument 3 = c</span><br><span class="line">Argument 4 = d</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./posit-param2.sh *</span><br><span class="line">Argument 1 = case4-2.sh</span><br><span class="line">Argument 2 = dirlist-bin.txt</span><br><span class="line">Argument 3 = dirlist-sbin.txt</span><br><span class="line">Argument 4 = dirlist-usr-bin.txt</span><br><span class="line">Argument 5 = dirlist-usr-sbin.txt</span><br><span class="line">Argument 6 = distros-by-date.txt</span><br><span class="line">Argument 7 = distros-dates.txt</span><br><span class="line">Argument 8 = distros-key-names.txt</span><br><span class="line">Argument 9 = distros-key-vernums.txt</span><br><span class="line">Argument 10 = distros-names.txt</span><br><span class="line">Argument 11 = distros-vernums.txt</span><br><span class="line">Argument 12 = distros-versions.txt</span><br><span class="line">Argument 13 = distros.txt</span><br><span class="line">Argument 14 = file1.txt</span><br><span class="line">Argument 15 = file2.txt</span><br><span class="line">Argument 16 = fmt-code.txt</span><br><span class="line">Argument 17 = ngrok</span><br><span class="line">Argument 18 = onns.txt</span><br><span class="line">Argument 19 = p.tar</span><br><span class="line">Argument 20 = p2.tar</span><br><span class="line">Argument 21 = patchfile.txt</span><br><span class="line">Argument 22 = phonelist.txt</span><br><span class="line">Argument 23 = playground</span><br><span class="line">Argument 24 = posit-param.sh</span><br><span class="line">Argument 25 = posit-param2.sh</span><br><span class="line">Argument 26 = <span class="built_in">read</span>-ifs.sh</span><br><span class="line">Argument 27 = <span class="built_in">read</span>-integer.sh</span><br><span class="line">Argument 28 = <span class="built_in">read</span>-multiple.sh</span><br><span class="line">Argument 29 = <span class="built_in">read</span>-secret.sh</span><br><span class="line">Argument 30 = <span class="built_in">read</span>-single.sh</span><br><span class="line">Argument 31 = <span class="built_in">read</span>-single2.sh</span><br><span class="line">Argument 32 = <span class="built_in">read</span>-validate.sh</span><br><span class="line">Argument 33 = t.sh</span><br><span class="line">Argument 34 = <span class="built_in">test</span>-equal.sh</span><br><span class="line">Argument 35 = <span class="built_in">test</span>-file.sh</span><br><span class="line">Argument 36 = <span class="built_in">test</span>-integer.sh</span><br><span class="line">Argument 37 = <span class="built_in">test</span>-integer2.sh</span><br><span class="line">Argument 38 = <span class="built_in">test</span>-string.sh</span><br><span class="line">Argument 39 = test_local.sh</span><br><span class="line">Argument 40 = trouble.sh</span><br><span class="line">Argument 41 = vfos</span><br></pre></td></tr></table></figure><p><code>$*</code>展开成一个从<code>1</code>开始的位置参数列表。当它被用双引号引起来的时候，展开成一个由双引号引起来的字符串，包含了所有的位置参数，每个位置参数由<code>shell</code>变量<code>IFS</code>的第一个字符（默认为一个空格）分隔开。</p><p><code>%@</code>展开成一个从<code>1</code>开始的位置参数列表。当它被用双引号引起来的时候，它把每一个位置参数展开成一个由双引号引起来的分开的字符串。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># posit-params3 : script to demonstrate $* and $@</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print_params</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"\$1 = <span class="variable">$1</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"\$2 = <span class="variable">$2</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"\$3 = <span class="variable">$3</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"\$4 = <span class="variable">$4</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">pass_params</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"\n"</span> <span class="string">'$* :'</span>; print_params $*</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"\n"</span> <span class="string">'"$*" :'</span>; print_params <span class="string">"$*"</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"\n"</span> <span class="string">'$@ :'</span>; print_params <span class="variable">$@</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"\n"</span> <span class="string">'"$@" :'</span>; print_params <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pass_params <span class="string">"word"</span> <span class="string">"words with spaces"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ chmod +x posit-params3.sh</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ ./posit-params3.sh</span><br><span class="line"></span><br><span class="line"> $* :</span><br><span class="line"><span class="variable">$1</span> = word</span><br><span class="line"><span class="variable">$2</span> = words</span><br><span class="line"><span class="variable">$3</span> = with</span><br><span class="line"><span class="variable">$4</span> = spaces</span><br><span class="line"></span><br><span class="line"> <span class="string">"$*"</span> :</span><br><span class="line"><span class="variable">$1</span> = word words with spaces</span><br><span class="line"><span class="variable">$2</span> =</span><br><span class="line"><span class="variable">$3</span> =</span><br><span class="line"><span class="variable">$4</span> =</span><br><span class="line"></span><br><span class="line"> <span class="variable">$@</span> :</span><br><span class="line"><span class="variable">$1</span> = word</span><br><span class="line"><span class="variable">$2</span> = words</span><br><span class="line"><span class="variable">$3</span> = with</span><br><span class="line"><span class="variable">$4</span> = spaces</span><br><span class="line"></span><br><span class="line"> <span class="string">"<span class="variable">$@</span>"</span> :</span><br><span class="line"><span class="variable">$1</span> = word</span><br><span class="line"><span class="variable">$2</span> = words with spaces</span><br><span class="line"><span class="variable">$3</span> =</span><br><span class="line"><span class="variable">$4</span> =</span><br></pre></td></tr></table></figure><p><code>$@</code>在大多数情况下是最有用的方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sys_info_page: program to output a system information page</span></span><br><span class="line"></span><br><span class="line">PROGNAME=$(basename <span class="variable">$0</span>)</span><br><span class="line">TITLE=<span class="string">"System Information Report For <span class="variable">$HOSTNAME</span>"</span></span><br><span class="line">CURRENT_TIME=$(date +<span class="string">"%x %r %Z"</span>)</span><br><span class="line">TIMESTAMP=<span class="string">"Generated <span class="variable">$CURRENT_TIME</span>, by <span class="variable">$USER</span>"</span></span><br><span class="line"><span class="function"><span class="title">report_uptime</span></span>() &#123;</span><br><span class="line">    cat &lt;&lt;-_EOF_</span><br><span class="line">    &lt;H2&gt;System Uptime&lt;/H2&gt;</span><br><span class="line">    &lt;PRE&gt;$(uptime)&lt;/PRE&gt;</span><br><span class="line">_EOF_</span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">report_disk_space</span></span>() &#123;</span><br><span class="line">    cat &lt;&lt;-_EOF_</span><br><span class="line">    &lt;H2&gt;Disk Space Utilization&lt;/H2&gt;</span><br><span class="line">    &lt;PRE&gt;$(df -h)&lt;/PRE&gt;</span><br><span class="line">_EOF_</span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">report_home_space</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [[ $(id -u) -eq 0 ]]; <span class="keyword">then</span></span><br><span class="line">        cat &lt;&lt;-_EOF_</span><br><span class="line">    &lt;H2&gt;Home Space Utilization (All Users)&lt;/H2&gt;</span><br><span class="line">    &lt;PRE&gt;$(du -sh /home/*)&lt;/PRE&gt;</span><br><span class="line">_EOF_</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cat &lt;&lt;-_EOF_</span><br><span class="line">    &lt;H2&gt;Home Space Utilization (<span class="variable">$USER</span>)&lt;/H2&gt;</span><br><span class="line">    &lt;PRE&gt;$(du -sh <span class="variable">$HOME</span>)&lt;/PRE&gt;</span><br><span class="line">_EOF_</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">usage</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$PROGNAME</span>: usage: <span class="variable">$PROGNAME</span> [-f file | -i]"</span></span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">write_html_page</span></span>() &#123;</span><br><span class="line">    cat &lt;&lt;-_EOF_</span><br><span class="line">    &lt;HTML&gt;</span><br><span class="line">        &lt;HEAD&gt;</span><br><span class="line">            &lt;TITLE&gt;<span class="variable">$TITLE</span>&lt;/TITLE&gt;</span><br><span class="line">        &lt;/HEAD&gt;</span><br><span class="line">        &lt;BODY&gt;</span><br><span class="line">            &lt;H1&gt;<span class="variable">$TITLE</span>&lt;/H1&gt;</span><br><span class="line">            &lt;P&gt;<span class="variable">$TIMESTAMP</span>&lt;/P&gt;</span><br><span class="line">            $(report_uptime)</span><br><span class="line">            $(report_disk_space)</span><br><span class="line">            $(report_home_space)</span><br><span class="line">        &lt;/BODY&gt;</span><br><span class="line">    &lt;/HTML&gt;</span><br><span class="line">_EOF_</span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># process command line options</span></span><br><span class="line">interactive=</span><br><span class="line">filename=</span><br><span class="line"><span class="keyword">while</span> [[ -n <span class="variable">$1</span> ]]; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">    -f | --file)</span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        filename=<span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    -i | --interactive)</span><br><span class="line">        interactive=1</span><br><span class="line">        ;;</span><br><span class="line">    -h | --<span class="built_in">help</span>)</span><br><span class="line">        usage</span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        usage &gt;&amp;2</span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">    <span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># interactive mode</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$interactive</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">"Enter name of output file: "</span> filename</span><br><span class="line">        <span class="keyword">if</span> [[ -e <span class="variable">$filename</span> ]]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">read</span> -p <span class="string">"'<span class="variable">$filename</span>' exists. Overwrite? [y/n/q] &gt; "</span></span><br><span class="line">            <span class="keyword">case</span> <span class="variable">$REPLY</span> <span class="keyword">in</span></span><br><span class="line">            Y | y)</span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">                ;;</span><br><span class="line">            Q | q)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Program terminated."</span></span><br><span class="line">                <span class="built_in">exit</span></span><br><span class="line">                ;;</span><br><span class="line">            *)</span><br><span class="line">                <span class="built_in">continue</span></span><br><span class="line">                ;;</span><br><span class="line">            <span class="keyword">esac</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># output html page</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$filename</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> touch <span class="variable">$filename</span> &amp;&amp; [[ -f <span class="variable">$filename</span> ]]; <span class="keyword">then</span></span><br><span class="line">        write_html_page &gt;<span class="variable">$filename</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$PROGNAME</span>: Cannot write file '<span class="variable">$filename</span>'"</span> &gt;&amp;2</span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    write_html_page</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>17:02:15</p><p>454/505</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（25）</title>
      <link href="/blog/2021/04/26/the-linux-command-line-note-25/"/>
      <url>/blog/2021/04/26/the-linux-command-line-note-25/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="字符串表达式"><a class="header-anchor" href="#字符串表达式">#</a>字符串表达式</h2><table><thead><tr><th style="text-align:left">表达式</th><th style="text-align:left">返回<code>true</code>的条件</th></tr></thead><tbody><tr><td style="text-align:left"><code>string</code></td><td style="text-align:left"><code>string</code>不为<code>null</code><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></td></tr><tr><td style="text-align:left"><code>-n string</code></td><td style="text-align:left">字符串<code>string</code>的长度大于零</td></tr><tr><td style="text-align:left"><code>-z string</code></td><td style="text-align:left">字符串<code>string</code>的长度为零</td></tr><tr><td style="text-align:left"><code>string1 = string2</code></td><td style="text-align:left"><code>string1</code>和<code>string2</code>相同</td></tr><tr><td style="text-align:left"><code>string1 == string2</code></td><td style="text-align:left"><code>string1</code>和<code>string2</code>相同</td></tr><tr><td style="text-align:left"><code>string1 != string2</code></td><td style="text-align:left"><code>string1</code>和<code>string2</code>不相同</td></tr><tr><td style="text-align:left"><code>string1 &gt; string2</code></td><td style="text-align:left"><code>string1</code>排列在<code>string2</code>之后</td></tr><tr><td style="text-align:left"><code>string1 &lt; string2</code></td><td style="text-align:left"><code>string1</code>排列在<code>string2</code>之前</td></tr></tbody></table><p>当与<code>test</code>一块使用的时候，<code>&gt;</code>和<code>&lt;</code>表达式操作符必须用引号引起来，或者是用反斜杠转义。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test-string: evaluate the value of a string</span></span><br><span class="line"></span><br><span class="line">ANSWER=maybe</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$ANSWER</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"There is no answer."</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$ANSWER</span>"</span> = <span class="string">"yes"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The answer is YES."</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$ANSWER</span>"</span> = <span class="string">"no"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The answer is NO."</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$ANSWER</span>"</span> = <span class="string">"maybe"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The answer is MAYBE."</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The answer is UNKNOWN."</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ./<span class="built_in">test</span>-string.sh</span><br><span class="line">The answer is MAYBE.</span><br></pre></td></tr></table></figure><h2 id="整型表达式"><a class="header-anchor" href="#整型表达式">#</a>整型表达式</h2><table><thead><tr><th style="text-align:left">表达式</th><th style="text-align:left">返回<code>true</code>的条件</th></tr></thead><tbody><tr><td style="text-align:left"><code>integer1 -eq integer2</code></td><td style="text-align:left"><code>integer1</code>等于<code>integer2</code></td></tr><tr><td style="text-align:left"><code>integer1 -ne integer2</code></td><td style="text-align:left"><code>integer1</code>不等于<code>integer2</code></td></tr><tr><td style="text-align:left"><code>integer1 -le integer2</code></td><td style="text-align:left"><code>integer1</code>小于或等于<code>integer2</code></td></tr><tr><td style="text-align:left"><code>integer1 -lt integer2</code></td><td style="text-align:left"><code>integer1</code>小于<code>integer2</code></td></tr><tr><td style="text-align:left"><code>integer1 -ge integer2</code></td><td style="text-align:left"><code>integer1</code>大于或等于<code>integer2</code></td></tr><tr><td style="text-align:left"><code>integer1 -gt integer2</code></td><td style="text-align:left"><code>integer1</code>等于<code>integer2</code></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test-integer: evaluate the value of an integer.</span></span><br><span class="line"></span><br><span class="line">INT=-5</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$INT</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"INT is empty."</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$INT</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"INT is zero."</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$INT</span> -lt 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"INT is negative."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"INT is positive."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ $((INT % 2)) -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"INT is even."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"INT is odd."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./<span class="built_in">test</span>-integer.sh</span><br><span class="line">INT is negative.</span><br><span class="line">INT is odd.</span><br></pre></td></tr></table></figure><p>好像所有的<code>shell</code>变量都是字符串类型，所以用不用引号好像没区别。</p><p>11:08:42</p><p>393/505</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>感觉这个没有卵用，我不管测试什么都是真。。。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（24）</title>
      <link href="/blog/2021/04/25/the-linux-command-line-note-24/"/>
      <url>/blog/2021/04/25/the-linux-command-line-note-24/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Program to output a system information page</span></span><br><span class="line">TITLE=<span class="string">"System Information Report For <span class="variable">$HOSTNAME</span>"</span></span><br><span class="line">CURRENT_TIME=$(date +<span class="string">"%x %r %Z"</span>)</span><br><span class="line">TIME_STAMP=<span class="string">"Generated <span class="variable">$CURRENT_TIME</span>, by <span class="variable">$USER</span>"</span></span><br><span class="line"><span class="function"><span class="title">report_uptime</span></span> () &#123;</span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">report_disk_space</span></span> () &#123;</span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">report_home_space</span></span> () &#123;</span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">&#125;</span><br><span class="line">cat &lt;&lt; _EOF_</span><br><span class="line">&lt;HTML&gt;</span><br><span class="line">    &lt;HEAD&gt;</span><br><span class="line">        &lt;TITLE&gt;<span class="variable">$TITLE</span>&lt;/TITLE&gt;</span><br><span class="line">    &lt;/HEAD&gt;</span><br><span class="line">    &lt;BODY&gt;</span><br><span class="line">        &lt;H1&gt;<span class="variable">$TITLE</span>&lt;/H1&gt;</span><br><span class="line">        &lt;P&gt;<span class="variable">$TIME_STAMP</span>&lt;/P&gt;</span><br><span class="line">        $(report_uptime)</span><br><span class="line">        $(report_disk_space)</span><br><span class="line">        $(report_home_space)</span><br><span class="line">    &lt;/BODY&gt;</span><br><span class="line">&lt;/HTML&gt;</span><br><span class="line">_EOF_</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ ./t.sh</span><br><span class="line">&lt;HTML&gt;</span><br><span class="line">    &lt;HEAD&gt;</span><br><span class="line">        &lt;TITLE&gt;System Information Report For hs-Z390-AORUS-PRO&lt;/TITLE&gt;</span><br><span class="line">    &lt;/HEAD&gt;</span><br><span class="line">    &lt;BODY&gt;</span><br><span class="line">        &lt;H1&gt;System Information Report For hs-Z390-AORUS-PRO&lt;/H1&gt;</span><br><span class="line">        &lt;P&gt;Generated 2021年04月25日 下午 11时09分51秒 CST, by hs&lt;/P&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/BODY&gt;</span><br><span class="line">&lt;/HTML&gt;</span><br></pre></td></tr></table></figure><h2 id="if"><a class="header-anchor" href="#if">#</a>if</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> commands; <span class="keyword">then</span></span><br><span class="line">    commands</span><br><span class="line">[<span class="keyword">elif</span> commands; <span class="keyword">then</span></span><br><span class="line">    commands...]</span><br><span class="line">[<span class="keyword">else</span></span><br><span class="line">    commands]</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id=""><a class="header-anchor" href="#">#</a>$?</h2><p>当命令执行完毕后，命令会给系统发送一个值，叫做退出状态。这个值是一个<code>0</code>到<code>255</code>之间的整数，说明命令执行成功或是失败。按照惯例，一个<code>零值</code>说明成功，其它所有值说明失败。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ <span class="literal">true</span></span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ <span class="literal">false</span></span><br><span class="line">(base) hs@hs-Z390-AORUS-PRO:/mnt/data/onns/Desktop$ <span class="built_in">echo</span> $?</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="文件表达式"><a class="header-anchor" href="#文件表达式">#</a>文件表达式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ expression ]</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">表达式</th><th style="text-align:left">返回<code>true</code>的条件</th></tr></thead><tbody><tr><td style="text-align:left"><code>file1 -ef file2</code></td><td style="text-align:left"><code>file1</code>和<code>file2</code>拥有相同的索引号（通过硬链接两个文件名指向相同的文件）</td></tr><tr><td style="text-align:left"><code>file1 -nt file2</code></td><td style="text-align:left"><code>file1</code>新于<code>file2</code></td></tr><tr><td style="text-align:left"><code>file1 -ot file2</code></td><td style="text-align:left"><code>file1</code>早于<code>file2</code></td></tr><tr><td style="text-align:left"><code>-b file</code></td><td style="text-align:left"><code>file</code>存在并且是一个块（设备）文件</td></tr><tr><td style="text-align:left"><code>-c file</code></td><td style="text-align:left"><code>file</code>存在并且是一个字符（设备）文件</td></tr><tr><td style="text-align:left"><code>-d file</code></td><td style="text-align:left"><code>file</code>存在并且是一个目录</td></tr><tr><td style="text-align:left"><code>-e file</code></td><td style="text-align:left"><code>file</code>存在</td></tr><tr><td style="text-align:left"><code>-f file</code></td><td style="text-align:left"><code>file</code>存在并且是一个普通文件</td></tr><tr><td style="text-align:left"><code>-g file</code></td><td style="text-align:left"><code>file</code>存在并且设置了组<code>ID</code></td></tr><tr><td style="text-align:left"><code>-G file</code></td><td style="text-align:left"><code>file</code>存在并且由有效组<code>ID</code>拥有</td></tr><tr><td style="text-align:left"><code>-k file</code></td><td style="text-align:left"><code>file</code>存在并且设置了它的<code>sticky bit</code><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></td></tr><tr><td style="text-align:left"><code>-L file</code></td><td style="text-align:left"><code>file</code>存在并且是一个符号链接</td></tr><tr><td style="text-align:left"><code>-O file</code></td><td style="text-align:left"><code>file</code>存在并且由有效用户<code>ID</code>拥有</td></tr><tr><td style="text-align:left"><code>-p file</code></td><td style="text-align:left"><code>file</code>存在并且是一个命名管道</td></tr><tr><td style="text-align:left"><code>-r file</code></td><td style="text-align:left"><code>file</code>存在并且可读（有效用户有可读权限）</td></tr><tr><td style="text-align:left"><code>-s file</code></td><td style="text-align:left"><code>file</code>存在并且其长度大于零</td></tr><tr><td style="text-align:left"><code>-S file</code></td><td style="text-align:left"><code>file</code>存在并且是一个网络<code>socket</code></td></tr><tr><td style="text-align:left"><code>-t fd</code></td><td style="text-align:left"><code>fd</code>是一个定向到终端/从终端定向的文件描述符。这可以被用来决定是否重定向了标准输入/输出错误</td></tr><tr><td style="text-align:left"><code>-u file</code></td><td style="text-align:left"><code>file</code>存在并且设置了<code>setuid</code>位</td></tr><tr><td style="text-align:left"><code>-w file</code></td><td style="text-align:left"><code>file</code>存在并且可写（有效用户有可写权限）</td></tr><tr><td style="text-align:left"><code>-x file</code></td><td style="text-align:left"><code>file</code>存在并且可执行（有效用户有执行/搜索权限）</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># test-file: Evaluate the status of a file</span></span><br><span class="line">FILE=~/.bashrc</span><br><span class="line"><span class="keyword">if</span> [ -e <span class="string">"<span class="variable">$FILE</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$FILE</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$FILE</span> is a regular file."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ -d <span class="string">"<span class="variable">$FILE</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$FILE</span> is a directory."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ -r <span class="string">"<span class="variable">$FILE</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$FILE</span> is readable."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ -w <span class="string">"<span class="variable">$FILE</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$FILE</span> is writable."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ -x <span class="string">"<span class="variable">$FILE</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$FILE</span> is executable/searchable."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$FILE</span> does not exist"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x <span class="built_in">test</span>-file.sh</span><br><span class="line">$ ./<span class="built_in">test</span>-file.sh</span><br><span class="line">/home/hs/.bashrc is a regular file.</span><br><span class="line">/home/hs/.bashrc is readable.</span><br><span class="line">/home/hs/.bashrc is writable.</span><br></pre></td></tr></table></figure><p>引号并不是必需的，但这是为了防范空参数。如果<code>$FILE</code>的参数展开是一个空值，就会导致一个错误（操作符将会被解释为非空的字符串而不是操作符）<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup><sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>。用引号把参数引起来就确保了操作符之后总是跟随着一个字符串，即使字符串为空。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>有机会查一下这是啥东西。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>这里也不知道是什么意思。。。虽然我一直是这样做的。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>好的知道了，我去提问了= =，传送门：<a href="https://unix.stackexchange.com/a/646716/458529" target="_blank" rel="noopener">What’s the difference between using quotation with parameters and not using in a shell script</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（23）</title>
      <link href="/blog/2021/04/24/the-linux-command-line-note-23/"/>
      <url>/blog/2021/04/24/the-linux-command-line-note-23/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="fold"><a class="header-anchor" href="#fold">#</a>fold</h2><p><code>fold</code>将文本的行限制到特定的宽，如果没有字符设置，默认是<code>80</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"The quick brown fox jumped over the lazy dog."</span> | fold -w 12</span><br><span class="line">The quick br</span><br><span class="line">own fox jump</span><br><span class="line">ed over the</span><br><span class="line">lazy dog.</span><br></pre></td></tr></table></figure><p>增加的<code>-s</code>选项将让<code>fold</code>分解到最后可用的空白字符，即会考虑单词边界：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"The quick brown fox jumped over the lazy dog."</span> | fold -w 12 -s</span><br><span class="line">The quick</span><br><span class="line">brown fox</span><br><span class="line">jumped over</span><br><span class="line">the lazy</span><br><span class="line">dog.</span><br></pre></td></tr></table></figure><h2 id="fmt"><a class="header-anchor" href="#fmt">#</a>fmt</h2><p><code>-w</code>指定行宽，<code>-p</code>可以指定特定的行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ vi fmt-code.txt</span><br><span class="line"><span class="comment"># This file contains code with comments.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This line is a comment.</span></span><br><span class="line"><span class="comment"># Followed by another comment line.</span></span><br><span class="line"><span class="comment"># And another.</span></span><br><span class="line"></span><br><span class="line">This, on the other hand, is a line of code.</span><br><span class="line">And another line of code.</span><br><span class="line">And another.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ fmt -w 50 -p <span class="string">'# '</span> fmt-code.txt</span><br><span class="line"><span class="comment"># This file contains code with comments.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This line is a comment.  Followed by another</span></span><br><span class="line"><span class="comment"># comment line.  And another.</span></span><br><span class="line"></span><br><span class="line">This, on the other hand, is a line of code.</span><br><span class="line">And another line of code.</span><br><span class="line">And another.</span><br></pre></td></tr></table></figure><h2 id="pr"><a class="header-anchor" href="#pr">#</a>pr</h2><p><code>pr</code>程序用来把文本分页。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">$ pr -l 15 -w 65 distros.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2021-04-12 15:14                distros.txt                Page 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SUSE10.212/07/2006</span><br><span class="line">Fedora1011/25/2008</span><br><span class="line">SUSE11.006/18/2008</span><br><span class="line">Ubuntu8.0404/24/2008</span><br><span class="line">Fedora811/08/2007</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2021-04-12 15:14                distros.txt                Page 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SUSE10.310/04/2007</span><br><span class="line">Ubuntu6.1010/26/2006</span><br><span class="line">Fedora705/31/2007</span><br><span class="line">Ubuntu7.1010/18/2007</span><br><span class="line">Ubuntu7.0404/19/2007</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2021-04-12 15:14                distros.txt                Page 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SUSE10.105/11/2006</span><br><span class="line">Fedora610/24/2006</span><br><span class="line">Fedora905/13/2008</span><br><span class="line">Ubuntu6.0606/01/2006</span><br><span class="line">Ubuntu8.1010/30/2008</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2021-04-12 15:14                distros.txt                Page 4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Fedora503/20/2006</span><br></pre></td></tr></table></figure><h2 id="printf"><a class="header-anchor" href="#printf">#</a>printf</h2><p><code>printf</code>主要用在脚本中，用于格式化表格数据，而不是直接用于命令行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">printf</span> <span class="string">"I formatted the string: %s\n"</span> foo</span><br><span class="line">I formatted the string: foo</span><br></pre></td></tr></table></figure><p>打印这章暂时跳过吧，感觉用不上啊= =！</p><p><code>#!</code>字符序列是一种特殊的结构叫做<code>shebang</code>，<code>shebang</code>被用来告诉操作系统将执行此脚本所用的解释器的名字。</p><p><code>.</code>命令是<code>source</code>命令的同义词，一个<code>shell</code>内建命令，用来读取一个指定的<code>shell</code>命令文件，并把它看作是从键盘中输入的一样。</p><p>一个带引号的字符串可能包含换行符，因此可以包含多个文本行，<code>shell</code>会持续读取文本直到它遇到右引号。</p><p>当<code>shell</code>碰到一个变量的时候，会自动地创建它。</p><p>变量名可由字母数字字符（字母和数字）和下划线字符组成。变量名的第一个字符必须是<code>一个字母</code>或<code>一个下划线</code>。变量名中不允许出现空格和标点符号。</p><p><code>shell</code>不会在乎变量值的类型，它把它们都看作是字符串。</p><p><strong>在赋值过程中，变量名、等号和变量值之间必须没有空格。</strong></p><p><code>shell</code>函数有两种语法形式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> name &#123;</span><br><span class="line">commands</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">name</span></span> () &#123;</span><br><span class="line">commands</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了使函数调用被识别出是<code>shell</code>函数，而不是被解释为外部程序的名字，在脚本中<code>shell</code>函数定义必须出现在函数调用之前。</p><p><code>shell</code>函数的命名规则和变量一样，一个函数必须至少包含一条命令。</p><p>通过在变量名之前加上单词<code>local</code>，来定义局部变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ vi test_local.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># local-vars: script to demonstrate local variables</span></span><br><span class="line">foo=0 <span class="comment"># global variable foo</span></span><br><span class="line"><span class="function"><span class="title">funct_1</span></span> () &#123;</span><br><span class="line">    <span class="built_in">local</span> foo  <span class="comment"># variable foo local to funct_1</span></span><br><span class="line">    foo=1</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"funct_1: foo = <span class="variable">$foo</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">funct_2</span></span> () &#123;</span><br><span class="line">    <span class="built_in">local</span> foo  <span class="comment"># variable foo local to funct_2</span></span><br><span class="line">    foo=2</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"funct_2: foo = <span class="variable">$foo</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"global: foo = <span class="variable">$foo</span>"</span></span><br><span class="line">funct_1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"global: foo = <span class="variable">$foo</span>"</span></span><br><span class="line">funct_2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"global: foo = <span class="variable">$foo</span>"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x test_local.sh</span><br><span class="line">$ ./test_local.sh</span><br><span class="line">global: foo = 0</span><br><span class="line">funct_1: foo = 1</span><br><span class="line">global: foo = 0</span><br><span class="line">funct_2: foo = 2</span><br><span class="line">global: foo = 0</span><br></pre></td></tr></table></figure><p>379/505</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（22）</title>
      <link href="/blog/2021/04/23/the-linux-command-line-note-22/"/>
      <url>/blog/2021/04/23/the-linux-command-line-note-22/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="sed"><a class="header-anchor" href="#sed">#</a>sed</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"front"</span> | sed <span class="string">'s/front/back/'</span></span><br><span class="line">back</span><br></pre></td></tr></table></figure><p><code>sed</code>中的命令开始于单个字符，分隔符的选择是随意的。按照惯例，经常使用<code>斜杠</code>字符，但是<code>sed</code>将会接受紧随命令之后的任意字符做为分隔符。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"front"</span> | sed <span class="string">'s_front_back_'</span></span><br><span class="line">back</span><br></pre></td></tr></table></figure><p><code>sed</code>中的大多数命令之前都会带有一个地址，其指定了输入流中要被编辑的文本行。如果省略了地址，然后会对输入流的<code>每一行</code>执行编辑命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"front"</span> | sed <span class="string">'1s/front/back/'</span></span><br><span class="line">back</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"front"</span> | sed <span class="string">'2s/front/back/'</span></span><br><span class="line">front</span><br><span class="line"><span class="comment"># 输入里没有第二行</span></span><br></pre></td></tr></table></figure><p>这个命令太多了。。。不想学了，有机会详细学这个吧，反正有一本书的内容呢。</p><h2 id="nl"><a class="header-anchor" href="#nl">#</a>nl</h2><p><code>nl</code>可以添加文件的行数，相当于<code>cat -n</code>：</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS中的标签功能</title>
      <link href="/blog/2021/04/22/tag-in-macos/"/>
      <url>/blog/2021/04/22/tag-in-macos/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>准备换新电脑了，备份文件的时候顺便学习一些新知识，最近真的无心学术。</p><p><code>MacOS</code>中的标签功能真的是我觉得最实用的功能之一了，因为<code>Windows</code>里一直没有替代的或者类似的功能，所以我不想换= =</p><a id="more"></a><h2 id="xattr"><a class="header-anchor" href="#xattr">#</a>xattr</h2><p><code>xattr</code>主要是用来关联一些额外的属性，也就是<code>tag</code>存储的地方。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[20:16:32] onns@Onns ~ $ xattr --<span class="built_in">help</span></span><br><span class="line">usage: xattr [-l] [-r] [-s] [-v] [-x] file [file ...]</span><br><span class="line">       xattr -p [-l] [-r] [-s] [-v] [-x] attr_name file [file ...]</span><br><span class="line">       xattr -w [-r] [-s] [-x] attr_name attr_value file [file ...]</span><br><span class="line">       xattr -d [-r] [-s] attr_name file [file ...]</span><br><span class="line">       xattr -c [-r] [-s] file [file ...]</span><br><span class="line"></span><br><span class="line">The first form lists the names of all xattrs on the given file(s).</span><br><span class="line">The second form (-p) prints the value of the xattr attr_name.</span><br><span class="line">The third form (-w) sets the value of the xattr attr_name to the string attr_value.</span><br><span class="line">The fourth form (-d) deletes the xattr attr_name.</span><br><span class="line">The fifth form (-c) deletes (clears) all xattrs.</span><br><span class="line"></span><br><span class="line">options:</span><br><span class="line">  -h: <span class="built_in">print</span> this <span class="built_in">help</span></span><br><span class="line">  -l: <span class="built_in">print</span> long format (attr_name: attr_value and hex output has offsets and</span><br><span class="line">      ascii representation)</span><br><span class="line">  -r: act recursively</span><br><span class="line">  -s: act on the symbolic link itself rather than what the link points to</span><br><span class="line">  -v: also <span class="built_in">print</span> filename (automatic with -r and with multiple files)</span><br><span class="line">  -x: attr_value is represented as a hex string <span class="keyword">for</span> input and output</span><br><span class="line">[20:57:25] onns@Onns ~/Desktop $ xattr -l temp_tag.go</span><br><span class="line">com.apple.FinderInfo:</span><br><span class="line">00000000  00 00 00 00 00 00 00 00 00 0E 00 00 00 00 00 00  |................|</span><br><span class="line">00000010  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  |................|</span><br><span class="line">00000020</span><br><span class="line">com.apple.macl:</span><br><span class="line">00000000  03 00 D6 24 1E 6D 95 9F 4D 6B 90 BA 6F 10 BD 36  |...$.m..Mk..o..6|</span><br><span class="line">00000010  27 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00  |<span class="string">'...............|</span></span><br><span class="line"><span class="string">00000020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  |................|</span></span><br><span class="line"><span class="string">00000030  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  |................|</span></span><br><span class="line"><span class="string">00000040  00 00 00 00 00 00 00 00                          |........|</span></span><br><span class="line"><span class="string">00000048</span></span><br><span class="line"><span class="string">com.apple.metadata:_kMDItemUserTags:</span></span><br><span class="line"><span class="string">00000000  62 70 6C 69 73 74 30 30 A1 01 56 54 6F 64 6F 0A  |bplist00..VTodo.|</span></span><br><span class="line"><span class="string">00000010  37 08 0A 00 00 00 00 00 00 01 01 00 00 00 00 00  |7...............|</span></span><br><span class="line"><span class="string">00000020  00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00  |................|</span></span><br><span class="line"><span class="string">00000030  00 00 11                                         |...|</span></span><br><span class="line"><span class="string">00000033</span></span><br></pre></td></tr></table></figure><p>然而都是不可读的十六进制，可以转成<code>xml</code>或者<code>json</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[21:05:50] onns@Onns ~/Desktop $ xattr -p com.apple.metadata:_kMDItemUserTags temp_tag.go</span><br><span class="line">62 70 6C 69 73 74 30 30 A1 01 56 54 6F 64 6F 0A</span><br><span class="line">37 08 0A 00 00 00 00 00 00 01 01 00 00 00 00 00</span><br><span class="line">00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">00 00 11</span><br><span class="line">[21:08:04] onns@Onns ~/Desktop $ xattr -p com.apple.metadata:_kMDItemUserTags temp_tag.go | xxd -r -p | plutil -convert xml1 - -o -</span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC <span class="string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span><br><span class="line">&lt;plist version=<span class="string">"1.0"</span>&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">&lt;string&gt;Todo</span><br><span class="line">7&lt;/string&gt;</span><br><span class="line">&lt;/array&gt;</span><br><span class="line">&lt;/plist&gt;</span><br><span class="line">[21:08:19] onns@Onns ~/Desktop $ xattr -p com.apple.metadata:_kMDItemUserTags temp_tag.go | xxd -r -p | plutil -convert json - -o -</span><br><span class="line">[<span class="string">"Todo\n7"</span>]%</span><br></pre></td></tr></table></figure><p>下面的命令可以从命令行给文件添加<code>tag</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xattr -xw com.apple.metadata:_kMDItemUserTags $(<span class="built_in">echo</span> <span class="string">'["red","blue","mytag1"]'</span> | plutil -convert binary1 - -o - | xxd -p -c 256 -u) temp_tag.go</span><br></pre></td></tr></table></figure><p>然后查看一下结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[21:15:58] onns@Onns ~/Desktop $ xattr -xw com.apple.metadata:_kMDItemUserTags $(<span class="built_in">echo</span> <span class="string">'["red","blue","mytag1"]'</span> | plutil -convert binary1 - -o - | xxd -p -c 256 -u) temp_tag.go</span><br><span class="line">[21:16:43] onns@Onns ~/Desktop $ xattr -p com.apple.metadata:_kMDItemUserTags temp_tag.go | xxd -r -p | plutil -convert json - -o -</span><br><span class="line">[<span class="string">"red"</span>,<span class="string">"blue"</span>,<span class="string">"mytag1"</span>]%</span><br></pre></td></tr></table></figure><h2 id="rsync"><a class="header-anchor" href="#rsync">#</a>rsync</h2><p><code>scp</code>命令复制的文件都不带额外属性，只有<code>rsync</code>的可以，正常的命令是<code>-X</code>参数，但是<code>MacOS</code>中的<code>rsync</code>是老版本的，所以参数是<code>-E</code>，<code>-E = -AX</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">$ rsync</span><br><span class="line">rsync  version 3.1.2  protocol version 31</span><br><span class="line">Copyright (C) 1996-2015 by Andrew Tridgell, Wayne Davison, and others.</span><br><span class="line">Web site: http://rsync.samba.org/</span><br><span class="line">Capabilities:</span><br><span class="line">    64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,</span><br><span class="line">    socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,</span><br><span class="line">    append, ACLs, xattrs, iconv, symtimes, prealloc</span><br><span class="line"></span><br><span class="line">rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you</span><br><span class="line">are welcome to redistribute it under certain conditions.  See the GNU</span><br><span class="line">General Public Licence <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">rsync is a file transfer program capable of efficient remote update</span><br><span class="line">via a fast differencing algorithm.</span><br><span class="line"></span><br><span class="line">Usage: rsync [OPTION]... SRC [SRC]... DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST:SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST::SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]</span><br><span class="line">The <span class="string">':'</span> usages connect via remote shell, <span class="keyword">while</span> <span class="string">'::'</span> &amp; <span class="string">'rsync://'</span> usages connect</span><br><span class="line">to an rsync daemon, and require SRC or DEST to start with a module name.</span><br><span class="line"></span><br><span class="line">Options</span><br><span class="line"> -v, --verbose               increase verbosity</span><br><span class="line">     --info=FLAGS            fine-grained informational verbosity</span><br><span class="line">     --debug=FLAGS           fine-grained debug verbosity</span><br><span class="line">     --msgs2stderr           special output handling <span class="keyword">for</span> debugging</span><br><span class="line"> -q, --quiet                 suppress non-error messages</span><br><span class="line">     --no-motd               suppress daemon-mode MOTD (see manpage caveat)</span><br><span class="line"> -c, --checksum              skip based on checksum, not mod-time &amp; size</span><br><span class="line"> -a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)</span><br><span class="line">     --no-OPTION             turn off an implied OPTION (e.g. --no-D)</span><br><span class="line"> -r, --recursive             recurse into directories</span><br><span class="line"> -R, --relative              use relative path names</span><br><span class="line">     --no-implied-dirs       don<span class="string">'t send implied dirs with --relative</span></span><br><span class="line"><span class="string"> -b, --backup                make backups (see --suffix &amp; --backup-dir)</span></span><br><span class="line"><span class="string">     --backup-dir=DIR        make backups into hierarchy based in DIR</span></span><br><span class="line"><span class="string">     --suffix=SUFFIX         set backup suffix (default ~ w/o --backup-dir)</span></span><br><span class="line"><span class="string"> -u, --update                skip files that are newer on the receiver</span></span><br><span class="line"><span class="string">     --inplace               update destination files in-place (SEE MAN PAGE)</span></span><br><span class="line"><span class="string">     --append                append data onto shorter files</span></span><br><span class="line"><span class="string">     --append-verify         like --append, but with old data in file checksum</span></span><br><span class="line"><span class="string"> -d, --dirs                  transfer directories without recursing</span></span><br><span class="line"><span class="string"> -l, --links                 copy symlinks as symlinks</span></span><br><span class="line"><span class="string"> -L, --copy-links            transform symlink into referent file/dir</span></span><br><span class="line"><span class="string">     --copy-unsafe-links     only "unsafe" symlinks are transformed</span></span><br><span class="line"><span class="string">     --safe-links            ignore symlinks that point outside the source tree</span></span><br><span class="line"><span class="string">     --munge-links           munge symlinks to make them safer (but unusable)</span></span><br><span class="line"><span class="string"> -k, --copy-dirlinks         transform symlink to a dir into referent dir</span></span><br><span class="line"><span class="string"> -K, --keep-dirlinks         treat symlinked dir on receiver as dir</span></span><br><span class="line"><span class="string"> -H, --hard-links            preserve hard links</span></span><br><span class="line"><span class="string"> -p, --perms                 preserve permissions</span></span><br><span class="line"><span class="string"> -E, --executability         preserve the file'</span>s executability</span><br><span class="line">     --chmod=CHMOD           affect file and/or directory permissions</span><br><span class="line"> -A, --acls                  preserve ACLs (implies --perms)</span><br><span class="line"> -X, --xattrs                preserve extended attributes</span><br><span class="line"> -o, --owner                 preserve owner (super-user only)</span><br><span class="line"> -g, --group                 preserve group</span><br><span class="line">     --devices               preserve device files (super-user only)</span><br><span class="line">     --copy-devices          copy device contents as regular file</span><br><span class="line">     --specials              preserve special files</span><br><span class="line"> -D                          same as --devices --specials</span><br><span class="line"> -t, --<span class="built_in">times</span>                 preserve modification <span class="built_in">times</span></span><br><span class="line"> -O, --omit-dir-times        omit directories from --<span class="built_in">times</span></span><br><span class="line"> -J, --omit-link-times       omit symlinks from --<span class="built_in">times</span></span><br><span class="line">     --super                 receiver attempts super-user activities</span><br><span class="line">     --fake-super            store/recover privileged attrs using xattrs</span><br><span class="line"> -S, --sparse                handle sparse files efficiently</span><br><span class="line">     --preallocate           allocate dest files before writing them</span><br><span class="line"> -n, --dry-run               perform a trial run with no changes made</span><br><span class="line"> -W, --whole-file            copy files whole (without delta-xfer algorithm)</span><br><span class="line"> -x, --one-file-system       don<span class="string">'t cross filesystem boundaries</span></span><br><span class="line"><span class="string"> -B, --block-size=SIZE       force a fixed checksum block-size</span></span><br><span class="line"><span class="string"> -e, --rsh=COMMAND           specify the remote shell to use</span></span><br><span class="line"><span class="string">     --rsync-path=PROGRAM    specify the rsync to run on the remote machine</span></span><br><span class="line"><span class="string">     --existing              skip creating new files on receiver</span></span><br><span class="line"><span class="string">     --ignore-existing       skip updating files that already exist on receiver</span></span><br><span class="line"><span class="string">     --remove-source-files   sender removes synchronized files (non-dirs)</span></span><br><span class="line"><span class="string">     --del                   an alias for --delete-during</span></span><br><span class="line"><span class="string">     --delete                delete extraneous files from destination dirs</span></span><br><span class="line"><span class="string">     --delete-before         receiver deletes before transfer, not during</span></span><br><span class="line"><span class="string">     --delete-during         receiver deletes during the transfer</span></span><br><span class="line"><span class="string">     --delete-delay          find deletions during, delete after</span></span><br><span class="line"><span class="string">     --delete-after          receiver deletes after transfer, not during</span></span><br><span class="line"><span class="string">     --delete-excluded       also delete excluded files from destination dirs</span></span><br><span class="line"><span class="string">     --ignore-missing-args   ignore missing source args without error</span></span><br><span class="line"><span class="string">     --delete-missing-args   delete missing source args from destination</span></span><br><span class="line"><span class="string">     --ignore-errors         delete even if there are I/O errors</span></span><br><span class="line"><span class="string">     --force                 force deletion of directories even if not empty</span></span><br><span class="line"><span class="string">     --max-delete=NUM        don'</span>t delete more than NUM files</span><br><span class="line">     --max-size=SIZE         don<span class="string">'t transfer any file larger than SIZE</span></span><br><span class="line"><span class="string">     --min-size=SIZE         don'</span>t transfer any file smaller than SIZE</span><br><span class="line">     --partial               keep partially transferred files</span><br><span class="line">     --partial-dir=DIR       put a partially transferred file into DIR</span><br><span class="line">     --delay-updates         put all updated files into place at transfer<span class="string">'s end</span></span><br><span class="line"><span class="string"> -m, --prune-empty-dirs      prune empty directory chains from the file-list</span></span><br><span class="line"><span class="string">     --numeric-ids           don'</span>t map uid/gid values by user/group name</span><br><span class="line">     --usermap=STRING        custom username mapping</span><br><span class="line">     --groupmap=STRING       custom groupname mapping</span><br><span class="line">     --chown=USER:GROUP      simple username/groupname mapping</span><br><span class="line">     --timeout=SECONDS       <span class="built_in">set</span> I/O timeout <span class="keyword">in</span> seconds</span><br><span class="line">     --contimeout=SECONDS    <span class="built_in">set</span> daemon connection timeout <span class="keyword">in</span> seconds</span><br><span class="line"> -I, --ignore-times          don<span class="string">'t skip files that match in size and mod-time</span></span><br><span class="line"><span class="string"> -M, --remote-option=OPTION  send OPTION to the remote side only</span></span><br><span class="line"><span class="string">     --size-only             skip files that match in size</span></span><br><span class="line"><span class="string">     --modify-window=NUM     compare mod-times with reduced accuracy</span></span><br><span class="line"><span class="string"> -T, --temp-dir=DIR          create temporary files in directory DIR</span></span><br><span class="line"><span class="string"> -y, --fuzzy                 find similar file for basis if no dest file</span></span><br><span class="line"><span class="string">     --compare-dest=DIR      also compare destination files relative to DIR</span></span><br><span class="line"><span class="string">     --copy-dest=DIR         ... and include copies of unchanged files</span></span><br><span class="line"><span class="string">     --link-dest=DIR         hardlink to files in DIR when unchanged</span></span><br><span class="line"><span class="string"> -z, --compress              compress file data during the transfer</span></span><br><span class="line"><span class="string">     --compress-level=NUM    explicitly set compression level</span></span><br><span class="line"><span class="string">     --skip-compress=LIST    skip compressing files with a suffix in LIST</span></span><br><span class="line"><span class="string"> -C, --cvs-exclude           auto-ignore files the same way CVS does</span></span><br><span class="line"><span class="string"> -f, --filter=RULE           add a file-filtering RULE</span></span><br><span class="line"><span class="string"> -F                          same as --filter='</span>dir-merge /.rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">                             repeated: --filter='</span>- .rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">     --exclude=PATTERN       exclude files matching PATTERN</span></span><br><span class="line"><span class="string">     --exclude-from=FILE     read exclude patterns from FILE</span></span><br><span class="line"><span class="string">     --include=PATTERN       don'</span>t exclude files matching PATTERN</span><br><span class="line">     --include-from=FILE     <span class="built_in">read</span> include patterns from FILE</span><br><span class="line">     --files-from=FILE       <span class="built_in">read</span> list of <span class="built_in">source</span>-file names from FILE</span><br><span class="line"> -0, --from0                 all *-from/filter files are delimited by 0s</span><br><span class="line"> -s, --protect-args          no space-splitting; only wildcard special-chars</span><br><span class="line">     --address=ADDRESS       <span class="built_in">bind</span> address <span class="keyword">for</span> outgoing socket to daemon</span><br><span class="line">     --port=PORT             specify double-colon alternate port number</span><br><span class="line">     --sockopts=OPTIONS      specify custom TCP options</span><br><span class="line">     --blocking-io           use blocking I/O <span class="keyword">for</span> the remote shell</span><br><span class="line">     --stats                 give some file-transfer stats</span><br><span class="line"> -8, --8-bit-output          leave high-bit chars unescaped <span class="keyword">in</span> output</span><br><span class="line"> -h, --human-readable        output numbers <span class="keyword">in</span> a human-readable format</span><br><span class="line">     --progress              show progress during transfer</span><br><span class="line"> -P                          same as --partial --progress</span><br><span class="line"> -i, --itemize-changes       output a change-summary <span class="keyword">for</span> all updates</span><br><span class="line">     --out-format=FORMAT     output updates using the specified FORMAT</span><br><span class="line">     --<span class="built_in">log</span>-file=FILE         <span class="built_in">log</span> what we<span class="string">'re doing to the specified FILE</span></span><br><span class="line"><span class="string">     --log-file-format=FMT   log updates using the specified FMT</span></span><br><span class="line"><span class="string">     --password-file=FILE    read daemon-access password from FILE</span></span><br><span class="line"><span class="string">     --list-only             list the files instead of copying them</span></span><br><span class="line"><span class="string">     --bwlimit=RATE          limit socket I/O bandwidth</span></span><br><span class="line"><span class="string">     --stop-at=y-m-dTh:m     Stop rsync at year-month-dayThour:minute</span></span><br><span class="line"><span class="string">     --time-limit=MINS       Stop rsync after MINS minutes have elapsed</span></span><br><span class="line"><span class="string">     --outbuf=N|L|B          set output buffering to None, Line, or Block</span></span><br><span class="line"><span class="string">     --write-batch=FILE      write a batched update to FILE</span></span><br><span class="line"><span class="string">     --only-write-batch=FILE like --write-batch but w/o updating destination</span></span><br><span class="line"><span class="string">     --read-batch=FILE       read a batched update from FILE</span></span><br><span class="line"><span class="string">     --protocol=NUM          force an older protocol version to be used</span></span><br><span class="line"><span class="string">     --iconv=CONVERT_SPEC    request charset conversion of filenames</span></span><br><span class="line"><span class="string">     --checksum-seed=NUM     set block/file checksum seed (advanced)</span></span><br><span class="line"><span class="string">     --noatime               do not alter atime when opening source files</span></span><br><span class="line"><span class="string"> -4, --ipv4                  prefer IPv4</span></span><br><span class="line"><span class="string"> -6, --ipv6                  prefer IPv6</span></span><br><span class="line"><span class="string">     --version               print version number</span></span><br><span class="line"><span class="string">(-h) --help                  show this help (-h is --help only if used alone)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Use "rsync --daemon --help" to see the daemon-mode command-line options.</span></span><br><span class="line"><span class="string">Please see the rsync(1) and rsyncd.conf(5) man pages for full documentation.</span></span><br><span class="line"><span class="string">See http://rsync.samba.org/ for updates, bug reports, and answers</span></span><br><span class="line"><span class="string">rsync error: syntax or usage error (code 1) at main.c(1569) [client=3.1.2]</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">[21:17:54] onns@Onns ~/Desktop $ rsync</span><br><span class="line">rsync  version 2.6.9  protocol version 29</span><br><span class="line">Copyright (C) 1996-2006 by Andrew Tridgell, Wayne Davison, and others.</span><br><span class="line">&lt;http://rsync.samba.org/&gt;</span><br><span class="line">Capabilities: 64-bit files, socketpairs, hard links, symlinks, batchfiles,</span><br><span class="line">              inplace, IPv6, 64-bit system inums, 64-bit internal inums</span><br><span class="line"></span><br><span class="line">rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you</span><br><span class="line">are welcome to redistribute it under certain conditions.  See the GNU</span><br><span class="line">General Public Licence <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">rsync is a file transfer program capable of efficient remote update</span><br><span class="line">via a fast differencing algorithm.</span><br><span class="line"></span><br><span class="line">Usage: rsync [OPTION]... SRC [SRC]... DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST:SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST::SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]</span><br><span class="line">The <span class="string">':'</span> usages connect via remote shell, <span class="keyword">while</span> <span class="string">'::'</span> &amp; <span class="string">'rsync://'</span> usages connect</span><br><span class="line">to an rsync daemon, and require SRC or DEST to start with a module name.</span><br><span class="line"></span><br><span class="line">Options</span><br><span class="line"> -v, --verbose               increase verbosity</span><br><span class="line"> -q, --quiet                 suppress non-error messages</span><br><span class="line">     --no-motd               suppress daemon-mode MOTD (see manpage caveat)</span><br><span class="line"> -c, --checksum              skip based on checksum, not mod-time &amp; size</span><br><span class="line"> -a, --archive               archive mode; same as -rlptgoD (no -H)</span><br><span class="line">     --no-OPTION             turn off an implied OPTION (e.g. --no-D)</span><br><span class="line"> -r, --recursive             recurse into directories</span><br><span class="line"> -R, --relative              use relative path names</span><br><span class="line">     --no-implied-dirs       don<span class="string">'t send implied dirs with --relative</span></span><br><span class="line"><span class="string"> -b, --backup                make backups (see --suffix &amp; --backup-dir)</span></span><br><span class="line"><span class="string">     --backup-dir=DIR        make backups into hierarchy based in DIR</span></span><br><span class="line"><span class="string">     --suffix=SUFFIX         set backup suffix (default ~ w/o --backup-dir)</span></span><br><span class="line"><span class="string"> -u, --update                skip files that are newer on the receiver</span></span><br><span class="line"><span class="string">     --inplace               update destination files in-place (SEE MAN PAGE)</span></span><br><span class="line"><span class="string">     --append                append data onto shorter files</span></span><br><span class="line"><span class="string"> -d, --dirs                  transfer directories without recursing</span></span><br><span class="line"><span class="string"> -l, --links                 copy symlinks as symlinks</span></span><br><span class="line"><span class="string"> -L, --copy-links            transform symlink into referent file/dir</span></span><br><span class="line"><span class="string">     --copy-unsafe-links     only "unsafe" symlinks are transformed</span></span><br><span class="line"><span class="string">     --safe-links            ignore symlinks that point outside the source tree</span></span><br><span class="line"><span class="string"> -k, --copy-dirlinks         transform symlink to a dir into referent dir</span></span><br><span class="line"><span class="string"> -K, --keep-dirlinks         treat symlinked dir on receiver as dir</span></span><br><span class="line"><span class="string"> -H, --hard-links            preserve hard links</span></span><br><span class="line"><span class="string"> -p, --perms                 preserve permissions</span></span><br><span class="line"><span class="string">     --executability         preserve the file'</span>s executability</span><br><span class="line">     --chmod=CHMOD           affect file and/or directory permissions</span><br><span class="line"> -o, --owner                 preserve owner (super-user only)</span><br><span class="line"> -g, --group                 preserve group</span><br><span class="line">     --devices               preserve device files (super-user only)</span><br><span class="line">     --specials              preserve special files</span><br><span class="line"> -D                          same as --devices --specials</span><br><span class="line"> -t, --<span class="built_in">times</span>                 preserve <span class="built_in">times</span></span><br><span class="line"> -O, --omit-dir-times        omit directories when preserving <span class="built_in">times</span></span><br><span class="line">     --super                 receiver attempts super-user activities</span><br><span class="line"> -S, --sparse                handle sparse files efficiently</span><br><span class="line"> -n, --dry-run               show what would have been transferred</span><br><span class="line"> -W, --whole-file            copy files whole (without rsync algorithm)</span><br><span class="line"> -x, --one-file-system       don<span class="string">'t cross filesystem boundaries</span></span><br><span class="line"><span class="string"> -B, --block-size=SIZE       force a fixed checksum block-size</span></span><br><span class="line"><span class="string"> -e, --rsh=COMMAND           specify the remote shell to use</span></span><br><span class="line"><span class="string">     --rsync-path=PROGRAM    specify the rsync to run on the remote machine</span></span><br><span class="line"><span class="string">     --existing              skip creating new files on receiver</span></span><br><span class="line"><span class="string">     --ignore-existing       skip updating files that already exist on receiver</span></span><br><span class="line"><span class="string">     --remove-source-files   sender removes synchronized files (non-dirs)</span></span><br><span class="line"><span class="string">     --del                   an alias for --delete-during</span></span><br><span class="line"><span class="string">     --delete                delete extraneous files from destination dirs</span></span><br><span class="line"><span class="string">     --delete-before         receiver deletes before transfer (default)</span></span><br><span class="line"><span class="string">     --delete-during         receiver deletes during transfer, not before</span></span><br><span class="line"><span class="string">     --delete-after          receiver deletes after transfer, not before</span></span><br><span class="line"><span class="string">     --delete-excluded       also delete excluded files from destination dirs</span></span><br><span class="line"><span class="string">     --ignore-errors         delete even if there are I/O errors</span></span><br><span class="line"><span class="string">     --force                 force deletion of directories even if not empty</span></span><br><span class="line"><span class="string">     --max-delete=NUM        don'</span>t delete more than NUM files</span><br><span class="line">     --max-size=SIZE         don<span class="string">'t transfer any file larger than SIZE</span></span><br><span class="line"><span class="string">     --min-size=SIZE         don'</span>t transfer any file smaller than SIZE</span><br><span class="line">     --partial               keep partially transferred files</span><br><span class="line">     --partial-dir=DIR       put a partially transferred file into DIR</span><br><span class="line">     --delay-updates         put all updated files into place at transfer<span class="string">'s end</span></span><br><span class="line"><span class="string"> -m, --prune-empty-dirs      prune empty directory chains from the file-list</span></span><br><span class="line"><span class="string">     --numeric-ids           don'</span>t map uid/gid values by user/group name</span><br><span class="line">     --timeout=TIME          <span class="built_in">set</span> I/O timeout <span class="keyword">in</span> seconds</span><br><span class="line"> -I, --ignore-times          don<span class="string">'t skip files that match in size and mod-time</span></span><br><span class="line"><span class="string">     --size-only             skip files that match in size</span></span><br><span class="line"><span class="string">     --modify-window=NUM     compare mod-times with reduced accuracy</span></span><br><span class="line"><span class="string"> -T, --temp-dir=DIR          create temporary files in directory DIR</span></span><br><span class="line"><span class="string"> -y, --fuzzy                 find similar file for basis if no dest file</span></span><br><span class="line"><span class="string">     --compare-dest=DIR      also compare destination files relative to DIR</span></span><br><span class="line"><span class="string">     --copy-dest=DIR         ... and include copies of unchanged files</span></span><br><span class="line"><span class="string">     --link-dest=DIR         hardlink to files in DIR when unchanged</span></span><br><span class="line"><span class="string"> -z, --compress              compress file data during the transfer</span></span><br><span class="line"><span class="string">     --compress-level=NUM    explicitly set compression level</span></span><br><span class="line"><span class="string"> -C, --cvs-exclude           auto-ignore files the same way CVS does</span></span><br><span class="line"><span class="string"> -f, --filter=RULE           add a file-filtering RULE</span></span><br><span class="line"><span class="string"> -F                          same as --filter='</span>dir-merge /.rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">                             repeated: --filter='</span>- .rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">     --exclude=PATTERN       exclude files matching PATTERN</span></span><br><span class="line"><span class="string">     --exclude-from=FILE     read exclude patterns from FILE</span></span><br><span class="line"><span class="string">     --include=PATTERN       don'</span>t exclude files matching PATTERN</span><br><span class="line">     --include-from=FILE     <span class="built_in">read</span> include patterns from FILE</span><br><span class="line">     --files-from=FILE       <span class="built_in">read</span> list of <span class="built_in">source</span>-file names from FILE</span><br><span class="line"> -0, --from0                 all *-from/filter files are delimited by 0s</span><br><span class="line">     --address=ADDRESS       <span class="built_in">bind</span> address <span class="keyword">for</span> outgoing socket to daemon</span><br><span class="line">     --port=PORT             specify double-colon alternate port number</span><br><span class="line">     --sockopts=OPTIONS      specify custom TCP options</span><br><span class="line">     --blocking-io           use blocking I/O <span class="keyword">for</span> the remote shell</span><br><span class="line">     --stats                 give some file-transfer stats</span><br><span class="line"> -8, --8-bit-output          leave high-bit chars unescaped <span class="keyword">in</span> output</span><br><span class="line"> -h, --human-readable        output numbers <span class="keyword">in</span> a human-readable format</span><br><span class="line">     --progress              show progress during transfer</span><br><span class="line"> -P                          same as --partial --progress</span><br><span class="line"> -i, --itemize-changes       output a change-summary <span class="keyword">for</span> all updates</span><br><span class="line">     --out-format=FORMAT     output updates using the specified FORMAT</span><br><span class="line">     --<span class="built_in">log</span>-file=FILE         <span class="built_in">log</span> what we<span class="string">'re doing to the specified FILE</span></span><br><span class="line"><span class="string">     --log-file-format=FMT   log updates using the specified FMT</span></span><br><span class="line"><span class="string">     --password-file=FILE    read password from FILE</span></span><br><span class="line"><span class="string">     --list-only             list the files instead of copying them</span></span><br><span class="line"><span class="string">     --bwlimit=KBPS          limit I/O bandwidth; KBytes per second</span></span><br><span class="line"><span class="string">     --write-batch=FILE      write a batched update to FILE</span></span><br><span class="line"><span class="string">     --only-write-batch=FILE like --write-batch but w/o updating destination</span></span><br><span class="line"><span class="string">     --read-batch=FILE       read a batched update from FILE</span></span><br><span class="line"><span class="string">     --protocol=NUM          force an older protocol version to be used</span></span><br><span class="line"><span class="string"> -E, --extended-attributes   copy extended attributes</span></span><br><span class="line"><span class="string">     --cache                 disable fcntl(F_NOCACHE)</span></span><br><span class="line"><span class="string"> -4, --ipv4                  prefer IPv4</span></span><br><span class="line"><span class="string"> -6, --ipv6                  prefer IPv6</span></span><br><span class="line"><span class="string">     --version               print version number</span></span><br><span class="line"><span class="string">(-h) --help                  show this help (-h works with no other options)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Use "rsync --daemon --help" to see the daemon-mode command-line options.</span></span><br><span class="line"><span class="string">Please see the rsync(1) and rsyncd.conf(5) man pages for full documentation.</span></span><br><span class="line"><span class="string">See http://rsync.samba.org/ for updates, bug reports, and answers</span></span><br><span class="line"><span class="string">rsync error: syntax or usage error (code 1) at /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-54.120.1/rsync/main.c(1322) [client=2.6.9]</span></span><br></pre></td></tr></table></figure><p>有额外属性的文件在<code>ls -l</code>的时候最结尾会有个<code>@</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[21:24:39] onns@Onns ~/Desktop $ ls -l</span><br><span class="line">total 46544</span><br><span class="line">-rw-r--r--@  1 onns  staff  9604320 Apr 12 23:19 1618240743618.ncm</span><br><span class="line">drwxr-xr-x@  3 onns  staff       96 Apr 21 22:00 Movies</span><br><span class="line">drwxr-xr-x   4 onns  staff      128 Apr 21 22:00 Music</span><br><span class="line">drwxr-xr-x@  8 onns  staff      256 Apr 22 20:30 Pictures</span><br><span class="line">drwxr-xr-x@ 23 onns  staff      736 Feb 17 20:08 SENET</span><br><span class="line">drwxr-xr-x  12 onns  staff      384 Apr 21 22:00 backup</span><br><span class="line">drwxr-xr-x@ 32 onns  staff     1024 Feb 10 01:30 c3d</span><br><span class="line">-rw-r--r--   1 onns  staff   326656 Apr 21 21:21 database.db</span><br><span class="line">-rwxrwxrwx@  1 onns  staff  5175286 Dec  8 19:57 dense_trajectory_release_v1.2.tar.gz</span><br><span class="line">-rw-r--r--@  1 onns  staff    80298 Feb 17 17:57 fig.pdf</span><br><span class="line">drwxr-xr-x@ 22 onns  staff      704 Feb 16 02:33 group-conv</span><br><span class="line">drwxrwxr-x@  4 onns  staff      128 Mar 26 15:10 ocloud</span><br><span class="line">-rw-r--r--@  1 onns  staff       50 Apr 12 14:31 onns.txt</span><br><span class="line">drwxrwxrwx  12 onns  staff      384 Dec  2 19:51 pretrained</span><br><span class="line">drwxr-xr-x@  9 onns  staff      288 Feb 21 19:57 resnet</span><br><span class="line">-rw-rw-r--@  1 onns  staff    23517 Aug 23  2019 shift_ori_3d.pdf</span><br><span class="line">-rw-rw-r--@  1 onns  staff    32650 Aug 23  2019 shift_zero_3d.pdf</span><br><span class="line">-rw-r--r--   1 onns  staff      223 Apr 14 15:05 t.go</span><br><span class="line">drwxr-xr-x@ 11 onns  staff      352 Feb 20 20:55 tea</span><br><span class="line">drwxrwxrwx@  9 onns  staff      288 Apr 20 20:30 temp</span><br><span class="line">-rw-r--r--   1 onns  staff      233 Mar 17 19:27 temp.go</span><br><span class="line">-rw-r--r--@  1 onns  staff      233 Apr 22 20:50 temp_tag.go</span><br><span class="line">drwxr-xr-x@ 20 onns  staff      640 Feb 17 04:06 tsm</span><br><span class="line">drwxr-xr-x@ 27 onns  staff      864 Feb  9 19:51 tsn</span><br><span class="line">-rw-r--r--@  1 onns  staff       48 Apr  7 13:32 wish.txt</span><br><span class="line">-rw-r--r--@  1 onns  staff  8257851 Apr 12 23:22 艾辰 - 错位时空.ncm</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">#</a>代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ ! -e <span class="variable">$1</span> ]] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">'file missing or not specified'</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">JSON=<span class="string">"<span class="variable">$(xattr -p com.apple.metadata:_kMDItemUserTags $1 | xxd -r -p | plutil -convert json - -o -)</span>"</span></span><br><span class="line"></span><br><span class="line">IFS=<span class="string">","</span> tag_split=(<span class="string">"<span class="variable">$&#123;JSON:1:$&#123;#JSON&#125;</span>-2&#125;"</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"File tags for <span class="variable">$1</span>:"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;tag_split[@]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">"<span class="variable">$i</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ ! -e <span class="variable">$1</span> ]] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">'file missing or not specified'</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$2</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">'file tags not specified'</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">BLOB=<span class="string">"<span class="variable">$(echo $2| plutil -convert binary1 - -o - | xxd -p -c 256 -u)</span>"</span></span><br><span class="line"></span><br><span class="line">xattr -xw com.apple.metadata:_kMDItemUserTags <span class="variable">$BLOB</span> <span class="variable">$1</span></span><br></pre></td></tr></table></figure><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://man7.org/linux/man-pages/man7/xattr.7.html" target="_blank" rel="noopener">xattr(7) — Linux manual page</a></li><li><a href="https://man7.org/linux/man-pages/man1/attr.1.html" target="_blank" rel="noopener">attr(1) — Linux manual page</a></li><li><a href="https://github.com/jdberry/tag" target="_blank" rel="noopener">https://github.com/jdberry/tag</a></li><li><a href="https://stackoverflow.com/questions/20618492/where-are-extended-attributes-stored" target="_blank" rel="noopener">where are extended attributes stored?</a></li><li><a href="https://www.linkedin.com/pulse/getting-setting-file-tags-via-command-line-os-x-boris-herman" target="_blank" rel="noopener">Getting and setting file tags in macOS via command line</a></li><li><a href="https://brettterpstra.com/2017/08/22/tagging-files-from-the-command-line/" target="_blank" rel="noopener">Tagging files from the macOS command line</a></li><li><a href="https://stackoverflow.com/questions/19720376/how-can-i-add-os-x-tags-to-files-programmatically" target="_blank" rel="noopener">How can I add OS X “tags” to files programmatically?</a></li><li><a href="https://man.cx/xattr" target="_blank" rel="noopener">https://man.cx/xattr</a></li><li><a href="https://apple.stackexchange.com/questions/183430/rsync-not-copying-some-files-with-extended-attributes" target="_blank" rel="noopener">Rsync not copying some files with extended attributes</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> rsync </tag>
            
            <tag> tag </tag>
            
            <tag> xattr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（11）</title>
      <link href="/blog/2021/04/19/the-go-programming-language-note-11/"/>
      <url>/blog/2021/04/19/the-go-programming-language-note-11/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="复合数据类型"><a class="header-anchor" href="#复合数据类型">#</a>复合数据类型</h1><h2 id="结构体"><a class="header-anchor" href="#结构体">#</a>结构体</h2><p>结构体是一种聚合的数据类型，是由零个或多个任意类型的值聚合成的实体，每个值称为结构体的成员。</p><p>结构体变量的成员可以通过点操作符访问，或者是对成员取地址，然后通过指针访问：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 4.5.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-19 12:14:48</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-19 12:18:52</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Employee <span class="keyword">struct</span> &#123;</span><br><span class="line">ID        <span class="keyword">int</span></span><br><span class="line">Name      <span class="keyword">string</span></span><br><span class="line">Address   <span class="keyword">string</span></span><br><span class="line">DoB       time.Time</span><br><span class="line">Position  <span class="keyword">string</span></span><br><span class="line">Salary    <span class="keyword">int</span></span><br><span class="line">ManagerID <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> dilbert Employee</span><br><span class="line">dilbert.Salary -= <span class="number">5000</span></span><br><span class="line">position := &amp;dilbert.Position</span><br><span class="line">*position = <span class="string">"Senior "</span> + *position</span><br><span class="line"></span><br><span class="line">fmt.Println(dilbert)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[12:18:52] onns@Onns ~/Documents/code/go/go-bible/ch4 $ go run 4.5.go</span><br><span class="line">&#123;0   0001-01-01 00:00:00 +0000 UTC Senior  -5000 0&#125;</span><br></pre></td></tr></table></figure><p>点操作符也可以和指向结构体的指针一起工作：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> employeeOfTheMonth *Employee = &amp;dilbert</span><br><span class="line">employeeOfTheMonth.Position += <span class="string">" (proactive team player)"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 相当于下面语句</span></span><br><span class="line">(*employeeOfTheMonth).Position += <span class="string">" (proactive team player)"</span></span><br></pre></td></tr></table></figure><p>通常一行对应一个结构体成员，成员的名字在前类型在后，如果相邻的成员类型如果相同的话可以被合并到一行：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Employee <span class="keyword">struct</span> &#123;</span><br><span class="line">ID            <span class="keyword">int</span></span><br><span class="line">Name, Address <span class="keyword">string</span></span><br><span class="line">DoB           time.Time</span><br><span class="line">Position      <span class="keyword">string</span></span><br><span class="line">Salary        <span class="keyword">int</span></span><br><span class="line">ManagerID     <span class="keyword">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果结构体成员名字是以大写字母开头的，那么该成员就是导出的。一个结构体可能同时包含导出和未导出的成员。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>一个命名为<code>S</code>的结构体类型将不能再包含<code>S</code>类型的成员：因为一个聚合的值不能包含它自身，但是<code>S</code>类型的结构体可以包含<code>*S</code>指针类型的成员，这可以让我们创建递归的数据结构，比如链表和树结构等。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 4.6.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-19 12:14:48</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-20 16:53:48</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Employee <span class="keyword">struct</span> &#123;</span><br><span class="line">ID        <span class="keyword">int</span></span><br><span class="line">Name      <span class="keyword">string</span></span><br><span class="line">Address   <span class="keyword">string</span></span><br><span class="line">DoB       time.Time</span><br><span class="line">Position  <span class="keyword">string</span></span><br><span class="line">Salary    <span class="keyword">int</span></span><br><span class="line">ManagerID <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> d Employee</span><br><span class="line">d.Salary -= <span class="number">5000</span></span><br><span class="line">position := &amp;d.Position</span><br><span class="line">*position = <span class="string">"Senior "</span> + *position</span><br><span class="line"></span><br><span class="line">fmt.Println(d)</span><br><span class="line"></span><br><span class="line">e := &amp;d</span><br><span class="line">fmt.Printf(<span class="string">"%T %T\n"</span>, e, d)</span><br><span class="line">e.Position += <span class="string">" (proactive team player)"</span></span><br><span class="line">fmt.Println(d)</span><br><span class="line"></span><br><span class="line">d.Position += <span class="string">" ?"</span></span><br><span class="line">fmt.Println(d)</span><br><span class="line"><span class="comment">// 为什么这里 &amp;d 和 d 是等效的？</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现一个问题：为什么这里<code>&amp;d</code>和<code>d</code>是等效的？我很好奇。。。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[16:53:50] onns@Onns ~/Documents/code/go/go-bible/ch4 $ go run 4.6.go</span><br><span class="line">&#123;0   0001-01-01 00:00:00 +0000 UTC Senior  -5000 0&#125;</span><br><span class="line">*main.Employee main.Employee</span><br><span class="line">&#123;0   0001-01-01 00:00:00 +0000 UTC Senior  (proactive team player) -5000 0&#125;</span><br><span class="line">&#123;0   0001-01-01 00:00:00 +0000 UTC Senior  (proactive team player) ? -5000 0&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">EmployeeByID</span><span class="params">(id <span class="keyword">int</span>)</span> *<span class="title">Employee</span></span> &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(EmployeeByID(dilbert.ManagerID).Position) <span class="comment">// "Pointy-haired boss"</span></span><br><span class="line"></span><br><span class="line">id := dilbert.ID</span><br><span class="line">EmployeeByID(id).Salary = <span class="number">0</span> <span class="comment">// fired for... no real reason</span></span><br></pre></td></tr></table></figure><blockquote><p>后面的语句通过<code>EmployeeByID</code>返回的结构体指针更新了<code>Employee</code>结构体的成员。如果将<code>EmployeeByID</code>函数的返回值从<code>*Employee</code>指针类型改为<code>Employee</code>值类型，那么更新语句将不能编译通过，因为在赋值语句的左边并不确定是一个变量（译注：调用函数返回的是值，并不是一个可取地址的变量）。</p></blockquote><p>上面这句话，我感觉也没理解，自己测试了一下发现可以通过编译？</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 4.7.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-19 12:14:48</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-20 17:13:00</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Employee <span class="keyword">struct</span> &#123;</span><br><span class="line">ID        <span class="keyword">int</span></span><br><span class="line">Name      <span class="keyword">string</span></span><br><span class="line">Address   <span class="keyword">string</span></span><br><span class="line">DoB       time.Time</span><br><span class="line">Position  <span class="keyword">string</span></span><br><span class="line">Salary    <span class="keyword">int</span></span><br><span class="line">ManagerID <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> d Employee</span><br><span class="line"><span class="keyword">var</span> e *Employee</span><br><span class="line"></span><br><span class="line"><span class="comment">// func init() &#123;</span></span><br><span class="line"><span class="comment">// d.Salary = 5000</span></span><br><span class="line"><span class="comment">// e.Salary = 2000</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">EmployeeById</span><span class="params">(id <span class="keyword">int</span>)</span> *<span class="title">Employee</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> id == <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> id == <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> e</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">EmployeeById2</span><span class="params">(id <span class="keyword">int</span>)</span> <span class="title">Employee</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> id == <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">return</span> d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> id == <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> *e</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">d.Salary = <span class="number">5000</span></span><br><span class="line">e = <span class="built_in">new</span>(Employee)</span><br><span class="line">(*e).Salary = <span class="number">2000</span></span><br><span class="line">fmt.Printf(<span class="string">"%T "</span>, d)</span><br><span class="line">fmt.Println(d)</span><br><span class="line">fmt.Printf(<span class="string">"%T "</span>, e)</span><br><span class="line">fmt.Println(e)</span><br><span class="line"></span><br><span class="line">a := EmployeeById(<span class="number">1</span>)</span><br><span class="line">b := EmployeeById(<span class="number">2</span>)</span><br><span class="line">a.Position = <span class="string">"aaa"</span></span><br><span class="line">b.Position = <span class="string">"bbb"</span></span><br><span class="line">fmt.Printf(<span class="string">"%T "</span>, a)</span><br><span class="line">fmt.Println(a)</span><br><span class="line">fmt.Printf(<span class="string">"%T "</span>, b)</span><br><span class="line">fmt.Println(b)</span><br><span class="line"></span><br><span class="line">c := EmployeeById2(<span class="number">1</span>)</span><br><span class="line">f := EmployeeById2(<span class="number">2</span>)</span><br><span class="line">c.Name = <span class="string">"ccc"</span></span><br><span class="line">f.Name = <span class="string">"fff"</span></span><br><span class="line">fmt.Printf(<span class="string">"%T "</span>, c)</span><br><span class="line">fmt.Println(c)</span><br><span class="line">fmt.Printf(<span class="string">"%T "</span>, f)</span><br><span class="line">fmt.Println(f)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[18:58:24] onns@Onns ~/Documents/code/go/go-bible/ch4 $ go run 4.7.go</span><br><span class="line">main.Employee &#123;0   0001-01-01 00:00:00 +0000 UTC  5000 0&#125;</span><br><span class="line">*main.Employee &amp;&#123;0   0001-01-01 00:00:00 +0000 UTC  2000 0&#125;</span><br><span class="line">*main.Employee &amp;&#123;0   0001-01-01 00:00:00 +0000 UTC aaa 5000 0&#125;</span><br><span class="line">*main.Employee &amp;&#123;0   0001-01-01 00:00:00 +0000 UTC bbb 2000 0&#125;</span><br><span class="line">main.Employee &#123;0 ccc  0001-01-01 00:00:00 +0000 UTC aaa 5000 0&#125;</span><br><span class="line">main.Employee &#123;0 fff  0001-01-01 00:00:00 +0000 UTC bbb 2000 0&#125;</span><br></pre></td></tr></table></figure><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>导出是什么意思？ <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（10）</title>
      <link href="/blog/2021/04/18/the-go-programming-language-note-10/"/>
      <url>/blog/2021/04/18/the-go-programming-language-note-10/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="复合数据类型"><a class="header-anchor" href="#复合数据类型">#</a>复合数据类型</h1><h2 id="map"><a class="header-anchor" href="#map">#</a>Map</h2><p>哈希表是一个无序的<code>key/value</code>对的集合，其中所有的<code>key</code>都是不同的，然后通过给定的<code>key</code>可以在常数时间复杂度内检索、更新或删除对应的<code>value</code>。</p><p>在<code>Go</code>语言中，一个<code>map</code>就是一个哈希表的引用，<code>map</code>类型可以写为<code>map[K]V</code>，其中<code>K</code>和<code>V</code>分别对应<code>key</code>和<code>value</code>，<code>map</code>中所有的<code>key</code>都有相同的类型，所有的<code>value</code>也有着相同的类型，但是<code>key</code>和<code>value</code>之间可以是不同的数据类型。其中<code>K</code>对应的<code>key</code>必须是支持<code>==</code>比较运算符的数据类型，所以<code>map</code>可以通过测试<code>key</code>是否相等来判断是否已经存在。</p><p>内置的<code>make</code>函数可以创建一个<code>map</code>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ages := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br></pre></td></tr></table></figure><p>也可以用<code>map</code>字面值的语法创建<code>map</code>，同时还可以指定一些最初的<code>key/value</code>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ages := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;</span><br><span class="line"><span class="string">"alice"</span>:   <span class="number">31</span>,</span><br><span class="line"><span class="string">"charlie"</span>: <span class="number">34</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 4.3.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-19 10:35:06</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-19 10:36:39</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ages := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">ages[<span class="string">"alice"</span>] = <span class="number">31</span></span><br><span class="line">ages[<span class="string">"charlie"</span>] = <span class="number">34</span></span><br><span class="line">fmt.Println(ages[<span class="string">"alice"</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>map[string]int{}</code>可以用来创建空的<code>map</code>的表达式。</p><p>使用内置的<code>delete</code>函数可以删除元素：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">delete</span>(ages, <span class="string">"alice"</span>)</span><br></pre></td></tr></table></figure><p>如果一个查找失败将返回<code>value</code>类型对应的零值。</p><p><code>x += y</code>和<code>x++</code>等简短赋值语法也可以用在<code>map</code>上。</p><p><code>map</code>中的元素并不是一个变量，因此我们不能对<code>map</code>的元素进行取址操作，原因是<code>map</code>可能随着元素数量的增长而重新分配更大的内存空间，从而可能导致之前的地址无效。</p><p><code>map</code>的迭代顺序是不确定的，并且不同的哈希函数实现可能导致不同的遍历顺序。</p><p><code>map</code>类型的零值是<code>nil</code>，也就是没有引用任何哈希表。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ages <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span></span><br><span class="line">fmt.Println(ages == <span class="literal">nil</span>)    <span class="comment">// "true"</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(ages) == <span class="number">0</span>) <span class="comment">// "true"</span></span><br></pre></td></tr></table></figure><p><code>map</code>上的大部分操作，包括查找、删除、<code>len</code>和<code>range</code>循环都可以安全工作在<code>nil</code>值的<code>map</code>上，它们的行为和一个空的<code>map</code>类似。但是向一个<code>nil</code>值的<code>map</code>存入元素将导致一个<code>panic</code>异常：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ages[<span class="string">"carol"</span>] = <span class="number">21</span> <span class="comment">// panic: assignment to entry in nil map</span></span><br></pre></td></tr></table></figure><p>在向<code>map</code>存数据前必须先创建<code>map</code>。</p><p>通过<code>key</code>作为索引下标来访问<code>map</code>将产生一个<code>value</code>。如果<code>key</code>在<code>map</code>中是存在的，那么将得到与<code>key</code>对应的<code>value</code>；如果<code>key</code>不存在，那么将得到<code>value</code>对应类型的零值。</p><p>第二个返回值用来确定对应的元素是否真的是在<code>map</code>之中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">age, ok := ages[<span class="string">"bob"</span>]</span><br><span class="line"><span class="keyword">if</span> !ok &#123; <span class="comment">/* "bob" is not a key in this map; age == 0. */</span> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> age, ok := ages[<span class="string">"bob"</span>]; !ok &#123; <span class="comment">/* ... */</span> &#125;</span><br></pre></td></tr></table></figure><p>在这种场景下，<code>map</code>的下标语法将产生两个值，第二个是一个布尔值，用于报告元素是否真的存在。布尔变量一般命名为<code>ok</code>，特别适合马上用于<code>if</code>条件判断部分。</p><p><code>map</code>之间不能进行相等比较，唯一的例外是和<code>nil</code>进行比较。</p><p>有时候我们需要一个<code>map</code>或<code>set</code>的<code>key</code>是<code>slice</code>类型，但是<code>map</code>的<code>key</code>必须是可比较的类型，但是<code>slice</code>并不满足这个条件。不过，我们可以通过两个步骤绕过这个限制。第一步，定义一个辅助函数<code>k</code>，将<code>slice</code>转为<code>map</code>对应的<code>string</code>类型的<code>key</code>，确保只有<code>x</code>和<code>y</code>相等时<code>k(x) == k(y)</code>才成立。然后创建一个<code>key</code>为<code>string</code>类型的<code>map</code>，在每次对<code>map</code>操作时先用<code>k</code>辅助函数将<code>slice</code>转化为<code>string</code>类型。</p><p><code>map</code>的<code>value</code>类型也可以是一个聚合类型，比如是一个<code>map</code>或<code>slice</code>。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 4.4.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-19 10:59:57</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-19 11:05:49</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> graph = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addEdge</span><span class="params">(from <span class="keyword">string</span>, to <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">edges := graph[from]</span><br><span class="line"><span class="keyword">if</span> edges == <span class="literal">nil</span> &#123;</span><br><span class="line">edges = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>)</span><br><span class="line">graph[from] = edges</span><br><span class="line">&#125;</span><br><span class="line">edges[to] = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hasEdge</span><span class="params">(from, to <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> graph[from][to]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">addEdge(<span class="string">"a"</span>, <span class="string">"b"</span>)</span><br><span class="line">fmt.Println(<span class="string">"a -&gt; b"</span>)</span><br><span class="line">addEdge(<span class="string">"c"</span>, <span class="string">"d"</span>)</span><br><span class="line">fmt.Println(<span class="string">"c -&gt; d"</span>)</span><br><span class="line">addEdge(<span class="string">"a"</span>, <span class="string">"d"</span>)</span><br><span class="line">fmt.Println(<span class="string">"a -&gt; d"</span>)</span><br><span class="line">addEdge(<span class="string">"d"</span>, <span class="string">"a"</span>)</span><br><span class="line">fmt.Println(<span class="string">"d -&gt; a"</span>)</span><br><span class="line">fmt.Println(<span class="string">"a b "</span>, hasEdge(<span class="string">"a"</span>, <span class="string">"b"</span>))</span><br><span class="line">fmt.Println(<span class="string">"c d "</span>, hasEdge(<span class="string">"c"</span>, <span class="string">"d"</span>))</span><br><span class="line">fmt.Println(<span class="string">"a d "</span>, hasEdge(<span class="string">"a"</span>, <span class="string">"d"</span>))</span><br><span class="line">fmt.Println(<span class="string">"d a "</span>, hasEdge(<span class="string">"d"</span>, <span class="string">"a"</span>))</span><br><span class="line">fmt.Println(<span class="string">"x b "</span>, hasEdge(<span class="string">"x"</span>, <span class="string">"b"</span>))</span><br><span class="line">fmt.Println(<span class="string">"c d "</span>, hasEdge(<span class="string">"c"</span>, <span class="string">"d"</span>))</span><br><span class="line">fmt.Println(<span class="string">"x d "</span>, hasEdge(<span class="string">"x"</span>, <span class="string">"d"</span>))</span><br><span class="line">fmt.Println(<span class="string">"d x "</span>, hasEdge(<span class="string">"d"</span>, <span class="string">"x"</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[11:05:51] onns@Onns ~/Documents/code/go/go-bible/ch4 $ go run 4.4.go</span><br><span class="line">a -&gt; b</span><br><span class="line">c -&gt; d</span><br><span class="line">a -&gt; d</span><br><span class="line">d -&gt; a</span><br><span class="line">a b  <span class="literal">true</span></span><br><span class="line">c d  <span class="literal">true</span></span><br><span class="line">a d  <span class="literal">true</span></span><br><span class="line">d a  <span class="literal">true</span></span><br><span class="line">x b  <span class="literal">false</span></span><br><span class="line">c d  <span class="literal">true</span></span><br><span class="line">x d  <span class="literal">false</span></span><br><span class="line">d x  <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（9）</title>
      <link href="/blog/2021/04/16/the-go-programming-language-note-9/"/>
      <url>/blog/2021/04/16/the-go-programming-language-note-9/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="复合数据类型"><a class="header-anchor" href="#复合数据类型">#</a>复合数据类型</h1><h2 id="slice"><a class="header-anchor" href="#slice">#</a>slice</h2><p><code>slice</code>代表变长的序列，序列中每个元素都有相同的类型。</p><p><code>slice</code>的底层确实引用一个数组对象。</p><p>一个<code>slice</code>由三个部分构成：指针、长度和容量。指针指向第一个<code>slice</code>元素对应的底层数组元素的地址<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，长度对应<code>slice</code>中元素的数目，长度不能超过容量，容量一般是从<code>slice</code>的开始位置到底层数据的结尾位置，内置的<code>len</code>和<code>cap</code>函数分别返回<code>slice</code>的长度和容量。</p><p>多个<code>slice</code>之间可以共享底层的数据，并且引用的数组部分区间可能重叠。</p><p>如果切片操作超出<code>cap(s)</code>的上限将导致一个<code>panic</code>异常，但是超出<code>len(s)</code>则是意味着扩展了<code>slice</code>，因为新<code>slice</code>的长度会变大。</p><p>因为<code>slice</code>值包含指向第一个<code>slice</code>元素的指针，因此向函数传递<code>slice</code>将允许在函数内部修改底层数组的元素。复制一个<code>slice</code>只是对底层的数组创建了一个新的<code>slice</code>别名。</p><p><code>slice</code>之间不能比较，不能使用<code>==</code>操作符来判断两个<code>slice</code>是否含有全部相等元素。</p><p>一个<code>slice</code>的元素是间接引用的，一个<code>slice</code>甚至可以包含自身。一个固定的<code>slice</code>值在不同的时刻可能包含不同的元素，因为底层数组的元素可能会被修改。</p><p><code>slice</code>唯一合法的比较操作是和<code>nil</code>比较，一个零值的<code>slice</code>等于<code>nil</code>。一个<code>nil</code>值的<code>slice</code>并没有底层数组。一个<code>nil</code>值的<code>slice</code>的长度和容量都是<code>0</code>，但是也有<code>非nil</code>值的<code>slice</code>的长度和容量也是<code>0</code>的。</p><p><code>len(s) == 0</code>用来测试一个<code>slice</code>是否为空。</p><p>除了文档已经明确说明的地方，所有的<code>Go</code>语言函数应该以相同的方式对待<code>nil</code>值的<code>slice</code>和<code>0</code>长度的<code>slice</code>。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 4.2.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-16 13:39:25</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-16 13:45:08</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span></span><br><span class="line">fmt.Printf(<span class="string">"%d %t\n"</span>, <span class="built_in">len</span>(s), s == <span class="literal">nil</span>)</span><br><span class="line">s = <span class="literal">nil</span></span><br><span class="line">fmt.Printf(<span class="string">"%d %t\n"</span>, <span class="built_in">len</span>(s), s == <span class="literal">nil</span>)</span><br><span class="line">s = []<span class="keyword">int</span>(<span class="literal">nil</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%d %t\n"</span>, <span class="built_in">len</span>(s), s == <span class="literal">nil</span>)</span><br><span class="line">s = []<span class="keyword">int</span>&#123;&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%d %t\n"</span>, <span class="built_in">len</span>(s), s == <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ go run 4.2.go</span><br><span class="line">0 <span class="literal">true</span></span><br><span class="line">0 <span class="literal">true</span></span><br><span class="line">0 <span class="literal">true</span></span><br><span class="line">0 <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>内置的<code>make</code>函数创建一个指定元素类型、长度和容量的<code>slice</code>，容量部分可以省略，在这种情况下，容量将等于长度。</p><p>在底层，<code>make</code>创建了一个匿名的数组变量，然后返回一个<code>slice</code>。只有通过返回的<code>slice</code>才能引用底层匿名的数组变量。</p><p>内置的<code>append</code>函数用于向<code>slice</code>追加元素。</p><p>要正确地使用<code>slice</code>，需要记住尽管底层数组的元素是间接访问的，但是<code>slice</code>对应结构体本身的指针、长度和容量部分是直接访问的。</p><p><code>copy</code>函数的第一个参数是要复制的目标<code>slice</code>，第二个参数是源<code>slice</code>，目标和源的位置顺序和<code>dst = src</code>赋值语句是一致的。<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><p>134/483</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><code>slice</code>的第一个元素并不一定就是数组的第一个元素。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>这句话完全没理解，这是干啥的？ <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>和其它语言的<code>copy(from,to)</code>不太一样。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（8）</title>
      <link href="/blog/2021/04/15/the-go-programming-language-note-8/"/>
      <url>/blog/2021/04/15/the-go-programming-language-note-8/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="复合数据类型"><a class="header-anchor" href="#复合数据类型">#</a>复合数据类型</h1><h2 id="数组"><a class="header-anchor" href="#数组">#</a>数组</h2><p>数组是一个由固定长度的特定类型元素组成的序列，一个数组可以由零个或多个元素组成。</p><p>因为数组的长度是固定的，因此在<code>Go</code>语言中很少直接使用数组。</p><p>默认情况下，数组的每个元素都被初始化为元素类型对应的零值，对于数字类型来说就是<code>0</code>，也可以使用数组字面值语法用一组值来初始化数组。</p><p>在数组字面值中，如果在数组的长度位置出现的是<code>...</code>省略号，则表示数组的长度是根据初始化值的个数来计算。</p><p>数组的长度是数组类型的一个组成部分，因此<code>[3]int</code>和<code>[4]int</code>是两种不同的数组类型。</p><p>数组的长度必须是<strong>常量表达式</strong>，因为数组的长度需要在编译阶段确定。</p><p>在这种形式的数组字面值形式中，初始化索引的顺序是无关紧要的，没用到的索引可以省略，未指定初始值的元素将用零值初始化。</p><p>如果一个数组的元素类型是可以相互比较的，那么数组类型也是可以相互比较的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 4.1.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-15 13:31:53</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-15 14:24:53</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> q [<span class="number">3</span>]<span class="keyword">int</span> = [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> q &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%d %d\n"</span>, i, v)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> r [<span class="number">3</span>]<span class="keyword">int</span> = [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> r &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%d %d\n"</span>, i, v)</span><br><span class="line">&#125;</span><br><span class="line">s := [...]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%T\n"</span>, s)</span><br><span class="line">t := [...]<span class="keyword">int</span>&#123;<span class="number">99</span>: <span class="number">-1</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%T %d\n"</span>, t, t[<span class="number">99</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Currency <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">USD Currency = <span class="literal">iota</span></span><br><span class="line">EUR</span><br><span class="line">GBP</span><br><span class="line">RMB</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">symbol := [...]<span class="keyword">string</span>&#123;USD: <span class="string">"$"</span>, EUR: <span class="string">"€"</span>, GBP: <span class="string">"£"</span>, RMB: <span class="string">"¥"</span>&#125;</span><br><span class="line">fmt.Println(RMB, symbol[RMB])</span><br><span class="line"><span class="comment">// 在这种形式的数组字面值形式中，初始化索引的顺序是无关紧要的，没用到的索引可以省略，未指定初始值的元素将用零值初始化。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ go run 4.1.go</span><br><span class="line">0 1</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">0 1</span><br><span class="line">1 2</span><br><span class="line">2 0</span><br><span class="line">[3]int</span><br><span class="line">[100]int -1</span><br><span class="line">3 ¥</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim文件头部模板</title>
      <link href="/blog/2021/04/14/vim-header-template/"/>
      <url>/blog/2021/04/14/vim-header-template/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>在看书的时候，会写一些例子的代码，然后配上运行结果，不过<code>markdown</code>格式的<code>code</code>块没有文件名什么的，不好和命令行结果对应，每个都手动加不优雅，于是找了一些<code>vim</code>的文档，配置了一下，记录如下。</p><a id="more"></a><h2 id="头文件模板"><a class="header-anchor" href="#头文件模板">#</a>头文件模板</h2><p>以<code>go</code>语言的为例，我自己的模板如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; -------------------------------------------</span><br><span class="line">&#x2F;&#x2F; Created By : Onns onns@onns.xyz</span><br><span class="line">&#x2F;&#x2F; File Name :</span><br><span class="line">&#x2F;&#x2F; Purpose :</span><br><span class="line">&#x2F;&#x2F; Creation Date :</span><br><span class="line">&#x2F;&#x2F; Last Modified :</span><br><span class="line">&#x2F;&#x2F; -------------------------------------------</span><br></pre></td></tr></table></figure><p>保存为<code>/Users/onns/Documents/code/config/vim/header_template</code>。</p><h2 id="vimrc"><a class="header-anchor" href="#vimrc">#</a>~/.vimrc</h2><p>就像<code>bash</code>运行时会加载<code>~/.bashrc</code>文件一样，<code>vim</code>在运行的时候会加载<code>~/.vimrc</code>文件，没有的话直接创建即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ vi ~/.vimrc</span><br><span class="line">autocmd bufnewfile *.go 0r /Users/onns/Documents/code/config/vim/header_template</span><br><span class="line">autocmd bufnewfile *.go exe <span class="string">"1,"</span> . 7 . <span class="string">"g/File Name :.*/s//File Name : "</span> .expand(<span class="string">"%"</span>)</span><br><span class="line">autocmd bufnewfile *.go exe <span class="string">"1,"</span> . 7 . <span class="string">"g/Creation Date :.*/s//Creation Date : "</span> .strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">autocmd Bufwritepre,filewritepre *.go execute <span class="string">"normal ma"</span></span><br><span class="line">autocmd Bufwritepre,filewritepre *.go exe <span class="string">"1,"</span> . 7 . <span class="string">"g/Last Modified :.*/s/Last Modified :.*/Last Modified : "</span> .strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">autocmd bufwritepost,filewritepost *.go execute <span class="string">"normal `a"</span></span><br></pre></td></tr></table></figure><p>第一行就是加载模板文件的意思，对<code>*.go</code>的文件都会应用这个规则，<code>0r</code>代表从新建文件的第一行开始读入。原教程里<code>0r</code>的位置是<code>so</code>我也不知道什么意思，一直报错，找了别的教程改成<code>0r</code>才过的，有机会再看看这个地方是什么意思吧！<br>第二行就是把模板里的文件名填入。<br>第三行就是把模板的创建时间填入。<br>第四行记录当前的光标位置。<br>第五行修改修改时间。<br>第六行还原光标位置。</p><h2 id="效果"><a class="header-anchor" href="#效果">#</a>效果</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 3.10.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-14 15:40:40</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-14 15:48:43</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">x := <span class="number">123</span></span><br><span class="line">y := fmt.Sprintf(<span class="string">"%d"</span>, x)</span><br><span class="line">z := strconv.Itoa(x)</span><br><span class="line">fmt.Println(y, z)</span><br><span class="line"></span><br><span class="line">fmt.Println(strconv.FormatInt(<span class="keyword">int64</span>(x), <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">a, _ := strconv.Atoi(<span class="string">"123"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"a type: %T\n"</span>, a)</span><br><span class="line">b, _ := strconv.ParseInt(<span class="string">"123"</span>, <span class="number">10</span>, <span class="number">64</span>)</span><br><span class="line">fmt.Printf(<span class="string">"b type: %T\n"</span>, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前前后后还是花了一个多小时的，但是记录下来确实没多少东西，还有另一种函数式的写法感觉更通用，毕竟这个写法，换一个后缀都要重新弄= =，有机会再来补。参考链接后面几个就是函数式的写法，可以参考一下。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://elias.rhi.hi.is/vim/cmdline.html" target="_blank" rel="noopener">Vim documentation: cmdline</a></li><li><a href="https://www.thegeekstuff.com/2008/12/vi-and-vim-autocommand-3-steps-to-add-custom-header-to-your-file/" target="_blank" rel="noopener">Vi and Vim Autocommand: 3 Steps to Add Custom Header To Your File Automatically</a></li><li><a href="https://stackoverflow.com/questions/13279520/automatically-inserting-a-header-in-vim" target="_blank" rel="noopener">Automatically inserting a header in vim</a></li><li><a href="https://vimawesome.com/plugin/vim-header-hard-things" target="_blank" rel="noopener">VIM-HEADER</a></li><li><a href="https://github.com/TJRoger/header.vim" target="_blank" rel="noopener">https://github.com/TJRoger/header.vim</a></li><li><a href="https://sauravomar01.medium.com/configure-custom-header-template-in-vim-editor-6d578e440da3" target="_blank" rel="noopener">Configure Custom Header Template in Vim editor:</a></li><li><a href="https://blog.csdn.net/qq_42103512/article/details/108587533" target="_blank" rel="noopener">shell 脚本批量在指定的后缀文件头部中插入内容</a></li><li><a href="https://www.cnblogs.com/betterquan/p/11747830.html" target="_blank" rel="noopener">自动添加 shell 脚本头部信息</a></li><li><a href="https://blog.csdn.net/luzhenrong45/article/details/53021748/" target="_blank" rel="noopener">vim 创建程序文件自动添加头部注释</a></li><li><a href="https://www.cnblogs.com/black-mamba/p/9280316.html" target="_blank" rel="noopener">vim 创建文件自动生成头部注释</a></li></ul><h2 id="todo"><a class="header-anchor" href="#todo">#</a>TODO</h2><ul><li><code>so</code>的意思。</li><li>通用的函数式写法。</li></ul>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> vim </tag>
            
            <tag> vi </tag>
            
            <tag> header template </tag>
            
            <tag> autocommand </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（7）</title>
      <link href="/blog/2021/04/14/the-go-programming-language-note-7/"/>
      <url>/blog/2021/04/14/the-go-programming-language-note-7/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="基础数据类型"><a class="header-anchor" href="#基础数据类型">#</a>基础数据类型</h1><h2 id="复数"><a class="header-anchor" href="#复数">#</a>复数</h2><p><code>Go</code>语言提供了两种精度的复数类型：<code>complex64</code>和<code>complex128</code>，分别对应<code>float32</code>和<code>float64</code>两种浮点数精度。</p><p>内置的<code>complex</code>函数用于构建复数，内建的<code>real</code>和<code>imag</code>函数分别返回复数的实部和虚部：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math/cmplx"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x <span class="keyword">complex128</span> = <span class="built_in">complex</span>(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">// 等价于： x := 1 + 2i</span></span><br><span class="line"><span class="keyword">var</span> y <span class="keyword">complex128</span> = <span class="built_in">complex</span>(<span class="number">3</span>, <span class="number">4</span>) <span class="comment">// 等价于： y := 3 + 4i</span></span><br><span class="line">fmt.Println(x * y)</span><br><span class="line">fmt.Println(<span class="built_in">real</span>(x * y))</span><br><span class="line">fmt.Println(<span class="built_in">imag</span>(x * y))</span><br><span class="line">fmt.Println(<span class="number">1i</span> * <span class="number">1i</span>)</span><br><span class="line">fmt.Println(cmplx.Sqrt(<span class="number">-1</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[12:26:47] onns@Onns ~/Documents/code/go/go-bible/ch3 $ go run 3.7.go</span><br><span class="line">(-5+10i)</span><br><span class="line">-5</span><br><span class="line">10</span><br><span class="line">(-1+0i)</span><br><span class="line">(0+1i)</span><br></pre></td></tr></table></figure><p>复数也可以用<code>==</code>和<code>!=</code>进行相等比较，只有两个复数的实部和虚部都相等的时候它们才是相等的。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p><code>math/cmplx</code>包提供了复数处理的许多函数，例如求复数的平方根函数和求幂函数。</p><h2 id="布尔型"><a class="header-anchor" href="#布尔型">#</a>布尔型</h2><p>布尔值并不会隐式转换为数字值<code>0</code>或<code>1</code>，必须使用一个显式的<code>if</code>语句辅助转换。</p><h2 id="字符串"><a class="header-anchor" href="#字符串">#</a>字符串</h2><p>一个字符串是一个不可改变的字节序列。字符串可以包含任意的数据，包括<code>byte</code>值<code>0</code>，但是通常是用来包含人类可读的文本。</p><p>文本字符串通常被解释为采用<code>UTF8</code>编码的<code>Unicode</code>码点（<code>rune</code>）序列。</p><p>内置的<code>len</code>函数可以返回一个字符串中的字节数目，索引操作<code>s[i]</code>返回第<code>i</code>个字节的字节值。</p><p>字符串可以用<code>==</code>和<code>&lt;</code>进行比较，比较通过逐个字节比较完成的，因此比较的结果是<strong>字符串自然编码</strong>的顺序。</p><p>不变性意味如果两个字符串共享相同的底层数据的话也是安全的，这使得复制任何长度的字符串代价是低廉的。一个字符串<code>s</code>和对应的子字符串切片<code>s[7:]</code>的操作也可以安全地共享相同的内存，因此字符串切片操作代价也是低廉的。</p><p>一个原生的字符串面值形式是`…`，使用反引号代替双引号。</p><p><code>Unicode</code>码点对应<code>Go</code>语言中的<code>rune</code>整数类型（<code>rune</code>是<code>int32</code>等价类型）。</p><p><code>UTF8</code>编码使用<code>1</code>到<code>4</code>个字节来表示每个<code>Unicode</code>码点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0xxxxxxx</span><br><span class="line">110xxxxx 10xxxxxx</span><br><span class="line">1110xxxx 10xxxxxx 10xxxxxx</span><br><span class="line">11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"unicode/utf8"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">"Hello, 世界"</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(s))</span><br><span class="line">fmt.Println(utf8.RuneCountInString(s))</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(s); &#123;</span><br><span class="line">r, size := utf8.DecodeRuneInString(s[i:])</span><br><span class="line">fmt.Printf(<span class="string">"%d\t%c\n"</span>, i, r)</span><br><span class="line">i += size</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, r := <span class="keyword">range</span> <span class="string">"Hello, 世界"</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%d\t%q\t%d\n"</span>, i, r, r)</span><br><span class="line">&#125;</span><br><span class="line">n := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, _ = <span class="keyword">range</span> s &#123;</span><br><span class="line">n++</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(n)</span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">range</span> s &#123;</span><br><span class="line">n++</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(n)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ go run 3.8.go</span><br><span class="line">13</span><br><span class="line">9</span><br><span class="line">0H</span><br><span class="line">1e</span><br><span class="line">2l</span><br><span class="line">3l</span><br><span class="line">4o</span><br><span class="line">5,</span><br><span class="line">6</span><br><span class="line">7世</span><br><span class="line">10界</span><br><span class="line">0<span class="string">'H'</span>72</span><br><span class="line">1<span class="string">'e'</span>101</span><br><span class="line">2<span class="string">'l'</span>108</span><br><span class="line">3<span class="string">'l'</span>108</span><br><span class="line">4<span class="string">'o'</span>111</span><br><span class="line">5<span class="string">','</span>44</span><br><span class="line">6<span class="string">' '</span>32</span><br><span class="line">7<span class="string">'世'</span>19990</span><br><span class="line">10<span class="string">'界'</span>30028</span><br><span class="line">9</span><br><span class="line">9</span><br></pre></td></tr></table></figure><p><code>\uhhhh</code>对应<code>16bit</code>的码点值，<code>\Uhhhhhhhh</code>对应<code>32bit</code>的码点值，其中<code>h</code>是一个十六进制数字。</p><p><code>Go</code>语言的<code>range</code>循环在处理字符串的时候，会自动隐式解码<code>UTF8</code>字符串。</p><p><code>UTF8</code>字符解码如果遇到一个错误的<code>UTF8</code>编码输入，将生成一个特别的<code>Unicode</code>字符<code>\uFFFD</code>。</p><p><code>UTF8</code>字符串作为交换格式是非常方便的，但是在程序内部采用<code>rune</code>序列可能更方便，因为<code>rune</code>大小一致，支持数组索引和方便切割。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 3.9.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-14 15:24:14</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-14 15:24:18</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">"プログラム"</span></span><br><span class="line">fmt.Printf(<span class="string">"% x\n"</span>, s)</span><br><span class="line">r := []<span class="keyword">rune</span>(s)</span><br><span class="line">fmt.Printf(<span class="string">"%x\n"</span>, r)</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(r))</span><br><span class="line"></span><br><span class="line">s = <span class="string">"program プログラム"</span></span><br><span class="line">fmt.Printf(<span class="string">"% x\n"</span>, s)</span><br><span class="line">r = []<span class="keyword">rune</span>(s)</span><br><span class="line">fmt.Printf(<span class="string">"%x\n"</span>, r)</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(r))</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(<span class="number">65</span>))</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(<span class="number">0x4eac</span>))</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(<span class="number">1234567</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ go run 3.9.go</span><br><span class="line">e3 83 97 e3 83 ad e3 82 b0 e3 83 a9 e3 83 a0</span><br><span class="line">[30d7 30ed 30b0 30e9 30e0]</span><br><span class="line">プログラム</span><br><span class="line">70 72 6f 67 72 61 6d 20 e3 83 97 e3 83 ad e3 82 b0 e3 83 a9 e3 83 a0</span><br><span class="line">[70 72 6f 67 72 61 6d 20 30d7 30ed 30b0 30e9 30e0]</span><br><span class="line">program プログラム</span><br><span class="line">A</span><br><span class="line">京</span><br><span class="line">�</span><br></pre></td></tr></table></figure><p><code>% x</code>参数用于在每个十六进制数字前插入一个空格。</p><p>将一个整数转型为字符串意思是生成以只包含对应<code>Unicode</code>码点字符的<code>UTF8</code>字符串，如果对应码点的字符是无效的，则用<code>\uFFFD</code>无效字符作为替换。</p><h3 id="字符串和数字的转换"><a class="header-anchor" href="#字符串和数字的转换">#</a>字符串和数字的转换</h3><ol><li>用<code>fmt.Sprintf</code>返回一个格式化的字符串。</li><li>用<code>strconv.Itoa()</code>将数字转为字符串。</li></ol><p><code>fmt.Printf</code>函数的<code>%b</code>、<code>%d</code>、<code>%o</code>和<code>%x</code>等参数提供功能往往比<code>strconv</code>包的<code>Format</code>函数方便很多，特别是在需要包含附加额外信息的时候。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 3.10.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-14 15:40:40</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-14 15:48:43</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">x := <span class="number">123</span></span><br><span class="line">y := fmt.Sprintf(<span class="string">"%d"</span>, x)</span><br><span class="line">z := strconv.Itoa(x)</span><br><span class="line">fmt.Println(y, z)</span><br><span class="line"></span><br><span class="line">fmt.Println(strconv.FormatInt(<span class="keyword">int64</span>(x), <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">a, _ := strconv.Atoi(<span class="string">"123"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"a type: %T\n"</span>, a)</span><br><span class="line">b, _ := strconv.ParseInt(<span class="string">"123"</span>, <span class="number">10</span>, <span class="number">64</span>)</span><br><span class="line">fmt.Printf(<span class="string">"b type: %T\n"</span>, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ go run 3.10.go</span><br><span class="line">123 123</span><br><span class="line">1111011</span><br><span class="line">a <span class="built_in">type</span>: int</span><br><span class="line">b <span class="built_in">type</span>: int64</span><br></pre></td></tr></table></figure><p><code>ParseInt</code>函数的第三个参数是用于指定整型数的大小，例如<code>16</code>表示<code>int16</code>，<code>0</code>则表示<code>int</code>。在任何情况下，返回的结果总是<code>int64</code>类型，可以通过强制类型转换将它转为更小的整数类型。</p><h2 id="常量"><a class="header-anchor" href="#常量">#</a>常量</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pi = <span class="number">3.14159</span></span><br><span class="line"><span class="comment">// 可以批量声明多个常量</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">e = <span class="number">2.71828182845904523536028747135266249775724709369995957496696763</span></span><br><span class="line">pi = <span class="number">3.14159265358979323846264338327950288419716939937510582097494459</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>所有常量的运算都可以在编译期完成。</p><p>如果是批量声明的常量，除了第一个外其它的常量右边的初始化表达式都可以省略，如果省略初始化表达式则表示使用前面常量的初始化表达式写法，对应的常量类型也一样的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 3.11.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-14 15:56:50</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-14 15:57:37</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b</span><br><span class="line">c = <span class="number">2</span></span><br><span class="line">d</span><br><span class="line">)</span><br><span class="line">fmt.Println(a, b, c, d)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ go run 3.11.go</span><br><span class="line">1 1 2 2</span><br></pre></td></tr></table></figure><p>常量声明可以使用<code>iota</code>常量生成器初始化，在一个<code>const</code>声明语句中，在第一个声明的常量所在的行，<code>iota</code>将会被置为<code>0</code>，然后在每一个有常量声明的行加一。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"><span class="comment">// Created By : Onns onns@onns.xyz</span></span><br><span class="line"><span class="comment">// File Name : 3.12.go</span></span><br><span class="line"><span class="comment">// Purpose :</span></span><br><span class="line"><span class="comment">// Creation Date : 2021-04-14 16:00:53</span></span><br><span class="line"><span class="comment">// Last Modified : 2021-04-14 16:01:55</span></span><br><span class="line"><span class="comment">// -------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Weekday <span class="keyword">int</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">Sunday Weekday = <span class="literal">iota</span></span><br><span class="line">Monday</span><br><span class="line">Tuesday</span><br><span class="line">Wednesday</span><br><span class="line">Thursday</span><br><span class="line">Friday</span><br><span class="line">Saturday</span><br><span class="line">)</span><br><span class="line">fmt.Println(Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ go run 3.12.go</span><br><span class="line">0 1 2 3 4 5 6</span><br></pre></td></tr></table></figure><p>有六种未明确类型的常量类型，分别是无类型的布尔型、无类型的整数、无类型的字符、无类型的浮点数、无类型的复数、无类型的字符串。</p><p>编译器为这些没有明确的基础类型的数字常量提供比基础类型更高精度的算术运算，可以认为至少有<code>256bit</code>的运算精度。</p><p>通过延迟明确常量的具体类型，无类型的常量不仅可以提供更高的运算精度，而且可以直接用于更多的表达式而不需要显式的类型转换。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><p>只有常量可以是无类型的。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>浮点数的相等比较是危险的，需要特别小心处理精度问题。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>这里我是懵逼的，有机会再看看。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（21）</title>
      <link href="/blog/2021/04/13/the-linux-command-line-note-21/"/>
      <url>/blog/2021/04/13/the-linux-command-line-note-21/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="diff"><a class="header-anchor" href="#diff">#</a>diff</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">$ diff --<span class="built_in">help</span></span><br><span class="line">Usage: diff [OPTION]... FILES</span><br><span class="line">Compare FILES line by line.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">      --normal                  output a normal diff (the default)</span><br><span class="line">  -q, --brief                   report only when files differ</span><br><span class="line">  -s, --report-identical-files  report when two files are the same</span><br><span class="line">  -c, -C NUM, --context[=NUM]   output NUM (default 3) lines of copied context</span><br><span class="line">  -u, -U NUM, --unified[=NUM]   output NUM (default 3) lines of unified context</span><br><span class="line">  -e, --ed                      output an ed script</span><br><span class="line">  -n, --rcs                     output an RCS format diff</span><br><span class="line">  -y, --side-by-side            output <span class="keyword">in</span> two columns</span><br><span class="line">  -W, --width=NUM               output at most NUM (default 130) <span class="built_in">print</span> columns</span><br><span class="line">      --left-column             output only the left column of common lines</span><br><span class="line">      --suppress-common-lines   <span class="keyword">do</span> not output common lines</span><br><span class="line"></span><br><span class="line">  -p, --show-c-function         show <span class="built_in">which</span> C <span class="keyword">function</span> each change is <span class="keyword">in</span></span><br><span class="line">  -F, --show-function-line=RE   show the most recent line matching RE</span><br><span class="line">      --label LABEL             use LABEL instead of file name and timestamp</span><br><span class="line">                                  (can be repeated)</span><br><span class="line"></span><br><span class="line">  -t, --expand-tabs             expand tabs to spaces <span class="keyword">in</span> output</span><br><span class="line">  -T, --initial-tab             make tabs line up by prepending a tab</span><br><span class="line">      --tabsize=NUM             tab stops every NUM (default 8) <span class="built_in">print</span> columns</span><br><span class="line">      --suppress-blank-empty    suppress space or tab before empty output lines</span><br><span class="line">  -l, --paginate                pass output through <span class="string">'pr'</span> to paginate it</span><br><span class="line"></span><br><span class="line">  -r, --recursive                 recursively compare any subdirectories found</span><br><span class="line">      --no-dereference            don<span class="string">'t follow symbolic links</span></span><br><span class="line"><span class="string">  -N, --new-file                  treat absent files as empty</span></span><br><span class="line"><span class="string">      --unidirectional-new-file   treat absent first files as empty</span></span><br><span class="line"><span class="string">      --ignore-file-name-case     ignore case when comparing file names</span></span><br><span class="line"><span class="string">      --no-ignore-file-name-case  consider case when comparing file names</span></span><br><span class="line"><span class="string">  -x, --exclude=PAT               exclude files that match PAT</span></span><br><span class="line"><span class="string">  -X, --exclude-from=FILE         exclude files that match any pattern in FILE</span></span><br><span class="line"><span class="string">  -S, --starting-file=FILE        start with FILE when comparing directories</span></span><br><span class="line"><span class="string">      --from-file=FILE1           compare FILE1 to all operands;</span></span><br><span class="line"><span class="string">                                    FILE1 can be a directory</span></span><br><span class="line"><span class="string">      --to-file=FILE2             compare all operands to FILE2;</span></span><br><span class="line"><span class="string">                                    FILE2 can be a directory</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  -i, --ignore-case               ignore case differences in file contents</span></span><br><span class="line"><span class="string">  -E, --ignore-tab-expansion      ignore changes due to tab expansion</span></span><br><span class="line"><span class="string">  -Z, --ignore-trailing-space     ignore white space at line end</span></span><br><span class="line"><span class="string">  -b, --ignore-space-change       ignore changes in the amount of white space</span></span><br><span class="line"><span class="string">  -w, --ignore-all-space          ignore all white space</span></span><br><span class="line"><span class="string">  -B, --ignore-blank-lines        ignore changes where lines are all blank</span></span><br><span class="line"><span class="string">  -I, --ignore-matching-lines=RE  ignore changes where all lines match RE</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  -a, --text                      treat all files as text</span></span><br><span class="line"><span class="string">      --strip-trailing-cr         strip trailing carriage return on input</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  -D, --ifdef=NAME                output merged file with '</span><span class="comment">#ifdef NAME' diffs</span></span><br><span class="line">      --GTYPE-group-format=GFMT   format GTYPE input groups with GFMT</span><br><span class="line">      --line-format=LFMT          format all input lines with LFMT</span><br><span class="line">      --LTYPE-line-format=LFMT    format LTYPE input lines with LFMT</span><br><span class="line">    These format options provide fine-grained control over the output</span><br><span class="line">      of diff, generalizing -D/--ifdef.</span><br><span class="line">    LTYPE is <span class="string">'old'</span>, <span class="string">'new'</span>, or <span class="string">'unchanged'</span>.  GTYPE is LTYPE or <span class="string">'changed'</span>.</span><br><span class="line">    GFMT (only) may contain:</span><br><span class="line">      %&lt;  lines from FILE1</span><br><span class="line">      %&gt;  lines from FILE2</span><br><span class="line">      %=  lines common to FILE1 and FILE2</span><br><span class="line">      %[-][WIDTH][.[PREC]]&#123;doxX&#125;LETTER  <span class="built_in">printf</span>-style spec <span class="keyword">for</span> LETTER</span><br><span class="line">        LETTERs are as follows <span class="keyword">for</span> new group, lower <span class="keyword">case</span> <span class="keyword">for</span> old group:</span><br><span class="line">          F  first line number</span><br><span class="line">          L  last line number</span><br><span class="line">          N  number of lines = L-F+1</span><br><span class="line">          E  F-1</span><br><span class="line">          M  L+1</span><br><span class="line">      %(A=B?T:E)  <span class="keyword">if</span> A equals B <span class="keyword">then</span> T <span class="keyword">else</span> E</span><br><span class="line">    LFMT (only) may contain:</span><br><span class="line">      %L  contents of line</span><br><span class="line">      %l  contents of line, excluding any trailing newline</span><br><span class="line">      %[-][WIDTH][.[PREC]]&#123;doxX&#125;n  <span class="built_in">printf</span>-style spec <span class="keyword">for</span> input line number</span><br><span class="line">    Both GFMT and LFMT may contain:</span><br><span class="line">      %%  %</span><br><span class="line">      %c<span class="string">'C'</span>  the single character C</span><br><span class="line">      %c<span class="string">'\OOO'</span>  the character with octal code OOO</span><br><span class="line">      C    the character C (other characters represent themselves)</span><br><span class="line"></span><br><span class="line">  -d, --minimal            try hard to find a smaller <span class="built_in">set</span> of changes</span><br><span class="line">      --horizon-lines=NUM  keep NUM lines of the common prefix and suffix</span><br><span class="line">      --speed-large-files  assume large files and many scattered small changes</span><br><span class="line">      --color[=WHEN]       colorize the output; WHEN can be <span class="string">'never'</span>, <span class="string">'always'</span>,</span><br><span class="line">                             or <span class="string">'auto'</span> (the default)</span><br><span class="line">      --palette=PALETTE    the colors to use when --color is active; PALETTE is</span><br><span class="line">                             a colon-separated list of terminfo capabilities</span><br><span class="line"></span><br><span class="line">      --<span class="built_in">help</span>               display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">  -v, --version            output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">FILES are <span class="string">'FILE1 FILE2'</span> or <span class="string">'DIR1 DIR2'</span> or <span class="string">'DIR FILE'</span> or <span class="string">'FILE DIR'</span>.</span><br><span class="line">If --from-file or --to-file is given, there are no restrictions on FILE(s).</span><br><span class="line">If a FILE is <span class="string">'-'</span>, <span class="built_in">read</span> standard input.</span><br><span class="line">Exit status is 0 <span class="keyword">if</span> inputs are the same, 1 <span class="keyword">if</span> different, 2 <span class="keyword">if</span> trouble.</span><br><span class="line"></span><br><span class="line">Report bugs to: bug-diffutils@gnu.org</span><br><span class="line">GNU diffutils home page: &lt;http://www.gnu.org/software/diffutils/&gt;</span><br><span class="line">General <span class="built_in">help</span> using GNU software: &lt;http://www.gnu.org/gethelp/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ diff file1.txt file2.txt</span><br><span class="line">1d0</span><br><span class="line">&lt; a</span><br><span class="line">4a4</span><br><span class="line">&gt; e</span><br></pre></td></tr></table></figure><p>在默认格式中，每组的更改之前都是一个更改命令，其形式为<code>range operation range</code>，用来描述要求更改的位置和类型，从而把第一个文件转变为第二个文件。</p><table><thead><tr><th style="text-align:left">改变</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left"><code>[r1]a[r2]</code></td><td style="text-align:left">把第二个文件中位置<code>r2</code>处的文件行添加到第一个文件中的<code>r1</code>处</td></tr><tr><td style="text-align:left"><code>[r1]c[r2]</code></td><td style="text-align:left">用第二个文件中位置<code>r2</code>处的文本行更改（替代）位置<code>r1</code>处的文本行</td></tr><tr><td style="text-align:left"><code>[r1]d[r2]</code></td><td style="text-align:left">删除第一个文件中位置<code>r1</code>处的文本行，这些文本行将会出现在第二个文件中位置<code>r2</code>处</td></tr></tbody></table><p>上下文模式（<code>-c</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ diff -c file1.txt file2.txt</span><br><span class="line">*** file1.txt2021-04-13 15:27:36.644626792 +0800</span><br><span class="line">--- file2.txt2021-04-12 15:34:30.758408526 +0800</span><br><span class="line">***************</span><br><span class="line">*** 1,4 ****</span><br><span class="line">- a</span><br><span class="line">  b</span><br><span class="line">  c</span><br><span class="line">  d</span><br><span class="line">--- 1,4 ----</span><br><span class="line">  b</span><br><span class="line">  c</span><br><span class="line">  d</span><br><span class="line">+ e</span><br></pre></td></tr></table></figure><p>这个输出结果以两个文件名和它们的时间戳开头。第一个文件用星号做标记，第二个文件用短横线做标记。</p><p><code>*** 1,4 ****</code>表示第一个文件中从第一行到第四行的文本行。<br><code>--- 1,4 ----</code>表示第二个文件中从第一行到第四行的文本行。<br><code> </code>表示<strong>上下文显示行</strong>。它并不表示两个文件之间的差异。<br><code>-</code>表示<strong>删除行</strong>，这一行将会出现在第一个文件中。<br><code>+</code>表示<strong>添加行</strong>，这一行将会出现在第二个文件内。<br><code>!</code>表示<strong>更改行</strong>，将会显示某个文本行的两个版本，每个版本会出现在更改组的各自部分。</p><p>统一模式（<code>-u</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ diff -u file1.txt file2.txt</span><br><span class="line">--- file1.txt2021-04-13 15:27:36.644626792 +0800</span><br><span class="line">+++ file2.txt2021-04-12 15:34:30.758408526 +0800</span><br><span class="line">@@ -1,4 +1,4 @@</span><br><span class="line">-a</span><br><span class="line"> b</span><br><span class="line"> c</span><br><span class="line"> d</span><br><span class="line">+e</span><br></pre></td></tr></table></figure><h2 id="patch"><a class="header-anchor" href="#patch">#</a>patch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">$ patch --<span class="built_in">help</span></span><br><span class="line">Usage: patch [OPTION]... [ORIGFILE [PATCHFILE]]</span><br><span class="line"></span><br><span class="line">Input options:</span><br><span class="line"></span><br><span class="line">  -p NUM  --strip=NUM  Strip NUM leading components from file names.</span><br><span class="line">  -F LINES  --fuzz LINES  Set the fuzz factor to LINES <span class="keyword">for</span> inexact matching.</span><br><span class="line">  -l  --ignore-whitespace  Ignore white space changes between patch and input.</span><br><span class="line"></span><br><span class="line">  -c  --context  Interpret the patch as a context difference.</span><br><span class="line">  -e  --ed  Interpret the patch as an ed script.</span><br><span class="line">  -n  --normal  Interpret the patch as a normal difference.</span><br><span class="line">  -u  --unified  Interpret the patch as a unified difference.</span><br><span class="line"></span><br><span class="line">  -N  --forward  Ignore patches that appear to be reversed or already applied.</span><br><span class="line">  -R  --reverse  Assume patches were created with old and new files swapped.</span><br><span class="line"></span><br><span class="line">  -i PATCHFILE  --input=PATCHFILE  Read patch from PATCHFILE instead of stdin.</span><br><span class="line"></span><br><span class="line">Output options:</span><br><span class="line"></span><br><span class="line">  -o FILE  --output=FILE  Output patched files to FILE.</span><br><span class="line">  -r FILE  --reject-file=FILE  Output rejects to FILE.</span><br><span class="line"></span><br><span class="line">  -D NAME  --ifdef=NAME  Make merged <span class="keyword">if</span>-then-else output using NAME.</span><br><span class="line">  --merge  Merge using conflict markers instead of creating reject files.</span><br><span class="line">  -E  --remove-empty-files  Remove output files that are empty after patching.</span><br><span class="line"></span><br><span class="line">  -Z  --<span class="built_in">set</span>-utc  Set <span class="built_in">times</span> of patched files, assuming diff uses UTC (GMT).</span><br><span class="line">  -T  --<span class="built_in">set</span>-time  Likewise, assuming <span class="built_in">local</span> time.</span><br><span class="line"></span><br><span class="line">  --quoting-style=WORD   output file names using quoting style WORD.</span><br><span class="line">    Valid WORDs are: literal, shell, shell-always, c, escape.</span><br><span class="line">    Default is taken from QUOTING_STYLE env variable, or <span class="string">'shell'</span> <span class="keyword">if</span> <span class="built_in">unset</span>.</span><br><span class="line"></span><br><span class="line">Backup and version control options:</span><br><span class="line"></span><br><span class="line">  -b  --backup  Back up the original contents of each file.</span><br><span class="line">  --backup-if-mismatch  Back up <span class="keyword">if</span> the patch does not match exactly.</span><br><span class="line">  --no-backup-if-mismatch  Back up mismatches only <span class="keyword">if</span> otherwise requested.</span><br><span class="line"></span><br><span class="line">  -V STYLE  --version-control=STYLE  Use STYLE version control.</span><br><span class="line">STYLE is either <span class="string">'simple'</span>, <span class="string">'numbered'</span>, or <span class="string">'existing'</span>.</span><br><span class="line">  -B PREFIX  --prefix=PREFIX  Prepend PREFIX to backup file names.</span><br><span class="line">  -Y PREFIX  --basename-prefix=PREFIX  Prepend PREFIX to backup file basenames.</span><br><span class="line">  -z SUFFIX  --suffix=SUFFIX  Append SUFFIX to backup file names.</span><br><span class="line"></span><br><span class="line">  -g NUM  --get=NUM  Get files from RCS etc. <span class="keyword">if</span> positive; ask <span class="keyword">if</span> negative.</span><br><span class="line"></span><br><span class="line">Miscellaneous options:</span><br><span class="line"></span><br><span class="line">  -t  --batch  Ask no questions; skip bad-Prereq patches; assume reversed.</span><br><span class="line">  -f  --force  Like -t, but ignore bad-Prereq patches, and assume unreversed.</span><br><span class="line">  -s  --quiet  --silent  Work silently unless an error occurs.</span><br><span class="line">  --verbose  Output extra information about the work being <span class="keyword">done</span>.</span><br><span class="line">  --dry-run  Do not actually change any files; just <span class="built_in">print</span> what would happen.</span><br><span class="line">  --posix  Conform to the POSIX standard.</span><br><span class="line"></span><br><span class="line">  -d DIR  --directory=DIR  Change the working directory to DIR first.</span><br><span class="line">  --reject-format=FORMAT  Create <span class="string">'context'</span> or <span class="string">'unified'</span> rejects.</span><br><span class="line">  --binary  Read and write data <span class="keyword">in</span> binary mode.</span><br><span class="line">  --<span class="built_in">read</span>-only=BEHAVIOR  How to handle <span class="built_in">read</span>-only input files: <span class="string">'ignore'</span> that they</span><br><span class="line">                        are <span class="built_in">read</span>-only, <span class="string">'warn'</span> (default), or <span class="string">'fail'</span>.</span><br><span class="line"></span><br><span class="line">  -v  --version  Output version info.</span><br><span class="line">  --<span class="built_in">help</span>  Output this <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">Report bugs to &lt;bug-patch@gnu.org&gt;.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ diff -Naur file1.txt file2.txt &gt; patchfile.txt</span><br><span class="line">$ cat patchfile.txt</span><br><span class="line">--- file1.txt2021-04-13 15:27:36.644626792 +0800</span><br><span class="line">+++ file2.txt2021-04-12 15:34:30.758408526 +0800</span><br><span class="line">@@ -1,4 +1,4 @@</span><br><span class="line">-a</span><br><span class="line"> b</span><br><span class="line"> c</span><br><span class="line"> d</span><br><span class="line">+e</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat file1.txt</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">$ patch &lt; patchfile.txt</span><br><span class="line">patching file file1.txt</span><br><span class="line">$ cat file1.txt</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br></pre></td></tr></table></figure><p>没有必要指定一个要修补的目标文件，因为<code>diff</code>文件（在统一模式中）已经在标题行中包含了文件名。</p><h2 id="tr"><a class="header-anchor" href="#tr">#</a>tr</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">$ tr --<span class="built_in">help</span></span><br><span class="line">Usage: tr [OPTION]... SET1 [SET2]</span><br><span class="line">Translate, squeeze, and/or delete characters from standard input,</span><br><span class="line">writing to standard output.</span><br><span class="line"></span><br><span class="line">  -c, -C, --complement    use the complement of SET1</span><br><span class="line">  -d, --delete            delete characters <span class="keyword">in</span> SET1, <span class="keyword">do</span> not translate</span><br><span class="line">  -s, --squeeze-repeats   replace each sequence of a repeated character</span><br><span class="line">                            that is listed <span class="keyword">in</span> the last specified SET,</span><br><span class="line">                            with a single occurrence of that character</span><br><span class="line">  -t, --truncate-set1     first truncate SET1 to length of SET2</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">SETs are specified as strings of characters.  Most represent themselves.</span><br><span class="line">Interpreted sequences are:</span><br><span class="line"></span><br><span class="line">  \NNN            character with octal value NNN (1 to 3 octal digits)</span><br><span class="line">  \\              backslash</span><br><span class="line">  \a              audible BEL</span><br><span class="line">  \b              backspace</span><br><span class="line">  \f              form feed</span><br><span class="line">  \n              new line</span><br><span class="line">  \r              <span class="built_in">return</span></span><br><span class="line">  \t              horizontal tab</span><br><span class="line">  \v              vertical tab</span><br><span class="line">  CHAR1-CHAR2     all characters from CHAR1 to CHAR2 <span class="keyword">in</span> ascending order</span><br><span class="line">  [CHAR*]         <span class="keyword">in</span> SET2, copies of CHAR until length of SET1</span><br><span class="line">  [CHAR*REPEAT]   REPEAT copies of CHAR, REPEAT octal <span class="keyword">if</span> starting with 0</span><br><span class="line">  [:alnum:]       all letters and digits</span><br><span class="line">  [:alpha:]       all letters</span><br><span class="line">  [:blank:]       all horizontal whitespace</span><br><span class="line">  [:cntrl:]       all control characters</span><br><span class="line">  [:digit:]       all digits</span><br><span class="line">  [:graph:]       all printable characters, not including space</span><br><span class="line">  [:lower:]       all lower <span class="keyword">case</span> letters</span><br><span class="line">  [:<span class="built_in">print</span>:]       all printable characters, including space</span><br><span class="line">  [:punct:]       all punctuation characters</span><br><span class="line">  [:space:]       all horizontal or vertical whitespace</span><br><span class="line">  [:upper:]       all upper <span class="keyword">case</span> letters</span><br><span class="line">  [:xdigit:]      all hexadecimal digits</span><br><span class="line">  [=CHAR=]        all characters <span class="built_in">which</span> are equivalent to CHAR</span><br><span class="line"></span><br><span class="line">Translation occurs <span class="keyword">if</span> -d is not given and both SET1 and SET2 appear.</span><br><span class="line">-t may be used only when translating.  SET2 is extended to length of</span><br><span class="line">SET1 by repeating its last character as necessary.  Excess characters</span><br><span class="line">of SET2 are ignored.  Only [:lower:] and [:upper:] are guaranteed to</span><br><span class="line">expand <span class="keyword">in</span> ascending order; used <span class="keyword">in</span> SET2 <span class="keyword">while</span> translating, they may</span><br><span class="line">only be used <span class="keyword">in</span> pairs to specify <span class="keyword">case</span> conversion.  -s uses the last</span><br><span class="line">specified SET, and occurs after translation or deletion.</span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report tr translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">Full documentation at: &lt;http://www.gnu.org/software/coreutils/tr&gt;</span><br><span class="line">or available locally via: info <span class="string">'(coreutils) tr invocation'</span></span><br></pre></td></tr></table></figure><p><code>tr</code>程序被用来更改字符，可以把它看作是一种基于字符的查找和替换操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"lowercase letters"</span> | tr a-z A-Z</span><br><span class="line">LOWERCASE LETTERS</span><br></pre></td></tr></table></figure><p><code>tr</code>命令接受两个参数：要被转换的字符集以及相对应的转换后的字符集。比如：<code>一个枚举列表</code>、<code>一个字符域</code>或者<code>POSIX 字符类</code>。</p><p>大多数情况下，两个字符集应该长度相同；然而，有可能第一个集合大于第二个，尤其如果我们想要把多个字符转换为单个字符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"lowercase letters"</span> | tr [:lower:] A</span><br><span class="line">AAAAAAAAA AAAAAAA</span><br></pre></td></tr></table></figure><p><code>tr</code>命令能允许字符从输入流中简单地被删除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tr -d <span class="string">'\r'</span> &lt; dos_file &gt; unix_file</span><br></pre></td></tr></table></figure><p><code>-s</code>选项能删除重复的字符实例（需要重复字符相邻）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"aaabbbccc"</span> | tr -s ab</span><br><span class="line">abccc</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"abcabcabc"</span> | tr -s ab</span><br><span class="line">abcabcabc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（20）</title>
      <link href="/blog/2021/04/12/the-linux-command-line-note-20/"/>
      <url>/blog/2021/04/12/the-linux-command-line-note-20/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="cat"><a class="header-anchor" href="#cat">#</a>cat</h2><p><code>Ctrl-d</code>可以告诉<code>cat</code>到达文件末尾。<br><code>-A</code>选项可以显示不可见字符，比如制表符等：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; onns.txt</span><br><span class="line">The quick brown fox jumped over the lazy dog.</span><br><span class="line"></span><br><span class="line">$  cat -A onns.txt</span><br><span class="line">^IThe quick brown fox jumped over the lazy dog.$</span><br><span class="line">^I^I$</span><br></pre></td></tr></table></figure><p><code>-n</code>选项给文本行添加行号。<br><code>-s</code>选项禁止输出多个空白行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; onns.txt</span><br><span class="line">The quick brown fox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jumped over the lazy dog.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ cat onns.txt</span><br><span class="line">The quick brown fox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jumped over the lazy dog.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ cat -ns onns.txt</span><br><span class="line">     1The quick brown fox</span><br><span class="line">     2</span><br><span class="line">     3jumped over the lazy dog.</span><br><span class="line">     4</span><br></pre></td></tr></table></figure><p>不知道为什么这个<code>cat</code>之后会在最前面<strong>增加五个空格</strong>，之前我在<code>MacOS</code>上的<code>wc</code>之类的命令也会，有机会查一下！下面是我在<code>Mac</code>上的运行结果，也是有空格：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[14:30:49] onns@Onns ~/Desktop $ cat &gt; onns.txt</span><br><span class="line">The quick brown fox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jumped over the lazy dog.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[14:31:04] onns@Onns ~/Desktop $ cat onns.txt</span><br><span class="line">The quick brown fox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jumped over the lazy dog.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[14:31:08] onns@Onns ~/Desktop $ cat -ns onns.txt</span><br><span class="line">     1The quick brown fox</span><br><span class="line">     2</span><br><span class="line">     3jumped over the lazy dog.</span><br><span class="line">     4</span><br></pre></td></tr></table></figure><h3 id="todo"><a class="header-anchor" href="#todo">#</a>TODO</h3><ul><li>查一下为什么<code>cat</code>会有多余的空格。</li></ul><h2 id="sort"><a class="header-anchor" href="#sort">#</a>sort</h2><p><code>sort</code>程序对标准输入的内容，或命令行中指定的一个或多个文件进行排序，然后把排序结果发送到标准输出。</p><p>之前已经列举过参数了，不重复了，具体可以参考：<a href="https://onns.xyz/blog/2020/08/21/ip-records-top-3/#%E5%86%8D%E6%8E%92%E5%BA%8F">ip 访问记录查询 top3</a>。</p><p>显示<code>10</code>个最大的空间消费者：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ du -s /usr/share/* | head</span><br><span class="line">112/usr/share/GConf</span><br><span class="line">6824/usr/share/GeoIP</span><br><span class="line">108/usr/share/ImageMagick-6</span><br><span class="line">28/usr/share/PackageKit</span><br><span class="line">5848/usr/share/X11</span><br><span class="line">676/usr/share/aclocal</span><br><span class="line">160/usr/share/aclocal-1.15</span><br><span class="line">8/usr/share/acpi-support</span><br><span class="line">8/usr/share/adduser</span><br><span class="line">612/usr/share/adium</span><br><span class="line">$ du -s /usr/share/* | sort -nr | head</span><br><span class="line">166684/usr/share/fonts</span><br><span class="line">122520/usr/share/sogouimebs</span><br><span class="line">81468/usr/share/doc</span><br><span class="line">68532/usr/share/icons</span><br><span class="line">44384/usr/share/man</span><br><span class="line">40920/usr/share/ibus</span><br><span class="line">38372/usr/share/locale</span><br><span class="line">37360/usr/share/backgrounds</span><br><span class="line">32064/usr/share/vim</span><br><span class="line">29984/usr/share/<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p><code>-n</code>可以按照数值排序，但是这是因为这个数字在最开头，<code>ls</code>的就不在最开始，所以需要<code>-k</code>参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l /usr/bin | head</span><br><span class="line">total 174060</span><br><span class="line">-rwxr-xr-x 1 root root          96 2月  27 23:10 2to3-2.7</span><br><span class="line">-rwxr-xr-x 1 root root       10104 4月  23  2016 411toppm</span><br><span class="line">lrwxrwxrwx 1 root root          11 9月  25  2020 GET -&gt; lwp-request</span><br><span class="line">lrwxrwxrwx 1 root root          11 9月  25  2020 HEAD -&gt; lwp-request</span><br><span class="line">lrwxrwxrwx 1 root root          11 9月  25  2020 POST -&gt; lwp-request</span><br><span class="line">lrwxrwxrwx 1 root root           4 12月  1 01:57 X -&gt; Xorg</span><br><span class="line">lrwxrwxrwx 1 root root           1 9月  25  2020 X11 -&gt; .</span><br><span class="line">-rwxr-xr-x 1 root root     2438904 12月  1 01:57 Xephyr</span><br><span class="line">-rwxr-xr-x 1 root root         274 12月  1 01:57 Xorg</span><br><span class="line">$ ls -l /usr/bin | sort -nr -k 5 | head</span><br><span class="line">-rwxr-xr-x 1 root root    19428040 2月   2 16:21 snap</span><br><span class="line">-rwxr-xr-x 1 root root     7619056 10月 30 19:45 gdb</span><br><span class="line">-rwxr-xr-x 1 root root     5893648 6月  24  2019 ubuntu-report</span><br><span class="line">-rwxr-xr-x 1 root root     4551912 1月  13  2020 gnome-control-center</span><br><span class="line">-rwxr-xr-x 2 root root     4526456 1月  26 23:33 python3.6m</span><br><span class="line">-rwxr-xr-x 2 root root     4526456 1月  26 23:33 python3.6</span><br><span class="line">-rwxr-xr-x 1 root root     3633000 2月  27 23:10 python2.7</span><br><span class="line">-rwxr-xr-x 1 root root     3111952 2月  12 16:45 x86_64-linux-gnu-ld.gold</span><br><span class="line">-rwxr-xr-x 1 root root     2886928 2月  12 16:45 x86_64-linux-gnu-dwp</span><br><span class="line">-rwxr-xr-x 1 root root     2675336 10月 13 23:49 vim.basic</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ vi distros.txt</span><br><span class="line">SUSE10.212/07/2006</span><br><span class="line">Fedora1011/25/2008</span><br><span class="line">SUSE11.006/18/2008</span><br><span class="line">Ubuntu8.0404/24/2008</span><br><span class="line">Fedora811/08/2007</span><br><span class="line">SUSE10.310/04/2007</span><br><span class="line">Ubuntu6.1010/26/2006</span><br><span class="line">Fedora705/31/2007</span><br><span class="line">Ubuntu7.1010/18/2007</span><br><span class="line">Ubuntu7.0404/19/2007</span><br><span class="line">SUSE10.105/11/2006</span><br><span class="line">Fedora610/24/2006</span><br><span class="line">Fedora905/13/2008</span><br><span class="line">Ubuntu6.0606/01/2006</span><br><span class="line">Ubuntu8.1010/30/2008</span><br><span class="line">Fedora503/20/2006</span><br><span class="line">$ sort distros.txt</span><br><span class="line">Fedora1011/25/2008</span><br><span class="line">Fedora503/20/2006</span><br><span class="line">Fedora610/24/2006</span><br><span class="line">Fedora705/31/2007</span><br><span class="line">Fedora811/08/2007</span><br><span class="line">Fedora905/13/2008</span><br><span class="line">SUSE10.105/11/2006</span><br><span class="line">SUSE10.212/07/2006</span><br><span class="line">SUSE10.310/04/2007</span><br><span class="line">SUSE11.006/18/2008</span><br><span class="line">Ubuntu6.0606/01/2006</span><br><span class="line">Ubuntu6.1010/26/2006</span><br><span class="line">Ubuntu7.0404/19/2007</span><br><span class="line">Ubuntu7.1010/18/2007</span><br><span class="line">Ubuntu8.0404/24/2008</span><br><span class="line">Ubuntu8.1010/30/2008</span><br></pre></td></tr></table></figure><p><code>sort</code>中一个关键值可能包括一个字段区域，如果没有指定区域，<code>sort</code>程序会使用一个键值，其始于指定的字段，一直扩展到行尾。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ sort -k 1,1 -k 2n distros.txt</span><br><span class="line">Fedora503/20/2006</span><br><span class="line">Fedora610/24/2006</span><br><span class="line">Fedora705/31/2007</span><br><span class="line">Fedora811/08/2007</span><br><span class="line">Fedora905/13/2008</span><br><span class="line">Fedora1011/25/2008</span><br><span class="line">SUSE10.105/11/2006</span><br><span class="line">SUSE10.212/07/2006</span><br><span class="line">SUSE10.310/04/2007</span><br><span class="line">SUSE11.006/18/2008</span><br><span class="line">Ubuntu6.0606/01/2006</span><br><span class="line">Ubuntu6.1010/26/2006</span><br><span class="line">Ubuntu7.0404/19/2007</span><br><span class="line">Ubuntu7.1010/18/2007</span><br><span class="line">Ubuntu8.0404/24/2008</span><br><span class="line">Ubuntu8.1010/30/2008</span><br></pre></td></tr></table></figure><p><code>1,1</code>的意思是<strong>排序始于并且结束于第一个字段</strong>。<br><code>2n</code>中<code>2</code>是排序的键值，并且按照数值排序（<code>n</code>）。一个选项字母可能被包含在一个键值说明符的末尾，其用来指定排序的种类，这些选项字母和<code>sort</code>程序的全局选项一样。<br><code>key</code>选项允许在字段中指定偏移量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ sort -k 3.7nbr -k 3.1nbr -k 3.4nbr distros.txt</span><br><span class="line">Fedora1011/25/2008</span><br><span class="line">Ubuntu8.1010/30/2008</span><br><span class="line">SUSE11.006/18/2008</span><br><span class="line">Fedora905/13/2008</span><br><span class="line">Ubuntu8.0404/24/2008</span><br><span class="line">Fedora811/08/2007</span><br><span class="line">Ubuntu7.1010/18/2007</span><br><span class="line">SUSE10.310/04/2007</span><br><span class="line">Fedora705/31/2007</span><br><span class="line">Ubuntu7.0404/19/2007</span><br><span class="line">SUSE10.212/07/2006</span><br><span class="line">Ubuntu6.1010/26/2006</span><br><span class="line">Fedora610/24/2006</span><br><span class="line">Ubuntu6.0606/01/2006</span><br><span class="line">SUSE10.105/11/2006</span><br><span class="line">Fedora503/20/2006</span><br></pre></td></tr></table></figure><p><code>3.7nbr</code>代表第三个字段中的第七个字符开始。</p><p><code>-t</code>指定分隔符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ sort -t <span class="string">':'</span> -k 7 /etc/passwd | head</span><br><span class="line">hs:x:1000:1000:hs,,,:/home/hs:/bin/bash</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">gdm:x:121:125:Gnome Display Manager:/var/lib/gdm3:/bin/<span class="literal">false</span></span><br><span class="line">gnome-initial-setup:x:120:65534::/run/gnome-initial-setup/:/bin/<span class="literal">false</span></span><br><span class="line">hplip:x:117:7:HPLIP system user,,,:/var/run/hplip:/bin/<span class="literal">false</span></span><br><span class="line">speech-dispatcher:x:111:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/<span class="literal">false</span></span><br><span class="line">whoopsie:x:112:117::/nonexistent:/bin/<span class="literal">false</span></span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">_apt:x:104:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">avahi-autoipd:x:106:112:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin</span><br></pre></td></tr></table></figure><h2 id="uniq"><a class="header-anchor" href="#uniq">#</a>uniq</h2><p><code>uniq</code>程序能完成任务，其输入必须是排好序的数据。</p><p>可以参考：<a href="https://onns.xyz/blog/2020/08/21/ip-records-top-3/#%E5%86%8D%E6%8E%92%E5%BA%8F">ip 访问记录查询 top3</a>。</p><h2 id="cut"><a class="header-anchor" href="#cut">#</a>cut</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$ cut --<span class="built_in">help</span></span><br><span class="line">Usage: cut OPTION... [FILE]...</span><br><span class="line">Print selected parts of lines from each FILE to standard output.</span><br><span class="line"></span><br><span class="line">With no FILE, or when FILE is -, <span class="built_in">read</span> standard input.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">  -b, --bytes=LIST        select only these bytes</span><br><span class="line">  -c, --characters=LIST   select only these characters</span><br><span class="line">  -d, --delimiter=DELIM   use DELIM instead of TAB <span class="keyword">for</span> field delimiter</span><br><span class="line">  -f, --fields=LIST       select only these fields;  also <span class="built_in">print</span> any line</span><br><span class="line">                            that contains no delimiter character, unless</span><br><span class="line">                            the -s option is specified</span><br><span class="line">  -n                      (ignored)</span><br><span class="line">      --complement        complement the <span class="built_in">set</span> of selected bytes, characters</span><br><span class="line">                            or fields</span><br><span class="line">  -s, --only-delimited    <span class="keyword">do</span> not <span class="built_in">print</span> lines not containing delimiters</span><br><span class="line">      --output-delimiter=STRING  use STRING as the output delimiter</span><br><span class="line">                            the default is to use the input delimiter</span><br><span class="line">  -z, --zero-terminated    line delimiter is NUL, not newline</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">Use one, and only one of -b, -c or -f.  Each LIST is made up of one</span><br><span class="line">range, or many ranges separated by commas.  Selected input is written</span><br><span class="line"><span class="keyword">in</span> the same order that it is <span class="built_in">read</span>, and is written exactly once.</span><br><span class="line">Each range is one of:</span><br><span class="line"></span><br><span class="line">  N     N<span class="string">'th byte, character or field, counted from 1</span></span><br><span class="line"><span class="string">  N-    from N'</span>th byte, character or field, to end of line</span><br><span class="line">  N-M   from N<span class="string">'th to M'</span>th (included) byte, character or field</span><br><span class="line">  -M    from first to M<span class="string">'th (included) byte, character or field</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GNU coreutils online help: &lt;http://www.gnu.org/software/coreutils/&gt;</span></span><br><span class="line"><span class="string">Report cut translation bugs to &lt;http://translationproject.org/team/&gt;</span></span><br><span class="line"><span class="string">Full documentation at: &lt;http://www.gnu.org/software/coreutils/cut&gt;</span></span><br><span class="line"><span class="string">or available locally via: info '</span>(coreutils) cut invocation<span class="string">'</span></span><br></pre></td></tr></table></figure><p>一个由<code>tab</code>分离的文件，每行不太可能包含相同的字符数，这就使计算每行中字符的位置变得困难或者是不可能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ cut -f 3 distros.txt</span><br><span class="line">12/07/2006</span><br><span class="line">11/25/2008</span><br><span class="line">06/18/2008</span><br><span class="line">04/24/2008</span><br><span class="line">11/08/2007</span><br><span class="line">10/04/2007</span><br><span class="line">10/26/2006</span><br><span class="line">05/31/2007</span><br><span class="line">10/18/2007</span><br><span class="line">04/19/2007</span><br><span class="line">05/11/2006</span><br><span class="line">10/24/2006</span><br><span class="line">05/13/2008</span><br><span class="line">06/01/2006</span><br><span class="line">10/30/2008</span><br><span class="line">03/20/2006</span><br><span class="line">$ cut -f 3 distros.txt | cut -c 7-10</span><br><span class="line">2006</span><br><span class="line">2008</span><br><span class="line">2008</span><br><span class="line">2008</span><br><span class="line">2007</span><br><span class="line">2007</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2007</span><br><span class="line">2007</span><br><span class="line">2006</span><br><span class="line">2006</span><br><span class="line">2008</span><br><span class="line">2006</span><br><span class="line">2008</span><br><span class="line">2006</span><br></pre></td></tr></table></figure><p><code>expand</code>命令可以把<code>tab</code>展开成空格：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ expand distros.txt | cut -c 23-</span><br><span class="line">2006</span><br><span class="line">2008</span><br><span class="line">2008</span><br><span class="line">2008</span><br><span class="line">2007</span><br><span class="line">2007</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2007</span><br><span class="line">2007</span><br><span class="line">2006</span><br><span class="line">2006</span><br><span class="line">2008</span><br><span class="line">2006</span><br><span class="line">2008</span><br><span class="line">2006</span><br></pre></td></tr></table></figure><p><code>-d</code>指定分隔符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cut -d <span class="string">':'</span> -f 1 /etc/passwd | head</span><br><span class="line">root</span><br><span class="line">daemon</span><br><span class="line">bin</span><br><span class="line">sys</span><br><span class="line">sync</span><br><span class="line">games</span><br><span class="line">man</span><br><span class="line">lp</span><br><span class="line">mail</span><br><span class="line">news</span><br></pre></td></tr></table></figure><h2 id="paste"><a class="header-anchor" href="#paste">#</a>paste</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ paste --<span class="built_in">help</span></span><br><span class="line">Usage: paste [OPTION]... [FILE]...</span><br><span class="line">Write lines consisting of the sequentially corresponding lines from</span><br><span class="line">each FILE, separated by TABs, to standard output.</span><br><span class="line"></span><br><span class="line">With no FILE, or when FILE is -, <span class="built_in">read</span> standard input.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">  -d, --delimiters=LIST   reuse characters from LIST instead of TABs</span><br><span class="line">  -s, --serial            paste one file at a time instead of <span class="keyword">in</span> parallel</span><br><span class="line">  -z, --zero-terminated    line delimiter is NUL, not newline</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report paste translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">Full documentation at: &lt;http://www.gnu.org/software/coreutils/paste&gt;</span><br><span class="line">or available locally via: info <span class="string">'(coreutils) paste invocation'</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">$ sort -k 3.7nbr -k 3.1nbr -k 3.4nbr distros.txt &gt; distros-by-date.txt</span><br><span class="line">$ cat distros-by-date.txt</span><br><span class="line">Fedora1011/25/2008</span><br><span class="line">Ubuntu8.1010/30/2008</span><br><span class="line">SUSE11.006/18/2008</span><br><span class="line">Fedora905/13/2008</span><br><span class="line">Ubuntu8.0404/24/2008</span><br><span class="line">Fedora811/08/2007</span><br><span class="line">Ubuntu7.1010/18/2007</span><br><span class="line">SUSE10.310/04/2007</span><br><span class="line">Fedora705/31/2007</span><br><span class="line">Ubuntu7.0404/19/2007</span><br><span class="line">SUSE10.212/07/2006</span><br><span class="line">Ubuntu6.1010/26/2006</span><br><span class="line">Fedora610/24/2006</span><br><span class="line">Ubuntu6.0606/01/2006</span><br><span class="line">SUSE10.105/11/2006</span><br><span class="line">Fedora503/20/2006</span><br><span class="line">$ cut -f 1,2 distros-by-date.txt &gt; distros-versions.txt</span><br><span class="line">$ cat distros-versions.txt</span><br><span class="line">Fedora10</span><br><span class="line">Ubuntu8.10</span><br><span class="line">SUSE11.0</span><br><span class="line">Fedora9</span><br><span class="line">Ubuntu8.04</span><br><span class="line">Fedora8</span><br><span class="line">Ubuntu7.10</span><br><span class="line">SUSE10.3</span><br><span class="line">Fedora7</span><br><span class="line">Ubuntu7.04</span><br><span class="line">SUSE10.2</span><br><span class="line">Ubuntu6.10</span><br><span class="line">Fedora6</span><br><span class="line">Ubuntu6.06</span><br><span class="line">SUSE10.1</span><br><span class="line">Fedora5</span><br><span class="line">$ cut -f 3 distros-by-date.txt &gt; distros-dates.txt</span><br><span class="line">$ cat distros-dates.txt</span><br><span class="line">11/25/2008</span><br><span class="line">10/30/2008</span><br><span class="line">06/18/2008</span><br><span class="line">05/13/2008</span><br><span class="line">04/24/2008</span><br><span class="line">11/08/2007</span><br><span class="line">10/18/2007</span><br><span class="line">10/04/2007</span><br><span class="line">05/31/2007</span><br><span class="line">04/19/2007</span><br><span class="line">12/07/2006</span><br><span class="line">10/26/2006</span><br><span class="line">10/24/2006</span><br><span class="line">06/01/2006</span><br><span class="line">05/11/2006</span><br><span class="line">03/20/2006</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ paste distros-dates.txt distros-versions.txt</span><br><span class="line">11/25/2008Fedora10</span><br><span class="line">10/30/2008Ubuntu8.10</span><br><span class="line">06/18/2008SUSE11.0</span><br><span class="line">05/13/2008Fedora9</span><br><span class="line">04/24/2008Ubuntu8.04</span><br><span class="line">11/08/2007Fedora8</span><br><span class="line">10/18/2007Ubuntu7.10</span><br><span class="line">10/04/2007SUSE10.3</span><br><span class="line">05/31/2007Fedora7</span><br><span class="line">04/19/2007Ubuntu7.04</span><br><span class="line">12/07/2006SUSE10.2</span><br><span class="line">10/26/2006Ubuntu6.10</span><br><span class="line">10/24/2006Fedora6</span><br><span class="line">06/01/2006Ubuntu6.06</span><br><span class="line">05/11/2006SUSE10.1</span><br><span class="line">03/20/2006Fedora5</span><br></pre></td></tr></table></figure><h2 id="join"><a class="header-anchor" href="#join">#</a>join</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">$ join --<span class="built_in">help</span></span><br><span class="line">Usage: join [OPTION]... FILE1 FILE2</span><br><span class="line">For each pair of input lines with identical join fields, write a line to</span><br><span class="line">standard output.  The default join field is the first, delimited by blanks.</span><br><span class="line"></span><br><span class="line">When FILE1 or FILE2 (not both) is -, <span class="built_in">read</span> standard input.</span><br><span class="line"></span><br><span class="line">  -a FILENUM        also <span class="built_in">print</span> unpairable lines from file FILENUM, <span class="built_in">where</span></span><br><span class="line">                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2</span><br><span class="line">  -e EMPTY          replace missing input fields with EMPTY</span><br><span class="line">  -i, --ignore-case  ignore differences <span class="keyword">in</span> <span class="keyword">case</span> when comparing fields</span><br><span class="line">  -j FIELD          equivalent to <span class="string">'-1 FIELD -2 FIELD'</span></span><br><span class="line">  -o FORMAT         obey FORMAT <span class="keyword">while</span> constructing output line</span><br><span class="line">  -t CHAR           use CHAR as input and output field separator</span><br><span class="line">  -v FILENUM        like -a FILENUM, but suppress joined output lines</span><br><span class="line">  -1 FIELD          join on this FIELD of file 1</span><br><span class="line">  -2 FIELD          join on this FIELD of file 2</span><br><span class="line">  --check-order     check that the input is correctly sorted, even</span><br><span class="line">                      <span class="keyword">if</span> all input lines are pairable</span><br><span class="line">  --nocheck-order   <span class="keyword">do</span> not check that the input is correctly sorted</span><br><span class="line">  --header          treat the first line <span class="keyword">in</span> each file as field headers,</span><br><span class="line">                      <span class="built_in">print</span> them without trying to pair them</span><br><span class="line">  -z, --zero-terminated     line delimiter is NUL, not newline</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">Unless -t CHAR is given, leading blanks separate fields and are ignored,</span><br><span class="line"><span class="keyword">else</span> fields are separated by CHAR.  Any FIELD is a field number counted</span><br><span class="line">from 1.  FORMAT is one or more comma or blank separated specifications,</span><br><span class="line">each being <span class="string">'FILENUM.FIELD'</span> or <span class="string">'0'</span>.  Default FORMAT outputs the join field,</span><br><span class="line">the remaining fields from FILE1, the remaining fields from FILE2, all</span><br><span class="line">separated by CHAR.  If FORMAT is the keyword <span class="string">'auto'</span>, <span class="keyword">then</span> the first</span><br><span class="line">line of each file determines the number of fields output <span class="keyword">for</span> each line.</span><br><span class="line"></span><br><span class="line">Important: FILE1 and FILE2 must be sorted on the join fields.</span><br><span class="line">E.g., use <span class="string">"sort -k 1b,1"</span> <span class="keyword">if</span> <span class="string">'join'</span> has no options,</span><br><span class="line">or use <span class="string">"join -t ''"</span> <span class="keyword">if</span> <span class="string">'sort'</span> has no options.</span><br><span class="line">Note, comparisons honor the rules specified by <span class="string">'LC_COLLATE'</span>.</span><br><span class="line">If the input is not sorted and some lines cannot be joined, a</span><br><span class="line">warning message will be given.</span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report join translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">Full documentation at: &lt;http://www.gnu.org/software/coreutils/join&gt;</span><br><span class="line">or available locally via: info <span class="string">'(coreutils) join invocation'</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$ cut -f 1,1 distros-by-date.txt &gt; distros-names.txt</span><br><span class="line">$ paste distros-dates.txt distros-names.txt &gt; distros-key-names.txt</span><br><span class="line">$ cat distros-key-names.txt</span><br><span class="line">11/25/2008Fedora</span><br><span class="line">10/30/2008Ubuntu</span><br><span class="line">06/18/2008SUSE</span><br><span class="line">05/13/2008Fedora</span><br><span class="line">04/24/2008Ubuntu</span><br><span class="line">11/08/2007Fedora</span><br><span class="line">10/18/2007Ubuntu</span><br><span class="line">10/04/2007SUSE</span><br><span class="line">05/31/2007Fedora</span><br><span class="line">04/19/2007Ubuntu</span><br><span class="line">12/07/2006SUSE</span><br><span class="line">10/26/2006Ubuntu</span><br><span class="line">10/24/2006Fedora</span><br><span class="line">06/01/2006Ubuntu</span><br><span class="line">05/11/2006SUSE</span><br><span class="line">03/20/2006Fedora</span><br><span class="line">$ cut -f 2,2 distros-by-date.txt &gt; distros-vernums.txt</span><br><span class="line">$ paste distros-dates.txt distros-vernums.txt &gt; distros-key-vernums.txt</span><br><span class="line">$ cat distros-key-vernums.txt</span><br><span class="line">11/25/200810</span><br><span class="line">10/30/20088.10</span><br><span class="line">06/18/200811.0</span><br><span class="line">05/13/20089</span><br><span class="line">04/24/20088.04</span><br><span class="line">11/08/20078</span><br><span class="line">10/18/20077.10</span><br><span class="line">10/04/200710.3</span><br><span class="line">05/31/20077</span><br><span class="line">04/19/20077.04</span><br><span class="line">12/07/200610.2</span><br><span class="line">10/26/20066.10</span><br><span class="line">10/24/20066</span><br><span class="line">06/01/20066.06</span><br><span class="line">05/11/200610.1</span><br><span class="line">03/20/20065</span><br></pre></td></tr></table></figure><p>为了使<code>join</code>命令能正常工作，所有文件必须按照关键数据域排序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ join distros-key-names.txt distros-key-vernums.txt</span><br><span class="line">11/25/2008 Fedora 10</span><br><span class="line">10/30/2008 Ubuntu 8.10</span><br><span class="line">06/18/2008 SUSE 11.0</span><br><span class="line">05/13/2008 Fedora 9</span><br><span class="line">04/24/2008 Ubuntu 8.04</span><br><span class="line">11/08/2007 Fedora 8</span><br><span class="line">10/18/2007 Ubuntu 7.10</span><br><span class="line">10/04/2007 SUSE 10.3</span><br><span class="line">05/31/2007 Fedora 7</span><br><span class="line">04/19/2007 Ubuntu 7.04</span><br><span class="line">12/07/2006 SUSE 10.2</span><br><span class="line">10/26/2006 Ubuntu 6.10</span><br><span class="line">10/24/2006 Fedora 6</span><br><span class="line">06/01/2006 Ubuntu 6.06</span><br><span class="line">05/11/2006 SUSE 10.1</span><br><span class="line">03/20/2006 Fedora 5</span><br></pre></td></tr></table></figure><p>默认情况下，<code>join</code>命令使用空白字符做为输入字段的界定符，一个空格作为输出字段的界定符。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><h2 id="comm"><a class="header-anchor" href="#comm">#</a>comm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ comm --<span class="built_in">help</span></span><br><span class="line">Usage: comm [OPTION]... FILE1 FILE2</span><br><span class="line">Compare sorted files FILE1 and FILE2 line by line.</span><br><span class="line"></span><br><span class="line">When FILE1 or FILE2 (not both) is -, <span class="built_in">read</span> standard input.</span><br><span class="line"></span><br><span class="line">With no options, produce three-column output.  Column one contains</span><br><span class="line">lines unique to FILE1, column two contains lines unique to FILE2,</span><br><span class="line">and column three contains lines common to both files.</span><br><span class="line"></span><br><span class="line">  -1              suppress column 1 (lines unique to FILE1)</span><br><span class="line">  -2              suppress column 2 (lines unique to FILE2)</span><br><span class="line">  -3              suppress column 3 (lines that appear <span class="keyword">in</span> both files)</span><br><span class="line"></span><br><span class="line">  --check-order     check that the input is correctly sorted, even</span><br><span class="line">                      <span class="keyword">if</span> all input lines are pairable</span><br><span class="line">  --nocheck-order   <span class="keyword">do</span> not check that the input is correctly sorted</span><br><span class="line">  --output-delimiter=STR  separate columns with STR</span><br><span class="line">  --total           output a summary</span><br><span class="line">  -z, --zero-terminated    line delimiter is NUL, not newline</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">Note, comparisons honor the rules specified by <span class="string">'LC_COLLATE'</span>.</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  comm -12 file1 file2  Print only lines present <span class="keyword">in</span> both file1 and file2.</span><br><span class="line">  comm -3 file1 file2  Print lines <span class="keyword">in</span> file1 not <span class="keyword">in</span> file2, and vice versa.</span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report comm translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">Full documentation at: &lt;http://www.gnu.org/software/coreutils/comm&gt;</span><br><span class="line">or available locally via: info <span class="string">'(coreutils) comm invocation'</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ vi file1.txt</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">$ vi file2.txt</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ comm file1.txt file2.txt</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br></pre></td></tr></table></figure><p>第一列包含第一个文件独有的文本行；第二列文本行是第二列独有的；第三列包含两个文件共有的文本行。</p><p><code>comm</code>支持<code>-n</code>形式的选项，这里<code>n</code>代表<code>1</code>、<code>2</code>或<code>3</code>。这些选项使用的时候，指定了要隐藏的列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ comm -12 file1.txt file2.txt</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br></pre></td></tr></table></figure><p>今天先到这里。</p><p>292/505</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>感觉和<code>MySQL</code>的<code>join</code>一样的，也不知道是谁学谁😂。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（6）</title>
      <link href="/blog/2021/04/11/the-go-programming-language-note-6/"/>
      <url>/blog/2021/04/11/the-go-programming-language-note-6/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="基础数据类型"><a class="header-anchor" href="#基础数据类型">#</a>基础数据类型</h1><p><code>Go</code>语言将数据类型分为四类：<strong>基础类型</strong>、<strong>复合类型</strong>、<strong>引用类型</strong>和<strong>接口类型</strong>。</p><h2 id="整型"><a class="header-anchor" href="#整型">#</a>整型</h2><p>有<code>int8</code>、<code>int16</code>、<code>int32</code>和<code>int64</code>四种不同大小的有符号整数类型，分别对应<code>8</code>、<code>16</code>、<code>32</code>、<code>64</code>bit 大小的有符号整数，与此对应的是<code>uint8</code>、<code>uint16</code>、<code>uint32</code>和<code>uint64</code>四种无符号整数类型。</p><p>还有两种一般对应特定 CPU 平台机器字大小的有符号和无符号整数<code>int</code>和<code>uint</code>。其中<code>int</code>是应用最广泛的数值类型。这两种类型都有同样的大小，<code>32</code>或<code>64</code>bit，但是我们不能对此做任何的假设，因为<strong>不同的编译器即使在相同的硬件平台上可能产生不同的大小</strong>。</p><p>Unicode 字符<code>rune</code>类型是和<code>int32</code>等价的类型，通常用于表示一个 Unicode 码点。这两个名称可以互换使用。同样<code>byte</code>也是<code>uint8</code>类型的等价类型，<code>byte</code>类型一般用于强调数值是一个原始的数据而不是一个小的整数。</p><p>还有一种无符号的整数类型<code>uintptr</code>，没有指定具体的 bit 大小但是足以容纳指针。<code>uintptr</code>类型只有在底层编程时才需要，特别是<code>Go</code>语言和<code>C</code>语言函数库或操作系统接口相交互的地 方。</p><p>二元运算符及优先级：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*/%&lt;&lt;&gt;&gt;&amp;&amp;^</span><br><span class="line">+-|^</span><br><span class="line">==!=&lt;&lt;=&gt;&gt;=</span><br><span class="line">&amp;&amp;</span><br><span class="line">||</span><br></pre></td></tr></table></figure><p>二元运算符有五种优先级。在同一个优先级，使用左优先结合规则，但是使用括号可以明确优先顺序，使用括号也可以用于提升优先级。</p><p>在<code>Go</code>语言中，<code>%</code>取模运算符的符号和被取模数的符号总是一致的，因此<code>-5%3</code>和<code>-5%-3</code>结果都是<code>-2</code>。</p><p>整数除法会向着<code>0</code>方向截断余数。</p><p><code>布尔型</code>、<code>数字类型</code>和<code>字符串</code>等基本类型都是可比较的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&amp;位运算 AND</span><br><span class="line">|位运算 OR</span><br><span class="line">^位运算 XOR</span><br><span class="line">&amp;^位清空 (AND NOT)</span><br><span class="line">&lt;&lt;左移</span><br><span class="line">&gt;&gt;右移</span><br></pre></td></tr></table></figure><p>前面四个操作运算符并不区分是有符号还是无符号数。</p><p>位操作运算符<code>&amp;^</code>用于按位置零：如果对应<code>y</code>中<code>bit</code>位为<code>1</code>的话，表达式<code>z = x &amp;^ y</code>结果<code>z</code>的对应的<code>bit</code>位为<code>0</code>，否则<code>z</code>对应的<code>bit</code>位等于<code>x</code>相应的<code>bit</code>位的值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x <span class="keyword">uint8</span> = <span class="number">1</span>&lt;&lt;<span class="number">1</span> | <span class="number">1</span>&lt;&lt;<span class="number">5</span></span><br><span class="line"><span class="keyword">var</span> y <span class="keyword">uint8</span> = <span class="number">1</span>&lt;&lt;<span class="number">1</span> | <span class="number">1</span>&lt;&lt;<span class="number">2</span></span><br><span class="line"><span class="keyword">var</span> z <span class="keyword">int8</span> = <span class="number">1</span>&lt;&lt;<span class="number">1</span> | <span class="number">1</span>&lt;&lt;<span class="number">5</span></span><br><span class="line"></span><br><span class="line">fmt.Println(x, y, z)</span><br><span class="line">fmt.Printf(<span class="string">"%08b\n"</span>, x)</span><br><span class="line">fmt.Printf(<span class="string">"%08b\n"</span>, y)</span><br><span class="line">fmt.Printf(<span class="string">"%08b\n"</span>, z)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"%08b\n"</span>, x&amp;y)</span><br><span class="line">fmt.Printf(<span class="string">"%08b\n"</span>, x|y)</span><br><span class="line">fmt.Printf(<span class="string">"%08b\n"</span>, x^y)</span><br><span class="line">fmt.Printf(<span class="string">"%08b\n"</span>, x&amp;^y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">uint</span>(<span class="number">0</span>); i &lt; <span class="number">8</span>; i++ &#123;</span><br><span class="line"><span class="keyword">if</span> x&amp;(<span class="number">1</span>&lt;&lt;i) != <span class="number">0</span> &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"%08b\n"</span>, x&lt;&lt;<span class="number">1</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%08b\n"</span>, x&gt;&gt;<span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">34 6 34</span><br><span class="line">00100010</span><br><span class="line">00000110</span><br><span class="line">00100010</span><br><span class="line">00000010</span><br><span class="line">00100110</span><br><span class="line">00100100</span><br><span class="line">00100000</span><br><span class="line">1</span><br><span class="line">5</span><br><span class="line">01000100</span><br><span class="line">00010001</span><br></pre></td></tr></table></figure><p>左移运算用零填充右边空缺的 bit 位，无符号数的右移运算也是用 0 填充左边空缺的 bit 位，但是有符号数的右移运算会用符号位的值填充左边空缺的 bit 位。</p><p>浮点数到整数的转换将丢失任何小数部分，然后向<strong>数轴零方向</strong>截断。</p><p>通常<code>Printf</code>格式化字符串包含多个<code>%</code>参数时将会包含对应相同数量的额外操作数，但是<code>%</code>之后的<code>[1]</code>副词告诉<code>Printf</code>函数再次使用第一个操作数。<code>%</code>后<br>的<code>#</code>副词告诉<code>Printf</code>在用<code>%o</code>、<code>%x</code>或<code>%X</code>输出时生成<code>0</code>、<code>0x</code>或<code>0X</code>前缀。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">o := <span class="number">0666</span></span><br><span class="line">fmt.Printf(<span class="string">"%d %[1]o %#[1]o\n"</span>, o)</span><br><span class="line">x := <span class="keyword">int64</span>(<span class="number">0xdeadbeef</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%d %[1]x %#[1]x %#[1]X\n"</span>, x)</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">438 666 0666</span><br><span class="line">3735928559 deadbeef 0xdeadbeef 0XDEADBEEF</span><br></pre></td></tr></table></figure><p>字符使用<code>%c</code>参数打印，或者是用<code>%q</code>参数打印带单引号的字符：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ascii := <span class="string">'a'</span></span><br><span class="line">unicode := <span class="string">'国'</span></span><br><span class="line">newline := <span class="string">'\n'</span></span><br><span class="line">fmt.Printf(<span class="string">"%d %[1]c %[1]q\n"</span>, ascii)   <span class="comment">// "97 a 'a'"</span></span><br><span class="line">fmt.Printf(<span class="string">"%d %[1]c %[1]q\n"</span>, unicode) <span class="comment">// "22269 国 '国'"</span></span><br><span class="line">fmt.Printf(<span class="string">"%d %[1]q\n"</span>, newline)       <span class="comment">// "10 '\n'"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">97 a <span class="string">'a'</span></span><br><span class="line">22269 国 <span class="string">'国'</span></span><br><span class="line">10 <span class="string">'\n'</span></span><br></pre></td></tr></table></figure><h2 id="浮点数"><a class="header-anchor" href="#浮点数">#</a>浮点数</h2><p>一个<code>float32</code>类型的浮点数可以提供大约<code>6</code>个十进制数的精度，而<code>float64</code>则可以提供约<code>15</code>个十进制数的精度。</p><p>小数点前面或后面的数字都可能被省略，例如<code>.707</code>或<code>1.</code>。很小或很大的数最好用科学计数法书写，通过<code>e</code>或<code>E</code>来指定指数部分：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Avogadro = <span class="number">6.02214129e23</span><span class="comment">// 阿伏伽德罗常数</span></span><br><span class="line"><span class="keyword">const</span> Planck = <span class="number">6.62606957e-34</span><span class="comment">// 普朗克常数</span></span><br></pre></td></tr></table></figure><p>用<code>Printf</code>函数的<code>%g</code>参数打印浮点数，将采用更紧凑的表示形式打印，并提供足够的精度，但是对应表格的数据，使用<code>%e</code>（带指数）或<code>%f</code>的形式打印可能更合适。所有的这三个打印形式都可以指定打印的宽度和控制打印精度。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> x := <span class="number">0</span>; x &lt; <span class="number">8</span>; x++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">"x = %d e^x = %8.3f %8.3[2]e\n"</span>, x, math.Exp(<span class="keyword">float64</span>(x)))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印精度是小数点后三个小数精度和<code>8</code>个字符宽度：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = 0 e^x =    1.000 1.000e+00</span><br><span class="line">x = 1 e^x =    2.718 2.718e+00</span><br><span class="line">x = 2 e^x =    7.389 7.389e+00</span><br><span class="line">x = 3 e^x =   20.086 2.009e+01</span><br><span class="line">x = 4 e^x =   54.598 5.460e+01</span><br><span class="line">x = 5 e^x =  148.413 1.484e+02</span><br><span class="line">x = 6 e^x =  403.429 4.034e+02</span><br><span class="line">x = 7 e^x = 1096.633 1.097e+03</span><br></pre></td></tr></table></figure><p><code>正无穷大</code>：表示太大溢出的数字。<br><code>负无穷大</code>：表示除零的结果。<br><code>NAN</code>：非数，一般用于表示无效的除法操作结果<code>0/0</code>或<code>Sqrt(-1)</code>。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> z <span class="keyword">float64</span></span><br><span class="line">fmt.Println(z, -z, <span class="number">1</span>/z, <span class="number">-1</span>/z, z/z)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 -0 +Inf -Inf NaN</span><br></pre></td></tr></table></figure><p>函数<code>math.IsNaN</code>用于测试一个数是否是非数<code>NaN</code>。</p><p>测试一个结果是否是非数<code>NaN</code>则是充满风险的，因为<code>NaN</code>和任何数都是不相等的。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>如果一个函数返回的浮点数结果可能失败，最好的做法是用单独的标志报告失败，像这样：<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">compute</span><span class="params">()</span> <span class="params">(value <span class="keyword">float64</span>, ok <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">if</span> failed &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>, <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> result, <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Copyright © 2016 Alan A. A. Donovan &amp; Brian W. Kernighan.</span></span><br><span class="line"><span class="comment">// License: https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// See page 58.</span></span><br><span class="line"><span class="comment">//!+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Surface computes an SVG rendering of a 3-D surface function.</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">width, height = <span class="number">600</span>, <span class="number">320</span>            <span class="comment">// canvas size in pixels</span></span><br><span class="line">cells         = <span class="number">100</span>                 <span class="comment">// number of grid cells</span></span><br><span class="line">xyrange       = <span class="number">30.0</span>                <span class="comment">// axis ranges (-xyrange..+xyrange)</span></span><br><span class="line">xyscale       = width / <span class="number">2</span> / xyrange <span class="comment">// pixels per x or y unit</span></span><br><span class="line">zscale        = height * <span class="number">0.4</span>        <span class="comment">// pixels per z unit</span></span><br><span class="line">angle         = math.Pi / <span class="number">6</span>         <span class="comment">// angle of x, y axes (=30°)</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sin30, cos30 = math.Sin(angle), math.Cos(angle) <span class="comment">// sin(30°), cos(30°)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"&lt;svg xmlns='http://www.w3.org/2000/svg' "</span>+</span><br><span class="line"><span class="string">"style='stroke: grey; fill: white; stroke-width: 0.7' "</span>+</span><br><span class="line"><span class="string">"width='%d' height='%d'&gt;"</span>, width, height)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; cells; i++ &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; cells; j++ &#123;</span><br><span class="line">ax, ay := corner(i+<span class="number">1</span>, j)</span><br><span class="line">bx, by := corner(i, j)</span><br><span class="line">cx, cy := corner(i, j+<span class="number">1</span>)</span><br><span class="line">dx, dy := corner(i+<span class="number">1</span>, j+<span class="number">1</span>)</span><br><span class="line">fmt.Printf(<span class="string">"&lt;polygon points='%g,%g %g,%g %g,%g %g,%g'/&gt;\n"</span>,</span><br><span class="line">ax, ay, bx, by, cx, cy, dx, dy)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"&lt;/svg&gt;"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">corner</span><span class="params">(i, j <span class="keyword">int</span>)</span> <span class="params">(<span class="keyword">float64</span>, <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">// Find point (x,y) at corner of cell (i,j).</span></span><br><span class="line">x := xyrange * (<span class="keyword">float64</span>(i)/cells - <span class="number">0.5</span>)</span><br><span class="line">y := xyrange * (<span class="keyword">float64</span>(j)/cells - <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Compute surface height z.</span></span><br><span class="line">z := f(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Project (x,y,z) isometrically onto 2-D SVG canvas (sx,sy).</span></span><br><span class="line">sx := width/<span class="number">2</span> + (x-y)*cos30*xyscale</span><br><span class="line">sy := height/<span class="number">2</span> + (x+y)*sin30*xyscale - z*zscale</span><br><span class="line"><span class="keyword">return</span> sx, sy</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(x, y <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">r := math.Hypot(x, y) <span class="comment">// distance from (0,0)</span></span><br><span class="line"><span class="keyword">return</span> math.Sin(r) / r</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//!-</span></span><br></pre></td></tr></table></figure><center><p><img src="//onns.xyz/blog/image/20210411-3.6.svg" alt="渲染结果图"></p></center><p>94/483</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>在浮点数中，<code>NaN</code>、正无穷大和负无穷大都不是唯一 的，每个都有非常多种的<code>bit</code>模式表示。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>似懂非懂，有机会再补这个的例子吧！ <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（19）</title>
      <link href="/blog/2021/04/11/the-linux-command-line-note-19/"/>
      <url>/blog/2021/04/11/the-linux-command-line-note-19/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="grep"><a class="header-anchor" href="#grep">#</a>grep</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [options] regex [file...]</span><br></pre></td></tr></table></figure><p>选项列表：</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>-i</code></td><td style="text-align:left">忽略大小写，不会区分大小写字符。也可用<code>--ignore-case</code>来指定。</td></tr><tr><td style="text-align:left"><code>-v</code></td><td style="text-align:left">不匹配。通常，<code>grep</code>程序会打印包含匹配项的文本行。这个选项导致<code>grep</code>程序只会打印不包含匹配项的文本行。也可用<code>--invert-match</code>来指定。</td></tr><tr><td style="text-align:left"><code>-c</code></td><td style="text-align:left">打印匹配的数量（或者是不匹配的数目，若指定了<code>-v</code>选项），而不是文本行本身。也可用<code>--count</code>选项来指定。</td></tr><tr><td style="text-align:left"><code>-l</code></td><td style="text-align:left">打印包含匹配项的文件名，而不是文本行本身，也可用<code>--files-with-matches</code>选项来指定。</td></tr><tr><td style="text-align:left"><code>-L</code></td><td style="text-align:left">相似于<code>-l</code>选项，但是只是打印不包含匹配项的文件名。也可用<code>--files-without-match</code>来指定。</td></tr><tr><td style="text-align:left"><code>-n</code></td><td style="text-align:left">在每个匹配行之前打印出其位于文件中的相应行号。也可用<code>--line-number</code>选项来指定。</td></tr><tr><td style="text-align:left"><code>-h</code></td><td style="text-align:left">应用于多文件搜索，不输出文件名。也可用<code>--no-filename</code>选项来指定。</td></tr></tbody></table><h3 id="测试"><a class="header-anchor" href="#测试">#</a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ls /bin &gt; dirlist-bin.txt</span><br><span class="line">$ ls /usr/bin &gt; dirlist-usr-bin.txt</span><br><span class="line">$ ls /sbin &gt; dirlist-sbin.txt</span><br><span class="line">$ ls /usr/sbin &gt; dirlist-usr-sbin.txt</span><br><span class="line">$ ls dirlist*.txt</span><br><span class="line">dirlist-bin.txt  dirlist-sbin.txt  dirlist-usr-bin.txt  dirlist-usr-sbin.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索 bzip</span></span><br><span class="line">$ grep bzip dirlist*.txt</span><br><span class="line">dirlist-bin.txt:bzip2</span><br><span class="line">dirlist-bin.txt:bzip2recover</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索 bzip 对应的文件</span></span><br><span class="line">$ grep -l bzip dirlist*.txt</span><br><span class="line">dirlist-bin.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索不包含 bzip 的文件</span></span><br><span class="line">$ grep -L bzip dirlist*.txt</span><br><span class="line">dirlist-sbin.txt</span><br><span class="line">dirlist-usr-bin.txt</span><br><span class="line">dirlist-usr-sbin.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 圆点 . 匹配任意字符</span></span><br><span class="line">$ grep -h <span class="string">'.zip'</span> dirlist*.txt</span><br><span class="line">bunzip2</span><br><span class="line">bzip2</span><br><span class="line">bzip2recover</span><br><span class="line">gunzip</span><br><span class="line">gzip</span><br><span class="line">funzip</span><br><span class="line">gpg-zip</span><br><span class="line">mzip</span><br><span class="line">preunzip</span><br><span class="line">prezip</span><br><span class="line">prezip-bin</span><br><span class="line">unzip</span><br><span class="line">unzipsfx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入符合 ^ 锚点开头</span></span><br><span class="line">$ grep -h <span class="string">'^zip'</span> dirlist*.txt</span><br><span class="line">zip</span><br><span class="line">zipcloak</span><br><span class="line">zipdetails</span><br><span class="line">zipgrep</span><br><span class="line">zipinfo</span><br><span class="line">zipnote</span><br><span class="line">zipsplit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 美元符合 $ 锚点结尾</span></span><br><span class="line">$ grep -h <span class="string">'zip$'</span> dirlist*.txt</span><br><span class="line">gunzip</span><br><span class="line">gzip</span><br><span class="line">funzip</span><br><span class="line">gpg-zip</span><br><span class="line">mzip</span><br><span class="line">preunzip</span><br><span class="line">prezip</span><br><span class="line">unzip</span><br><span class="line">zip</span><br><span class="line"></span><br><span class="line">$ grep -h <span class="string">'^zip$'</span> dirlist*.txt</span><br><span class="line">zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三个字母是j 第五个字母是r 一共五个字母</span></span><br><span class="line">grep -i <span class="string">'^..j.r$'</span> /usr/share/dict/words</span><br><span class="line">Major</span><br><span class="line">major</span><br></pre></td></tr></table></figure><p><code>/usr/share/dict/</code>目录下有个英文字典。</p><p>中括号表达式中使用元字符，插入字符<code>^</code>被用来表示否定，连字符字符<code>-</code>被用来表示一个字符范围。</p><p>一个否定的字符集仍然在给定位置要求一个字符，但是这个字符必须不是否定字符集的成员。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ grep -h <span class="string">'.zip'</span> dirlist*.txt | wc -l</span><br><span class="line">13</span><br><span class="line">$ grep -h <span class="string">'[bg]zip'</span> dirlist*.txt | wc -l</span><br><span class="line">3</span><br><span class="line">$ grep -h <span class="string">'[^bg]zip'</span> dirlist*.txt | wc -l</span><br><span class="line">10</span><br><span class="line">$ grep -h <span class="string">'[^bg]zip'</span> dirlist*.txt</span><br><span class="line">bunzip2</span><br><span class="line">gunzip</span><br><span class="line">funzip</span><br><span class="line">gpg-zip</span><br><span class="line">mzip</span><br><span class="line">preunzip</span><br><span class="line">prezip</span><br><span class="line">prezip-bin</span><br><span class="line">unzip</span><br><span class="line">unzipsfx</span><br><span class="line"><span class="comment"># 可以看到 zip 这个文件没在里面，因为前面要有一个字符，但这个字符不能是 b 或 g</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$ grep -h <span class="string">'^[ABCDEFGHIJKLMNOPQRSTUVWXZY]'</span> dirlist*.txt</span><br><span class="line">GET</span><br><span class="line">HEAD</span><br><span class="line">POST</span><br><span class="line">X</span><br><span class="line">X11</span><br><span class="line">Xephyr</span><br><span class="line">Xorg</span><br><span class="line">Xwayland</span><br><span class="line">ModemManager</span><br><span class="line">NetworkManager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等价于👇</span></span><br><span class="line">$ grep -h <span class="string">'^[A-Z]'</span> dirlist*.txt</span><br><span class="line">GET</span><br><span class="line">HEAD</span><br><span class="line">POST</span><br><span class="line">X</span><br><span class="line">X11</span><br><span class="line">Xephyr</span><br><span class="line">Xorg</span><br><span class="line">Xwayland</span><br><span class="line">ModemManager</span><br><span class="line">NetworkManager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以匹配多个范围</span></span><br><span class="line">$ grep -h <span class="string">'^[A-Za-z0-9]'</span> dirlist*.txt | wc -l</span><br><span class="line">2344</span><br></pre></td></tr></table></figure><p>如果正则表达式中需要包含连字符<code>-</code>，让它成为表达式的第一个字符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会匹配包含一个连字符“-”，或一个大写字母“A”，或一个大写字母“Z”的文件名。</span></span><br><span class="line">grep -h <span class="string">'[-AZ]'</span> dirlist*.txt</span><br></pre></td></tr></table></figure><p><code>POSIX</code>把正则表达式的实现分成了两类：<code>基本正则表达式</code>（BRE）和<code>扩展的正则表达式</code>（ERE）。</p><p><code>BRE</code>的元素集合：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^ $ . [ ] *</span><br></pre></td></tr></table></figure><p><code>ERE</code>额外添加的元字符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">( ) &#123; &#125; ? + |</span><br></pre></td></tr></table></figure><p><code>|</code>代表交替：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"AAA"</span> | grep -E <span class="string">'AAA|BBB'</span></span><br><span class="line">AAA</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"BBB"</span> | grep -E <span class="string">'AAA|BBB'</span></span><br><span class="line">BBB</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"CCC"</span> | grep -E <span class="string">'AAA|BBB'</span></span><br></pre></td></tr></table></figure><p><code>?</code>匹配零个或一个元素，表示前面的字符可有可无：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"(555) 123-4567"</span> | grep -E <span class="string">'^\(?[0-9][0-9][0-9]\)? [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$'</span></span><br><span class="line">(555) 123-4567</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"555 123-4567"</span> | grep -E <span class="string">'^\(?[0-9][0-9][0-9]\)? [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$'</span></span><br><span class="line">555 123-4567</span><br></pre></td></tr></table></figure><p><code>*</code>匹配零个或多个元素。<br><code>+</code>匹配一个或多个元素。<br><code>{}</code>匹配特定个数的元素：</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>n</code></td><td style="text-align:left">匹配前面的元素，如果它确切地出现了<code>n</code>次</td></tr><tr><td style="text-align:left"><code>n,m</code></td><td style="text-align:left">匹配前面的元素，如果它至少出现了<code>n</code>次，但是不多于<code>m</code>次</td></tr><tr><td style="text-align:left"><code>n,</code></td><td style="text-align:left">匹配前面的元素，如果它出现了<code>n</code>次或多于<code>n</code>次</td></tr><tr><td style="text-align:left"><code>,m</code></td><td style="text-align:left">匹配前面的元素，如果它出现的次数不多于<code>m</code>次</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"(555) 123-4567"</span> | grep -E <span class="string">'^\(?[0-9]&#123;3&#125;\)? [0-9]&#123;3&#125;-[0-9]&#123;4&#125;$'</span></span><br><span class="line">(555) 123-4567</span><br></pre></td></tr></table></figure><p>生成电话号码文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..10&#125;; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="string">"(<span class="variable">$&#123;RANDOM:0:3&#125;</span>) <span class="variable">$&#123;RANDOM:0:3&#125;</span>-<span class="variable">$&#123;RANDOM:0:4&#125;</span>"</span> &gt;&gt; phonelist.txt; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>查找有问题的项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ cat phonelist.txt</span><br><span class="line">(156) 891-573</span><br><span class="line">(551) 310-2301</span><br><span class="line">(197) 501-1688</span><br><span class="line">(108) 737-3818</span><br><span class="line">(822) 225-1332</span><br><span class="line">(13) 200-1923</span><br><span class="line">(137) 105-1455</span><br><span class="line">(391) 180-2722</span><br><span class="line">(317) 546-2211</span><br><span class="line">(172) 279-9606</span><br><span class="line">$ grep -Ev <span class="string">'^\([0-9]&#123;3&#125;\) [0-9]&#123;3&#125;-[0-9]&#123;4&#125;$'</span> phonelist.txt</span><br><span class="line">(156) 891-573</span><br><span class="line">(13) 200-1923</span><br></pre></td></tr></table></figure><p>273/505</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（5）</title>
      <link href="/blog/2021/04/09/the-go-programming-language-note-5/"/>
      <url>/blog/2021/04/09/the-go-programming-language-note-5/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="程序结构"><a class="header-anchor" href="#程序结构">#</a>程序结构</h1><h2 id="包和文件"><a class="header-anchor" href="#包和文件">#</a>包和文件</h2><p>包级别的名字，例如在一个文件声明的类型和常量，在同一个包的其他源文件也是可以直接访问的，就好像所有代码都在一个文件一样。</p><p>包的初始化首先是解决包级变量的依赖顺序，然后按照包级变量声明出现的顺序依次初始化：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = b + c <span class="comment">// a 第三个初始化, 为 3</span></span><br><span class="line"><span class="keyword">var</span> b = f() <span class="comment">// b 第二个初始化, 为 2, 通过调用 f (依赖c)</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="number">1</span> <span class="comment">// c 第一个初始化, 为 1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">()</span> <span class="title">int</span></span> &#123; <span class="keyword">return</span> c + <span class="number">1</span> &#125;</span><br></pre></td></tr></table></figure><p><code>Go</code>语言的习惯是在<code>if</code>中处理错误然后直接返回，这样可以确保正常执行的语句不需要代码缩进。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cwd <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">cwd, err := os.Getwd() <span class="comment">// <span class="doctag">NOTE:</span> wrong!</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"os.Getwd failed: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">"Working directory = %s"</span>, cwd)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是错误的写法，不会更新全局的<code>cwd</code>变量，而且局部的<code>cwd</code>变量被<code>log.Printf</code>调用也使得定义变量未使用失效了。正确做法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cwd <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">cwd, err = os.Getwd() <span class="comment">// 避免使用 := 的简短声明方式</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"os.Getwd failed: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（18）</title>
      <link href="/blog/2021/04/09/the-linux-command-line-note-18/"/>
      <url>/blog/2021/04/09/the-linux-command-line-note-18/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="tar"><a class="header-anchor" href="#tar">#</a>tar</h2><p>因为我现在用的命令都是<code>tar</code>，在归档的时候会自动调用<code>gzip</code>或者<code>bzip2</code>，所以我就不看这俩命令了。</p><p>除非你是超级用户，要不然从归档文件中抽取的文件和目录的所有权<strong>由执行此复原操作的用户所拥有</strong>，而不属于原始所有者。</p><p><code>tar</code>命令默认情况下，路径名是相对的，而不是绝对路径。</p><p>通过给命令添加末尾的路径名，<code>tar</code>命令就只会恢复指定的文件。可以指定多个路径名。注意路径名必须是完全的，精准的相对路径名，就如存储在归档文件中的一样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xf archive.tar pathname</span><br></pre></td></tr></table></figure><p><code>tar</code>命令经常结合<code>find</code>命令一起来制作归档文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find playground -name <span class="string">'file-A'</span> -<span class="built_in">exec</span> tar rf playground.tar <span class="string">'&#123;&#125;'</span> <span class="string">'+'</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find playground -name <span class="string">'file-A'</span> | tar cf - --files-from=- | gzip &gt; playground.tgz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等价于</span></span><br><span class="line">find playground -name <span class="string">'file-A'</span> | tar czf playground.tgz -T -</span><br></pre></td></tr></table></figure><p>如果指定了文件名<code>-</code>，则其被看作是标准输入或输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh onns@remote-sys <span class="string">'tar cf - Documents'</span> | tar xf -</span><br></pre></td></tr></table></figure><p><code>ssh</code>允许我们在远程联网的计算机上执行程序，并且在本地系统中看到执行结果。</p><p>本书过半（250/505）</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（17）</title>
      <link href="/blog/2021/04/08/the-linux-command-line-note-17/"/>
      <url>/blog/2021/04/08/the-linux-command-line-note-17/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="find"><a class="header-anchor" href="#find">#</a>find</h2><p><code>find</code>命令接收一个或多个目录名来执行搜索。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ find Documents/ | wc -l</span><br><span class="line">17905</span><br></pre></td></tr></table></figure><p><code>-type d</code>限制了只搜索目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ find Documents/ -<span class="built_in">type</span> d | wc -l</span><br><span class="line">1741</span><br></pre></td></tr></table></figure><p><code>find</code>命令支持的常见文件类型测试条件：</p><table><thead><tr><th style="text-align:left">文件类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>b</code></td><td style="text-align:left">块特殊设备文件</td></tr><tr><td style="text-align:left"><code>c</code></td><td style="text-align:left">字符特殊设备文件</td></tr><tr><td style="text-align:left"><code>d</code></td><td style="text-align:left">目录</td></tr><tr><td style="text-align:left"><code>f</code></td><td style="text-align:left">普通文件</td></tr><tr><td style="text-align:left"><code>l</code></td><td style="text-align:left">符号链接</td></tr></tbody></table><p><code>-name</code>参数后面跟通配符来根据文件名查找，用<code>双引号</code>引起来，从而阻止<code>shell</code>展开路径名。</p><p><code>-size +1M</code>代表文件大小大于<code>1M</code>的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ find Documents/ -<span class="built_in">type</span> f -name <span class="string">"*.png"</span> | wc -l</span><br><span class="line">512</span><br><span class="line">$ find Documents/ -<span class="built_in">type</span> f -name <span class="string">"*.png"</span> -size +1M | wc -l</span><br><span class="line">55</span><br></pre></td></tr></table></figure><p><code>-size</code>的常见单位：</p><table><thead><tr><th style="text-align:left">字符</th><th style="text-align:left">单位</th></tr></thead><tbody><tr><td style="text-align:left"><code>b</code></td><td style="text-align:left"><code>512</code>个字节块<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></td></tr><tr><td style="text-align:left"><code>c</code></td><td style="text-align:left">字节</td></tr><tr><td style="text-align:left"><code>w</code></td><td style="text-align:left">两个字节的字</td></tr><tr><td style="text-align:left"><code>k</code></td><td style="text-align:left">千字节（<code>1024</code>个字节单位）</td></tr><tr><td style="text-align:left"><code>M</code></td><td style="text-align:left">兆字节（<code>1048576</code>个字节单位）</td></tr><tr><td style="text-align:left"><code>G</code></td><td style="text-align:left">千兆字节（<code>1073741824</code>个字节单位）</td></tr></tbody></table><table><thead><tr><th style="text-align:left">测试条件</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>-cmin n</code></td><td style="text-align:left">匹配内容或属性<strong>最后修改时间</strong>正好在<code>n</code>分钟之前的文件或目录，指定少于<code>n</code>分钟之前，使用<code>-n</code>，指定多于<code>n</code>分钟之前，使用<code>+n</code></td></tr><tr><td style="text-align:left"><code>-cnewer file</code></td><td style="text-align:left">匹配内容或属性<strong>最后修改时间</strong>晚于<code>file</code>的文件或目录</td></tr><tr><td style="text-align:left"><code>-ctime n</code></td><td style="text-align:left">匹配内容和属性<strong>最后修改时间</strong>在<code>n*24</code>小时之前的文件和目录</td></tr><tr><td style="text-align:left"><code>-empty</code></td><td style="text-align:left">匹配<strong>空文件和目录</strong></td></tr><tr><td style="text-align:left"><code>-group name</code></td><td style="text-align:left">匹配<strong>属于一个组</strong>的文件或目录，组可以用<code>组名</code>或<code>组ID</code>来表示</td></tr><tr><td style="text-align:left"><code>-iname pattern</code></td><td style="text-align:left">就像<code>-name</code>测试条件，但是<strong>不区分大小写</strong></td></tr><tr><td style="text-align:left"><code>-inum n</code></td><td style="text-align:left">匹配<code>inode</code>号是<code>n</code>的文件<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></td></tr><tr><td style="text-align:left"><code>-mmin n</code></td><td style="text-align:left">匹配<strong>内容被修改</strong>于<code>n</code>分钟之前的文件或目录</td></tr><tr><td style="text-align:left"><code>-mtime n</code></td><td style="text-align:left">匹配的文件或目录的<code>内容被修改</code>于<code>n*24</code>小时之前</td></tr><tr><td style="text-align:left"><code>-name pattern</code></td><td style="text-align:left">用指定的<strong>通配符模式</strong>匹配的文件和目录</td></tr><tr><td style="text-align:left"><code>-newer file</code></td><td style="text-align:left">匹配<strong>内容晚于</strong>指定的文件的文件和目录<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></td></tr><tr><td style="text-align:left"><code>-nouser</code></td><td style="text-align:left">匹配<strong>不属于一个有效用户</strong>的文件和目录<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></td></tr><tr><td style="text-align:left"><code>-nogroup</code></td><td style="text-align:left">匹配<strong>不属于一个有效的组</strong>的文件和目录</td></tr><tr><td style="text-align:left"><code>-perm mode</code></td><td style="text-align:left">匹配<strong>权限已经设置为</strong>指定的<code>mode</code>的文件或目录，<code>mode </code>可以用<code>八进制</code>或<code>符号表示法</code></td></tr><tr><td style="text-align:left"><code>-samefile name</code></td><td style="text-align:left">类似于<code>-inum</code>测试条件，匹配和文件<code>name</code>享有同样<code>inode</code>号的文件</td></tr><tr><td style="text-align:left"><code>-size n</code></td><td style="text-align:left">匹配<strong>大小</strong>为<code>n</code>的文件</td></tr><tr><td style="text-align:left"><code>-type c</code></td><td style="text-align:left">匹配<strong>文件类型</strong>是<code>c</code>的文件</td></tr><tr><td style="text-align:left"><code>-user name</code></td><td style="text-align:left">匹配<strong>属于某个用户</strong>的文件或目录，这个用户可以通过<code>用户名</code>或<code>用户ID</code>来表示</td></tr></tbody></table><p>多个测试条件的连接符号：</p><table><thead><tr><th style="text-align:left">操作符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>-and</code></td><td style="text-align:left">如果操作符两边的测试条件都是真，则匹配。可以简写为<code>-a</code>，<strong>若没有使用操作符，则默认使用<code>-and</code></strong></td></tr><tr><td style="text-align:left"><code>-or</code></td><td style="text-align:left">若操作符两边的任一个测试条件为真，则匹配。可以简写为<code>-o</code></td></tr><tr><td style="text-align:left"><code>-or</code></td><td style="text-align:left">若操作符两边的任一个测试条件为真，则匹配。可以简写为<code>-o</code></td></tr><tr><td style="text-align:left"><code>-not</code></td><td style="text-align:left">若操作符后面的测试条件是假，则匹配。可以简写为一个感叹号<code>!</code></td></tr><tr><td style="text-align:left"><code>()</code></td><td style="text-align:left">把测试条件和操作符组合起来形成更大的表达式</td></tr></tbody></table><p><code>find</code>命令允许基于搜索结果来执行操作：</p><table><thead><tr><th style="text-align:left">操作</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>-delete</code></td><td style="text-align:left">删除当前匹配的文件</td></tr><tr><td style="text-align:left"><code>-ls</code></td><td style="text-align:left">对匹配的文件执行等同的<code>ls -dils</code>命令</td></tr><tr><td style="text-align:left"><code>-print</code></td><td style="text-align:left">把匹配文件的全路径名输送到标准输出。如果没有指定其它操作，这是默认操作</td></tr><tr><td style="text-align:left"><code>-quit</code></td><td style="text-align:left">一旦找到一个匹配，退出</td></tr></tbody></table><p><code>find</code>命令也可以调用任意命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-<span class="built_in">exec</span> <span class="built_in">command</span> &#123;&#125; ;</span><br></pre></td></tr></table></figure><p><code>{}</code>是当前路径名的符号表示。</p><p>因为花括号和分号对于<code>shell</code>有特殊含义，所以它们必须被引起来或被转义：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-<span class="built_in">exec</span> rm <span class="string">'&#123;&#125;'</span> <span class="string">';'</span></span><br></pre></td></tr></table></figure><p>通过使用<code>-ok</code>行为来代替<code>-exec</code>，在执行每个指定的命令之前，会提示用户。</p><p>通过把末尾的分号改为加号，就激活了<code>find</code>命令的一个功能，把搜索结果结合为一个参数列表，然后用于所期望的命令的一次执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find Documents/ -<span class="built_in">type</span> f -name <span class="string">'*.bak'</span> -<span class="built_in">exec</span> ls -l <span class="string">'&#123;&#125;'</span> <span class="string">';'</span></span><br><span class="line"><span class="comment"># 替换为</span></span><br><span class="line">find Documents/ -<span class="built_in">type</span> f -name <span class="string">'*.bak'</span> -<span class="built_in">exec</span> ls -l <span class="string">'&#123;&#125;'</span> <span class="string">'+'</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a class="header-anchor" href="#测试">#</a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p playground/dir-&#123;00&#123;1..9&#125;,0&#123;10..99&#125;,100&#125;</span><br><span class="line">touch playground/dir-&#123;00&#123;1..9&#125;,0&#123;10..99&#125;,100&#125;/file-&#123;A..Z&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find playground -<span class="built_in">type</span> f -name <span class="string">'file-A'</span></span><br></pre></td></tr></table></figure><p>不同于<code>ls</code>命令，<code>find</code>命令的输出结果是<strong>无序的</strong>，其顺序由存储设备的布局决定。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ touch playground/timestamp</span><br><span class="line">$ <span class="built_in">stat</span> playground/timestamp</span><br><span class="line">  File: playground/timestamp</span><br><span class="line">  Size: 0         Blocks: 0          IO Block: 4096   regular empty file</span><br><span class="line">Device: 811h/2065dInode: 106302168   Links: 1</span><br><span class="line">Access: (0664/-rw-rw-r--)  Uid: ( 1000/      hs)   Gid: ( 1000/      hs)</span><br><span class="line">Access: 2021-04-08 22:33:03.175222042 +0800</span><br><span class="line">Modify: 2021-04-08 22:33:03.175222042 +0800</span><br><span class="line">Change: 2021-04-08 22:33:03.175222042 +0800</span><br><span class="line"> Birth: -</span><br><span class="line"></span><br><span class="line"><span class="comment"># touch 命令会修改时间信息</span></span><br><span class="line">$ touch playground/timestamp</span><br><span class="line">$ <span class="built_in">stat</span> playground/timestamp</span><br><span class="line">  File: playground/timestamp</span><br><span class="line">  Size: 0         Blocks: 0          IO Block: 4096   regular empty file</span><br><span class="line">Device: 811h/2065dInode: 106302168   Links: 1</span><br><span class="line">Access: (0664/-rw-rw-r--)  Uid: ( 1000/      hs)   Gid: ( 1000/      hs)</span><br><span class="line">Access: 2021-04-08 22:36:02.113310036 +0800</span><br><span class="line">Modify: 2021-04-08 22:36:02.113310036 +0800</span><br><span class="line">Change: 2021-04-08 22:36:02.113310036 +0800</span><br><span class="line"> Birth: -</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find playground -<span class="built_in">type</span> f -name <span class="string">'file-B'</span> -<span class="built_in">exec</span> touch <span class="string">'&#123;&#125;'</span> <span class="string">';'</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find playground -<span class="built_in">type</span> f -newer playground/timestamp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find playground \( -<span class="built_in">type</span> f -not -perm 0600 \) -or \( -<span class="built_in">type</span> d -not -perm 0700 \) | sort</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find playground \( -<span class="built_in">type</span> f -not -perm 0600 -<span class="built_in">exec</span> chmod 0600 <span class="string">'&#123;&#125;'</span> <span class="string">';'</span> \) -or \( -<span class="built_in">type</span> d -not -perm 0711 -<span class="built_in">exec</span> chmod 0700 <span class="string">'&#123;&#125;'</span> <span class="string">';'</span> \)</span><br></pre></td></tr></table></figure><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>如果没有指定单位，则这是默认值。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>不懂啥意思，以后回来可以补上测试例子，翻译是<code>这对于找到某个特殊 inode 的所有硬链接很有帮助</code>。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>这在编写执行备份的<code>shell</code>脚本的时候很有帮助。每次你制作一个备份，更新文件（比如说日志），然后使用<code>find</code>命令来判断哪些文件自从上一次更新之后被更改了。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>这可以用来查找属于被删除的帐户的文件或监测攻击行为 <a href="#fnref4" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（16）</title>
      <link href="/blog/2021/04/06/the-linux-command-line-note-16/"/>
      <url>/blog/2021/04/06/the-linux-command-line-note-16/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使得 shell 的历史记录功能忽略一个命令，如果相同的命令已被记录。</span></span><br><span class="line"><span class="built_in">export</span> HISTCONTROL=ignoredups</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加命令历史的大小，从默认的 500 行扩大到 1000 行。</span></span><br><span class="line"><span class="built_in">export</span> HISTSIZE=1000</span><br></pre></td></tr></table></figure><p>不过<code>MacOS</code>的<code>zsh</code>默认历史大小是<code>2000</code>，所以第二个不用改了。第一个好像也没用，改了一晚上都没啥效果。。。。</p><h2 id="vi"><a class="header-anchor" href="#vi">#</a>vi</h2><table><thead><tr><th style="text-align:left">按键</th><th style="text-align:left">移动光标</th></tr></thead><tbody><tr><td style="text-align:left"><code>l</code> or <code>右箭头</code></td><td style="text-align:left">向右移动一个字符</td></tr><tr><td style="text-align:left"><code>h</code> or <code>左箭头</code></td><td style="text-align:left">向左移动一个字符</td></tr><tr><td style="text-align:left"><code>j</code> or <code>下箭头</code></td><td style="text-align:left">向下移动一行</td></tr><tr><td style="text-align:left"><code>k</code> or <code>上箭头</code></td><td style="text-align:left">向上移动一行</td></tr><tr><td style="text-align:left"><code>0</code> (零按键)</td><td style="text-align:left">移动到当前行的行首</td></tr><tr><td style="text-align:left"><code>^</code></td><td style="text-align:left">移动到当前行的第一个非空字符</td></tr><tr><td style="text-align:left"><code>$</code></td><td style="text-align:left">移动到当前行的末尾</td></tr><tr><td style="text-align:left"><code>w</code></td><td style="text-align:left">移动到下一个单词或标点符号的开头</td></tr><tr><td style="text-align:left"><code>W</code></td><td style="text-align:left">移动到下一个单词的开头，忽略标点符号</td></tr><tr><td style="text-align:left"><code>b</code></td><td style="text-align:left">移动到上一个单词或标点符号的开头</td></tr><tr><td style="text-align:left"><code>B</code></td><td style="text-align:left">移动到上一个单词的开头，忽略标点符号</td></tr><tr><td style="text-align:left"><code>Ctrl-f</code> or <code>Page Down</code></td><td style="text-align:left">向下翻一页</td></tr><tr><td style="text-align:left"><code>Ctrl-b</code> or <code>Page Up</code></td><td style="text-align:left">向上翻一页</td></tr><tr><td style="text-align:left"><code>numberG</code></td><td style="text-align:left">移动到第 <code>number</code> 行</td></tr><tr><td style="text-align:left"><code>G</code></td><td style="text-align:left">移动到文件末尾</td></tr></tbody></table><p><code>a</code>命令：<code>vi</code>提供的追加文本的命令，如果把光标移动到行尾，输入<code>a</code>, 光标就会越过行尾，同时<code>vi</code>会进入插入模式。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p><code>A</code>命令：光标移动到行尾，同时<code>vi</code>进入输入模式。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:left"><code>o</code></td><td style="text-align:left">当前行的下方打开一行</td></tr><tr><td style="text-align:left"><code>O</code></td><td style="text-align:left">当前行的上方打开一行</td></tr></tbody></table><p><code>u</code>命令：当在命令模式下，<code>vi</code>将会撤销最后一次修改。</p><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">删除的文本</th></tr></thead><tbody><tr><td style="text-align:left"><code>x</code></td><td style="text-align:left">当前字符</td></tr><tr><td style="text-align:left"><code>3x</code></td><td style="text-align:left">当前字符及其后的两个字符</td></tr><tr><td style="text-align:left"><code>dd</code></td><td style="text-align:left">当前行</td></tr><tr><td style="text-align:left"><code>5dd</code></td><td style="text-align:left">当前行及随后的四行文本</td></tr><tr><td style="text-align:left"><code>dW</code></td><td style="text-align:left">从光标位置开始到下一个单词的开头</td></tr><tr><td style="text-align:left"><code>d$</code></td><td style="text-align:left">从光标位置开始到当前行的行尾</td></tr><tr><td style="text-align:left"><code>d0</code></td><td style="text-align:left">从光标位置开始到当前行的行首</td></tr><tr><td style="text-align:left"><code>d^</code></td><td style="text-align:left">从光标位置开始到文本行的第一个非空字符</td></tr><tr><td style="text-align:left"><code>dG</code></td><td style="text-align:left">从当前行到文件的末尾</td></tr><tr><td style="text-align:left"><code>d20G</code></td><td style="text-align:left">从当前行到文件的第 <code>20</code> 行</td></tr></tbody></table><p>真正的<code>vi</code>只是支持单层面的<code>undo</code>命令。<code>vim</code>则支持多个层面的。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.csdn.net/testcs_dn/article/details/79970635" target="_blank" rel="noopener">mac 中 history 命令使用与配置</a></li><li><a href="http://zsh.sourceforge.net/Doc/Release/Options.html" target="_blank" rel="noopener">Zsh Options</a></li><li><a href="https://stackoverflow.com/questions/842338/how-do-i-tell-zsh-to-write-the-current-shells-history-to-my-history-file/842366" target="_blank" rel="noopener">How do I tell Zsh to write the current shell’s history to my history file?</a></li><li><a href="https://www.reddit.com/r/zsh/comments/2aoy2i/history_deduplication/" target="_blank" rel="noopener">History deduplication?</a></li><li><a href="http://zsh.sourceforge.net/Guide/zshguide02.html#l18" target="_blank" rel="noopener">History options</a></li><li><a href="https://unix.stackexchange.com/questions/6094/is-there-any-way-to-keep-a-command-from-being-added-to-your-history" target="_blank" rel="noopener">Is there any way to keep a command from being added to your history?</a></li><li><a href="https://unix.stackexchange.com/questions/103398/how-to-view-datetime-stamp-for-history-command-in-zsh-shell" target="_blank" rel="noopener">How to view datetime stamp for history command in Zsh shell</a></li><li><a href="https://superuser.com/questions/735660/whats-the-zsh-equivalent-of-bashs-prompt-command" target="_blank" rel="noopener">What’s the ZSH equivalent of BASH’s $PROMPT_COMMAND?</a></li><li><a href="https://unix.stackexchange.com/questions/121802/zsh-how-to-check-if-an-option-is-enabled" target="_blank" rel="noopener">zsh: How to check if an option is enabled</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>然而好像没啥用，<code>i</code>编辑模式下向右移动一个字符就可以追加了。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>这个就比较方便了，可以记住，挺好用的快捷键。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（汇总）</title>
      <link href="/blog/2021/04/06/the-linux-command-line-note-all/"/>
      <url>/blog/2021/04/06/the-linux-command-line-note-all/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><p>如果提示符的最后一个字符是<code>#</code>, 而不是<code>$</code>, 那么这个终端会话就有超级用户权限<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。</p><p>许多<code>Linux</code>发行版默认保存最后输入的<code>500</code>个命令（就是上下键显示的那些）。</p><p>日历命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cal</span><br><span class="line">    October 2020</span><br><span class="line">Su Mo Tu We Th Fr Sa</span><br><span class="line">             1  2  3</span><br><span class="line"> 4  5  6  7  8  9 10</span><br><span class="line">11 12 13 14 15 16 17</span><br><span class="line">18 19 20 21 22 23 24</span><br><span class="line">25 26 27 28 29 30 31</span><br></pre></td></tr></table></figure><p><code>cd -</code>命令可以更改到上一个工作路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">% <span class="built_in">cd</span> Documents/common/PAN-PyTorch</span><br><span class="line">onns@liupans-MacBook-Air PAN-PyTorch % <span class="built_in">pwd</span></span><br><span class="line">/Users/onns/Documents/common/PAN-PyTorch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">onns@liupans-MacBook-Air PAN-PyTorch % <span class="built_in">cd</span> ~/Downloads/GitHub/blog</span><br><span class="line">onns@liupans-MacBook-Air blog % <span class="built_in">pwd</span></span><br><span class="line">/Users/onns/Downloads/GitHub/blog</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">onns@liupans-MacBook-Air blog % <span class="built_in">cd</span> -</span><br><span class="line">~/Documents/common/PAN-PyTorch</span><br><span class="line">onns@liupans-MacBook-Air PAN-PyTorch % <span class="built_in">pwd</span></span><br><span class="line">/Users/onns/Documents/common/PAN-PyTorch</span><br></pre></td></tr></table></figure><p>Linux 文件命名的特殊符号仅支持<code>.</code>，<code>-</code>和<code>_</code>。</p><p>不要在文件名中使用空格。</p><p><code>ls</code>的参数：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:left">长选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>-r</code></td><td style="text-align:left"><code>--reverse</code></td><td style="text-align:left">逆序输出</td></tr><tr><td style="text-align:center"><code>-t</code></td><td style="text-align:left"></td><td style="text-align:left">按照修改时间来排序</td></tr><tr><td style="text-align:center"><code>-l</code></td><td style="text-align:left"></td><td style="text-align:left">以长格式显示结果</td></tr></tbody></table><p>感觉<code>-l</code>参数是最常用的了，会输出一些有用的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">onns@liupans-MacBook-Air blog % ls -l</span><br><span class="line">total 12304</span><br><span class="line">-rw-r--r--    1 onns  staff     2586 Aug 11 20:20 _config.yml</span><br><span class="line">-rw-r--r--    1 onns  staff  6097875 Nov  2 11:15 db.json</span><br><span class="line">drwxr-xr-x  450 onns  staff    14400 Oct 17 13:47 node_modules</span><br><span class="line">-rw-r--r--    1 onns  staff   189013 Oct 17 13:47 package-lock.json</span><br><span class="line">-rw-r--r--    1 onns  staff      833 Oct 17 13:47 package.json</span><br><span class="line">drwxr-xr-x   26 onns  staff      832 Oct 17 14:01 public</span><br><span class="line">drwxr-xr-x    5 onns  staff      160 Jun 14 20:08 scaffolds</span><br><span class="line">drwxr-xr-x   13 onns  staff      416 Aug 10 00:29 <span class="built_in">source</span></span><br><span class="line">drwxr-xr-x    4 onns  staff      128 Aug 11 19:24 themes</span><br></pre></td></tr></table></figure><p><code>-rw-r--r--</code>表示对文件的权限，第一个字符代表<code>文件类型</code>：</p><ul><li><code>-</code>代表是一个普通文件。</li><li><code>d</code>代表是一个目录。</li></ul><p>后面的是权限字符，后面会讲。</p><p><code>1</code> 代表<code>硬链接</code>的数目。</p><p><code>onns</code>代表文件所有者的用户名。</p><p><code>staff</code>代表所属用户组的组名。</p><p><code>2586</code>是以字节数表示的文件大小。</p><p>最后是<code>上次修改时间</code>和<code>文件名</code>。</p><hr><p><code>file</code>命令用来查看文件的类型：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@liupans-MacBook-Air image % file draw-20200207.jpg</span><br><span class="line">draw-20200207.jpg: JPEG image data, Exif standard: [TIFF image data, big-endian, direntries=7, orientation=upper-left, xresolution=98, yresolution=106, resolutionunit=2, software=Adobe Photoshop 21.0 (Macintosh), datetime=2020:02:07 19:32:03], baseline, precision 8, 3508x2480, components 3</span><br></pre></td></tr></table></figure><hr><p><code>less</code>命令用来浏览文本文件，是<code>more</code>命令的升级版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less filename</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">Page UP or b</td><td style="text-align:center">向上翻滚一页</td></tr><tr><td style="text-align:center">Page Down or space</td><td style="text-align:center">向下翻滚一页</td></tr><tr><td style="text-align:center">UP Arrow</td><td style="text-align:center">向上翻滚一行</td></tr><tr><td style="text-align:center">Down Arrow</td><td style="text-align:center">向下翻滚一行</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center">移动到最后一行</td></tr><tr><td style="text-align:center">1G or g</td><td style="text-align:center">移动到开头一行</td></tr><tr><td style="text-align:center">/charaters</td><td style="text-align:center">向前查找指定的字符串</td></tr><tr><td style="text-align:center">n</td><td style="text-align:center">向前查找下一个出现的字符串，这个字符串是之前所指定查找的</td></tr><tr><td style="text-align:center">h</td><td style="text-align:center">显示帮助屏幕</td></tr><tr><td style="text-align:center">q</td><td style="text-align:center">退出 less 程序</td></tr></tbody></table><hr><p>在 <code>ls -l</code>的时候，如果最前面的字符不是<code>-</code>也不是<code>d</code>而是<code>l</code>，代表是一个<code>符号链接</code>。</p><h2 id="通配符"><a class="header-anchor" href="#通配符">#</a>通配符</h2><ul><li><code>*</code> 匹配任意多个字符（包括零个或一个）</li><li><code>?</code> 匹配任意一个字符（不包括零个）</li><li><code>[characters]</code> 匹配任意一个属于<code>字符集</code>中的字符</li><li><code>[!characters]</code> 匹配任意一个不是<code>字符集</code>中的字符</li><li><code>[[:class:]]</code> 匹配任意一个属于指定<code>字符类</code>中的字符</li></ul><p>字符类</p><ul><li><code>[:alnum:]</code> 匹配任意一个字母或数字</li><li><code>[:alpha:]</code> 匹配任意一个字母</li><li><code>[:digit:]</code> 匹配任意一个数字</li><li><code>[:lower:]</code> 匹配任意一个小写字母</li><li><code>[:upper:]</code> 匹配任意一个大写字母</li></ul><p>一些示例：</p><ul><li><code>*</code> 所有文件</li><li><code>g*</code> 文件名以“g”开头的文件</li><li><code>b*.txt</code> 以“b” 开头，中间有零个或任意多个字符，并以”.txt”结尾的文件</li><li><code>Data???</code> 以<code>Data</code>开头，其后紧接着<code>3</code>个字符的文件</li><li><code>[abc]*</code> 文件名以<code>a</code>、<code>b</code>或<code>c</code>开头的文件</li><li><code>BACKUP.[0-9][0-9][0-9]</code> 以<code>BACKUP.</code>开头，并紧接着<code>3</code>个数字的文件</li><li><code>[[:upper:]]*</code> 以<code>大写字母</code>开头的文件</li><li><code>[![:digit:]]*</code> <code>不以数字</code>开头的文件</li><li><code>*[[:lower:]123]</code> 文件名以<code>小写字母</code>结尾，或以<code>1</code>、<code>2</code>或<code>3</code>结尾的文件</li></ul><p>之前写正则时候的<code>[A-Z]</code>和<code>[a-z]</code>虽然都有效果，但是已经很老了，不一定会有期望的效果，可以弃用了。</p><blockquote><p>虽然它们仍然起作用，但是你必须小心地使用它们，因为它们不会产生你期望的输出结果，除非你合理地配置它们。从现在开始，你应该避免使用它们，并且用字符类来代替它们。</p></blockquote><h2 id="创建目录"><a class="header-anchor" href="#创建目录">#</a>创建目录</h2><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir directory...</span><br></pre></td></tr></table></figure><p>上面命令的<code>...</code>代表那个参数可以重复，即可以一次性创建多个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir dir1 dir2 dir3</span><br></pre></td></tr></table></figure><p>会创建三个目录。</p><h2 id="复制文件和目录"><a class="header-anchor" href="#复制文件和目录">#</a>复制文件和目录</h2><p>两种用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp item1 item2</span><br></pre></td></tr></table></figure><p>复制单个文件或目录<code>item1</code>到文件或目录<code>item2</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp item1... directory</span><br></pre></td></tr></table></figure><p>复制多个项目（文件或目录）到一个目录下。</p><p><code>cp</code>命令的一些参数选项：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:left">长选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>-a</code></td><td style="text-align:left"><code>--archive</code></td><td style="text-align:left">复制文件和目录，以及它们的属性，包括所有权和权限。通常，副本具有用户所操作文件的默认属性。</td></tr><tr><td style="text-align:center"><code>-i</code></td><td style="text-align:left"><code>--interactive</code></td><td style="text-align:left">在重写已存在文件之前，提示用户确认。如果这个选项不指定，cp 命令会默认重写文件。</td></tr><tr><td style="text-align:center"><code>-r</code></td><td style="text-align:left"><code>--recursive</code></td><td style="text-align:left">递归地复制目录及目录中的内容。当复制目录时，需要这个选项（或者-a 选项）。</td></tr><tr><td style="text-align:center"><code>-u</code></td><td style="text-align:left"><code>--update</code></td><td style="text-align:left">当把文件从一个目录复制到另一个目录时，仅复制目标目录中不存在的文件，或者是文件内容新于目标目录中已经存在的文件。</td></tr><tr><td style="text-align:center"><code>-v</code></td><td style="text-align:left"><code>--verbose</code></td><td style="text-align:left">显示详细的命令操作信息</td></tr></tbody></table><p>示例：</p><ul><li><code>cp file1 file2</code> 复制文件 file1 内容到文件 file2。如果 file2 已经存在，file2 的内容会被 file1 的内容重写。如果 file2 不存在，则会创建 file2。</li><li><code>cp -i file1 file2</code> 这条命令和上面的命令一样，除了如果文件 file2 存在的话，在文件 file2 被重写之前，会提示用户确认信息。</li><li><code>cp file1 file2 dir1</code> 复制文件 file1 和文件 file2 到目录 dir1。目录 dir1 必须存在。</li><li><code>cp dir1/* dir2</code> 使用一个通配符，在目录 dir1 中的所有文件都被复制到目录 dir2 中。dir2 必须已经存在。</li><li><code>cp -r dir1 dir2</code> 复制目录 dir1 中的内容到目录 dir2。如果目录 dir2 不存在，创建目录 dir2，操作完成后，目录 dir2 中的内容和 dir1 中的一样。如果目录 dir2 存在，则目录<code>dir1</code>和<code>目录中的内容</code>将会被复制到<code>dir2</code>中。</li></ul><p>最后一个比较难理解，做个例子自己试一下！</p><h3 id="示例"><a class="header-anchor" href="#示例">#</a>示例</h3><p>首先创建一下测试的环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ mkdir dir1</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ mkdir dir2</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ vi dir1/text1</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ vi dir2/text2</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ vi dir1/text3</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls dir1/ dir2/</span><br><span class="line">dir1/:</span><br><span class="line">text1  text3</span><br><span class="line"></span><br><span class="line">dir2/:</span><br><span class="line">text2</span><br></pre></td></tr></table></figure><p>然后执行一下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ cp -r dir1 dir2</span><br></pre></td></tr></table></figure><p>然后查看结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls dir1 dir2</span><br><span class="line">dir1:</span><br><span class="line">text1  text3</span><br><span class="line"></span><br><span class="line">dir2:</span><br><span class="line">dir1  text2</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls dir1 dir2 dir2/dir1</span><br><span class="line">dir1:</span><br><span class="line">text1  text3</span><br><span class="line"></span><br><span class="line">dir2:</span><br><span class="line">dir1  text2</span><br><span class="line"></span><br><span class="line">dir2/dir1:</span><br><span class="line">text1  text3</span><br></pre></td></tr></table></figure><h2 id="移动文件"><a class="header-anchor" href="#移动文件">#</a>移动文件</h2><p>感觉<code>mv</code>和<code>cp</code>是一样的，只是不同的在于，<code>mv</code>移动文件夹的时候不需要<code>-r</code>，自动完成的。</p><p>两种用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv item1 item2</span><br></pre></td></tr></table></figure><p>把文件或目录<code>item1</code>移动或重命名为<code>item2</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv item1... directory</span><br></pre></td></tr></table></figure><p>把一个或多个条目从一个目录移动到另一个目录中。</p><p><code>mv</code>命令的一些参数选项：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:left">长选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>-i</code></td><td style="text-align:left"><code>--interactive</code></td><td style="text-align:left">在重写一个已经存在的文件之前，提示用户确认信息。如果不指定这个选项，mv 命令会默认重写文件内容。</td></tr><tr><td style="text-align:center"><code>-u</code></td><td style="text-align:left"><code>--update</code></td><td style="text-align:left">当把文件从一个目录移动另一个目录时，只是移动不存在的文件，或者文件内容新于目标目录相对应文件的内容。</td></tr><tr><td style="text-align:center"><code>-v</code></td><td style="text-align:left"><code>--verbose</code></td><td style="text-align:left">显示详细的命令操作信息</td></tr></tbody></table><p>示例：</p><ul><li><code>mv file1 file2</code> 移动 file1 到 file2。如果 file2 存在，它的内容会被 file1 的内容重写。如果 file2 不存在，则创建 file2。这两种情况下，file1 都不再存在。</li><li><code>mv -i file1 file2</code> 除了如果 file2 存在的话，在 file2 被重写之前，用户会得到提示信息外，这个和上面的选项一样。</li><li><code>mv file1 file2 dir1</code> 移动 file1 和 file2 到目录 dir1 中。dir1 必须已经存在。</li><li><code>mv dir1 dir2</code> 如果目录 dir2 不存在，创建目录 dir2，并且移动目录 dir1 的内容到目录 dir2 中，同时删除目录 dir1。如果目录 dir2 存在，移动目录<code>dir1</code>及<code>它的内容</code>到目录<code>dir2</code>。</li></ul><h2 id="删除文件"><a class="header-anchor" href="#删除文件">#</a>删除文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm item...</span><br></pre></td></tr></table></figure><p>感觉在 linux 下第一个知道的命令大概就是<code>rm -rf /*</code>吧…</p><p>一些选项：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:left">长选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>-i</code></td><td style="text-align:left"><code>--interactive</code></td><td style="text-align:left">在删除已存在的文件前，提示用户确认信息。如果不指定这个选项，rm 会默默地删除文件</td></tr><tr><td style="text-align:center"><code>-r</code></td><td style="text-align:left"><code>--recursive</code></td><td style="text-align:left">递归地删除文件，这意味着，如果要删除一个目录，而此目录又包含子目录，那么子目录也会被删除。要删除一个目录，必须指定这个选项。</td></tr><tr><td style="text-align:center"><code>-f</code></td><td style="text-align:left"><code>--force</code></td><td style="text-align:left">忽视不存在的文件，不显示提示信息。这选项覆盖了<code>--interactive</code>选项。</td></tr><tr><td style="text-align:center"><code>-v</code></td><td style="text-align:left"><code>--verbose</code></td><td style="text-align:left">显示详细的命令操作信息</td></tr></tbody></table><p><strong>类 Unix 系统，是没有复原命令的</strong></p><p>当你使用带有通配符的<code>rm</code>命令时，除了仔细检查输入的内容外，先用<code>ls</code>命令来测试通配。<br>当你使用带有通配符的<code>rm</code>命令时，除了仔细检查输入的内容外，先用<code>ls</code>命令来测试通配。<br>当你使用带有通配符的<code>rm</code>命令时，除了仔细检查输入的内容外，先用<code>ls</code>命令来测试通配。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm *.html <span class="comment"># 删除所有html文件</span></span><br><span class="line">rm * .html <span class="comment"># 会删除目录中的所有文件，并提示没有“.html”文件</span></span><br></pre></td></tr></table></figure><h2 id="创建链接"><a class="header-anchor" href="#创建链接">#</a>创建链接</h2><p>硬链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln file link</span><br></pre></td></tr></table></figure><p>符号链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s item link</span><br></pre></td></tr></table></figure><p><code>item</code>可以是一个文件或是一个目录。</p><p><code>硬链接</code>的缺点：</p><ul><li>一个硬链接不能关联它所在文件系统之外的文件。这是说一个链接不能关联与链接本身不在同一个磁盘分区上的文件。</li><li>一个硬链接不能关联一个目录。</li></ul><p>一个硬链接和文件本身没有什么区别。</p><p>当一个硬链接被删除时，这个链接被删除，但是文件本身的内容仍然存在，直到所有关联这个文件的链接都删除掉。</p><p>当你删除一个符号链接时，只有这个链接被删除，而不是文件自身。</p><p>如果先于符号链接删除文件，这个链接<code>仍然存在</code>，但是不指向任何东西。（会被 ls 命令标红，表示<code>坏链接</code>）</p><h3 id="测试"><a class="header-anchor" href="#测试">#</a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ vi fun</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ln fun fun-hard</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls</span><br><span class="line">fun  fun-hard</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun</span><br><span class="line">-rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun-hard</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -li</span><br><span class="line">total 0</span><br><span class="line">35465847065606899 -rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun</span><br><span class="line">35465847065606899 -rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun-hard</span><br></pre></td></tr></table></figure><p>可以通过<code>-i</code>参数来展示文件索引节点的信息，可以看出这实际上是索引的同一个文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ln -s fun fun-sym</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun</span><br><span class="line">-rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun-hard</span><br><span class="line">lrwxrwxrwx 1 onns onns  3 Nov  6 14:25 fun-sym -&gt; fun</span><br></pre></td></tr></table></figure><p><code>符号链接</code>的大小是指向文件字符的大小，而不是实际大小，因为<code>fun-sym</code>指向的是<code>fun</code>，<code>fun</code>有<code>三个字符</code>，所以大小是<code>3</code>。</p><p>对于符号链接，有一点值得记住，执行的大多数文件操作是针对链接的对象，而不是链接本身。</p><p>而<code>rm</code>命令是个特例。当你删除链接的时候，<strong>删除链接本身</strong>，而不是链接的对象。</p><h2 id="命令"><a class="header-anchor" href="#命令">#</a>命令</h2><p>四种命令的形式：</p><ol><li>一个可执行程序</li><li>一个内建于<code>shell</code>自身的命令，内部命令</li><li>一个<code>shell</code>函数</li><li>一个命令别名</li></ol><h2 id="type"><a class="header-anchor" href="#type">#</a>type</h2><p><code>type</code>命令是<code>shell</code>内部命令，它会显示命令的类别：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span> <span class="built_in">command</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">type</span> <span class="built_in">type</span></span><br><span class="line"><span class="built_in">type</span> is a shell <span class="built_in">builtin</span></span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">type</span> ls</span><br><span class="line">ls is aliased to `ls --color=auto`</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">type</span> cp</span><br><span class="line">cp is /bin/cp</span><br></pre></td></tr></table></figure><h2 id="which"><a class="header-anchor" href="#which">#</a>which</h2><p><code>which</code>用来查找一个可执行程序的位置，因为一个程序可能有很多个版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> <span class="built_in">command</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">which</span> ls</span><br><span class="line">/bin/ls</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">which</span> win-lab406</span><br><span class="line">/mnt/d/weiyun/Code/bash/win-lab406</span><br></pre></td></tr></table></figure><p><strong>这个命令只对可执行程序有效，不包括内建命令和命令别名。</strong></p><p>第二个命令是我自己写的。</p><p>当我企图查找内部命令的时候，根本找不到= =，什么提示都没有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">which</span> <span class="built_in">cd</span></span><br><span class="line">onns@DESKTOP-5JJP7PL:~$</span><br></pre></td></tr></table></figure><h2 id="help"><a class="header-anchor" href="#help">#</a>help</h2><p><code>help</code>命令大概就是用来提示你这个命令怎么用的吧…</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span> <span class="built_in">command</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">help</span> <span class="built_in">cd</span></span><br><span class="line"><span class="built_in">cd</span>: <span class="built_in">cd</span> [-L|[-P [-e]] [-@]] [dir]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>出现在命令语法说明中的方括号，表示<code>可选的</code>项目。<br><code>一个竖杠字符</code>表示互斥选项。</p><blockquote><p>虽<code>cd</code>命令的帮助文档很简洁准确，但它决不是教程。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p></blockquote><p><code>--help</code>是一个很多程序支持的选项，作用是：<strong>显示命令所支持的语法和选项说明</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ mkdir --<span class="built_in">help</span></span><br><span class="line">Usage: mkdir [OPTION]... DIRECTORY...</span><br><span class="line">Create the DIRECTORY(ies), <span class="keyword">if</span> they <span class="keyword">do</span> not already exist.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">  -m, --mode=MODE   <span class="built_in">set</span> file mode (as <span class="keyword">in</span> chmod), not a=rwx - <span class="built_in">umask</span></span><br><span class="line">  -p, --parents     no error <span class="keyword">if</span> existing, make parent directories as needed</span><br><span class="line">  -v, --verbose     <span class="built_in">print</span> a message <span class="keyword">for</span> each created directory</span><br><span class="line">  -Z                   <span class="built_in">set</span> SELinux security context of each created directory</span><br><span class="line">                         to the default <span class="built_in">type</span></span><br><span class="line">      --context[=CTX]  like -Z, or <span class="keyword">if</span> CTX is specified <span class="keyword">then</span> <span class="built_in">set</span> the SELinux</span><br><span class="line">                         or SMACK security context to CTX</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report mkdir translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">Full documentation at: &lt;http://www.gnu.org/software/coreutils/mkdir&gt;</span><br><span class="line">or available locally via: info <span class="string">'(coreutils) mkdir invocation'</span></span><br></pre></td></tr></table></figure><h2 id="man"><a class="header-anchor" href="#man">#</a>man</h2><p><code>man</code>命令用来查看一些程序的文档手册：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man program</span><br></pre></td></tr></table></figure><p>手册文档的格式有点不同，一般地包含<code>一个标题</code>、<code>命令语法的纲要</code>、<code>命令用途的说明</code>、以及<code>每个命令选项</code>的列表和说明。<strong>手册文档通常并不包含实例。</strong></p><p>在大多<code>Linux</code>系统中，<code>man</code>使<code>less</code>工具来显示参考手册，所以当浏览文档时，你所熟<code>less</code>悉命令都能有效。<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><p>参考手册有很多不同的章节：</p><table><thead><tr><th style="text-align:center">章节</th><th style="text-align:left">内容</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:left">用户命令</td></tr><tr><td style="text-align:center">2</td><td style="text-align:left">程序接口内核系统调用</td></tr><tr><td style="text-align:center">3</td><td style="text-align:left">C 库函数程序接口</td></tr><tr><td style="text-align:center">4</td><td style="text-align:left">特殊文件，比如说设备结点和驱动程序</td></tr><tr><td style="text-align:center">5</td><td style="text-align:left">文件格式</td></tr><tr><td style="text-align:center">6</td><td style="text-align:left">游戏娱乐，如屏幕保护程序</td></tr><tr><td style="text-align:center">7</td><td style="text-align:left">其他方面</td></tr><tr><td style="text-align:center">8</td><td style="text-align:left">系统管理员命令</td></tr></tbody></table><p>有时候，我们需要查看参考手册的特定章节，从而找到我们需要的信息。如果我们要查找一种文件格式，而同时它也是一个命令名时, 这种情况尤其正确。没有指定章节号，我们总是得到第一个匹配项，可能在第一章节。我们这样使用<code>man</code>命令，来指定章节号：<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man section search_term</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ man 5 passwd</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$</span><br></pre></td></tr></table></figure><h2 id="alias"><a class="header-anchor" href="#alias">#</a>alias</h2><p><code>alias</code>用来创建别名，可以把多个命令放在同一行，命令之间用<code>;</code>分隔。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> name=<span class="string">'command1; command2; command3...'</span></span><br></pre></td></tr></table></figure><p>在创建别名的时候，应该用<code>type</code>来测试一下这个<code>别名</code>有没有被用过。</p><p>删除别名，使用<code>unalias</code>命令。</p><p>在命令行里定义的别名，<code>shell关闭</code>之后就会消失。</p><h2 id="标准输入、输出和错误"><a class="header-anchor" href="#标准输入、输出和错误">#</a>标准输入、输出和错误</h2><p><code>Unix</code>下万物皆文件，默认情况下，<code>标准输出</code>和<code>标准错误</code>都连接到屏幕，即<code>stdout</code>和<code>stderr</code>。<code>标准输入</code>连接到键盘上，即<code>stdin</code>。</p><h2 id="标准输出重定向"><a class="header-anchor" href="#标准输出重定向">#</a>标准输出重定向</h2><p>使用<code>&gt;</code>重定向符后接文件名将标准输出重定向到除屏幕以外的另一个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &gt; filename</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /usr/bin &gt; ls-output.txt</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l ls-output.txt</span><br><span class="line">-rw-r--r-- 1 onns onns 44260 Nov  9 12:56 ls-output.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr &gt; ls-output.txt</span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l ls-output.txt</span><br><span class="line">-rw-r--r-- 1 onns onns 0 Nov  9 12:59 ls-output.txt</span><br></pre></td></tr></table></figure><p><code>ls</code>程序不把它的<code>错误信息</code>输送到<code>标准输出</code>。</p><p>而且，当我们使用<code>&gt;</code>重定向符来重定向输出结果时，目标文件总是从<code>开头被重写</code>。</p><p>快速<code>清空一个文件内容</code>或者<code>创建一个新的空文件</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; ls-output.txt</span><br></pre></td></tr></table></figure><p>使用<code>&gt;&gt;</code>操作符，将导致输出结果添加到文件内容之后，即<code>追加</code>。如果文件不存在，文件会被创建。</p><h2 id="标准错误重定向"><a class="header-anchor" href="#标准错误重定向">#</a>标准错误重定向</h2><p><code>stdin</code>、<code>stdout</code>和<code>stderr</code>在<code>shell</code>内部被称为<strong>文件描述符</strong><code>0</code>、<code>1</code>和<code>2</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /bin/usr 2&gt; ls-error.txt</span><br></pre></td></tr></table></figure><p><code>2</code>和<code>&gt;</code>要紧挨着，不然会报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr 2 &gt; ls-error.txt</span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">ls: cannot access <span class="string">'2'</span>: No such file or directory</span><br></pre></td></tr></table></figure><p>如果想要把标准输出和标准错误一起重定向，有两种方法，老方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /bin/usr &gt; ls-output.txt 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><strong>标准错误的重定向必须总是出现在标准输出重定向之后。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr &gt; ls-output.txt <span class="comment"># 错误还是会输出到标准输出</span></span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt <span class="comment"># 文件里没有东西</span></span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr &gt; ls-output.txt 2&gt;&amp;1 <span class="comment"># 正确写法</span></span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt <span class="comment"># 文件内容正常</span></span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr 2&gt;&amp;1 &gt; ls-output.txt <span class="comment"># 标准错误的重定向必须总是出现在标准输出重定向之后</span></span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt</span><br></pre></td></tr></table></figure><p>第二种方法是<code>&amp;&gt;</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr &amp;&gt; ls-output.txt</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt</span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br></pre></td></tr></table></figure><p><code>/dev/null</code>文件是系统设备，叫做<code>位存储桶</code>，它可以接受输入，并且对输入不做任何处理。<br>可以把不需要的东西输出给垃圾桶：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /bin/usr 2&gt; /dev/null</span><br></pre></td></tr></table></figure><h2 id="cat"><a class="header-anchor" href="#cat">#</a>cat</h2><p><code>cat</code>命令读取一个或多个文件，然后复制它们到标准输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat [file]</span><br></pre></td></tr></table></figure><p><code>cat</code>经常被用来显示简短的文本文件。</p><p><code>cat</code>可以把多个分片的文件连在一起：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat movie.mpeg.0* &gt; movie.mpeg</span><br></pre></td></tr></table></figure><p>因为通配符总是以有序的方式展开，所以这些参数会以正确顺序安排。</p><p><code>cat</code>如果不加参数直接运行，将默认连接<code>标准输入</code>和<code>标准输出</code>。可以使用这种行为来创建简短的文本文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@liupans-MacBook-Air ~ % cat &gt; lazy_dog.txt</span><br><span class="line">The quick brown fox jumped over the lazy dog.%</span><br><span class="line">onns@liupans-MacBook-Air ~ % cat lazy_dog.txt</span><br><span class="line">The quick brown fox jumped over the lazy dog.%</span><br></pre></td></tr></table></figure><p>输入<code>Ctrl-d</code>可以告诉<code>cat</code>已经到达文件末尾<code>EOF</code>。</p><h2 id="匿名管道"><a class="header-anchor" href="#匿名管道">#</a>匿名管道</h2><p><code>|</code>可以让一个命令的标准输出通过管道送至另一个命令的标准输入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command1 | command2</span><br></pre></td></tr></table></figure><h2 id="sort"><a class="header-anchor" href="#sort">#</a>sort</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">$ sort --<span class="built_in">help</span></span><br><span class="line">Usage: sort [OPTION]... [FILE]...</span><br><span class="line">  or:  sort [OPTION]... --files0-from=F</span><br><span class="line">Write sorted concatenation of all FILE(s) to standard output.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">Ordering options:</span><br><span class="line"></span><br><span class="line">  -b, --ignore-leading-blanks  ignore leading blanks</span><br><span class="line">  -d, --dictionary-order      consider only blanks and alphanumeric characters</span><br><span class="line">  -f, --ignore-case           fold lower <span class="keyword">case</span> to upper <span class="keyword">case</span> characters</span><br><span class="line">  -g, --general-numeric-sort  compare according to general numerical value</span><br><span class="line">  -i, --ignore-nonprinting    consider only printable characters</span><br><span class="line">  -M, --month-sort            compare (unknown) &lt; <span class="string">'JAN'</span> &lt; ... &lt; <span class="string">'DEC'</span></span><br><span class="line">  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)</span><br><span class="line">  -n, --numeric-sort          compare according to string numerical value</span><br><span class="line">  -R, --random-sort           sort by random <span class="built_in">hash</span> of keys</span><br><span class="line">      --random-source=FILE    get random bytes from FILE</span><br><span class="line">  -r, --reverse               reverse the result of comparisons</span><br><span class="line">      --sort=WORD             sort according to WORD:</span><br><span class="line">                                general-numeric -g, human-numeric -h, month -M,</span><br><span class="line">                                numeric -n, random -R, version -V</span><br><span class="line">  -V, --version-sort          natural sort of (version) numbers within text</span><br><span class="line"></span><br><span class="line">Other options:</span><br><span class="line"></span><br><span class="line">      --batch-size=NMERGE   merge at most NMERGE inputs at once;</span><br><span class="line">                            <span class="keyword">for</span> more use temp files</span><br><span class="line">  -c, --check, --check=diagnose-first  check <span class="keyword">for</span> sorted input; <span class="keyword">do</span> not sort</span><br><span class="line">  -C, --check=quiet, --check=silent  like -c, but <span class="keyword">do</span> not report first bad line</span><br><span class="line">      --compress-program=PROG  compress temporaries with PROG;</span><br><span class="line">                              decompress them with PROG -d</span><br><span class="line">      --debug               annotate the part of the line used to sort,</span><br><span class="line">                              and warn about questionable usage to stderr</span><br><span class="line">      --files0-from=F       <span class="built_in">read</span> input from the files specified by</span><br><span class="line">                            NUL-terminated names <span class="keyword">in</span> file F;</span><br><span class="line">                            If F is - <span class="keyword">then</span> <span class="built_in">read</span> names from standard input</span><br><span class="line">  -k, --key=KEYDEF          sort via a key; KEYDEF gives location and <span class="built_in">type</span></span><br><span class="line">  -m, --merge               merge already sorted files; <span class="keyword">do</span> not sort</span><br><span class="line">  -o, --output=FILE         write result to FILE instead of standard output</span><br><span class="line">  -s, --stable              stabilize sort by disabling last-resort comparison</span><br><span class="line">  -S, --buffer-size=SIZE    use SIZE <span class="keyword">for</span> main memory buffer</span><br><span class="line">  -t, --field-separator=SEP  use SEP instead of non-blank to blank transition</span><br><span class="line">  -T, --temporary-directory=DIR  use DIR <span class="keyword">for</span> temporaries, not <span class="variable">$TMPDIR</span> or /tmp;</span><br><span class="line">                              multiple options specify multiple directories</span><br><span class="line">      --parallel=N          change the number of sorts run concurrently to N</span><br><span class="line">  -u, --unique              with -c, check <span class="keyword">for</span> strict ordering;</span><br><span class="line">                              without -c, output only the first of an equal run</span><br><span class="line">  -z, --zero-terminated     end lines with 0 byte, not newline</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">KEYDEF is F[.C][OPTS][,F[.C][OPTS]] <span class="keyword">for</span> start and stop position, <span class="built_in">where</span> F is a</span><br><span class="line">field number and C a character position <span class="keyword">in</span> the field; both are origin 1, and</span><br><span class="line">the stop position defaults to the line<span class="string">'s end.  If neither -t nor -b is in</span></span><br><span class="line"><span class="string">effect, characters in a field are counted from the beginning of the preceding</span></span><br><span class="line"><span class="string">whitespace.  OPTS is one or more single-letter ordering options [bdfgiMhnRrV],</span></span><br><span class="line"><span class="string">which override global ordering options for that key.  If no key is given, use</span></span><br><span class="line"><span class="string">the entire line as the key.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SIZE may be followed by the following multiplicative suffixes:</span></span><br><span class="line"><span class="string">% 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">With no FILE, or when FILE is -, read standard input.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">*** WARNING ***</span></span><br><span class="line"><span class="string">The locale specified by the environment affects sort order.</span></span><br><span class="line"><span class="string">Set LC_ALL=C to get the traditional sort order that uses</span></span><br><span class="line"><span class="string">native byte values.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GNU coreutils online help: &lt;http://www.gnu.org/software/coreutils/&gt;</span></span><br><span class="line"><span class="string">Report sort translation bugs to &lt;http://translationproject.org/team/&gt;</span></span><br><span class="line"><span class="string">For complete documentation, run: info coreutils '</span>sort invocation<span class="string">'</span></span><br></pre></td></tr></table></figure><ul><li><code>-b</code> 忽略每行前面开始出的空格字符。</li><li><code>-c</code> 检查文件是否已经按照顺序排序。</li><li><code>-d</code> 排序时，处理英文字母、数字及空格字符外，忽略其他的字符。</li><li><code>-f</code> 排序时，将小写字母视为大写字母。</li><li><code>-i</code> 排序时，除了 040 至 176 之间的 ASCII 字符外，忽略其他的字符。</li><li><code>-m</code> 将几个排序好的文件进行合并。</li><li><code>-M</code> 将前面 3 个字母依照月份的缩写进行排序。</li><li><code>-n</code> 依照数值的大小排序。</li><li><code>-u</code> 意味着是唯一的(unique)，输出的结果是去完重了的。</li><li><code>-o</code>&lt;输出文件&gt; 将排序后的结果存入指定的文件。</li><li><code>-r</code> 以相反的顺序来排序。</li><li><code>-t&lt;分隔字符&gt;</code> 指定排序时所用的栏位分隔字符。</li><li><code>+&lt;起始栏位&gt;-&lt;结束栏位&gt;</code> 以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。</li><li><code>--help</code> 显示帮助。</li><li><code>--version</code> 显示版本信息。</li></ul><p>排序命令，默认是按照字典序排序。</p><h2 id="uniq"><a class="header-anchor" href="#uniq">#</a>uniq</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ uniq --<span class="built_in">help</span></span><br><span class="line">Usage: uniq [OPTION]... [INPUT [OUTPUT]]</span><br><span class="line">Filter adjacent matching lines from INPUT (or standard input),</span><br><span class="line">writing to OUTPUT (or standard output).</span><br><span class="line"></span><br><span class="line">With no options, matching lines are merged to the first occurrence.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">  -c, --count           prefix lines by the number of occurrences</span><br><span class="line">  -d, --repeated        only <span class="built_in">print</span> duplicate lines, one <span class="keyword">for</span> each group</span><br><span class="line">  -D, --all-repeated[=METHOD]  <span class="built_in">print</span> all duplicate lines</span><br><span class="line">                          groups can be delimited with an empty line</span><br><span class="line">                          METHOD=&#123;none(default),prepend,separate&#125;</span><br><span class="line">  -f, --skip-fields=N   avoid comparing the first N fields</span><br><span class="line">      --group[=METHOD]  show all items, separating groups with an empty line</span><br><span class="line">                          METHOD=&#123;separate(default),prepend,append,both&#125;</span><br><span class="line">  -i, --ignore-case     ignore differences <span class="keyword">in</span> <span class="keyword">case</span> when comparing</span><br><span class="line">  -s, --skip-chars=N    avoid comparing the first N characters</span><br><span class="line">  -u, --unique          only <span class="built_in">print</span> unique lines</span><br><span class="line">  -z, --zero-terminated  end lines with 0 byte, not newline</span><br><span class="line">  -w, --check-chars=N   compare no more than N characters <span class="keyword">in</span> lines</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">A field is a run of blanks (usually spaces and/or TABs), <span class="keyword">then</span> non-blank</span><br><span class="line">characters.  Fields are skipped before chars.</span><br><span class="line"></span><br><span class="line">Note: <span class="string">'uniq'</span> does not detect repeated lines unless they are adjacent.</span><br><span class="line">You may want to sort the input first, or use <span class="string">'sort -u'</span> without <span class="string">'uniq'</span>.</span><br><span class="line">Also, comparisons honor the rules specified by <span class="string">'LC_COLLATE'</span>.</span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report uniq translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">For complete documentation, run: info coreutils <span class="string">'uniq invocation'</span></span><br></pre></td></tr></table></figure><ul><li><code>-c或--count</code> 在每列旁边显示该行重复出现的次数。</li><li><code>-d或--repeated</code> 仅显示重复出现的行列。</li><li><code>-f&lt;栏位&gt;或--skip-fields=&lt;栏位&gt;</code> 忽略比较指定的栏位。</li><li><code>-s&lt;字符位置&gt;或--skip-chars=&lt;字符位置&gt;</code> 忽略比较指定的字符。</li><li><code>-u或--unique</code> 仅显示出一次的行列。</li><li><code>-w&lt;字符位置&gt;或--check-chars=&lt;字符位置&gt;</code> 指定要比较的字符。</li><li><code>--help</code> 显示帮助。</li><li><code>--version</code> 显示版本信息。</li><li><code>[输入文件]</code> 指定已排序好的文本文件。如果不指定此项，则从标准读取数据；</li><li><code>[输出文件]</code> 指定输出的文件。如果不指定此选项，则将内容显示到标准输出设备（显示终端）。</li></ul><p><code>uniq</code>从数据列表中删除任何重复行。</p><p>假设有如下文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ vi uniq-test</span><br><span class="line">A</span><br><span class="line">A</span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">B</span><br><span class="line">B</span><br><span class="line">B</span><br><span class="line">B</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">D</span><br><span class="line">D</span><br><span class="line">D</span><br><span class="line">C</span><br><span class="line">B</span><br><span class="line">A</span><br></pre></td></tr></table></figure><p>执行<code>uniq</code>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ uniq uniq-test</span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br><span class="line">D</span><br><span class="line">C</span><br><span class="line">B</span><br><span class="line">A</span><br></pre></td></tr></table></figure><p><strong>当重复的行并不相邻时，<code>uniq</code>命令是不起作用的。</strong></p><p><strong>所以一般<code>uniq</code>之前先<code>sort</code>一下，这两个命令经常一起用。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sort uniq-test | uniq</span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br><span class="line">D</span><br></pre></td></tr></table></figure><h2 id="wc"><a class="header-anchor" href="#wc">#</a>wc</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ wc --<span class="built_in">help</span></span><br><span class="line">Usage: wc [OPTION]... [FILE]...</span><br><span class="line">  or:  wc [OPTION]... --files0-from=F</span><br><span class="line">Print newline, word, and byte counts <span class="keyword">for</span> each FILE, and a total line <span class="keyword">if</span></span><br><span class="line">more than one FILE is specified.  With no FILE, or when FILE is -,</span><br><span class="line"><span class="built_in">read</span> standard input.  A word is a non-zero-length sequence of characters</span><br><span class="line">delimited by white space.</span><br><span class="line">The options below may be used to select <span class="built_in">which</span> counts are printed, always <span class="keyword">in</span></span><br><span class="line">the following order: newline, word, character, byte, maximum line length.</span><br><span class="line">  -c, --bytes            <span class="built_in">print</span> the byte counts</span><br><span class="line">  -m, --chars            <span class="built_in">print</span> the character counts</span><br><span class="line">  -l, --lines            <span class="built_in">print</span> the newline counts</span><br><span class="line">      --files0-from=F    <span class="built_in">read</span> input from the files specified by</span><br><span class="line">                           NUL-terminated names <span class="keyword">in</span> file F;</span><br><span class="line">                           If F is - <span class="keyword">then</span> <span class="built_in">read</span> names from standard input</span><br><span class="line">  -L, --max-line-length  <span class="built_in">print</span> the length of the longest line</span><br><span class="line">  -w, --words            <span class="built_in">print</span> the word counts</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report wc translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">For complete documentation, run: info coreutils <span class="string">'wc invocation'</span></span><br></pre></td></tr></table></figure><ul><li><code>-c或--bytes或--chars</code> 只显示 Bytes 数。</li><li><code>-l或--lines</code> 显示行数。</li><li><code>-w或--words</code> 只显示字数。</li><li><code>--help</code> 在线帮助。</li><li><code>--version</code> 显示版本信息。</li></ul><p><code>wc</code>命令是用来显示文件所包含的行数、字数和字节数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wc ls-output.txt</span><br><span class="line"> 1873  1872 17825 ls-output.txt</span><br></pre></td></tr></table></figure><h2 id="grep"><a class="header-anchor" href="#grep">#</a>grep</h2><p><code>grep</code>用来找到文件中的匹配文本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep pattern [file...]</span><br></pre></td></tr></table></figure><p>比如用来查找名字里包含<code>zip</code>的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ls /bin /usr/bin | sort | uniq | grep zip</span><br><span class="line">gpg-zip</span><br><span class="line">gunzip</span><br><span class="line">gzip</span><br><span class="line">zip</span><br><span class="line">zipcloak</span><br><span class="line">zipnote</span><br><span class="line">zipsplit</span><br></pre></td></tr></table></figure><p><code>-i</code>使得 <code>grep</code> 在执行搜索时忽略大小写，<code>-v</code>选项会告诉 <code>grep</code> 只打印不匹配的行。</p><h2 id="head-tail"><a class="header-anchor" href="#head-tail">#</a>head / tail</h2><p>查看文件的头部/尾部。</p><p><code>-n</code>来调整显示多少行。</p><p>因为有一些日志文件的尾部可能一直有更新，所以可以用<code>-f</code>选项一直把最新的尾部文件显示到屏幕上，用<code>ctrl+c</code>来停止监听。</p><h2 id="tee"><a class="header-anchor" href="#tee">#</a>tee</h2><p><code>tee</code>程序从标准输入读入数据，并且同时复制数据到标准输出（允许数据继续随着管道线流动）和一个或多个文件。</p><p>用处是可以从一系列的管道中间读取数据到别的地方。（直观的想法就是，在管道上添加一个分支，<s>私接水管（不是</s>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ ls /usr/bin | tee ls.txt | grep zip</span><br><span class="line">bunzip2</span><br><span class="line">bzip2</span><br><span class="line">bzip2recover</span><br><span class="line">funzip</span><br><span class="line">gunzip</span><br><span class="line">gzip</span><br><span class="line">unzip</span><br><span class="line">unzipsfx</span><br><span class="line">zip</span><br><span class="line">zipcloak</span><br><span class="line">zipdetails</span><br><span class="line">zipdetails5.18</span><br><span class="line">zipdetails5.28</span><br><span class="line">zipgrep</span><br><span class="line">zipinfo</span><br><span class="line">zipnote</span><br><span class="line">zipsplit</span><br></pre></td></tr></table></figure><p><code>ls.txt</code>里也有<code>ls /usr.bin</code>的数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat ls.txt | wc -l</span><br><span class="line">    1012</span><br></pre></td></tr></table></figure><h2 id="字符展开"><a class="header-anchor" href="#字符展开">#</a>字符展开</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> *</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> *</span><br><span class="line">anaconda-ks.cfg certbot-auto ls-output.txt uniq-test</span><br></pre></td></tr></table></figure><p><code>shell</code>在<code>echo</code>命令被执行前把<code>*</code>展开成了另外的东西。</p><p>当回车键被按下时，<code>shell</code>在命令被执行前在命令行上自动展开任何符合条件的字符，所以<code>echo</code>命令的实际参数并不是<code>*</code>，而是它<code>展开后的结果</code>。</p><h2 id="路径名展开"><a class="header-anchor" href="#路径名展开">#</a>路径名展开</h2><p>通配符所依赖的工作机制叫做<code>路径名展开</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> D*</span><br><span class="line">Desktop Documents Downloads</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> *s</span><br><span class="line">Applications Documents Downloads Movies Pictures sensors</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> [[:upper:]]*</span><br><span class="line">Applications Desktop Documents Downloads Library Movies Music Pictures Postman Public</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> /usr/*/share</span><br><span class="line">/usr/<span class="built_in">local</span>/share</span><br></pre></td></tr></table></figure><p>以圆点字符开头的文件名是隐藏文件，路径名展开也尊重这种行为，<code>echo *</code>不会显示隐藏文件。</p><p><code>~</code>当它用在一个单词的开头时，它会展开成指定用户的家目录名，如果没有指定用户名，则展开成当前用户的家目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> ~</span><br><span class="line">/Users/onns</span><br></pre></td></tr></table></figure><p>如果有用户<code>foo</code>这个帐号，那么：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> ~foo</span><br><span class="line">/home/foo</span><br></pre></td></tr></table></figure><h2 id="算术表达式展开"><a class="header-anchor" href="#算术表达式展开">#</a>算术表达式展开</h2><p><code>shell</code>在展开中执行算数表达式，这允许我们把<code>shell</code>提示当作计算器来使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$((expression))</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $((2*3))</span><br><span class="line">6</span><br></pre></td></tr></table></figure><p><strong>算术表达式只支持整数。</strong></p><p>然而我好像用了不是整数的数，也算出来结果了，可能和<code>Linux</code>版本有关系：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $((5.2423/2))</span><br><span class="line">2.6211500000000001</span><br></pre></td></tr></table></figure><p>支持的运算符：<code>+</code> <code>-</code> <code>*</code> <code>/</code> <code>%</code> <code>**</code>。</p><p>因为只支持整数，所以<code>除法的结果也是整数</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $((5/2))</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p><strong>在算术表达式中空格并不重要，并且表达式可以嵌套。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $(($((5**2)) * 3))</span><br><span class="line">75</span><br></pre></td></tr></table></figure><h2 id="花括号展开"><a class="header-anchor" href="#花括号展开">#</a>花括号展开</h2><p>可以从一个包含花括号的模式中创建多个文本字符串。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> Front-&#123;A,B,C&#125;-Back</span><br><span class="line">Front-A-Back Front-B-Back Front-C-Back</span><br></pre></td></tr></table></figure><p>花括号展开模式可能包含一个开头部分叫做<code>报头</code>，一个结尾部分叫做<code>附言</code>。</p><p><code>花括号表达式</code>本身可能包含一个由<code>逗号分开的字符串列表</code>，或者一个<code>整数区间</code>，或者<code>单个的字符的区间</code>。</p><p><strong>这种模式不能嵌入空白字符。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> Number_&#123;1..5&#125;</span><br><span class="line">Number_1 Number_2 Number_3 Number_4 Number_5</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> &#123;Z..A&#125;</span><br><span class="line">Z Y X W V U T S R Q P O N M L K J I H G F E D C B A</span><br></pre></td></tr></table></figure><p><strong>花括号展开可以嵌套：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> a&#123;A&#123;1,2&#125;,B&#123;3,4&#125;&#125;b</span><br><span class="line">aA1b aA2b aB3b aB4b</span><br></pre></td></tr></table></figure><p>还有一些<code>参数变量</code>展开：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$USER</span></span><br><span class="line">onns</span><br></pre></td></tr></table></figure><p>但在参数展开中，如果你拼写错了一个变量名，<strong>展开仍然会进行</strong>，只是展开的结果是一个空字符串：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$SUER</span></span><br></pre></td></tr></table></figure><h2 id="命令替换"><a class="header-anchor" href="#命令替换">#</a>命令替换</h2><p>命令替换允许我们把一个命令的输出作为一个展开模式来使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $(ls)</span><br><span class="line">Applications Desktop Documents Downloads Library Movies Music Pictures Postman Public go node sensors</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l $(<span class="built_in">which</span> cp)</span><br><span class="line">-rwxr-xr-x  1 root  wheel  42272 May 28 07:37 /bin/cp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ file $(ls /usr/bin/* | grep zip)</span><br><span class="line">/usr/bin/bunzip2:        Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/bzip2:          Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/bzip2recover:   Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/funzip:         Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/gunzip:         Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/gzip:           Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/unzip:          Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/unzipsfx:       Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zip:            Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zipcloak:       Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zipdetails:     Perl script text executable</span><br><span class="line">/usr/bin/zipdetails5.18: Perl script text executable</span><br><span class="line">/usr/bin/zipdetails5.28: Perl script text executable</span><br><span class="line">/usr/bin/zipgrep:        POSIX shell script text executable, ASCII text</span><br><span class="line">/usr/bin/zipinfo:        Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zipnote:        Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zipsplit:       Mach-O 64-bit executable x86_64</span><br></pre></td></tr></table></figure><p>在旧版<code>shell</code>程序中，有另一种语法也支持命令替换，使用<code>倒引号</code>来代替美元符号和括号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l `<span class="built_in">which</span> cp`</span><br><span class="line">-rwxr-xr-x  1 root  wheel  42272 May 28 07:37 /bin/cp</span><br></pre></td></tr></table></figure><h2 id="引用"><a class="header-anchor" href="#引用">#</a>引用</h2><p>用<code>双引号</code>包裹的字符串，<code>单词分割</code>、<code>路径名展开</code>、<code>波浪线展开</code>和<code>花括号展开</code>会失效，<code>参数展开</code>、 <code>算术展开</code>和<code>命令替换</code>仍然执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"<span class="variable">$USER</span> <span class="variable">$((2+2)</span>) <span class="variable">$(cal)</span>"</span></span><br><span class="line">onns 4    November 2020      </span><br><span class="line">Su Mo Tu We Th Fr Sa  </span><br><span class="line"> 1  2  3  4  5  6  7  </span><br><span class="line"> 8  9 10 11 12 13 14  </span><br><span class="line">15 16 17 18 19 20 21  </span><br><span class="line">22 23 24 25 26 27 28  </span><br><span class="line">29 30</span><br></pre></td></tr></table></figure><p>例外的是<code>$</code> <code>\</code> <code>`</code>。</p><p>在默认情况下，单词分割机制会在单词中寻找<code>空格</code>，<code>制表符</code>，和<code>换行符</code>，并把它们看作单词之间的界定符。这意味着无引用的空格，制表符和换行符都不是文本的一部分，它们只作为<code>分隔符</code>使用。</p><p>虽然命令替换还有效果，但是有时候可能会有用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $(cal)</span><br><span class="line">November 2020 Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"<span class="variable">$(cal)</span>"</span></span><br><span class="line">   November 2020      </span><br><span class="line">Su Mo Tu We Th Fr Sa  </span><br><span class="line"> 1  2  3  4  5  6  7  </span><br><span class="line"> 8  9 10 11 12 13 14  </span><br><span class="line">15 16 17 18 19 20 21  </span><br><span class="line">22 23 24 25 26 27 28  </span><br><span class="line">29 30</span><br></pre></td></tr></table></figure><p>如果需要禁止所有的展开，我们要使用<code>单引号</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">'$USER $((2+2)) $(cal)'</span></span><br><span class="line"><span class="variable">$USER</span> $((2+2)) $(cal)</span><br></pre></td></tr></table></figure><p>也可以用单个的转义字符反斜杠<code>\</code>。</p><p><strong>注意在单引号中，反斜杠失去它的特殊含义，它被看作普通字符。</strong></p><h2 id="恢复-alt-键功能"><a class="header-anchor" href="#恢复-alt-键功能">#</a>恢复 alt 键功能</h2><p>在<code>MacOS</code>的<code>Terminal</code>里，用<code>alt</code>组合键总是不好使，这次查了一下，问题解决。</p><p><code>Terminal</code> -&gt; <code>Preferences</code>（快捷键<code>cmd + ,</code>） -&gt; <code>Profiles</code> -&gt; <code>Keyboard</code> -&gt; <code>Use Option as Meta key</code></p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201117-1.jpg" alt="Use Option as Meta key"></p></center><h3 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h3><ul><li><a href="https://superuser.com/questions/496090/how-to-use-alt-commands-in-a-terminal-on-os-x" target="_blank" rel="noopener">How to use ALT commands in a terminal on OS X?</a></li></ul><h2 id="移动光标"><a class="header-anchor" href="#移动光标">#</a>移动光标</h2><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl-a</code></td><td style="text-align:left">移动光标到行首。</td></tr><tr><td style="text-align:center"><code>Ctrl-e</code></td><td style="text-align:left">移动光标到行尾。</td></tr><tr><td style="text-align:center"><code>Ctrl-f</code></td><td style="text-align:left">光标后移一个字符</td></tr><tr><td style="text-align:center"><code>Ctrl-b</code></td><td style="text-align:left">光标前移一个字符</td></tr><tr><td style="text-align:center"><code>Alt-f</code></td><td style="text-align:left">光标后移一个字。</td></tr><tr><td style="text-align:center"><code>Alt-b</code></td><td style="text-align:left">光标前移一个字。</td></tr><tr><td style="text-align:center"><code>Ctrl-l</code></td><td style="text-align:left">清空屏幕，移动光标到左上角。</td></tr></tbody></table><h2 id="修改文本"><a class="header-anchor" href="#修改文本">#</a>修改文本</h2><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl-d</code></td><td style="text-align:left">删除光标位置的字符。</td></tr><tr><td style="text-align:center"><code>Ctrl-t</code></td><td style="text-align:left">光标位置的字符和光标前面的字符互换位置。</td></tr><tr><td style="text-align:center"><code>Alt-t</code></td><td style="text-align:left">光标位置的字和其前面的字互换位置。</td></tr><tr><td style="text-align:center"><code>Alt-l</code></td><td style="text-align:left">把从光标位置到字尾的字符转换成小写字母。</td></tr><tr><td style="text-align:center"><code>Alt-u</code></td><td style="text-align:left">把从光标位置到字尾的字符转换成大写字母。</td></tr></tbody></table><p><code>ctrl + t</code>这个很有用，因为其实经常都是打反两个字母，比如我，经常把<code>conda activate</code>打成<code>conda acitvate</code>。但是我在<code>macOS</code>上测试的时候，确实是<strong>光标位置的字符和光标前面的字符互换位置</strong>，但是换位完之后，<strong>光标往后挪了一个位置</strong>（如果后面还有文本的话）。</p><h2 id="剪切粘贴"><a class="header-anchor" href="#剪切粘贴">#</a>剪切粘贴</h2><p><code>Readline</code>的文档使用术语 <code>killing</code> 和 <code>yanking</code> 来指我们平常所说的剪切和粘贴。剪切下来的本文被存储在一个叫做<code>剪切环</code>（kill-ring）的缓冲区中。</p><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl-k</code></td><td style="text-align:left">剪切从光标位置到行尾的文本。</td></tr><tr><td style="text-align:center"><code>Ctrl-u</code></td><td style="text-align:left">剪切从光标位置到行首的文本。</td></tr><tr><td style="text-align:center"><code>Alt-d</code></td><td style="text-align:left">剪切从光标位置到词尾的文本。</td></tr><tr><td style="text-align:center"><code>Alt-Backspace</code></td><td style="text-align:left">剪切从光标位置到词头的文本。如果光标在一个单词的开头，剪切前一个单词。</td></tr><tr><td style="text-align:center"><code>Ctrl-y</code></td><td style="text-align:left">把剪切环中的文本粘贴到光标位置。</td></tr></tbody></table><p><code>Alt-Backspace</code>如果光标在一个单词的开头，剪切前一个单词，<strong>同时会把两个词之间的空格也一起</strong>剪切掉并且存在剪切环里。</p><h2 id="自动补全"><a class="header-anchor" href="#自动补全">#</a>自动补全</h2><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Alt-?</code></td><td style="text-align:left">显示可能的自动补全列表。</td></tr><tr><td style="text-align:center"><code>Alt-*</code></td><td style="text-align:left">插入所有可能的自动补全。</td></tr></tbody></table><p><code>alt + ?</code>等效于<code>tab</code>两次。</p><p>这俩命令我试不出来。。好在目前也没什么用= =！</p><h2 id="历史命令"><a class="header-anchor" href="#历史命令">#</a>历史命令</h2><p><code>bash</code>维护着一个已经执行过的命令的历史列表。这个命令列表被保存在你家目录下，一个叫做<code>.bash_history</code>的文件里。</p><p><strong>在默认情况下，bash 会存储你所输入的最后 <code>500</code> 个命令。</strong></p><p>每个历史记录都有行号，我们可以使用一种叫做<code>历史命令展开</code>的方式，来调用行号所代表的这一行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!line-number</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">history</span></span><br><span class="line">  995  uniq --<span class="built_in">help</span></span><br><span class="line">  996  uniq</span><br><span class="line">  997  ls /bin /usr/bin | sort | uniq -d | less</span><br><span class="line">  998  ssh root@xiaoxia.onns.xyz</span><br><span class="line">  999  blog</span><br><span class="line"> 1000  cpblog</span><br><span class="line"> 1001  ssh root@xiaoxia.onns.xyz</span><br><span class="line"> 1002  clear</span><br><span class="line"> 1003  ashdasda  adad</span><br><span class="line"> 1004  askdhakdjah akjsdhakjdhakjd akdjhakjdhajdk</span><br><span class="line"> 1005  hkasdhakjsdha ahdsaksjdhktttttt[</span><br><span class="line"> 1006  abcd123456abcd123456abcd12abcd123456abcd123456abcd123456 3456 ahskdasdjha</span><br><span class="line"> 1007  <span class="built_in">which</span>-command ls</span><br><span class="line"> 1008  ls D</span><br><span class="line"> 1009  <span class="built_in">history</span></span><br><span class="line"> 1010  ls /bin /usr/bin | sort | uniq -d | less</span><br><span class="line">$ !995</span><br><span class="line">uniq --<span class="built_in">help</span></span><br><span class="line">uniq: illegal option -- -</span><br><span class="line">usage: uniq [-c | -d | -u] [-i] [-f fields] [-s chars] [input [output]]</span><br></pre></td></tr></table></figure><p><strong><code>bash</code>也具有增量搜索历史列表的能力。</strong><br>输入 <code>Ctrl-r</code> 来启动增量搜索，接着输入你要寻找的字。当你找到它以后，你可以敲入 <code>Enter</code> 来执行命令，或者输入 <code>Ctrl-j</code>，从历史列表中复制这一行到当前命令行。再次输入 <code>Ctrl-r</code>，来找到下一个匹配项(历史列表中向上移动)。输入 <code>Ctrl-g</code> 或者 <code>Ctrl-c</code>，退出搜索。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">bck-i-search: _</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ uniq --<span class="built_in">help</span></span><br><span class="line">bck-i-search: un_</span><br></pre></td></tr></table></figure><p>说实话，好麻烦，我还是喜欢用<code>grep + 管道</code>。</p><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl-p</code></td><td style="text-align:left">移动到上一个历史条目。类似于上箭头按键。</td></tr><tr><td style="text-align:center"><code>Ctrl-n</code></td><td style="text-align:left">移动到下一个历史条目。类似于下箭头按键。</td></tr><tr><td style="text-align:center"><code>Alt-&lt;</code></td><td style="text-align:left">移动到历史列表开头。</td></tr><tr><td style="text-align:center"><code>Alt-&gt;</code></td><td style="text-align:left">移动到历史列表结尾，即当前命令行。</td></tr><tr><td style="text-align:center"><code>Ctrl-r</code></td><td style="text-align:left">反向增量搜索。从当前命令行开始，向上增量搜索。</td></tr><tr><td style="text-align:center"><code>Alt-p</code></td><td style="text-align:left">反向搜索，非增量搜索。(输入要查找的字符串，按下 Enter 来执行搜索)。</td></tr><tr><td style="text-align:center"><code>Alt-n</code></td><td style="text-align:left">向前搜索，非增量。</td></tr><tr><td style="text-align:center"><code>Ctrl-o</code></td><td style="text-align:left">执行历史列表中的当前项，并移到下一个。如果你想要执行 历史列表中一系列的命令，这很方便。</td></tr></tbody></table><p>历史命令展开：</p><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>!!</code></td><td style="text-align:left">重复最后一次执行的命令。可能按下上箭头按键和 enter 键 更容易些。</td></tr><tr><td style="text-align:center"><code>!number</code></td><td style="text-align:left">重复历史列表中第 number 行的命令。</td></tr><tr><td style="text-align:center"><code>!string</code></td><td style="text-align:left">重复最近历史列表中，以这个字符串开头的命令。</td></tr><tr><td style="text-align:center"><code>!?string</code></td><td style="text-align:left">重复最近历史列表中，包含这个字符串的命令。</td></tr></tbody></table><p><strong>应该小心谨慎地使用 <code>!string</code> 和 <code>!?string</code> 格式，除非你完全确信历史列表条目的内容。</strong></p><h2 id="用户"><a class="header-anchor" href="#用户">#</a>用户</h2><p>当一个用户拥有一个文件或目录时，用户对这个文件或目录的访问权限拥有控制权。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ id</span><br><span class="line">uid=501(onns) gid=20(staff) groups=20(staff),12(everyone),61(localaccounts),79(_appserverusr),80(admin),81(_appserveradm),98(_lpadmin),33(_appstore),100(_lpoperator),204(_developer),250(_analyticsusers),395(com.apple.access_ftp),398(com.apple.access_screensharing),399(com.apple.access_ssh),400(com.apple.access_remote_ae),701(com.apple.sharepoint.group.1)</span><br></pre></td></tr></table></figure><p>对于文件和目录的访问权力是根据读访问、写访问和执行访问来定义的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ &gt; foo.txt</span><br><span class="line">$ ls -l foo.txt</span><br><span class="line">-rw-r--r--@ 1 onns  staff  12 Nov 20 20:36 foo.txt</span><br></pre></td></tr></table></figure><p><strong>列表的前十个字符是文件的属性，第一个字符表明文件类型。</strong></p><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>-</code></td><td style="text-align:left">一个普通文件</td></tr><tr><td style="text-align:center"><code>d</code></td><td style="text-align:left">一个目录</td></tr><tr><td style="text-align:center"><code>l</code></td><td style="text-align:left">一个符号链接<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></td></tr><tr><td style="text-align:center"><code>c</code></td><td style="text-align:left">一个字符设备文件<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></td></tr><tr><td style="text-align:center"><code>b</code></td><td style="text-align:left">一个块设备文件<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup></td></tr></tbody></table><p>剩下的九个字符叫做文件模式，代表着<code>文件所有者</code>、<code>文件组所有者</code>和<code>其他人</code>的<code>读</code>、<code>写</code>和<code>执行</code>权限。</p><p>文件：</p><ul><li><code>r</code>：允许打开并读取文件内容。</li><li><code>w</code>：允许写入文件内容或截断文件。但是<code>不允许</code>对文件进行<code>重命名</code>或<code>删除</code>，<strong>重命名或删除是由目录的属性决定的</strong>。</li><li><code>x</code>：允许将文件作为程序来执行，使用脚本语言编写的程序必须设置为可读才能被执行。</li></ul><p>目录：</p><ul><li><code>r</code>：允许列出目录中的内容，前提是目录必须设置了<code>可执行属性(x)</code>。</li><li><code>w</code>：允许在目录下新建、删除或重命名文件，前提是目录必须设置了<code>可执行属性(x)</code>。</li><li><code>x</code>：允许进入目录，例如：<code>cd directory</code>。</li></ul><h2 id="chmod"><a class="header-anchor" href="#chmod">#</a>chmod</h2><p><strong>只有文件的所有者或者超级用户才能更改文件或目录的模式。</strong></p><p><code>chmod</code>命令支持两种不同的方法来改变文件模式：<code>八进制数字表示法</code>或<code>符号表示法</code>。</p><table><thead><tr><th style="text-align:center">八进制</th><th style="text-align:center">二进制</th><th style="text-align:center">文件模式</th></tr></thead><tbody><tr><td style="text-align:center"><code>0</code></td><td style="text-align:center"><code>000</code></td><td style="text-align:center"><code>---</code></td></tr><tr><td style="text-align:center"><code>1</code></td><td style="text-align:center"><code>001</code></td><td style="text-align:center"><code>--x</code></td></tr><tr><td style="text-align:center"><code>2</code></td><td style="text-align:center"><code>010</code></td><td style="text-align:center"><code>-w-</code></td></tr><tr><td style="text-align:center"><code>3</code></td><td style="text-align:center"><code>011</code></td><td style="text-align:center"><code>-wx</code></td></tr><tr><td style="text-align:center"><code>4</code></td><td style="text-align:center"><code>100</code></td><td style="text-align:center"><code>r--</code></td></tr><tr><td style="text-align:center"><code>5</code></td><td style="text-align:center"><code>101</code></td><td style="text-align:center"><code>r-x</code></td></tr><tr><td style="text-align:center"><code>6</code></td><td style="text-align:center"><code>110</code></td><td style="text-align:center"><code>rw-</code></td></tr><tr><td style="text-align:center"><code>7</code></td><td style="text-align:center"><code>111</code></td><td style="text-align:center"><code>rwx</code></td></tr></tbody></table><p>常用权限：<code>7 (rwx)</code>，<code>6 (rw-)</code>，<code>5 (r-x)</code>，<code>4 (r--)</code>，和 <code>0 (-–)</code>。</p><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:left">解释</th></tr></thead><tbody><tr><td style="text-align:center"><code>u</code></td><td style="text-align:left"><code>user</code>的简写，意思是文件或目录的所有者。</td></tr><tr><td style="text-align:center"><code>g</code></td><td style="text-align:left"><code>groups</code>的简写，用户组。</td></tr><tr><td style="text-align:center"><code>o</code></td><td style="text-align:left"><code>others</code>的简写，意思是其他所有的人。</td></tr><tr><td style="text-align:center"><code>a</code></td><td style="text-align:left"><code>all</code>的简写，是<code>u</code>、<code>g</code>和<code>o</code>三者的联合。</td></tr></tbody></table><p><strong>如果没有指定字符，则假定使用<code>all</code>。</strong></p><p>权限操作：</p><ul><li><code>+</code>：加上一个权限。</li><li><code>-</code>：删掉一个权限。</li><li><code>=</code>：只有指定的权限可用，其它所有的权限被删除。</li></ul><p><strong>多种设定可以用逗号分开。</strong></p><p><code>u+x,go=rw</code>：给文件拥有者执行权限并给组和其他人读和执行的权限。</p><h2 id="umask"><a class="header-anchor" href="#umask">#</a>umask</h2><p>当创建一个文件时，<code>umask</code>命令控制着文件的默认权限。<br><code>umask</code>以掩码的形式来工作，和网关那里差不多，一般是<code>022</code>和<code>002</code>。</p><p>比如说正常一个权限是<code>666</code>（<code>110 110 110</code>），即<code>rw-rw-rw-</code>，被<code>022</code>（<code>000 010 010</code>）的<code>umask</code>后会变成<code>110 100 100</code>，即<code>644</code>，<code>rw-r--r--</code>。</p><blockquote><p>虽然我们通常看到一个八进制的权限掩码用三位数字来表示，但是从技术层面上来讲，用四位数字来表示它更确切些。为什么呢？因为除了读取、写入和执行权限之外，还有其它较少用到的权限设置。</p></blockquote><blockquote><p>其中之一是 setuid 位(八进制 4000)。当应用到一个可执行文件时，它把有效用户 ID 从真正的用户(实际运行程序的用户)设置成程序所有者的 ID。这种操作通常会应用到一些由超级用户所拥有的程序。当一个普通用户运行一个程序，这个程序由根用户 (root) 所有，并且设置了 setuid 位，这个程序运行时具有超级用户的特权，这样程序就可以访问普通用户禁止访问的文件和目录。很明显，因为这会引起安全方面的问题，所有可以设置 setuid 位的程序个数，必须控制在绝对小的范围内。</p></blockquote><blockquote><p>第二个是 setgid 位(八进制 2000)，这个相似于 setuid 位，把有效用户组 ID 从真正的用户组 ID 更改为文件所有者的组 ID。如果设置了一个目录的 setgid 位，则目录中新创建的文件具有这个目录用户组的所有权，而不是文件创建者所属用户组的所有权。对于共享目录来说，当一个普通用户组中的成员，需要访问共享目录中的所有文件，而不管文件所有者的主用户组时，那么设置 setgid 位很有用处。</p></blockquote><blockquote><p>第三个是 sticky 位(八进制 1000)。这个继承于 Unix，在 Unix 中，它可能把一个可执行文件标志为“不可交换的”。在 Linux 中，会忽略文件的 sticky 位，但是如果一个目录设置了 sticky 位，那么它能阻止用户删除或重命名文件，除非用户是这个目录的所有者，或者是文件所有者，或是超级用户。这个经常用来控制访问共享目录，比方说/tmp。</p></blockquote><p>每个命令还是要给个例子，我<code>tee</code>命令虽然知道是怎么工作的，但是用的时候还是自然而然的加了一个<code>&gt;</code>，错了= =。</p><h2 id="su"><a class="header-anchor" href="#su">#</a>su</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su [-[l]] [user]</span><br></pre></td></tr></table></figure><p>如果包含<code>-l</code>选项，那么会为指定用户启动一个需要登录的<code>shell</code>，如果不指定用户，那么就假定是<strong>超级用户</strong>。</p><p><code>-l</code>可以缩写为<code>-</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deploy@iZwz96txzmeg2f5wu9eqigZ:~$ su -</span><br><span class="line">Password:</span><br><span class="line">root@iZwz96txzmeg2f5wu9eqigZ:~<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>也可以只执行单个命令，而不是启动一个新的可交互的 shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -c <span class="string">'command'</span></span><br></pre></td></tr></table></figure><p><code>单引号</code>保证了不会有任何展开。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ su -c <span class="string">'ls -l /root/*'</span></span><br><span class="line">Password:</span><br><span class="line">-rw------- 1 root root 200604 Sep 17 21:43 /root/nohup.out</span><br><span class="line">-rw-r--r-- 1 root root     22 Sep 18 12:24 /root/py.log</span><br><span class="line">-rw-r--r-- 1 root root   1579 Sep  9 16:14 /root/sync.log</span><br><span class="line"></span><br><span class="line">/root/go:</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x 3 root root 4096 Sep  9 16:16 src</span><br></pre></td></tr></table></figure><h2 id="sudo"><a class="header-anchor" href="#sudo">#</a>sudo</h2><p>管理员能够配置<code>sudo</code>命令，从而允许一个普通用户以不同的身份（通常是超级用户），通过一种非常可控的方式来执行命令。<strong>尤其是，只有一个用户可以执行一个或多个特殊命令时。</strong></p><p><code>sudo</code>命令不要求超级用户的密码，而是使用自己的密码来认证。</p><p><code>su</code> 和 <code>sudo</code> 之间的一个重要区别是 <code>sudo</code> 不会重新启动一个 <code>shell</code>，也不会加载另一个用户的 <code>shell</code> 运行环境。这意味者命令不必用单引号引起来。</p><blockquote><p>几年前，大多数的 Linux 发行版都依赖于 su 命令，来达到目的。su 命令不需要 sudo 命令所要求的配置，su 命令拥有一个 root 帐号，是 Unix 中的传统。但这会引起问题。所有用户会企图以 root 用户帐号来操纵系统。事实上，一些用户专门以 root 用户帐号来操作系统，因为这样做，的确消除了所有那些讨厌的“权限被拒绝” 的消息。你这样做就会使得 Linux 系统的安全性能被降低到和 Windows 系统相同 的级别。不是一个好主意。<br>当引进 Ubuntu 的时候，它的创作者们采取了不同的策略。默认情况下，Ubuntu 不允许用户登录到 root 帐号(因为不能为 root 帐号设置密码)，而是使用 sudo 命 令授予普通用户超级用户权限。通过 sudo 命令，最初的用户可以拥有超级用户权 限，也可以授予随后的用户帐号相似的权力。</p></blockquote><h2 id="chown"><a class="header-anchor" href="#chown">#</a>chown</h2><p><code>chown</code>命令被用来更改文件或目录的所有者和用户组。使用这个命令需要超级用户权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown [owner][:[group]] file...</span><br></pre></td></tr></table></figure><p><code>bob</code>： 把文件所有者从当前属主更改为用户 bob。<br><code>bob:users</code>： 把文件所有者改为用户 bob，文件用户组改为用户组 users。<br><code>:admins</code>： 把文件用户组改为组 admins，文件所有者不变。<br><code>bob:</code>： 文件所有者改为用户 bob，文件用户组改为用户 bob 登录 系统时所属的用户组。</p><p><strong>在大多数的配置中，sudo 命令会相信你几分钟，直到计时结束。</strong></p><h2 id="chgrp"><a class="header-anchor" href="#chgrp">#</a>chgrp</h2><blockquote><p>在旧版 Unix 系统中，chown 命令只能更改文件所有权，而不是用户组所有权。为了达到目的， 使用一个独立的命令，chgrp 来完成。除了限制多一点之外，chgrp 命令与 chown 命令使用起 来很相似。</p></blockquote><h2 id="passwd"><a class="header-anchor" href="#passwd">#</a>passwd</h2><p>设置或更改用户密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd [user]</span><br></pre></td></tr></table></figure><blockquote><p>当系统启动的时候，内核先把一些它自己的活动初始化为进程，然后运行一个叫做 init 的程 序。init，依次地，再运行一系列的称为 init 脚本的 shell 脚本(位于/etc)，它们可以启动所有 的系统服务。其中许多系统服务以守护(daemon)程序的形式实现，守护程序仅在后台运行，没有任何用户接口 (User Interface)。这样，即使我们没有登录系统，至少系统也在忙于执行一 些例行事务。<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup></p></blockquote><p>在进程方案中，一个程序可以发动另一个程序被表述为一个父进程可以产生一个子进程。</p><blockquote><p>内核维护每个进程的信息，以此来保持事情有序。例如，系统分配给每个进程一个数字，这 个数字叫做进程 (process) ID 或 PID。PID 号按升序分配，init 进程的 PID 总是 1。内核也对 分配给每个进程的内存和就绪状态进行跟踪以便继续执行这个进程。</p></blockquote><h2 id="ps"><a class="header-anchor" href="#ps">#</a>ps</h2><p><code>ps</code>全称<code>process status</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ps</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">11583 pts/0    00:00:00 bash</span><br><span class="line">11600 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure><p>默认情况下，ps 不会显示很多进程信息，只是列出与当前终端会话相关的进程。</p><p><code>TTY</code> 是 “Teletype”(直译电传打字机) 的简写，是指进程的控制终端。<br><code>TIME</code> 字段表示进程所消耗的 CPU 时间数量。</p><p>加上 <code>x</code> 选项，告诉 <code>ps</code> 命令，展示所有进程，不管它们由什么终端（如果有的话）控制。</p><p>在 TTY 一栏中出现的<code>?</code>，表示没有控制终端。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ps x</span><br><span class="line">  PID TTY      STAT   TIME COMMAND</span><br><span class="line">  784 ?        Ss     0:00 /lib/systemd/systemd --user</span><br><span class="line">  785 ?        S      0:00 (sd-pam)</span><br><span class="line">12071 ?        S      0:00 sshd: deploy@pts/0</span><br><span class="line">12072 pts/0    Ss     0:00 -bash</span><br><span class="line">12082 pts/0    R+     0:00 ps x</span><br></pre></td></tr></table></figure><p>输出结果中，新添加了一栏，标题为 <code>STAT</code>。 <code>STAT</code> 是 “state” 的简写，它揭示了进程当前状态：</p><p><code>R</code>： 运行中。这意味着，进程正在运行或准备运行。<br><code>S</code>： 正在睡眠。进程没有运行，而是，正在等待一个事件，比如 说，一个按键或者网络分组。<br><code>D</code>： 不可中断睡眠。进程正在等待 I/O，比方说，一个磁盘驱动 器的 I/O。<br><code>T</code>： 已停止. 已经指示进程停止运行。稍后介绍更多。<br><code>Z</code>： 一个死进程或“僵尸”进程。这是一个已经终止的子进程， 但是它的父进程还没有清空它。(父进程没有把子进程从进程表中删除)<br><code>&lt;</code>： 一个高优先级进程。这可能会授予一个进程更多重要的资 源，给它更多的 CPU 时间。进程的这种属性叫做 niceness。 具有高优先级的进程据说是不好的(less nice)，因为它占用了比较多的 CPU 时间，这样就给其它进程留下很少时间。<br><code>N</code>： 低优先级进程。一个低优先级进程(一个“nice”进程)只有 当其它高优先级进程被服务了之后，才会得到处理器时间。</p><p>不过我的系统里有<code>Ss</code>和<code>R+</code>之类的，在书里没有。</p><p>还有一个选项<code>aux</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root         1  0.0  0.4 225444  8820 ?        Ss   Jun12   7:55 /lib/systemd/systemd --system --deserialize 19</span><br><span class="line">root         2  0.0  0.0      0     0 ?        S    Jun12   0:00 [kthreadd]</span><br><span class="line">root         4  0.0  0.0      0     0 ?        I&lt;   Jun12   0:00 [kworker/0:0H]</span><br><span class="line">root         6  0.0  0.0      0     0 ?        I&lt;   Jun12   0:00 [mm_percpu_wq]</span><br></pre></td></tr></table></figure><p><code>USER</code>： 用户 ID. 进程的所有者。<br><code>%CPU</code>： 以百分比表示的 CPU 使用率。<br><code>%MEM</code>： 以百分比表示的内存使用率。<br><code>VSZ</code>： 虚拟内存大小。<br><code>RSS</code>： 进程占用的物理内存的大小，以千字节为单位。<br><code>START</code>： 进程启动的时间。若它的值超过 24 小时，则用天表示。</p><h2 id="top"><a class="header-anchor" href="#top">#</a>top</h2><p>默认情况下，<code>top</code>每三秒钟更新一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">top - 19:25:51 up 170 days,  1:13,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class="line">Tasks:  89 total,   1 running,  57 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.3 us,  0.7 sy,  0.0 ni, 99.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  2041216 total,   143632 free,   672572 used,  1225012 buff/cache</span><br><span class="line">KiB Swap:   969964 total,   969964 free,        0 used.  1157724 avail Mem</span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND</span><br></pre></td></tr></table></figure><p><code>top</code>：程序名。<br><code>19:25:51</code>：当前时间。<br><code>up 170 days, 1:13</code>：这是正常运行时间。它是计算机从上次启动到现在所运行的时间。<br><code>1 user</code>：登录系统用户数。<br><code>load average: 0.00, 0.00, 0.00</code>：加载平均值。等待运行的进程数目，也就是说，处于可以运行状态并共享 CPU 的进程个数。第一个是<code>最后 60 秒的平均值</code>，下一个是<code>前 5 分钟的平均值</code>，最后一个是<code>前 15 分钟的平均值</code>。若平均值低于<code>1.0</code>，则指示计算机工作不忙碌。<br><code>Tasks</code>：总结了进程数目和这些进程的各种状态。<br><code>Cpu(s)</code>：描述了 CPU 正在进行的活动的特性。<br><code>us</code>：用户进程。<br><code>sy</code>：系统（内核）进程。<br><code>ni</code>：<code>nice</code>（低优先级）进程。<br><code>id</code>：<code>CPU</code>空闲率。<br><code>wa</code>：等待<code>I/O</code>。<br><code>hi</code>：硬件中断。<br><code>si</code>：软件中断。<br><code>st</code>：cpu cycle 被虚拟化偷走的比例。<br><code>Mem</code>：物理内存的使用情况。<br><code>Swap</code>：交换分区（虚拟内存）的使用情况。</p><p><code>h</code>命令显示帮助。<br><code>q</code>退出<code>top</code>命令。</p><h2 id=""><a class="header-anchor" href="#">#</a>&amp;</h2><p>在命令后加<code>&amp;</code>后台执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &amp;</span><br></pre></td></tr></table></figure><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201202-1.png" alt="xlogo"></p></center><p>这个<code>xlogo</code>命令可以在显示屏上显示一个<code>X</code>，可以随着拖动变大小，必须要有显示器才行。</p><h2 id="-2"><a class="header-anchor" href="#-2">#</a>&amp;</h2><p>在命令后加<code>&amp;</code>后台执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &amp;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ xlogo &amp;</span><br><span class="line">[1] 3642</span><br></pre></td></tr></table></figure><p><code>[1] 3642</code>是 <code>shell</code> 特性的一部分，叫做<code>任务控制</code>（job control）。</p><p><code>任务号</code>（job number）为<strong>1</strong>，PID 为<strong>3642</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ ps</span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line">   2306 pts/0    00:00:00 bash</span><br><span class="line">   3642 pts/0    00:00:00 xlogo</span><br><span class="line">   4229 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure><p><code>jobs</code>命令列出从终端中启动了的任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ <span class="built_in">jobs</span></span><br><span class="line">[1]+  Running                 xlogo &amp;</span><br></pre></td></tr></table></figure><h2 id="fg"><a class="header-anchor" href="#fg">#</a>fg</h2><p><code>fg</code>命令让一个进程返回前台：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fg</span> %jobspec</span><br></pre></td></tr></table></figure><p><code>fg</code>命令之后接一个百分号和任务序号（jobspec）。</p><p>如果只有一个后台任务，那么<code>jobspec</code>（job specification）是可有可无的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ <span class="built_in">jobs</span></span><br><span class="line">[1]+  Running                 xlogo &amp;</span><br><span class="line">onns@onns-desktop:~$ <span class="built_in">fg</span> %1</span><br><span class="line">xlogo</span><br></pre></td></tr></table></figure><h2 id="ctrl-z"><a class="header-anchor" href="#ctrl-z">#</a>ctrl z</h2><p>停止进程，这么做通常是为了允许前台进程被移动到后台。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ xlogo</span><br><span class="line">^Z</span><br><span class="line">[2]+  Stopped                 xlogo</span><br><span class="line"></span><br><span class="line">onns@onns-desktop:~$ <span class="built_in">jobs</span></span><br><span class="line">[1]-  Stopped                 xlogo</span><br><span class="line">[2]+  Stopped                 xlogo</span><br></pre></td></tr></table></figure><p>使用 <code>fg</code> 命令，可以恢复程序到前台运行，或者用 <code>bg</code> 命令把程序移到后台。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ <span class="built_in">bg</span> %2</span><br><span class="line">[2]+ xlogo &amp;</span><br><span class="line">onns@onns-desktop:~$ <span class="built_in">jobs</span></span><br><span class="line">[1]+  Stopped                 xlogo</span><br><span class="line">[2]-  Running                 xlogo &amp;</span><br></pre></td></tr></table></figure><h2 id="kill"><a class="header-anchor" href="#kill">#</a>kill</h2><p><code>kill</code>命令用来终止程序。</p><blockquote><p>这个 <code>kill</code> 命令不是真的“杀死”程序，而是给程序发送信号。信号是操作系统与程序之间进行通信时所采用的几种方式中的一种。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> [-signal] PID...</span><br></pre></td></tr></table></figure><p>如果在命令行中没有指定信号，那么默认情况下，发送<code>TERM</code>（Terminate，终止）信号。</p><ul><li>编号<code>1</code>代表<code>HUP</code>，挂起(Hangup)。这是美好往昔的残留部分，那时候终端机通过电话线和调制解调器连接到远端的计算机。这个信号被用来告诉程序，控制的终端机已经“挂断”。通过关闭一个终端会话，可以展示这个信号的作用。在当前终端运行的前台程序将会收到这个信号并终止。许多守护进程也使用这个信号，来重新初始化。这意味着，当一个守护进程收到这个信号后，这个进 程会重新启动，并且重新读取它的配置文件。Apache 网络服务器守护进程就是一个例子。</li><li>编号<code>2</code>代表<code>INT</code>，中断。实现和 Ctrl-c 一样的功能，由终端发送。通常， 它会终止一个程序。</li><li>编号<code>9</code>代表<code>KILL</code>，杀死。这个信号很特别。尽管程序可能会选择不同的 方式来处理发送给它的信号，其中也包含忽略信号， 但是 KILL 信号从不被发送到目标程序。而是内核立 即终止这个进程。当一个进程以这种方式终止的时候， 它没有机会去做些“清理”工作，或者是保存工作。 因为这个原因，把 KILL 信号看作最后一招，当其它 终止信号失败后，再使用它。</li><li>编号<code>15</code>代表<code>TERM</code>，终止。这是 kill 命令发送的默认信号。如果程序仍然 “活着”，可以接受信号，那么这个它会终止。</li><li>编号<code>18</code>代表<code>CONT</code>，继续。在一个停止信号后，这个信号会恢复进程的运 行。</li><li>编号<code>19</code>代表<code>STOP</code>，停止。这个信号导致进程停止运行，而不是终止。像 KILL 信号，它不被发送到目标进程，因此它不能被忽略。</li></ul><p><strong>进程，和文件一样，拥有所有者，所以为了能够通过 <code>kill</code> 命令来给进程发送信号，你必须是 进程的所有者(或者是超级用户)。</strong></p><p><code>kill -l</code>可以得到一个完整的信号列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ <span class="built_in">kill</span> -l</span><br><span class="line"> 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP</span><br><span class="line"> 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL10) SIGUSR1</span><br><span class="line">11) SIGSEGV12) SIGUSR213) SIGPIPE14) SIGALRM15) SIGTERM</span><br><span class="line">16) SIGSTKFLT17) SIGCHLD18) SIGCONT19) SIGSTOP20) SIGTSTP</span><br><span class="line">21) SIGTTIN22) SIGTTOU23) SIGURG24) SIGXCPU25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM27) SIGPROF28) SIGWINCH29) SIGIO30) SIGPWR</span><br><span class="line">31) SIGSYS34) SIGRTMIN35) SIGRTMIN+136) SIGRTMIN+237) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+439) SIGRTMIN+540) SIGRTMIN+641) SIGRTMIN+742) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+944) SIGRTMIN+1045) SIGRTMIN+1146) SIGRTMIN+1247) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+1449) SIGRTMIN+1550) SIGRTMAX-1451) SIGRTMAX-1352) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-1154) SIGRTMAX-1055) SIGRTMAX-956) SIGRTMAX-857) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-659) SIGRTMAX-560) SIGRTMAX-461) SIGRTMAX-362) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-164) SIGRTMAX</span><br></pre></td></tr></table></figure><p>不是很常用，蛮看一下罢了。</p><h2 id="printenv"><a class="header-anchor" href="#printenv">#</a>printenv</h2><p><code>printenv</code>程序用来查看环境变量。<br>不知道为什么我的<code>set</code>命令输出的是一堆奇怪的东西= =。<br>别名无法通过使用<code>set</code>或<code>printenv</code>来查看。<br>用不带参数的`alias 来查看别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">alias</span></span><br><span class="line"><span class="built_in">alias</span> alert=<span class="string">'notify-send --urgency=low -i "$([ $? = 0 ] &amp;&amp; echo terminal || echo error)" "$(history|tail -n1|sed -e '</span>\<span class="string">''</span>s/^\s*[0-9]\+\s*//;s/[;&amp;|]\s*alert$//<span class="string">'\'</span><span class="string">')"'</span></span><br><span class="line"><span class="built_in">alias</span> egrep=<span class="string">'egrep --color=auto'</span></span><br><span class="line"><span class="built_in">alias</span> fgrep=<span class="string">'fgrep --color=auto'</span></span><br><span class="line"><span class="built_in">alias</span> grep=<span class="string">'grep --color=auto'</span></span><br><span class="line"><span class="built_in">alias</span> l=<span class="string">'ls -CF'</span></span><br><span class="line"><span class="built_in">alias</span> la=<span class="string">'ls -A'</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">'ls -alF'</span></span><br><span class="line"><span class="built_in">alias</span> ls=<span class="string">'ls --color=auto'</span></span><br></pre></td></tr></table></figure><h2 id="vi"><a class="header-anchor" href="#vi">#</a>vi</h2><p><code>vi</code>启动后会直接进入命令模式。</p><p>按下<code>i</code>键进入插入模式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-- INSERT --</span><br></pre></td></tr></table></figure><p>按下<code>w</code>键保存修改内容。</p><p>按下<code>q</code>键退出。</p><p><code>vi</code>中的许多命令都可以在前面加上一个数字。</p><p>19:16，今天先看到这里吧！看了很多但值得整理的蛮少的。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>这个以前还真没注意。。。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>老实说，没看懂这句话啥意思。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>看到这里的时候，我大概已经忘了<code>less</code>怎么用了，不愧是我。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>没看懂这句话。 <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p>注意对于符号链接文件，剩余的文件属性总是<code>rwxrwxrwx</code>，而且都是虚拟值。真正的文件属性是指符号链接<code>所指向的文件的属性</code>。 <a href="#fnref5" class="footnote-backref">↩︎</a></p></li><li id="fn6" class="footnote-item"><p>这种文件类型是指按照字节流来处理数据的设备。比如说终端机或者调制解调器。 <a href="#fnref6" class="footnote-backref">↩︎</a></p></li><li id="fn7" class="footnote-item"><p>这种文件类型是指按照数据块来处理数据的设备，例如一个硬盘或者 CD-ROM 盘。 <a href="#fnref7" class="footnote-backref">↩︎</a></p></li><li id="fn8" class="footnote-item"><p><code>init</code>进程的进程号是<code>1</code>，但好像<code>Ubuntu 18.04</code>之后开始用<code>systemd</code>作为初始进程了。 <a href="#fnref8" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
            <tag> summary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Video Classification with FineCoarse Networks</title>
      <link href="/blog/2021/04/06/video-classification-with-finecoarse-networks/"/>
      <url>/blog/2021/04/06/video-classification-with-finecoarse-networks/</url>
      
        <content type="html"><![CDATA[<h1 id="video-classification-with-finecoarse-networks"><a class="header-anchor" href="#video-classification-with-finecoarse-networks">#</a>Video Classification with FineCoarse Networks</h1><h2 id="相关信息"><a class="header-anchor" href="#相关信息">#</a>相关信息</h2><ul><li><a href="https://arxiv.org/abs/2103.15584" target="_blank" rel="noopener">https://arxiv.org/abs/2103.15584</a></li><li><code>SS1</code>准确率<code>57.0%</code></li></ul><h2 id="摘要"><a class="header-anchor" href="#摘要">#</a>摘要</h2><p>提出了一种<code>Motion Band-pass Module</code>模块。</p><h2 id=""><a class="header-anchor" href="#">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（4）</title>
      <link href="/blog/2021/03/17/the-go-programming-language-note-4/"/>
      <url>/blog/2021/03/17/the-go-programming-language-note-4/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="程序结构"><a class="header-anchor" href="#程序结构">#</a>程序结构</h1><h2 id="指针"><a class="header-anchor" href="#指针">#</a>指针</h2><p>任何类型的指针的零值都是<code>nil</code>。</p><p>如果<code>p</code>指向某个有效变量，那么<code>p != nil</code>测试为真。</p><p>指针之间也是可以进行相等测试的，只有当它们指向同一个变量或全部是<code>nil</code>时才相等。</p><p>另一个创建变量的方法是调用用内建的<code>new</code>函数。表达式<code>new(T)</code>将创建一个<code>T</code>类型的匿名变量，初始化为<code>T</code>类型的零值，<strong>然后返回变量地址</strong>，返回的指针类型为<code>*T</code>。</p><p>对于在包一级声明的变量来说，它们的生命周期和整个程序的运行周期是一致的。</p><p>局部变量的声明周期则是动态的：每次从创建一个新变量的声明语句开始，直到该变量不再被引用为止，然后变量的存储空间可能被回收。</p><p>函数的右小括弧也可以另起一行缩进，同时为了防止编译器在行尾自动插入分号而导致的编译错误，可以在末尾的参数变量后面显式插入逗号。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> t := <span class="number">0.0</span>; t &lt; cycles*<span class="number">2</span>*math.Pi; t += res &#123;</span><br><span class="line">x := math.Sin(t)</span><br><span class="line">y := math.Sin(t*freq + phase)</span><br><span class="line">img.SetColorIndex(size+<span class="keyword">int</span>(x*size+<span class="number">0.5</span>), size+<span class="keyword">int</span>(y*size+<span class="number">0.5</span>),</span><br><span class="line">blackIndex)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> t := <span class="number">0.0</span>; t &lt; cycles*<span class="number">2</span>*math.Pi; t += res &#123;</span><br><span class="line">x := math.Sin(t)</span><br><span class="line">y := math.Sin(t*freq + phase) </span><br><span class="line">img.SetColorIndex(</span><br><span class="line">size+<span class="keyword">int</span>(x*size+<span class="number">0.5</span>), size+<span class="keyword">int</span>(y*size+<span class="number">0.5</span>),</span><br><span class="line">blackIndex,<span class="comment">// 最后插入的逗号不会导致编译错误，这是Go编译器的一个特性 </span></span><br><span class="line">) <span class="comment">// 小括弧另起一行缩进，和大括弧的风格保存一致</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译器会自动选择在栈上还是在堆上分配局部变量的存储空间。</p><h2 id="赋值"><a class="header-anchor" href="#赋值">#</a>赋值</h2><p>自增和自减是语句，而不是表达式，因此<code>x = i++</code>之类的表达式是错误的。</p><h2 id="类型"><a class="header-anchor" href="#类型">#</a>类型</h2><p>一个类型声明语句创建了一个新的类型名称，和现有类型具有相同的底层结构。新命名的类型提供了一个方法，用来分隔不同概念的类型，这样即使它们底层类型相同也是不兼容的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> 类型名字 底层类型</span><br><span class="line"><span class="keyword">type</span> Celsius <span class="keyword">float64</span></span><br></pre></td></tr></table></figure><p>类型声明语句一般出现在包一级，因此如果新创建的类型名字的首字符大写，则在外部包也可以使用。</p><p>对于每一个类型<code>T</code>，都有一个对应的类型转换操作<code>T(x)</code>，用于将<code>x</code>转为<code>T</code>类型，如果<code>T</code>是指针类型，可能会需要用小括弧包装<code>T</code>，比如<code>(*int)(0)</code>。</p><p>在任何情况下，运行时不会发生转换失败的错误，错误只会发生在编译阶段。</p><p>底层数据类型决定了内部结构和表达方式，也决定是否可以像底层类型一样对内置运算符的支持。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（3）</title>
      <link href="/blog/2021/03/14/the-go-programming-language-note-3/"/>
      <url>/blog/2021/03/14/the-go-programming-language-note-3/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="程序结构"><a class="header-anchor" href="#程序结构">#</a>程序结构</h1><h2 id="命名"><a class="header-anchor" href="#命名">#</a>命名</h2><p><code>Go</code>语言中的函数名、变量名、常量名、类型名、语句标号和包名等所有的命名，都遵循一个简单的命名规则：<strong>一个名字必须以一个字母（<code>Unicode</code>字母）或下划线开头，后面可以跟任意数量的字母、数字或下划线</strong>。大写字母和小写字母是不同的。</p><p>Go语言的25个关键字：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span></span><br><span class="line"><span class="keyword">chan</span></span><br><span class="line"><span class="keyword">const</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">default</span></span><br><span class="line"><span class="keyword">defer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">for</span></span><br><span class="line"><span class="function"><span class="keyword">func</span></span></span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"><span class="keyword">goto</span></span><br><span class="line"><span class="keyword">if</span></span><br><span class="line"><span class="keyword">import</span></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"><span class="keyword">map</span></span><br><span class="line"><span class="keyword">package</span></span><br><span class="line"><span class="keyword">range</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line"><span class="keyword">struct</span></span><br><span class="line"><span class="keyword">switch</span></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line"><span class="keyword">var</span></span><br></pre></td></tr></table></figure><p>预定义的名字<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 内建常量: </span></span><br><span class="line"><span class="literal">true</span> <span class="literal">false</span> <span class="literal">iota</span> <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 内建类型: </span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">int8</span> <span class="keyword">int16</span> <span class="keyword">int32</span> <span class="keyword">int64</span></span><br><span class="line"><span class="keyword">uint</span> <span class="keyword">uint8</span> <span class="keyword">uint16</span> <span class="keyword">uint32</span> <span class="keyword">uint64</span> <span class="keyword">uintptr</span></span><br><span class="line"><span class="keyword">float32</span> <span class="keyword">float64</span> <span class="keyword">complex128</span> <span class="keyword">complex64</span></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">byte</span> <span class="keyword">rune</span> <span class="keyword">string</span> error</span><br><span class="line"></span><br><span class="line"><span class="comment">// 内建函数: </span></span><br><span class="line"><span class="built_in">make</span> <span class="built_in">len</span> <span class="built_in">cap</span> <span class="built_in">new</span> <span class="built_in">append</span> <span class="built_in">copy</span> <span class="built_in">close</span> <span class="built_in">delete</span> </span><br><span class="line"><span class="built_in">complex</span> <span class="built_in">real</span> <span class="built_in">imag</span></span><br><span class="line"><span class="built_in">panic</span> <span class="built_in">recover</span></span><br></pre></td></tr></table></figure><p>如果一个名字是在函数内部定义，那么它的就只在函数内部有效。</p><p>如果是在函数外部定义，那么将在当前包的所有文件中都可以访问。</p><p>名字的开头字母的大小写决定了名字在包外的可见性。如果一个名字是大写字母开头的（包级函数名本身也是包级名字，例如：<code>fmt.Printf</code>），那么它将是导出的，可以被外部的包访问，包本身的名字一般总是用小写字母。</p><p><strong>如果一个名字的作用域比较大，生命周期也比较长，那么用长的名字将会更有意义。</strong></p><p>Go语言程序员推荐使用<code>驼峰式</code>命名，当名字有几个单词组成的时<strong>优先使用大小写分隔</strong>，而不是优先用下划线分隔。</p><h2 id="声明"><a class="header-anchor" href="#声明">#</a>声明</h2><p>声明语句定义了程序的各种实体对象以及部分或全部的属性。</p><p><code>Go</code>语言主要有四种类型的声明 语句：<code>var</code>、<code>const</code>、<code>type</code>和<code>func</code>，分别对应<code>变量</code>、<code>常量</code>、<code>类型</code>和<code>函数实体对象</code>的声明。</p><p>每个源文件以包的声明语句开始，说明该源文件是属于哪个包。包声明语句之后是<code>import</code>语句导入依赖的其它包，然后是包一级的类型、变量、常量、函数的声明语句，包一级的各种类型的声明语句的顺序无关紧要（函数内部的名字则必须先声明之后才能使用）。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Boiling prints the boiling point of water.</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> f = boilingF</span><br><span class="line"><span class="keyword">var</span> c = (f - <span class="number">32</span>) * <span class="number">5</span> / <span class="number">9</span></span><br><span class="line">fmt.Printf(<span class="string">"boiling point = %g°F or %g°C\n"</span>, f, c)</span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// boiling point = 212°F or 100°C</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> boilingF = <span class="number">212.0</span></span><br></pre></td></tr></table></figure><p>在包一级声明语句声明的名字（<code>boilingF</code>）可在整个包对应的每个源文件中访问，而不是仅仅在其声明语句所在的源文件中访问。</p><p>一个函数的声明由一个函数名字、参数列表、一个可选的返回值列表和包含函数定义的函数体组成。如果函数没有返回值，那么返回值列表是省略的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Ftoc prints two Fahrenheit-to-Celsius conversions.</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> freezingF, boilingF = <span class="number">32.0</span>, <span class="number">212.0</span></span><br><span class="line">fmt.Printf(<span class="string">"%g°F = %g°C\n"</span>, freezingF, fToC(freezingF)) <span class="comment">// "32°F = 0°C"</span></span><br><span class="line">fmt.Printf(<span class="string">"%g°F = %g°C\n"</span>, boilingF, fToC(boilingF))   <span class="comment">// "212°F = 100°C"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fToC</span><span class="params">(f <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> (f - <span class="number">32</span>) * <span class="number">5</span> / <span class="number">9</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量"><a class="header-anchor" href="#变量">#</a>变量</h2><p><code>var</code>声明语句可以创建一个特定类型的变量，然后给变量附加一个名字，并且设置变量的初始值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名字 类型 = 表达式</span><br></pre></td></tr></table></figure><p>其中<code>类型</code>或<code>= 表达式</code>两个部分可以省略其中的一个。如果省略的是类型信息，那么将根据初始化表达式来推导变量的类型信息。如果初始化表达式被省略，那么将用零值初始化该变量。</p><p>可以在一个声明语句中同时声明一组变量。也可以用一组初始化表达式声明并初始化一组变量，如果省略每个变量的类型，将可以声明多个类型不同的变量。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// int, int, int</span></span><br><span class="line"><span class="keyword">var</span> i, j, k <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// bool, float64, string</span></span><br><span class="line"><span class="keyword">var</span> b, f, s = <span class="literal">true</span>, <span class="number">2.3</span>, <span class="string">"four"</span></span><br></pre></td></tr></table></figure><p>在包级别声明的变量会在<code>main</code>入口函数执行前完成初始化。局部变量将在声明语句被执行到的时候完成初始化。</p><p>在函数内部，有一种称为<code>简短变量声明语句</code>的形式可用于声明和初始化局部变量。它以<code>名字 := 表达式</code>形式声明变量，变量的类型根据表达式来自动推导。</p><p>简短变量声明语句也可以用来声明和初始化一组变量。</p><p>简短变量声明语句中必须至少要声明一个新的变量。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><p>简短变量声明语句只有对已经在同级词法域声明过的变量才和赋值操作语句等价，如果变量是在外部词法域声明的，那么简短变量声明语句将会在当前词法域重新声明一个新的变量。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>可以在定义中重新使用它们。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>如果都是旧的，赋值操作就好。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络附属存储</title>
      <link href="/blog/2021/03/11/nas/"/>
      <url>/blog/2021/03/11/nas/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>继<code>sftp/scp</code>传输、<code>rsync</code>同步后，<code>nas</code>终于趋近于完美地解决了我的问题！</p><p>在各种服务器之间来回传输文件也是很麻烦，终极方法就是用网络文件系统。</p><p>当然实现这个的方式有很多种，具体要看客户端环境。</p><a id="more"></a><h2 id="nfs"><a class="header-anchor" href="#nfs">#</a>NFS</h2><h3 id="服务端"><a class="header-anchor" href="#服务端">#</a>服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nfs-kernel-server -y</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/exports</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;mnt&#x2F;data&#x2F;onns *(rw,sync,no_root_squash)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo exportfs -a</span><br><span class="line">sudo systemctl restart nfs-kernel-server</span><br></pre></td></tr></table></figure><h3 id="客户端"><a class="header-anchor" href="#客户端">#</a>客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nfs-common -y</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t nfs 192.168.1.119:/mnt/data/onns/Documents ~/Documents</span><br></pre></td></tr></table></figure><h4 id="开机配置"><a class="header-anchor" href="#开机配置">#</a>开机配置</h4><ul><li><a href="https://blog.csdn.net/youmatterhsp/article/details/83933158" target="_blank" rel="noopener">/etc/fstab文件的详解</a></li><li><a href="https://blog.csdn.net/weixin_34235371/article/details/92323317" target="_blank" rel="noopener">NFS环境搭建测试 保证挂载重启后不丢失</a></li></ul><h3 id="存在问题"><a class="header-anchor" href="#存在问题">#</a>存在问题</h3><p><code>windows</code>下用<code>nfsv4</code>就是会出问题，默认的<code>utf-8</code>编码的中文文件夹或者文件会乱码，解决方法不太友好，容易把其它的软件都搞崩，毕竟所有做<code>windows</code>软件的人应该都没有做好准备吧😂！</p><blockquote><p>全世界的软件都没有为windows的utf-8编码做好准备，我一个笔记软件在切换后笔记内容变成乱码，再切换回来也没有变回来，损失惨重。</p></blockquote><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/46254792" target="_blank" rel="noopener">一个小设置，让Win10 NFS正常显示中文UTF-8</a></li></ul><h2 id="smb"><a class="header-anchor" href="#smb">#</a>SMB</h2><h3 id="服务端-2"><a class="header-anchor" href="#服务端-2">#</a>服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install samba -y</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[onns]</span><br><span class="line">path &#x3D; &#x2F;mnt&#x2F;data&#x2F;onns</span><br><span class="line">browseable &#x3D; no</span><br><span class="line">read only &#x3D; no</span><br><span class="line">writable &#x3D; yes</span><br><span class="line">available &#x3D; yes</span><br><span class="line">create mask &#x3D; 0700</span><br><span class="line">directory mask &#x3D; 0700</span><br><span class="line">valid users &#x3D; hs</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a hs</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart smbd</span><br></pre></td></tr></table></figure><h3 id="客户端-2"><a class="header-anchor" href="#客户端-2">#</a>客户端</h3><p><code>/192.168.1.119/onns</code></p>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> tips </tag>
            
            <tag> macos </tag>
            
            <tag> windows </tag>
            
            <tag> nas </tag>
            
            <tag> nfs </tag>
            
            <tag> smb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（2）</title>
      <link href="/blog/2021/03/11/the-go-programming-language-note-2/"/>
      <url>/blog/2021/03/11/the-go-programming-language-note-2/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><a id="more"></a><h1 id="入门"><a class="header-anchor" href="#入门">#</a>入门</h1><h2 id="查找重复的行"><a class="header-anchor" href="#查找重复的行">#</a>查找重复的行</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bufio"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">counts := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">input := bufio.NewScanner(os.Stdin)</span><br><span class="line"><span class="keyword">for</span> input.Scan() &#123;</span><br><span class="line">counts[input.Text()]++</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> line, n := <span class="keyword">range</span> counts &#123;</span><br><span class="line"><span class="keyword">if</span> n &gt; <span class="number">1</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%d\t%s\n"</span>, n, line)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>if</code>语句条件两边也不加括号，但是主体部分需要加。</p><p><code>map</code>存储了<code>键/值</code>（<code>key/value</code>）的集合，对集合元素，提供常数时间的存、取或测试操作。</p><p><code>键</code>可以是<strong>任意类型</strong>，只要其值能用<code>==</code>运算符比较。<code>值</code>则可以是任意类型。</p><p><code>map</code>中不含某个键时会自动创建键并赋值<code>零值</code>。</p><p><code>map</code>的<strong>迭代顺序并不确定</strong>，从实践来看，该顺序随机，每次运行都会变化。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p><code>bufio</code>包的<code>Scanner</code>类型读取输入并将其拆成行或单词。</p><p>每次调用<code>input.Scan()</code>，即读入下一行，并移除行末的换行符。</p><p><code>Scan</code>函数在读到一行时返回<code>true</code>，不再有输入时返回<code>false</code>。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://stackoverflow.com/questions/11853396/google-go-lang-assignment-order" target="_blank" rel="noopener">Google Go Lang Assignment Order</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Go语音圣经（中文版）》笔记（1）</title>
      <link href="/blog/2021/03/10/the-go-programming-language-note-1/"/>
      <url>/blog/2021/03/10/the-go-programming-language-note-1/</url>
      
        <content type="html"><![CDATA[<h1 id="《go-语音圣经（中文版）》"><a class="header-anchor" href="#《go-语音圣经（中文版）》">#</a>《Go 语音圣经（中文版）》</h1><p>顺便熟悉一下<code>vim</code>的技巧吧！</p><a id="more"></a><h1 id="入门"><a class="header-anchor" href="#入门">#</a>入门</h1><h2 id="hello-world"><a class="header-anchor" href="#hello-world">#</a>Hello World</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// go-bible/ch1/helloworld.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Hello, 世界"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[10:58:11] onns@Onns ~/Documents/code/go/go-bible/ch1 $ go run helloworld.go</span><br><span class="line">Hello, 世界</span><br></pre></td></tr></table></figure><p><code>Go</code>语言原生支持<code>Unicode</code>，它可以处理全世界任何语言的文本。</p><p><code>go run</code>会编译<code>.go</code>文件并且直接运行可执行文件结果，如果要保存编译结果，使用<code>go build</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[10:58:53] onns@Onns ~/Documents/code/go/go-bible/ch1 $ go build helloworld.go</span><br><span class="line">[10:59:17] onns@Onns ~/Documents/code/go/go-bible/ch1 $ ./helloworld</span><br><span class="line">Hello, 世界</span><br></pre></td></tr></table></figure><p>每个源文件都以一条<code>package</code>声明语句开始，这个例子里就是<code>package main</code>，表示该文件属于哪个包。</p><p><code>main</code>包比较特殊。它定义了一个独立可执行的程序，而不是一个库。</p><p>必须恰当导入需要的包，缺少了必要的包或者导入了不需要的包，程序都无法编译通过。</p><p><code>Go</code>语言编译过程没有警告信息，争议特性之一。</p><p><code>import</code>声明必须跟在文件的<code>package</code>声明之后。</p><p>一个函数的声明由<code>func</code>关键字、函数名、参数列表、返回值列表以及包含在大括号里的函数体组成。</p><p><code>Go</code>语言不需要在语句或者声明的末尾添加分号，除非一行上有多条语句。</p><p>编译器会主动把特定符号后的换行符转换为分号，因此换行符添加的位置会影响<code>Go</code>代码的正确解析。</p><p>函数的左括号<code>{</code>必须和<code>func</code>函数声明在同一行上，且位于末尾，不能独占一行，而在表达式<code>x + y</code>中，可在<code>+</code>后换行，不能在<code>+</code>前换行。</p><p>Go 语言在代码格式上采取了很强硬的态度。<code>gofmt</code>工具把代码格式化为标准格式（这个格式化工具没有任何可以调整代码格式的参数）。</p><p><code>go</code>工具中的<code>fmt</code>子命令会对指定包（否则默认为当前目录）中所有<code>.go</code>源文件应用<code>gofmt</code>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[10:57:14] onns@Onns ~/Documents/code/go/go-bible/ch1 $ go fmt</span><br><span class="line">helloworld.go</span><br><span class="line">[10:58:10] onns@Onns ~/Documents/code/go/go-bible/ch1 $ go fmt</span><br></pre></td></tr></table></figure><p>只有那些不规范的文件会被列出，第二次再运行就不会格式化已经符合规则的文件。</p><h2 id="命令行参数"><a class="header-anchor" href="#命令行参数">#</a>命令行参数</h2><p>区间索引时，<code>Go</code>言里也采用左闭右开形式，即，区间包括第一个索引元素，不包括最后一个。</p><p>程序导入包时可以<strong>用括号把它们括起来写成列表形式</strong>，也可以<strong>分开写成独立的<code>import</code>声明</strong>，两种形式都合法，列表形式习惯上用得多。</p><p>包导入顺序并不重要，<code>gofmt</code>工具格式化时按照字母顺序对包名排序。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// go-bible/ch1/echo1.go</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s，sep <span class="keyword">string</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(os.Args); i++ &#123;</span><br><span class="line">s += sep + os.Args[i]</span><br><span class="line">sep = <span class="string">" "</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量会在声明时直接初始化。如果变量没有显式初始化，则被隐式地赋予其类型的零值（zero value），数值类型是<code>0</code>，字符串类型是空字符串<code>&quot;&quot;</code>。</p><p><code>:=</code>是短变量声明（short variable declaration）的一部分，这是定义一个或多个变量并根据它们的初始值为这些变量赋予适当类型的语句。</p><p><code>i++/i--</code>是语句，而不像 C 系的其它语言那样是表达式。所以<code>j = i++</code>非法。</p><p><code>++</code>和<code>--</code>都只能放在变量名后面，因此<code>--i</code>也非法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> initialization; condition; post &#123;</span><br><span class="line"><span class="comment">// zero or more statements</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>for</code>循环三个部分不需括号包围。</p><p>大括号强制要求，左大括号必须和<code>post</code>语句在同一行。</p><p><code>initialization</code>语句是可选的，在循环开始前执行。</p><p><code>initalization</code>如果存在，必须是一条简单语句（simple statement），即<code>短变量声明</code>、<code>自增语句</code>、<code>赋值语句</code>或<code>函数调用</code>。</p><p><code>condition</code>是一个布尔表达式（boolean expression）。</p><p><code>for</code>循环的这三个部分每个都可以省略，如果省略<code>initialization</code>和<code>post</code>，分号也可以省略：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a traditional "while" loop</span></span><br><span class="line"><span class="keyword">for</span> condition &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全省略：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a traditional infinite loop</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// go-bible/ch1/echo2.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s，sep := <span class="string">""</span>，<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> _，arg := <span class="keyword">range</span> os.Args[<span class="number">1</span>:] &#123;</span><br><span class="line">s += sep + arg</span><br><span class="line">sep = <span class="string">" "</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次循环迭代，<code>range</code>产生一对值：<code>索引</code>以及<code>在该索引处的元素值</code>。</p><p><code>Go</code>语言不允许使用无用的局部变量（local variables），因为这会导致编译错误。解决方法是用<code>空标识符</code>（blank identifier），即<code>_</code>（也就是下划线）。</p><p><code>s := &quot;&quot;</code>是一条<code>短变量声明</code>，最简洁，但只能用在函数内部，而不能用于包变量。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// go-bible/ch1/echo3.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(strings.Join(os.Args[<span class="number">1</span>:], <span class="string">" "</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// go-bible/ch1/echo4.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(os.Args[<span class="number">1</span>:])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[14:50:04] onns@Onns ~/Documents/code/go/go-bible/ch1 $ ./echo2 123 456</span><br><span class="line">123 456</span><br><span class="line">[14:58:44] onns@Onns ~/Documents/code/go/go-bible/ch1 $ ./echo3 123 4 5 6</span><br><span class="line">123 4 5 6</span><br><span class="line">[14:58:58] onns@Onns ~/Documents/code/go/go-bible/ch1 $ ./echo4 123 4 5 6</span><br><span class="line">[123 4 5 6]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> golang note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zsh问题记录</title>
      <link href="/blog/2021/03/10/zsh-usage/"/>
      <url>/blog/2021/03/10/zsh-usage/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>之前自己写过一些定时脚本，比如整理照片啊、加密备份啥的，之前一直没有把<code>cron</code>的运行日志记录下来，最近记录之后发现写的有好多问题，之后有关<code>zsh</code>的问题也会在这里进行记录总结。</p><a id="more"></a><h2 id="no-matches-found"><a class="header-anchor" href="#no-matches-found">#</a>no matches found</h2><p>在用通配符<code>*</code>的时候，有时候如果没有文件，就会报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mv /Users/onns/Desktop/temp/* <span class="variable">$&#123;another_dir&#125;</span></span><br><span class="line">no matches found: /Users/onns/Desktop/temp/*</span><br></pre></td></tr></table></figure><p>原因改天再补吧！</p><h3 id="解决方法"><a class="header-anchor" href="#解决方法">#</a>解决方法</h3><p>解决方法是在运行脚本之前先运行一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setopt</span> +o nomatch</span><br></pre></td></tr></table></figure><p>但是必须要写在脚本文件里，我写在<code>.zshrc</code>里结果没用，我也不知道为什么，如果有人知道可以告知一下。</p><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://unix.stackexchange.com/questions/310540/how-to-get-rid-of-no-match-found-when-running-rm" target="_blank" rel="noopener">How to get rid of “No match found” when running “rm *”</a></li></ul><h2 id="tar-removing-leading-‘-’-from-member-names"><a class="header-anchor" href="#tar-removing-leading-‘-’-from-member-names">#</a>tar: Removing leading ‘/’ from member names</h2><p>这个就比较好解决了，一搜就有，没想到<code>tar</code>默认是用相对地址的= =</p><p>不过我比较好奇的是，为什么在压缩过程的输出是输出到<code>stderr</code>里而不是<code>stdout</code>里，也是<code>TODO</code>，改日再说。</p><h3 id="解决方法-2"><a class="header-anchor" href="#解决方法-2">#</a>解决方法</h3><p>添加<code>-P</code>参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvPf  - <span class="string">"<span class="variable">$&#123;imgdir&#125;</span>"</span> | openssl des3 -salt -k <span class="variable">$img_password</span> | dd of=<span class="variable">$&#123;bakdir&#125;</span>img-<span class="variable">$&#123;now_date&#125;</span>-<span class="variable">$&#123;now_time&#125;</span>.bak</span><br></pre></td></tr></table></figure><h3 id="相关链接-2"><a class="header-anchor" href="#相关链接-2">#</a>相关链接</h3><ul><li><a href="https://unix.stackexchange.com/questions/545984/how-to-overcome-tar-removing-leading-from-member-names" target="_blank" rel="noopener">How to overcome tar: Removing leading `/’ from member names [duplicate]</a></li><li><a href="https://unix.stackexchange.com/questions/59243/tar-removing-leading-from-member-names/59244" target="_blank" rel="noopener">tar: Removing leading `/’ from member names</a></li></ul><h2 id="prompt"><a class="header-anchor" href="#prompt">#</a>Prompt</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PROMPT=<span class="string">'%F&#123;green&#125;[%*] %n@%m%f %F&#123;blue&#125;%~%f $ '</span></span><br></pre></td></tr></table></figure><h3 id="相关链接-3"><a class="header-anchor" href="#相关链接-3">#</a>相关链接</h3><ul><li><a href="https://medium.com/dev-genius/customize-the-macos-terminal-zsh-4cb387e4f447" target="_blank" rel="noopener">Customize the MacOS Terminal</a></li><li><a href="https://scriptingosx.com/2019/07/moving-to-zsh-06-customizing-the-zsh-prompt/" target="_blank" rel="noopener">Moving to zsh, part 6 – Customizing the zsh Prompt</a></li></ul><h2 id="todo"><a class="header-anchor" href="#todo">#</a>TODO</h2><ul><li>[ ] <code>setopt +o nomatch</code>的作用</li><li>[ ] <code>tar</code>输出问题</li></ul>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> zsh </tag>
            
            <tag> shell note </tag>
            
            <tag> cron </tag>
            
            <tag> crontab </tag>
            
            <tag> tips </tag>
            
            <tag> macos </tag>
            
            <tag> zsh note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定时任务相关问题</title>
      <link href="/blog/2021/03/01/cron-usage/"/>
      <url>/blog/2021/03/01/cron-usage/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>晚上睡不着，重构了一堆<code>shell</code>，没想到出事了，记录下。</p><a id="more"></a><h3 id="cron不识别"><a class="header-anchor" href="#cron不识别">#</a><code>cron</code>不识别<code>~</code></h3><p><code>~</code>是<code>bash</code>里的，<code>cron</code>不识别，要用<code>$HOME</code>代替。</p><h4 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h4><ul><li><a href="https://www.gnu.org/software/bash/manual/html_node/Tilde-Expansion.html" target="_blank" rel="noopener">3.5.2 Tilde Expansion</a></li><li><a href="https://stackoverflow.com/questions/50296898/can-i-use-a-tilde-in-a-mysqldump-cronjob-linux-cron-is-not-running/50297010" target="_blank" rel="noopener">Can I use a tilde ( ~ ) in a mysqldump cronjob? Linux Cron is not running</a></li><li><a href="https://stackoverflow.com/questions/45401001/why-is-a-valid-path-with-a-tilde-not-expanding-in-this-cron-job" target="_blank" rel="noopener">Why is a valid path with a tilde not expanding in this cron job? [duplicate]</a></li></ul><h3 id="cron在环境变量之前"><a class="header-anchor" href="#cron在环境变量之前">#</a><code>cron</code>在环境变量之前</h3><p><code>cron</code>会在命令行加载<code>.bashrc</code>之类的文件之前，所以你写在里面的变量它读不到，解决办法是直接用<code>crontab -e</code>把环境变量写进去：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ONNS_CONFIG_DIR=/Users/onns/Documents/code/config/bash/</span><br><span class="line">ONNS_PLATFORM=macbook</span><br><span class="line">30 * * * * zsh /Users/onns/Documents/code/bash/oclear &gt;&gt;/Users/onns/cron.log 2&gt;&gt;/Users/onns/cron.log</span><br></pre></td></tr></table></figure><p>也是会识别的，亲测有效，其它的方案可能都失效了，建议别用。</p><p>下面第一个链接的那种方法<code>. $HOME/.profile</code>，<code>Ubuntu 18.04</code>亲测无效，而且如果你在<code>.profile</code>里写点<code>shell</code>命令，也会失效，我的<code>google-cloud-sdk</code>就是。</p><h4 id="相关链接-2"><a class="header-anchor" href="#相关链接-2">#</a>相关链接</h4><ul><li><a href="https://unix.stackexchange.com/questions/27289/how-can-i-run-a-cron-command-with-existing-environmental-variables" target="_blank" rel="noopener">How can I run a cron command with existing environmental variables?</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> zsh </tag>
            
            <tag> shell note </tag>
            
            <tag> cron </tag>
            
            <tag> crontab </tag>
            
            <tag> tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A Closer Look at Spatiotemporal Convolutions for Action Recognition</title>
      <link href="/blog/2021/02/10/a-closer-look-at-spatiotemporal-convolutions-for-action-recognition/"/>
      <url>/blog/2021/02/10/a-closer-look-at-spatiotemporal-convolutions-for-action-recognition/</url>
      
        <content type="html"><![CDATA[<h1 id="a-closer-look-at-spatiotemporal-convolutions-for-action-recognition"><a class="header-anchor" href="#a-closer-look-at-spatiotemporal-convolutions-for-action-recognition">#</a>A Closer Look at Spatiotemporal Convolutions for Action Recognition</h1><h2 id="摘要"><a class="header-anchor" href="#摘要">#</a>摘要</h2><ul><li>证明了3D卷积比2D卷积更有效果。</li><li>将3D卷积分解成空间卷积和时间卷积能够获得准确率上的提升。</li></ul><h2 id=""><a class="header-anchor" href="#">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> CVPR </tag>
            
            <tag> CVPR 2018 </tag>
            
            <tag> 2018 </tag>
            
            <tag> R(2+1)D </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learning Spatiotemporal Features with 3D Convolutional Networks</title>
      <link href="/blog/2021/02/09/learning-spatiotemporal-features-with-3d-convolutional-networks/"/>
      <url>/blog/2021/02/09/learning-spatiotemporal-features-with-3d-convolutional-networks/</url>
      
        <content type="html"><![CDATA[<h1 id="learning-spatiotemporal-features-with-3d-convolutional-networks"><a class="header-anchor" href="#learning-spatiotemporal-features-with-3d-convolutional-networks">#</a>Learning Spatiotemporal Features with 3D Convolutional Networks</h1>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> 2018 </tag>
            
            <tag> 光流 </tag>
            
            <tag> optical flow </tag>
            
            <tag> GCPR </tag>
            
            <tag> GCPR 2018 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git相关文档</title>
      <link href="/blog/2021/02/08/git-usage/"/>
      <url>/blog/2021/02/08/git-usage/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>一些<code>git</code>的操作记录，方便自己忘记之后查找～</p><a id="more"></a><p><code>git</code>添加多个远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">set</span>-url --add origin git@xm.onns.xyz:/home/git/paper.git</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://www.cnblogs.com/morethink/p/8700003.html" target="_blank" rel="noopener">Git 同时 push 到多个远程仓库</a></li></ul><h2 id="push-和-pull-链接不同"><a class="header-anchor" href="#push-和-pull-链接不同">#</a>push 和 pull 链接不同</h2><p>你想从别人的分支克隆代码，但是你没有修改权限，你有另一个分支的修改权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://engagementhub.caixamagica.pt/virtual-factory-operating-system/vf-os-platform-environment-vf-p.git</span><br></pre></td></tr></table></figure><p>然后你的<code>.git/config</code>长这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat .git/config</span><br><span class="line">[core]</span><br><span class="line">repositoryformatversion = 0</span><br><span class="line">filemode = <span class="literal">true</span></span><br><span class="line">bare = <span class="literal">false</span></span><br><span class="line">logallrefupdates = <span class="literal">true</span></span><br><span class="line">[remote <span class="string">"origin"</span>]</span><br><span class="line">url = https://engagementhub.caixamagica.pt/virtual-factory-operating-system/vf-os-platform-environment-vf-p.git</span><br><span class="line">fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line">[branch <span class="string">"master"</span>]</span><br><span class="line">remote = origin</span><br><span class="line">merge = refs/heads/master</span><br></pre></td></tr></table></figure><p>然后可以用下面的命令增加<code>push</code>的仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">set</span>-url --push origin git@git119:/home/git/vfos.git</span><br></pre></td></tr></table></figure><p>再次查看<code>.git/config</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ cat .git/config</span><br><span class="line">[core]</span><br><span class="line">repositoryformatversion = 0</span><br><span class="line">filemode = <span class="literal">true</span></span><br><span class="line">bare = <span class="literal">false</span></span><br><span class="line">logallrefupdates = <span class="literal">true</span></span><br><span class="line">[remote <span class="string">"origin"</span>]</span><br><span class="line">url = https://engagementhub.caixamagica.pt/virtual-factory-operating-system/vf-os-platform-environment-vf-p.git</span><br><span class="line">fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line">pushurl = git@git119:/home/git/vfos.git</span><br><span class="line">[branch <span class="string">"master"</span>]</span><br><span class="line">remote = origin</span><br><span class="line">merge = refs/heads/master</span><br></pre></td></tr></table></figure><p>所以其实你手动添加一项<code>pushurl</code>也是可以的！</p><h3 id="参考链接-2"><a class="header-anchor" href="#参考链接-2">#</a>参考链接</h3><ul><li><a href="https://stackoverflow.com/questions/2916845/different-default-remote-tracking-branch-for-git-pull-and-git-push" target="_blank" rel="noopener">Different default remote (tracking branch) for git pull and git push</a></li></ul><h2 id="删除-ds-store"><a class="header-anchor" href="#删除-ds-store">#</a>删除 .DS_Store</h2><p>用<code>.gitignore</code>排除即可，官方文档说<code>**/</code>代表所有的目录下，所以只需要加下面两行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**/.DS_Store</span><br><span class="line">**/._.DS_Store</span><br></pre></td></tr></table></figure><p>第二行也可以不用加，听说那个是别名，但是我目前没遇到过。</p><h3 id="参考链接-3"><a class="header-anchor" href="#参考链接-3">#</a>参考链接</h3><ul><li><a href="https://git-scm.com/docs/gitignore" target="_blank" rel="noopener">Git - gitignore Documentation</a></li><li><a href="https://gist.github.com/lohenyumnam/2b127b9c3d1435dc12a33613c44e6308" target="_blank" rel="noopener">Add DS_Store into .gitignore for the sub directory.md</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> doc </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git私有仓库</title>
      <link href="/blog/2021/02/07/private-git-repository/"/>
      <url>/blog/2021/02/07/private-git-repository/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>好久没写笔记了，最近一直在忙毕业论文，今天趁着装<code>Tex Live 2020</code>的功夫忙里偷闲，折腾点东西。</p><p>因为自己日常用的东西里有一堆自己写的代码什么的，感觉需要用<code>git</code>进行版本控制，但是感觉传到<code>github</code>上又不太好，虽然虽然可以设置成私密的，但是总感觉不安全，自己弄个私有仓库吧。</p><a id="more"></a><h2 id="服务端"><a class="header-anchor" href="#服务端">#</a>服务端</h2><p>还是在我小米的<code>Centos</code>系统上架的服务器，装个<code>git</code>就好，这步省略了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install git -y</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">apt-get install git -y</span><br></pre></td></tr></table></figure><h3 id="创建-git-用户"><a class="header-anchor" href="#创建-git-用户">#</a>创建 git 用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser git</span><br></pre></td></tr></table></figure><h3 id="切换到-git-用户"><a class="header-anchor" href="#切换到-git-用户">#</a>切换到 git 用户</h3><p>git 其实不用密码啥的，不需要什么操作，只需要生成一下密钥就行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br></pre></td></tr></table></figure><h3 id="生成-ssh-密钥"><a class="header-anchor" href="#生成-ssh-密钥">#</a>生成 ssh 密钥</h3><p>不会的看这里：<a href="https://onns.xyz/blog/2020/09/07/ssh-key-in-linux/">Linux 下密钥登录</a></p><p>然后把<code>私钥</code>发给自己即可。</p><h3 id="禁止-ssh-登录"><a class="header-anchor" href="#禁止-ssh-登录">#</a>禁止 SSH 登录</h3><p>为了保证安全：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先退出git用户</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">sudo vi /etc/passwd</span><br></pre></td></tr></table></figure><p>把<code>git:x:1001:1001:,,,:/home/git:/bin/bash</code>之类的改成<code>git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</code>。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><h3 id="创建仓库"><a class="header-anchor" href="#创建仓库">#</a>创建仓库</h3><p>来到自己的根目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span></span><br></pre></td></tr></table></figure><p>然后创建仓库，名字自己随便起咯：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare code.git</span><br></pre></td></tr></table></figure><p>至此服务器端就都 ok 了。</p><h3 id="多说一句"><a class="header-anchor" href="#多说一句">#</a>多说一句</h3><p>他们说<code>git</code>这个用户应该禁用<code>shell</code>什么的，如果真的担心的人可以参考下面的参考链接，我自己是觉得没必要。</p><h2 id="客户端"><a class="header-anchor" href="#客户端">#</a>客户端</h2><h3 id="创建-git-环境"><a class="header-anchor" href="#创建-git-环境">#</a>创建 git 环境</h3><p>首先在需要整理的文件夹里创建一个新的仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository <span class="keyword">in</span> /Users/onns/Documents/code/.git/</span><br></pre></td></tr></table></figure><h3 id="设置远端地址"><a class="header-anchor" href="#设置远端地址">#</a>设置远端地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@xm.onns.xyz:/home/git/code.git</span><br></pre></td></tr></table></figure><h3 id="推送代码"><a class="header-anchor" href="#推送代码">#</a>推送代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"init"</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="存在问题"><a class="header-anchor" href="#存在问题">#</a>存在问题</h3><p>不是因为人权之类的问题嘛，git 的默认分支要从<code>master</code>变成<code>main</code>了，但是我不知道为什么出错了，到时候再看看吧，目前先这样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin main</span><br><span class="line">error: src refspec main does not match any</span><br><span class="line">error: failed to push some refs to <span class="string">'git@xm.onns.xyz:/home/git/code.git'</span></span><br></pre></td></tr></table></figure><h2 id="ssh-配置"><a class="header-anchor" href="#ssh-配置">#</a>ssh 配置</h2><p>我之前用<code>ssh</code>密钥登录的时候，都是要用<code>-i</code>参数的，这次找了很久都没找到<code>git</code>如何指定密钥文件，然后发现大家的方法都是配置<code>.ssh/config</code>，哇我头一次知道原来有这么个玩意儿，🐂🍺 啊！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.ssh/config</span><br></pre></td></tr></table></figure><p>然后把下面这段加进去：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host xm.onns.xyz</span><br><span class="line">Hostname xm.onns.xyz</span><br><span class="line">User git</span><br><span class="line">Port 22</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/Documents/common/key/git</span><br></pre></td></tr></table></figure><p>然后就 ok 了。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><p>大家的好像都是互相抄，大同小异，只列举一部分了：</p><ul><li><a href="https://www.cnblogs.com/zhoug2020/p/5789041.html" target="_blank" rel="noopener">git 服务器搭建，在自己服务器上搭建私有仓库</a></li><li><a href="https://www.liaoxuefeng.com/article/895923490127776" target="_blank" rel="noopener">创建 git 私有仓库</a></li><li><a href="https://www.cnblogs.com/jiangxiaobo/p/13846438.html" target="_blank" rel="noopener">现有文件夹添加到 git 仓库的步骤</a></li><li><a href="https://www.cnblogs.com/cidgur/p/12432280.html" target="_blank" rel="noopener">git 在 pull/push 指定密钥文件</a></li><li><a href="https://thucnc.medium.com/how-to-specify-different-ssh-keys-for-git-push-for-a-given-domain-bef56639dc02" target="_blank" rel="noopener">How to specify different SSH keys for git push for a given domain</a></li><li><a href="https://www.cnblogs.com/hangj/p/11506686.html" target="_blank" rel="noopener">.ssh/config 常用配置</a></li><li><a href="https://www.cyberciti.biz/faq/create-ssh-config-file-on-linux-unix/" target="_blank" rel="noopener">OpenSSH Config File Examples</a></li><li><a href="https://linuxize.com/post/using-the-ssh-config-file/" target="_blank" rel="noopener">Using the SSH Config File</a></li></ul><p>02:23 晚安～</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>这个<code>/usr/bin/git-shell</code>其实目录下没有这个文件，但是确实可以工作，有空再查查。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> github </tag>
            
            <tag> git </tag>
            
            <tag> ssh </tag>
            
            <tag> private repository </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Res2Net A New Multi-scale Backbone Architecture</title>
      <link href="/blog/2021/01/22/res2net-a-new-multi-scale-backbone-architecture/"/>
      <url>/blog/2021/01/22/res2net-a-new-multi-scale-backbone-architecture/</url>
      
        <content type="html"><![CDATA[<h1 id="res2net-a-new-multi-scale-backbone-architecture"><a class="header-anchor" href="#res2net-a-new-multi-scale-backbone-architecture">#</a>Res2Net: A New Multi-scale Backbone Architecture</h1><p>在现实场景中的多尺度视觉模式是很常见的：</p><ol><li>在同一个场景中，不同的物体可能包含不同尺寸大小。</li><li>对象的基本上下文信息可能占据比对象本身更大的区域。</li></ol>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> 2019 </tag>
            
            <tag> res2net </tag>
            
            <tag> IEEE </tag>
            
            <tag> IEEE 2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-2021年春季期末总结</title>
      <link href="/blog/2021/01/22/2021-spring-lab-summary/"/>
      <url>/blog/2021/01/22/2021-spring-lab-summary/</url>
      
        <content type="html"><![CDATA[<center ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();"><table><thead><tr><th style="text-align:center">2021-01-22</th><th style="text-align:center">期末总结</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><p style="page-break-before: always"></p><h2 id="找工作"><a class="header-anchor" href="#找工作">#</a>找工作</h2><p>因为我所找的是后台开发岗位，招的最多的语言是<code>java</code>和<code>c++</code>，所以又重新捡起来了一些相关的基础知识，并且每天都会刷<code>leetcode</code>，偶尔和同学分享一些面试中遇到的题目，或者是在做题过程中遇到的十分具有代表性的问题。</p><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20210122-1.png" alt="java"></p></center><p style="page-break-before: always"></p><h2 id="校招面试"><a class="header-anchor" href="#校招面试">#</a>校招面试</h2><p>因为都是在线笔试面试，因此无形中大家都多了很多机会（不用飞去全国各地），所以就会有非常多的面试经历和次数，对经常问到的问题和笔试中的一些问题，进行了整理和总结。</p><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20210122-2.png" alt="面试整理"></p></center><p>虽然最后都没有用上，但是也都是相通的把。</p><p style="page-break-before: always"></p><h2 id="行为识别"><a class="header-anchor" href="#行为识别">#</a>行为识别</h2><p>研究的方向偏向于轻量化的高效行为识别，首先对大量的相关文献进行了精读、整理和总结。</p><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20210122-3.png" alt="文献阅读"><br><img src="//onns.xyz/blog/image/20210122-4.png" alt="文献阅读"><br><img src="//onns.xyz/blog/image/20210122-5.png" alt="文献阅读"></p></center><p>选择了一种用边缘表征来对光流进行替代的行为识别方法作为基础，并在之上进行改进创新。</p><p style="page-break-before: always"></p><h2 id="做实验"><a class="header-anchor" href="#做实验">#</a>做实验</h2><p>由于行为识别工作的复杂性，哪怕是最轻量化的方法，也需要3-5天的时间来验证实验结果，所以一直在测试实验，并在实验运行的过程中思考问题原因、整理实验结果等</p><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20210122-6.png" alt="实验结果"></p></center><p style="page-break-before: always"></p><h2 id="写论文"><a class="header-anchor" href="#写论文">#</a>写论文</h2><p>每天按照自己的计划，撰写毕业论文。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> final report </tag>
            
            <tag> report </tag>
            
            <tag> lab406 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（15）</title>
      <link href="/blog/2021/01/10/the-linux-command-line-note-15/"/>
      <url>/blog/2021/01/10/the-linux-command-line-note-15/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="printenv"><a class="header-anchor" href="#printenv">#</a>printenv</h2><p><code>printenv</code>程序用来查看环境变量。<br>不知道为什么我的<code>set</code>命令输出的是一堆奇怪的东西= =。<br>别名无法通过使用<code>set</code>或<code>printenv</code>来查看。<br>用不带参数的`alias 来查看别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">alias</span></span><br><span class="line"><span class="built_in">alias</span> alert=<span class="string">'notify-send --urgency=low -i "$([ $? = 0 ] &amp;&amp; echo terminal || echo error)" "$(history|tail -n1|sed -e '</span>\<span class="string">''</span>s/^\s*[0-9]\+\s*//;s/[;&amp;|]\s*alert$//<span class="string">'\'</span><span class="string">')"'</span></span><br><span class="line"><span class="built_in">alias</span> egrep=<span class="string">'egrep --color=auto'</span></span><br><span class="line"><span class="built_in">alias</span> fgrep=<span class="string">'fgrep --color=auto'</span></span><br><span class="line"><span class="built_in">alias</span> grep=<span class="string">'grep --color=auto'</span></span><br><span class="line"><span class="built_in">alias</span> l=<span class="string">'ls -CF'</span></span><br><span class="line"><span class="built_in">alias</span> la=<span class="string">'ls -A'</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">'ls -alF'</span></span><br><span class="line"><span class="built_in">alias</span> ls=<span class="string">'ls --color=auto'</span></span><br></pre></td></tr></table></figure><h2 id="vi"><a class="header-anchor" href="#vi">#</a>vi</h2><p><code>vi</code>启动后会直接进入命令模式。</p><p>按下<code>i</code>键进入插入模式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-- INSERT --</span><br></pre></td></tr></table></figure><p>按下<code>w</code>键保存修改内容。</p><p>按下<code>q</code>键退出。</p><p><code>vi</code>中的许多命令都可以在前面加上一个数字。</p><p>19:16，今天先看到这里吧！看了很多但值得整理的蛮少的。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程小记</title>
      <link href="/blog/2021/01/06/programming-tips/"/>
      <url>/blog/2021/01/06/programming-tips/</url>
      
        <content type="html"><![CDATA[<p>一些技巧，记下来，之后可能会用到，省的去百度搜了</p><a id="more"></a><h2 id="python"><a class="header-anchor" href="#python">#</a>python</h2><ol><li><p>命令行指定显卡<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>：</p><ul><li><code>CUDA_VISIBLE_DEVICES=gpu_ids</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CUDA_VISIBLE_DEVICES=1 python -u main.py</span><br></pre></td></tr></table></figure></li></ol><h2 id="vscode"><a class="header-anchor" href="#vscode">#</a>vscode</h2><ol><li>指定<code>vscode</code>的文件换行符为<code>LF</code><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：<ul><li>设置里搜索：<code>files:eol</code>。</li></ul></li></ol><h2 id="chrome"><a class="header-anchor" href="#chrome">#</a>chrome</h2><ol><li><p>打印分页：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"page-break-before: always"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/166161217" target="_blank" rel="noopener">在 pytorch 中指定显卡</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/sdujava2011/article/details/83827343" target="_blank" rel="noopener">IDEA 和 VS code 设置默认换行符为 LF</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAN数据增强方法——GroupMultiScaleCrop</title>
      <link href="/blog/2021/01/03/pan-data-augmentation/"/>
      <url>/blog/2021/01/03/pan-data-augmentation/</url>
      
        <content type="html"><![CDATA[<p><code>PAN</code>或者说<code>TEA</code>、<code>TSM</code>、<code>TSN</code>这一系列网络所用的唯一的数据增强方法：<code>GroupMultiScaleCrop</code>。</p><a id="more"></a><p>以<code>something-something</code>的数据集为例，因为这是我在用的数据集，其它场景型数据集多了一个水平翻转，因为<code>something-something</code>有左右区分，所以不行。</p><p><code>model.py</code>的最后：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> torchvision.transforms.Compose([GroupMultiScaleCrop(self.input_size, [<span class="number">1</span>, <span class="number">.875</span>, <span class="number">.75</span>, <span class="number">.66</span>])])</span><br></pre></td></tr></table></figure><p>具体调用的代码在<code>transforms.py</code>，加了些注释：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GroupMultiScaleCrop</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, input_size, scales=None, max_distort=<span class="number">1</span>, fix_crop=True, more_fix_crop=True)</span>:</span></span><br><span class="line">self.scales = scales <span class="keyword">if</span> scales <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> [<span class="number">1</span>, <span class="number">.875</span>, <span class="number">.75</span>, <span class="number">.66</span>]</span><br><span class="line">self.max_distort = max_distort</span><br><span class="line">self.fix_crop = fix_crop</span><br><span class="line">self.more_fix_crop = more_fix_crop</span><br><span class="line">self.input_size = input_size <span class="keyword">if</span> <span class="keyword">not</span> isinstance(input_size, int) <span class="keyword">else</span> [input_size, input_size]</span><br><span class="line">self.interpolation = Image.BILINEAR</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, img_group)</span>:</span></span><br><span class="line"></span><br><span class="line">im_size = img_group[<span class="number">0</span>].size <span class="comment"># 因为一组图都是一样大的，从第一张图就能获取到大小</span></span><br><span class="line"></span><br><span class="line">crop_w, crop_h, offset_w, offset_h = self._sample_crop_size(im_size) <span class="comment"># 随机选择一种剪切方式</span></span><br><span class="line">crop_img_group = [img.crop((offset_w, offset_h, offset_w + crop_w, offset_h + crop_h)) <span class="keyword">for</span> img <span class="keyword">in</span> img_group] <span class="comment"># 切图</span></span><br><span class="line">ret_img_group = [img.resize((self.input_size[<span class="number">0</span>], self.input_size[<span class="number">1</span>]), self.interpolation) <span class="comment"># 然后恢复成网络输入的大小，224*224，用双线性插值的方法</span></span><br><span class="line"><span class="keyword">for</span> img <span class="keyword">in</span> crop_img_group]</span><br><span class="line"><span class="keyword">return</span> ret_img_group</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_sample_crop_size</span><span class="params">(self, im_size)</span>:</span></span><br><span class="line">image_w, image_h = im_size[<span class="number">0</span>], im_size[<span class="number">1</span>] <span class="comment"># 获取图像大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find a crop size</span></span><br><span class="line">base_size = min(image_w, image_h)</span><br><span class="line">crop_sizes = [int(base_size * x) <span class="keyword">for</span> x <span class="keyword">in</span> self.scales] <span class="comment"># 按照宽高比较窄的那一边，乘上多个尺度，就是要修剪的大小</span></span><br><span class="line">crop_h = [self.input_size[<span class="number">1</span>] <span class="keyword">if</span> abs(x - self.input_size[<span class="number">1</span>]) &lt; <span class="number">3</span> <span class="keyword">else</span> x <span class="keyword">for</span> x <span class="keyword">in</span> crop_sizes] <span class="comment"># input_size是224，如果大小等于224+-3那就224，不然就是修剪之后的大小</span></span><br><span class="line">crop_w = [self.input_size[<span class="number">0</span>] <span class="keyword">if</span> abs(x - self.input_size[<span class="number">0</span>]) &lt; <span class="number">3</span> <span class="keyword">else</span> x <span class="keyword">for</span> x <span class="keyword">in</span> crop_sizes]</span><br><span class="line"></span><br><span class="line">pairs = []</span><br><span class="line"><span class="keyword">for</span> i, h <span class="keyword">in</span> enumerate(crop_h):</span><br><span class="line"><span class="keyword">for</span> j, w <span class="keyword">in</span> enumerate(crop_w):</span><br><span class="line"><span class="keyword">if</span> abs(i - j) &lt;= self.max_distort: <span class="comment"># max_distort=1，相当于允许i和j之间差一，就[1, .875, .75, .66]之间</span></span><br><span class="line">pairs.append((w, h))</span><br><span class="line"></span><br><span class="line">crop_pair = random.choice(pairs) <span class="comment"># 随机选一个切法</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> self.fix_crop:</span><br><span class="line">w_offset = random.randint(<span class="number">0</span>, image_w - crop_pair[<span class="number">0</span>])</span><br><span class="line">h_offset = random.randint(<span class="number">0</span>, image_h - crop_pair[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">w_offset, h_offset = self._sample_fix_offset(image_w, image_h, crop_pair[<span class="number">0</span>], crop_pair[<span class="number">1</span>]) <span class="comment"># 默认走这里</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> crop_pair[<span class="number">0</span>], crop_pair[<span class="number">1</span>], w_offset, h_offset</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_sample_fix_offset</span><span class="params">(self, image_w, image_h, crop_w, crop_h)</span>:</span></span><br><span class="line">offsets = self.fill_fix_offset(self.more_fix_crop, image_w, image_h, crop_w, crop_h) <span class="comment"># 传进去的是原始的图像大小和要切成的图像高和宽</span></span><br><span class="line"><span class="keyword">return</span> random.choice(offsets) <span class="comment"># 13种偏移里选一种，而不是上面那种全选的方式</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fill_fix_offset</span><span class="params">(more_fix_crop, image_w, image_h, crop_w, crop_h)</span>:</span></span><br><span class="line">w_step = (image_w - crop_w) // <span class="number">4</span></span><br><span class="line">h_step = (image_h - crop_h) // <span class="number">4</span></span><br><span class="line"></span><br><span class="line">ret = list()</span><br><span class="line">ret.append((<span class="number">0</span>, <span class="number">0</span>))  <span class="comment"># upper left</span></span><br><span class="line">ret.append((<span class="number">4</span> * w_step, <span class="number">0</span>))  <span class="comment"># upper right</span></span><br><span class="line">ret.append((<span class="number">0</span>, <span class="number">4</span> * h_step))  <span class="comment"># lower left</span></span><br><span class="line">ret.append((<span class="number">4</span> * w_step, <span class="number">4</span> * h_step))  <span class="comment"># lower right</span></span><br><span class="line">ret.append((<span class="number">2</span> * w_step, <span class="number">2</span> * h_step))  <span class="comment"># center</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> more_fix_crop:</span><br><span class="line">ret.append((<span class="number">0</span>, <span class="number">2</span> * h_step))  <span class="comment"># center left</span></span><br><span class="line">ret.append((<span class="number">4</span> * w_step, <span class="number">2</span> * h_step))  <span class="comment"># center right</span></span><br><span class="line">ret.append((<span class="number">2</span> * w_step, <span class="number">4</span> * h_step))  <span class="comment"># lower center</span></span><br><span class="line">ret.append((<span class="number">2</span> * w_step, <span class="number">0</span> * h_step))  <span class="comment"># upper center</span></span><br><span class="line"></span><br><span class="line">ret.append((<span class="number">1</span> * w_step, <span class="number">1</span> * h_step))  <span class="comment"># upper left quarter</span></span><br><span class="line">ret.append((<span class="number">3</span> * w_step, <span class="number">1</span> * h_step))  <span class="comment"># upper right quarter</span></span><br><span class="line">ret.append((<span class="number">1</span> * w_step, <span class="number">3</span> * h_step))  <span class="comment"># lower left quarter</span></span><br><span class="line">ret.append((<span class="number">3</span> * w_step, <span class="number">3</span> * h_step))  <span class="comment"># lower righ quarter</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ret</span><br></pre></td></tr></table></figure><p>入口都是<code>__call__</code>方法，<code>Image.BILINEAR</code>双线性插值。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> pan </tag>
            
            <tag> data augmentation </tag>
            
            <tag> something something </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>inotify使用</title>
      <link href="/blog/2021/01/03/inotify-usage/"/>
      <url>/blog/2021/01/03/inotify-usage/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>懒真的是人类进步的究极动力= =<br>因为代码要在无数台机器上来回切换，我最开始用的是<code>github</code>，但是频繁改的时候<code>github</code>也太难用了。<br>后来用微云同步助手，不过这个只能我的<code>windows</code>和<code>mac</code>之间同步，<code>linux</code>没有客户端。<br>再后来知道了<code>rsync</code>这么一个工具，<code>windows</code>下也有，就三端同步特别方便，写一个命令行工具这边点一下同步到云，那边点一下从云上拉下来，完美。<br>再后来，也就是昨天，我实在懒得点那一下了，<code>Linux</code>内核支持文件的细粒度监控，用<code>inotify</code>实现，所以一下文件修改增加什么的都可以被监控到，然后自动监控，然后传上云，配合上<code>vscode</code>之类的编辑器的自动保存，感觉解放了自己！</p><p>本来想昨晚整理的，结果偷了个懒，就今天了= =！</p><a id="more"></a><h2 id="inotify-是个啥"><a class="header-anchor" href="#inotify-是个啥">#</a>inotify 是个啥</h2><p>一句话概括就是：<strong>Inotify 是一个 Linux 特性，它监控文件系统操作，比如读取、写入和创建。</strong></p><p>它相比于<code>cron</code>来讲的好处就是事件触发，不会占用大量的计算机资源和时间来扫描，一旦有修改之类的操作，会通知给用户，然后以此来响应操作。</p><p>而且<code>inotify</code>是内核支持的。</p><h2 id="安装-inotify-tools"><a class="header-anchor" href="#安装-inotify-tools">#</a>安装 inotify-tools</h2><p>我是在<code>Windows</code>的子系统里装的<code>Ubuntu</code>，听说是个具有完备功能的<code>Linux</code>版本，所以像这种功能应该都有的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ inotifywait</span><br><span class="line">Command <span class="string">'inotifywait'</span> not found, but can be installed with:</span><br><span class="line">sudo apt install inotify-tools</span><br></pre></td></tr></table></figure><p>所以其实安装很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install inotify-tools -y</span><br></pre></td></tr></table></figure><h2 id="使用-inotify-tools"><a class="header-anchor" href="#使用-inotify-tools">#</a>使用 inotify-tools</h2><p><code>inotify-tools</code>里附带两个工具：<code>inotifywait</code>和<code>inotifywatch</code>。</p><p>前者用来<strong>监控文件或目录的变化</strong>，后者用来<strong>统计文件系统访问的次数</strong>。<br>后者今天暂时用不上，贴个参数，留待有缘人补坑：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">$ inotifywatch --<span class="built_in">help</span></span><br><span class="line">inotifywatch 3.14</span><br><span class="line">Gather filesystem usage statistics using inotify.</span><br><span class="line">Usage: inotifywatch [ options ] file1 [ file2 ] [ ... ]</span><br><span class="line">Options:</span><br><span class="line">        -h|--<span class="built_in">help</span>       Show this <span class="built_in">help</span> text.</span><br><span class="line">        -v|--verbose    Be verbose.</span><br><span class="line">        @&lt;file&gt;         Exclude the specified file from being watched.</span><br><span class="line">        --fromfile &lt;file&gt;</span><br><span class="line">                Read files to watch from &lt;file&gt; or `-<span class="string">' for stdin.</span></span><br><span class="line"><span class="string">        --exclude &lt;pattern&gt;</span></span><br><span class="line"><span class="string">                Exclude all events on files matching the extended regular</span></span><br><span class="line"><span class="string">                expression &lt;pattern&gt;.</span></span><br><span class="line"><span class="string">        --excludei &lt;pattern&gt;</span></span><br><span class="line"><span class="string">                Like --exclude but case insensitive.</span></span><br><span class="line"><span class="string">        -z|--zero</span></span><br><span class="line"><span class="string">                In the final table of results, output rows and columns even</span></span><br><span class="line"><span class="string">                if they consist only of zeros (the default is to not output</span></span><br><span class="line"><span class="string">                these rows and columns).</span></span><br><span class="line"><span class="string">        -r|--recursive  Watch directories recursively.</span></span><br><span class="line"><span class="string">        -t|--timeout &lt;seconds&gt;</span></span><br><span class="line"><span class="string">                Listen only for specified amount of time in seconds; if</span></span><br><span class="line"><span class="string">                omitted or 0, inotifywatch will execute until receiving an</span></span><br><span class="line"><span class="string">                interrupt signal.</span></span><br><span class="line"><span class="string">        -e|--event &lt;event1&gt; [ -e|--event &lt;event2&gt; ... ]</span></span><br><span class="line"><span class="string">                Listen for specific event(s).  If omitted, all events are</span></span><br><span class="line"><span class="string">                listened for.</span></span><br><span class="line"><span class="string">        -a|--ascending &lt;event&gt;</span></span><br><span class="line"><span class="string">                Sort ascending by a particular event, or `total'</span>.</span><br><span class="line">        -d|--descending &lt;event&gt;</span><br><span class="line">                Sort descending by a particular event, or `total<span class="string">'.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Exit status:</span></span><br><span class="line"><span class="string">        0  -  Exited normally.</span></span><br><span class="line"><span class="string">        1  -  Some error occurred.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Events:</span></span><br><span class="line"><span class="string">        access          file or directory contents were read</span></span><br><span class="line"><span class="string">        modify          file or directory contents were written</span></span><br><span class="line"><span class="string">        attrib          file or directory attributes changed</span></span><br><span class="line"><span class="string">        close_write     file or directory closed, after being opened in</span></span><br><span class="line"><span class="string">                        writable mode</span></span><br><span class="line"><span class="string">        close_nowrite   file or directory closed, after being opened in</span></span><br><span class="line"><span class="string">                        read-only mode</span></span><br><span class="line"><span class="string">        close           file or directory closed, regardless of read/write mode</span></span><br><span class="line"><span class="string">        open            file or directory opened</span></span><br><span class="line"><span class="string">        moved_to        file or directory moved to watched directory</span></span><br><span class="line"><span class="string">        moved_from      file or directory moved from watched directory</span></span><br><span class="line"><span class="string">        move            file or directory moved to or from watched directory</span></span><br><span class="line"><span class="string">        create          file or directory created within watched directory</span></span><br><span class="line"><span class="string">        delete          file or directory deleted within watched directory</span></span><br><span class="line"><span class="string">        delete_self     file or directory was deleted</span></span><br><span class="line"><span class="string">        unmount         file system containing file or directory unmounted</span></span><br></pre></td></tr></table></figure><p><code>inotifywait</code>也先贴一个<code>help</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">$ inotifywait --<span class="built_in">help</span></span><br><span class="line">inotifywait 3.14</span><br><span class="line">Wait <span class="keyword">for</span> a particular event on a file or <span class="built_in">set</span> of files.</span><br><span class="line">Usage: inotifywait [ options ] file1 [ file2 ] [ file3 ] [ ... ]</span><br><span class="line">Options:</span><br><span class="line">        -h|--<span class="built_in">help</span>       Show this <span class="built_in">help</span> text.</span><br><span class="line">        @&lt;file&gt;         Exclude the specified file from being watched.</span><br><span class="line">        --exclude &lt;pattern&gt;</span><br><span class="line">                        Exclude all events on files matching the</span><br><span class="line">                        extended regular expression &lt;pattern&gt;.</span><br><span class="line">        --excludei &lt;pattern&gt;</span><br><span class="line">                        Like --exclude but <span class="keyword">case</span> insensitive.</span><br><span class="line">        -m|--monitor    Keep listening <span class="keyword">for</span> events forever.  Without</span><br><span class="line">                        this option, inotifywait will <span class="built_in">exit</span> after one</span><br><span class="line">                        event is received.</span><br><span class="line">        -d|--daemon     Same as --monitor, except run <span class="keyword">in</span> the background</span><br><span class="line">                        logging events to a file specified by --outfile.</span><br><span class="line">                        Implies --syslog.</span><br><span class="line">        -r|--recursive  Watch directories recursively.</span><br><span class="line">        --fromfile &lt;file&gt;</span><br><span class="line">                        Read files to watch from &lt;file&gt; or `-<span class="string">' for stdin.</span></span><br><span class="line"><span class="string">        -o|--outfile &lt;file&gt;</span></span><br><span class="line"><span class="string">                        Print events to &lt;file&gt; rather than stdout.</span></span><br><span class="line"><span class="string">        -s|--syslog     Send errors to syslog rather than stderr.</span></span><br><span class="line"><span class="string">        -q|--quiet      Print less (only print events).</span></span><br><span class="line"><span class="string">        -qq             Print nothing (not even events).</span></span><br><span class="line"><span class="string">        --format &lt;fmt&gt;  Print using a specified printf-like format</span></span><br><span class="line"><span class="string">                        string; read the man page for more details.</span></span><br><span class="line"><span class="string">        --timefmt &lt;fmt&gt; strftime-compatible format string for use with</span></span><br><span class="line"><span class="string">                        %T in --format string.</span></span><br><span class="line"><span class="string">        -c|--csv        Print events in CSV format.</span></span><br><span class="line"><span class="string">        -t|--timeout &lt;seconds&gt;</span></span><br><span class="line"><span class="string">                        When listening for a single event, time out after</span></span><br><span class="line"><span class="string">                        waiting for an event for &lt;seconds&gt; seconds.</span></span><br><span class="line"><span class="string">                        If &lt;seconds&gt; is 0, inotifywait will never time out.</span></span><br><span class="line"><span class="string">        -e|--event &lt;event1&gt; [ -e|--event &lt;event2&gt; ... ]</span></span><br><span class="line"><span class="string">                Listen for specific event(s).  If omitted, all events are</span></span><br><span class="line"><span class="string">                listened for.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Exit status:</span></span><br><span class="line"><span class="string">        0  -  An event you asked to watch for was received.</span></span><br><span class="line"><span class="string">        1  -  An event you did not ask to watch for was received</span></span><br><span class="line"><span class="string">              (usually delete_self or unmount), or some error occurred.</span></span><br><span class="line"><span class="string">        2  -  The --timeout option was given and no events occurred</span></span><br><span class="line"><span class="string">              in the specified interval of time.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Events:</span></span><br><span class="line"><span class="string">        access          file or directory contents were read</span></span><br><span class="line"><span class="string">        modify          file or directory contents were written</span></span><br><span class="line"><span class="string">        attrib          file or directory attributes changed</span></span><br><span class="line"><span class="string">        close_write     file or directory closed, after being opened in</span></span><br><span class="line"><span class="string">                        writable mode</span></span><br><span class="line"><span class="string">        close_nowrite   file or directory closed, after being opened in</span></span><br><span class="line"><span class="string">                        read-only mode</span></span><br><span class="line"><span class="string">        close           file or directory closed, regardless of read/write mode</span></span><br><span class="line"><span class="string">        open            file or directory opened</span></span><br><span class="line"><span class="string">        moved_to        file or directory moved to watched directory</span></span><br><span class="line"><span class="string">        moved_from      file or directory moved from watched directory</span></span><br><span class="line"><span class="string">        move            file or directory moved to or from watched directory</span></span><br><span class="line"><span class="string">        create          file or directory created within watched directory</span></span><br><span class="line"><span class="string">        delete          file or directory deleted within watched directory</span></span><br><span class="line"><span class="string">        delete_self     file or directory was deleted</span></span><br><span class="line"><span class="string">        unmount         file system containing file or directory unmounted</span></span><br></pre></td></tr></table></figure><p>主要用到的参数是：</p><ul><li><code>r</code>：即<code>recursive</code>，递归查询目录。</li><li><code>m</code>：即<code>monitor</code>，始终保持监听，如果没有这个参数，<code>inotifywait</code>在接收一次事件之后就会退出。</li><li><code>q</code>：即<code>quiet</code>，就是只打印事件，最小化输出。</li><li><code>e</code>：即<code>event</code>，我们要监听的事件类型，多个事件用<code>,</code>分隔。</li></ul><p><code>--format</code>参数也会用到，是控制输出格式的，自己看<code>man</code>手册吧如果感兴趣。</p><p>首先测试一下监控事件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inotifywait -mrq --format <span class="string">'%Xe %w%f'</span> -e modify,create,delete,attrib Desktop/</span><br></pre></td></tr></table></figure><p>然后再开一个<code>shell</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch Desktop/&#123;1..5&#125;</span><br></pre></td></tr></table></figure><p>然后就会观察到那边的输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE Desktop/1</span><br><span class="line">ATTRIB Desktop/1</span><br><span class="line">CREATE Desktop/2</span><br><span class="line">ATTRIB Desktop/2</span><br><span class="line">CREATE Desktop/3</span><br><span class="line">ATTRIB Desktop/3</span><br><span class="line">CREATE Desktop/4</span><br><span class="line">ATTRIB Desktop/4</span><br><span class="line">CREATE Desktop/5</span><br><span class="line">ATTRIB Desktop/5</span><br></pre></td></tr></table></figure><p>创建文件并修改了属性，没毛病，再改一下文件试试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span> &gt;&gt; Desktop/1</span><br></pre></td></tr></table></figure><p>再次观察到输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MODIFY Desktop/1</span><br></pre></td></tr></table></figure><p>完美！</p><p>然后就可以制作一个脚本了，发现检测到了更新，就同步到云端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inotifywait -mrq --format  <span class="string">'%Xe %w%f'</span> -e modify,create,delete,attrib,close_write,move ~/Documents/common/PAN-PyTorch/ | <span class="keyword">while</span> <span class="built_in">read</span> file</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">mi</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>这个<code>mi</code>是我自己写的<code>shell</code>，封装了同步的一系列命令，诸位感兴趣可以自己通过<code>rsync</code>来写：<a href="https://onns.xyz/blog/2020/09/08/rsync-usage/">rsync 实现文件同步</a>。</p><p>然后让这个脚本后台运行就行了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup osync &amp;</span><br></pre></td></tr></table></figure><p>当然也可以做成<code>service</code>：<a href="https://onns.xyz/blog/2020/12/14/run-ngrok-as-a-service/">把 ngrok 服务配置成 service</a>。</p><p>收工！</p><h2 id="todo"><a class="header-anchor" href="#todo">#</a>TODO</h2><p>刚刚其实测试是在我树莓派的<code>Ubuntu</code>系统下做的，在<code>Windows</code>的子系统里，我发现一个修改事件会触发四次<code>inotify</code>的监控事件，所以其实如果运行下来，修改一次就会进行四次的同步操作，感觉很消耗资源，不过所幸自己用，到时候再来填坑吧！</p><p>第二个也是下面<strong>参考链接一</strong>里提到的问题，其实我每次同步都是全量同步，因为我同步内容少，所以就不麻烦的去弄这些了，如果要真实的应用场景，还是要像他那样<strong>按需同步</strong>，有空来看看他怎么写的，<code>shell</code>好久没学了，学业压力好大，没时间再做别的了，哭了。</p><p>10:19，收工。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://www.cnblogs.com/ginvip/p/6430986.html" target="_blank" rel="noopener">真正的 inotify+rsync 实时同步 彻底告别同步慢</a></li><li><a href="https://blog.51cto.com/13858192/2159200" target="_blank" rel="noopener">rsync+ Notify 配置解析及步骤详解</a></li><li><a href="https://blog.csdn.net/lijun_work/article/details/106260406" target="_blank" rel="noopener">notify+rsync 实时同步脚本</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> inotify </tag>
            
            <tag> rsync </tag>
            
            <tag> sync </tag>
            
            <tag> windows </tag>
            
            <tag> inotifywait </tag>
            
            <tag> inotifywatch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>On the Integration of Optical Flow and Action Recognition</title>
      <link href="/blog/2020/12/29/on-the-integration-of-optical-flow-and-action-recognition/"/>
      <url>/blog/2020/12/29/on-the-integration-of-optical-flow-and-action-recognition/</url>
      
        <content type="html"><![CDATA[<h1 id="on-the-integration-of-optical-flow-and-action-recognition"><a class="header-anchor" href="#on-the-integration-of-optical-flow-and-action-recognition">#</a>On the Integration of Optical Flow and Action Recognition</h1><p><code>PAN</code>的参考文献之一，介绍了一些研究思路，以及光流对行为识别准确率影响最大的部分是边缘信息。</p><a id="more"></a><h2 id="摘要"><a class="header-anchor" href="#摘要">#</a>摘要</h2><p>文章深入研究了<code>为什么光流对行为识别是有帮助的</code>、<code>光流方法的什么因素影响到了行为识别的准确率</code>以及<code>如何做得更好</code><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。</p><p>论文通过<code>不同的光流算法</code>和<code>输入变换</code>来探索上述问题，得到以下结论：</p><ol><li>光流对于行为识别的帮助在于它的外观不变性，不会对颜色敏感。</li><li>光流本身的精度与行为识别分类的准确性之间没有相关性。</li><li>光流的边缘信息和小位移对行为识别的分类相关。</li><li>通过分类损失来（优化）训练光流可以提高行为识别分类准确性。</li><li>使用行为识别分类误差来训练得到的光流，与普通的光流的差异主要集中在人体的内部与边缘区域。</li></ol><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20201229-1.jpg" alt="边缘1"><br><img src="//onns.xyz/blog/image/20201229-2.jpg" alt="边缘2"><br><img src="//onns.xyz/blog/image/20201229-3.jpg" alt="边缘3"></p></center><h2 id="假设一：两帧之间的光流是一个很好的视频分类特征"><a class="header-anchor" href="#假设一：两帧之间的光流是一个很好的视频分类特征">#</a>假设一：两帧之间的光流是一个很好的视频分类特征</h2><blockquote><p>What makes motion such a useful feature for video classification?</p></blockquote><p>通过<code>随机打乱光流帧</code>来观察准确率发现光流的轨迹不是主要的影响因素，因为一些静态的运动信息已经编码在里面了。</p><p>于是论文又做了一个实验，将计算光流的帧序也打乱，得到的结果是准确率下降的很多但仍然比没用光流来的差。</p><p>在将外观信息进行改变后，光流只下降了<code>1%</code>但传统的图像下降了<code>50%</code>，得出的结论是，光流的效果来源于他的外观不变性。</p><h2 id="个人观点"><a class="header-anchor" href="#个人观点">#</a>个人观点</h2><p>论文中会引用这篇文章的对于光流的一个结论，但是这五个结论可能并不适用于现在的情况，后面有用到再来补，不然应该不会详细看了，重点全在这五个结论里，这个摘要写的感觉就很棒。</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://arxiv.org/abs/1712.08416" target="_blank" rel="noopener">https://arxiv.org/abs/1712.08416</a></li><li><a href="https://blog.csdn.net/qq_18644873/article/details/87805517" target="_blank" rel="noopener">论文笔记《On the Integration of Optical Flow and Action Recognition》:光流的作用</a></li><li><a href="https://zhuanlan.zhihu.com/p/32443212" target="_blank" rel="noopener">[GCPR 2018 论文笔记] 光流与行为识别的结合研究</a></li><li><a href="https://blog.csdn.net/elaine_bao/article/details/80891173" target="_blank" rel="noopener">【论文笔记】光流在视频行为识别中的作用</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>感觉第三点其实好像没怎么提。看了别人的笔记，大家觉得是优化光流。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> 2018 </tag>
            
            <tag> 光流 </tag>
            
            <tag> optical flow </tag>
            
            <tag> GCPR </tag>
            
            <tag> GCPR 2018 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>当前工作进度报告</title>
      <link href="/blog/2020/12/27/interim-report/"/>
      <url>/blog/2020/12/27/interim-report/</url>
      
        <content type="html"><![CDATA[<center ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();"><table><thead><tr><th style="text-align:center">2020-12-27</th><th style="text-align:center">中期进展报告</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h2 id="综述"><a class="header-anchor" href="#综述">#</a>综述</h2><p>当前行为识别的主流方向有两个，分别是双流二维卷积神经网络和三维卷积神经网络。</p><p>随着数据集大小的增加和部署需求的增加，效率成为一个重要的关注点。</p><p>如果我们使用基于双流网络的方法，我们需要预先计算光流并存储在本地磁盘上。以<code>Kinetics-400</code>数据集为例，存储所有光流图像需要 <code>4.5TB</code> 的磁盘空间。如此庞大的数据量将使 <code>I/O</code> 成为训练过程中最紧张的瓶颈，导致 <code>GPU</code> 资源的浪费和实验周期的延长。此外，预计算光流并不便宜，这意味着所有的双流网络方法都不是实时的。</p><p>如果我们使用基于 3D cnn 的方法，人们仍然发现 3D cnn 训练困难，部署具有挑战性。在训练方面，使用高端 8-GPU 机器在 Kinetics400 数据集上训练一个标准的<code>Slow-Fast</code>网络需要 10 天才能完成。如此漫长的实验周期和巨大的计算成本，使得视频理解研究只能面向拥有丰富计算资源的大公司/实验室。最近有几项科研成果尝试加速深度视频模型的训练，但与大多数基于图像的计算机视觉任务相比，这些仍然是昂贵的。在部署方面，3D 卷积在不同平台上的支持不如 2D 卷积，3D cnn 需要更多的视频帧作为输入，增加了额外的 IO 成本。</p><p>上述问题的一个可行的解决方案是用一种<code>近似光流</code>的手段来代替光流，从而让模型有能够具备高效推理的潜力来应用到实时检测领域中。</p><h2 id="多尺度边缘表征双流网络"><a class="header-anchor" href="#多尺度边缘表征双流网络">#</a>多尺度边缘表征双流网络</h2><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20201227-1.png" alt="边缘"></p></center><p>图 B 是通过 EPE loss 得到的光流图像<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，图 C 是通过将光流网络和分类网络融合后训练得到的微调光流图像，后者在分类准确率上具有更好的效果。</p><p>通过可视化图 B 和图 C 之间的差距，可以看出<strong>运动的边界</strong>对于运动的表示起到了很重要的作用，故<strong>可以用图像边缘的运动</strong>来作为光流的一种替代方案。</p><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20201227-2.png" alt="边缘计算"></p></center><p>给定相邻帧的输入，首先通过一个卷积神经网络来提取边缘特征，然后通过计算边缘的差异来表征运动信息，作为双流输入中的“光流”分支。</p><h3 id="多尺度运动边缘表征"><a class="header-anchor" href="#多尺度运动边缘表征">#</a>多尺度运动边缘表征</h3><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20201227-4.jpeg" alt="多尺度运动边缘表征"></p></center><p>在实际的运动表征中，会出现相邻两帧之间的运动幅度非常小的情况，而单纯增加采样间隔也会对那些相邻两帧之间变化大的视频造成影响，同时也难以对帧数较少的视频进行描述，故采用一种多尺度的运动边缘表征作为网络的输入。</p><h3 id="多通道信息融合"><a class="header-anchor" href="#多通道信息融合">#</a>多通道信息融合</h3><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20201227-5.jpeg" alt="多通道信息融合"></p></center><h3 id="数据增强"><a class="header-anchor" href="#数据增强">#</a>数据增强</h3><p>由于视频数据的特殊性，一些常用的对于图像输入的数据增强操作都难以应用到视频输入中，除此之外，对于定义“喝水”、“骑自行车”等特定动作的数据集而言，依然可以通过<strong>水平翻转</strong>这类型的数据增强手段，但对于<code>Something-Something</code>这类数据集而言，“把物体从左侧拿到右侧”的水平翻转就会影响到最终的实验结果。故在此数据集上能够加入的数据增强操作仅仅只有<strong>尺度抖动</strong>，即：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GroupMultiScaleCrop(self.input_size, [<span class="number">1</span>, <span class="number">.875</span>, <span class="number">.75</span>, <span class="number">.66</span>])</span><br></pre></td></tr></table></figure><p>既然时序信息在行为识别的分类上起到了非常重要的作用，一个可能的数据增强手段是将视频的帧逆序输入作为一个新的分支，最后双流分支中的动作分支结果由两个时序分支结果加权得到。</p><table><thead><tr><th style="text-align:center">No</th><th style="text-align:center">Method</th><th style="text-align:center">Backbone</th><th style="text-align:center">Frame</th><th style="text-align:center">FLOPs × views</th><th style="text-align:center">Val Top1</th><th style="text-align:center">Val Top5</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Baseline</td><td style="text-align:center">-</td><td style="text-align:center">8+8×4</td><td style="text-align:center">67.7G × 1</td><td style="text-align:center">50.5</td><td style="text-align:center">79.2</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><strong>+ reverse</strong></td><td style="text-align:center">-</td><td style="text-align:center">8+8×4</td><td style="text-align:center">-</td><td style="text-align:center"><strong>51.54</strong></td><td style="text-align:center"><strong>79.86</strong></td></tr></tbody></table><h3 id="实验结果"><a class="header-anchor" href="#实验结果">#</a>实验结果</h3><table><thead><tr><th style="text-align:center">No</th><th style="text-align:center">Method</th><th style="text-align:center">Backbone</th><th style="text-align:center">Frame</th><th style="text-align:center">FLOPs × views</th><th style="text-align:center">Val Top1</th><th style="text-align:center">Val Top5</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Baseline</td><td style="text-align:center">-</td><td style="text-align:center">8+8×4</td><td style="text-align:center">67.7G × 1</td><td style="text-align:center">50.5</td><td style="text-align:center">79.2</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">+ ms</td><td style="text-align:center">-</td><td style="text-align:center">8+8×4</td><td style="text-align:center">-</td><td style="text-align:center">50.72</td><td style="text-align:center">79.48</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">+ mc</td><td style="text-align:center">-</td><td style="text-align:center">8+8×4</td><td style="text-align:center">-</td><td style="text-align:center">51.93</td><td style="text-align:center">80.15</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><strong>+ ms + mc</strong></td><td style="text-align:center">-</td><td style="text-align:center">8+8×4</td><td style="text-align:center">-</td><td style="text-align:center"><strong>52.44</strong></td><td style="text-align:center"><strong>80.35</strong></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">Baseline</td><td style="text-align:center">-</td><td style="text-align:center">(8+8×4)x2</td><td style="text-align:center">(46.6G+88.4G) x 2</td><td style="text-align:center">53.4</td><td style="text-align:center">81.1</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">+ ms</td><td style="text-align:center">-</td><td style="text-align:center">(8+8×4)x2</td><td style="text-align:center">-</td><td style="text-align:center">53.77</td><td style="text-align:center">81.43</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><strong>+ ms + mc</strong></td><td style="text-align:center">-</td><td style="text-align:center">(8+8×4)x2</td><td style="text-align:center">-</td><td style="text-align:center"><strong>54.80</strong></td><td style="text-align:center"><strong>82.55</strong></td></tr></tbody></table><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>EPE 是一种对光流预测错误率的一种评估方式。指所有像素点的 gound truth 和预测出来的光流之间差别距离（欧氏距离）的平均值。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> report </tag>
            
            <tag> lab406 </tag>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> interim report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A Comprehensive Study of Deep Video Action Recognition</title>
      <link href="/blog/2020/12/26/a-comprehensive-study-of-deep-video-action-recognition/"/>
      <url>/blog/2020/12/26/a-comprehensive-study-of-deep-video-action-recognition/</url>
      
        <content type="html"><![CDATA[<h1 id="a-comprehensive-study-of-deep-video-action-recognition"><a class="header-anchor" href="#a-comprehensive-study-of-deep-video-action-recognition">#</a>A Comprehensive Study of Deep Video Action Recognition</h1><p>2020 年 12 月的新论文，亚马逊李沐团队提出，行为识别的全面调研（2014-2020）。</p><a id="more"></a><p>最近十年的数据集：</p><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20201226-1.png" alt="数据集"></p></center><p>行为识别研究分为三个大体的趋势：</p><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20201226-2.png" alt="时间线"></p></center><p>上方的双流/2D 卷积和下方的 3D 卷积。</p><p>还有一条隐藏的线是提高计算效率，使之适用于更大的数据集，从而在实际应用中得到应用。</p><p><code>UCF101</code>和<code>Kinetics400</code>基本上可以通过场景和内容来推断出分类结果。</p><p><code>Something-Something</code>数据集需要强大的时间建模，因为大多数活动不能仅基于空间特征来推断。该数据集中于人与对象的交互，因此它更细粒度，需要强大的时间建模。</p><h2 id="挑战"><a class="header-anchor" href="#挑战">#</a>挑战</h2><p>从数据集角度，为训练行为识别的模型定义标签空间是一项很大的挑战，因为一项动作可能由不同的人会由不同的定义（比如拿起杯子和喝水）。除此之前，对视频进行的行为进行标注是<code>费力的</code>（你必须观看所有的帧）和<code>模糊的</code>（一个动作什么时候酸结束，这个是很难定义的）。还有一个原因，像<code>Kinetics</code>数据集只给了视频链接，其中很大一部分的数据已经被删除或者不可访问，大家很难在同一个基准上做实验。</p><p>从建模角度，人类的行为动作具有很强的类内和类间差异，第二，识别人类行为需要同时理解短期特定动作的运动信息和长期时间信息。第三，训练和推理的计算成本都很高，阻碍了动作识别模型的开发和部署。</p><h2 id="史诗"><a class="header-anchor" href="#史诗">#</a>史诗</h2><p>所有的故事都会是从<code>DT</code>和<code>iDT</code>开始讲，但是它的缺点：手工制作的特性计算成本很高，而且难以扩展和部署。</p><p><code>DeepVideo</code>算是这一派的开山祖师，不过效果并不如上面说的手工设计的特征（在<code>UCF101</code>数据集上 <strong>65.4%</strong> vs <strong>87.9%</strong>）。不过<code>DeepVideo</code>发现，一个由单个视频帧所训练的网络，在输入被改变为一组帧时，同样表现良好。这其实表明其实网络并没有很好得捕捉动作信息。这其实也鼓励人们思考，为什么卷积神经网络模型不像其他计算机视觉任务一样，在视频领域的表现没有超过传统手工制作的特征。</p><h3 id="two-stream-networks"><a class="header-anchor" href="#two-stream-networks">#</a>Two-stream networks</h3><p>由于视频的直观理解需要运动信息，寻找合适的方式来描述帧间的时间关系对于提高基于卷积神经网络的视频动作识别的性能至关重要。</p><p>与使用原始 RGB 图像作为输入相比，光流可以有效地去除静止背景，从而使学习问题更加简单。</p><p>双流法得出了两个重要的结论：</p><ol><li>运动信息是视频动作识别的重要内容。</li><li>对于 CNN 来说，直接从原始视频帧中学习时间信息仍然具有挑战性。</li></ol><p>因为在一个双流网络中有两个流。将会有一个阶段，需要合并两个网络的结果，以获得最终的预测。这一阶段通常称为时空融合步骤。</p><p>最简单、最直接的方法是<code>late fusion</code>。它对来自两个信息流的预测进行加权平均。尽管后期融合被广泛采用，但许多研究人员认为，这可能不是融合空间外观流和时间运动流信息的最佳方式。他们相信，在模型学习过程中，两个网络之间早期的互动可以使两个流都受益，这被称为早期融合，即<code>early fusion</code>。</p><p>（20201227 更新：LSTM 我一窍不通，所以省略）</p><h4 id="基于分段的方法"><a class="header-anchor" href="#基于分段的方法">#</a>基于分段的方法</h4><p><code>TSN</code>在每个片段中随机选择一个视频帧，最后，分段一致性被执行以聚合来自采样视频帧的信息。<code>TSN</code>能够对长期时间结构进行建模，因为模型可以看到整个视频的内容。此外，这种稀疏采样策略降低了长视频序列的训练成本，但保留了相关信息。</p><h4 id="多流网络"><a class="header-anchor" href="#多流网络">#</a>多流网络</h4><p>双流网络之所以成功，是因为视频的<code>外观</code>和<code>运动信息</code>是两个最重要的属性。但还有一些其它的对行为识别有帮助的信息，比如<code>姿态</code>、<code>物体</code>、<code>声音</code>或者<code>深度信息</code>等。</p><h3 id="三维卷积神经网络"><a class="header-anchor" href="#三维卷积神经网络">#</a>三维卷积神经网络</h3><p><code>C3D</code>在标准基准上的性能并不令人满意，但显示出很强的泛化能力，可以作为各种视频任务的通用特征提取器。</p><p>然而，3D 网络很难优化。为了更好地训练一个 3D 卷积滤波器，人们需要一个包含不同视频内容和动作类别的大规模数据集。</p><p>然而，C3D 的训练需要几周的时间来收敛。尽管 C3D 很受欢迎，但大多数用户只是将其作为不同用例的特征提取器，而不是修改/微调网络。</p><p><code>I3D</code>改变了这一现象，它的主要贡献点有两个：</p><ol><li>用成熟的图像分类体系用于 3D CNN。</li><li>对于模型权值，采用【Towards Good Practices for Very Deep Two-Stream ConvNets】中初始化光流网络的方法，将 ImageNet 预先训练好的 2D 模型权值膨胀到 3D 模型中的对应模型。</li></ol><p>三维卷积神经网络并不会取代双流网络，它们也不是相互排斥的。</p><h4 id="统一二维和三维卷积神经网络"><a class="header-anchor" href="#统一二维和三维卷积神经网络">#</a>统一二维和三维卷积神经网络</h4><p><code>P3D</code>和<code>R2+1D</code> 都是把<code>3x3x3</code>的卷积核替换成了<code>3x1x1</code>和<code>1x3x3</code>的卷积核来减少计算量。</p><p>除此之外还有别的方法直接将<code>2D</code>和<code>3D</code>卷积在一个网络里进行了混合。</p><p>在网络的底部使用二维卷积核替代三维卷积核，发现这种头重脚轻的网络具有更高的识别精度。</p><p>（<code>non-local</code>是区别于卷积核卷局部的概念而提出的，但是这个方向我没有研究，所以也略过。）</p><h4 id="提升三维卷积的效率"><a class="header-anchor" href="#提升三维卷积的效率">#</a>提升三维卷积的效率</h4><p>随着高效 2D 网络的发展，研究者们开始采用<code>基于信道的可分卷积</code>，并将其扩展到视频分类中。</p><h3 id="高效视频建模"><a class="header-anchor" href="#高效视频建模">#</a>高效视频建模</h3><p>随着数据集大小的增加和部署需求的增加，效率成为一个重要的关注点。如果我们使用基于双流网络的方法，我们需要预先计算光流并存储在本地磁盘上。以<code>Kinetics-400</code>数据集为例，存储所有光流图像需要 4.5TB 的磁盘空间。如此庞大的数据量将使 I/O 成为训练过程中最紧张的瓶颈，导致 GPU 资源的浪费和实验周期的延长。此外。预计算光流并不便宜，这意味着所有的双流网络方法都不是实时的。</p><p>如果我们使用基于 3D cnn 的方法，人们仍然发现 3D cnn 训练困难，部署具有挑战性。在训练方面，使用高端 8-GPU 机器在 Kinetics400 数据集上训练一个标准的<code>Slow-Fast</code>网络需要 10 天才能完成。如此漫长的实验周期和巨大的计算成本，使得视频理解研究只能面向拥有丰富计算资源的大公司/实验室。最近有几次尝试加速深度视频模型的训练，但与大多数基于图像的计算机视觉任务相比，这些仍然是昂贵的。</p><p>在部署方面，3D 卷积在不同平台上的支持不如 2D 卷积，3D cnn 需要更多的视频帧作为输入，增加了额外的 IO 成本。</p><h4 id="类光流算法"><a class="header-anchor" href="#类光流算法">#</a>类光流算法</h4><p>双流网络的一个主要缺点是对光流的需求。预计算光流的计算成本高，存储要求高，而且不能对视频动作识别进行端到端训练。如果我们能找到一种不用光流来编码运动信息的方法，那将是很有吸引力的。至少在推理时间。</p><p><code>PAN</code>通过计算连续特征图之间的差异。</p><h2 id="未来研究方向"><a class="header-anchor" href="#未来研究方向">#</a>未来研究方向</h2><ol><li>模型分析和可视化</li><li><strong>数据增强</strong></li><li>视频领域自适应（迁移学习）</li><li>神经结构搜索</li><li><strong>高效的模型开发</strong></li><li>新数据集</li><li><strong>视频对抗攻击</strong></li><li><strong>零样本动作识别</strong></li><li>弱监督的视频动作识别</li><li>细粒度视频动作识别</li><li>以自我为中心的行为识别</li><li>多模态</li><li><strong>自监督视频表示学习</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> review </tag>
            
            <tag> survey </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Diverse Temporal Aggregation and Depthwise Spatiotemporal Factorization for Efficient Video Classification</title>
      <link href="/blog/2020/12/19/diverse-temporal-aggregation-and-depthwise-spatiotemporal-factorization-for-efficient-video-classification/"/>
      <url>/blog/2020/12/19/diverse-temporal-aggregation-and-depthwise-spatiotemporal-factorization-for-efficient-video-classification/</url>
      
        <content type="html"><![CDATA[<h1 id="diverse-temporal-aggregation-and-depthwise-spatiotemporal-factorization-for-efficient-video-classification"><a class="header-anchor" href="#diverse-temporal-aggregation-and-depthwise-spatiotemporal-factorization-for-efficient-video-classification">#</a>Diverse Temporal Aggregation and Depthwise Spatiotemporal Factorization for Efficient Video Classification</h1><p>2020年12月的新论文，可以当作是当前的一篇综述。</p><a id="more"></a><h2 id="介绍"><a class="header-anchor" href="#介绍">#</a>介绍</h2><p>最近的工作大致上有STM、TEA、TSM等，都是在2D ResNet上添加模块。</p><p>由于以往的工作都是在骨干网之上的插件式模块，因此受到骨干网的约束。</p><blockquote><p>In short, since previous works are add on style modules on top of the backbone network, they are<br>constrained under the backbone.</p></blockquote><p>这些三维高效网络只关注于网络结构（上减少计算），而没有考虑时间建模。</p><blockquote><p>these 3D efficient networks only focus on building architectures and do not consider the temporal modeling.</p></blockquote><h2 id="相关工作"><a class="header-anchor" href="#相关工作">#</a>相关工作</h2><h2 id="vov3d"><a class="header-anchor" href="#vov3d">#</a>VoV3D</h2><p>时间建模在动作识别中起着重要的作用。特别是在缺乏特征语义变化的视频情况下，视频分类网络应该严重依赖于视觉节奏。此外，有必要对长期和短期的时间关系建模，因为短期信息不足以区分视觉节奏变化，如步行和跑步。传统的基于3D CNN的时间建模方法[4,36,35]试图通过输入(帧或特征级金字塔)来建模视觉节奏。</p><p>然而，这些方法作为一个外部(即插件)模块，必须在现有的3D骨干网(如I3D[311]，这需要更多的参数和计算)的基础上添加单独的网络。为了解决这些挑战，在本文中，我们的目标是提出一种轻量级、高效的视频骨干网，它本身具有时间建模能力，不需要外部模块。为此，我们基于VoVNet[15,16]设计了一种新的三维CNN架构，该架构以较小的成本表达了层次化和多样化的特征表示。</p><h3 id="vovnet"><a class="header-anchor" href="#vovnet">#</a>VoVNet</h3><p>DenseNet的最开始想法是当前的layer会把当前的所有layer层的输出都整合在一起。</p><p>DenseNet的一大问题就是密集连接太重了，而且每个layer都会聚合前面层的特征，其实造成的是特征冗余，而且从模型weights的L1范数会发现中间层对最后的分类层贡献较少，这不难理解，因为后面的特征其实已经学习到了这些中间层的核心信息。这种信息冗余反而是可以优化的方向，据此这里提出了OSA（One-Shot Aggregation）模块，如图1b所示，简单来说，就是只在最后一次性聚合前面所有的layer。这一改动将会解决DenseNet前面所述的问题，因为每个layer的输入channel数是固定的，这里可以让输出channel数和输入一致而取得最小的MAC，而且也不再需要1x1卷积层来压缩特征，所以OSA模块是GPU计算高效的。</p><p>所以VoVNet在最后一层汇集前面的所有输入，也达到相似的效果。</p><blockquote><p>The OSA allows the network to represent diverse features by capturing multiple receptive fields in one feature map, which results in the effect of feature pyramid.</p></blockquote><h3 id="temporal-oneshot-aggregation-t-osa"><a class="header-anchor" href="#temporal-oneshot-aggregation-t-osa">#</a>Temporal OneShot Aggregation (T-OSA)</h3><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.csdn.net/xiaohu2022/article/details/105318534/" target="_blank" rel="noopener">VoVNet：实时目标检测的新backbone网络</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> vov3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把ngrok服务配置成service</title>
      <link href="/blog/2020/12/14/run-ngrok-as-a-service/"/>
      <url>/blog/2020/12/14/run-ngrok-as-a-service/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>上次说的：<a href="https://onns.xyz/blog/2020/12/09/ngrok-doc/">改天一定看如何把自己的代码做成<code>service</code>！！！！</a>，这次来实现了，碰巧用到了。</p><a id="more"></a><h2 id="好处"><a class="header-anchor" href="#好处">#</a>好处</h2><p>做成系统的<code>service</code>之后，可以系统帮你维护，服务意外退出也会帮你重启，这里看我已经做好的例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ ps -ef | grep ng</span><br><span class="line">root          39       2  0 18:15 ?        00:00:00 [khungtaskd]</span><br><span class="line">avahi        559       1  0 18:15 ?        00:00:03 avahi-daemon: running [onns-desktop.local]</span><br><span class="line">root         680       1  0 18:15 ?        00:00:08 /home/onns/Desktop/ngrok -config /home/onns/Desktop/ngrok.cfg start win ssh</span><br><span class="line">onns       36635       1  0 18:31 ?        00:00:00 /usr/bin/gnome-keyring-daemon --daemonize --login</span><br><span class="line">onns       36643   19483  0 18:31 pts/1    00:00:00 grep --color=auto ng</span><br><span class="line">onns@onns-desktop:~$ sudo <span class="built_in">kill</span> 680</span><br></pre></td></tr></table></figure><p><code>680</code>是我随系统启动的进程 ID，然后我把这个进程关闭了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ ps -ef | grep ng</span><br><span class="line">root          39       2  0 18:15 ?        00:00:00 [khungtaskd]</span><br><span class="line">avahi        559       1  0 18:15 ?        00:00:04 avahi-daemon: running [onns-desktop.local]</span><br><span class="line">root       37616       1  6 18:31 ?        00:00:00 /home/onns/Desktop/ngrok -config /home/onns/Desktop/ngrok.cfg start win ssh</span><br><span class="line">onns       38015       1  0 18:31 ?        00:00:00 /usr/bin/gnome-keyring-daemon --daemonize --login</span><br><span class="line">onns       38023   37825  0 18:31 pts/1    00:00:00 grep --color=auto ng</span><br></pre></td></tr></table></figure><p>系统自动帮我启动了，换了一个进程号<code>37616</code>。</p><p>第二个好处也在前面说了，就是可以开机自启！配合着 bios 主板设置的通电开机，可以保证比如实验室突然断电了之后，再次来电之后电脑可以自动开机，寒假回家也不用担心实验室突然断电了！</p><h2 id="配置-service"><a class="header-anchor" href="#配置-service">#</a>配置 service</h2><p>之前一直觉得配置起来是一件很麻烦的事情，所以一直没弄，没想到原来这么简单！</p><h3 id="查看根进程"><a class="header-anchor" href="#查看根进程">#</a>查看根进程</h3><p>所谓的根进程，就是 Linux 系统启动后的第一个进程，<code>PID</code>是 1。之前是<code>init.d</code>，后面大家都推荐用<code>systemd</code>，这两个有两套不同的命令，要先看一下是哪个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~/Desktop$ pstree</span><br><span class="line">systemd─┬─ModemManager───2*[&#123;ModemManager&#125;]</span><br><span class="line">        ├─NetworkManager───2*[&#123;NetworkManager&#125;]</span><br><span class="line">        ├─accounts-daemon───2*[&#123;accounts-daemon&#125;]</span><br><span class="line">        ├─avahi-daemon───avahi-daemon</span><br><span class="line">        ├─bluetoothd</span><br><span class="line">        ├─cron</span><br><span class="line">        ├─cups-browsed───2*[&#123;cups-browsed&#125;]</span><br><span class="line">        ├─cupsd</span><br><span class="line">        ├─dbus-daemon</span><br><span class="line">        ├─7*[gdm-session-wor───2*[&#123;gdm-session-wor&#125;]]</span><br><span class="line">        ├─gdm3─┬─gdm-session-wor─┬─gdm-wayland-ses─┬─dbus-run-sessio─┬─dbus-daemon</span><br><span class="line">        │      │                 │                 │                 └─gnome-session-b───4*[&#123;gnome-session-b&#125;]</span><br><span class="line">        │      │                 │                 └─2*[&#123;gdm-wayland-ses&#125;]</span><br><span class="line">        │      │                 └─2*[&#123;gdm-session-wor&#125;]</span><br><span class="line">        │      └─3*[&#123;gdm3&#125;]</span><br><span class="line">        ├─hciattach</span><br><span class="line">        ├─irqbalance───&#123;irqbalance&#125;</span><br><span class="line">        ├─2*[kerneloops]</span><br><span class="line">        ├─networkd-dispat</span><br><span class="line">        ├─ngrok───5*[&#123;ngrok&#125;]</span><br><span class="line">        ├─polkitd───2*[&#123;polkitd&#125;]</span><br><span class="line">        ├─rsyslogd───3*[&#123;rsyslogd&#125;]</span><br><span class="line">        ├─rtkit-daemon───2*[&#123;rtkit-daemon&#125;]</span><br><span class="line">        ├─snapd───17*[&#123;snapd&#125;]</span><br><span class="line">        ├─sshd───sshd───bash───pstree</span><br><span class="line">        ├─sshd</span><br><span class="line">        ├─switcheroo-cont───2*[&#123;switcheroo-cont&#125;]</span><br><span class="line">        ├─systemd─┬─(sd-pam)</span><br><span class="line">        │         ├─dbus-daemon</span><br><span class="line">        │         ├─goa-daemon───3*[&#123;goa-daemon&#125;]</span><br><span class="line">        │         ├─goa-identity-se───2*[&#123;goa-identity-se&#125;]</span><br><span class="line">        │         ├─gvfs-afc-volume───3*[&#123;gvfs-afc-volume&#125;]</span><br><span class="line">        │         ├─gvfs-goa-volume───2*[&#123;gvfs-goa-volume&#125;]</span><br><span class="line">        │         ├─gvfs-gphoto2-vo───2*[&#123;gvfs-gphoto2-vo&#125;]</span><br><span class="line">        │         ├─gvfs-mtp-volume───2*[&#123;gvfs-mtp-volume&#125;]</span><br><span class="line">        │         ├─gvfs-udisks2-vo───3*[&#123;gvfs-udisks2-vo&#125;]</span><br><span class="line">        │         ├─gvfsd───2*[&#123;gvfsd&#125;]</span><br><span class="line">        │         ├─gvfsd-fuse───5*[&#123;gvfsd-fuse&#125;]</span><br><span class="line">        │         ├─tracker-miner<span class="_">-f</span>───6*[&#123;tracker-miner<span class="_">-f</span>&#125;]</span><br><span class="line">        │         └─tracker-store───4*[&#123;tracker-store&#125;]</span><br><span class="line">        ├─systemd─┬─(sd-pam)</span><br><span class="line">        │         ├─dbus-daemon</span><br><span class="line">        │         ├─goa-daemon───3*[&#123;goa-daemon&#125;]</span><br><span class="line">        │         ├─goa-identity-se───2*[&#123;goa-identity-se&#125;]</span><br><span class="line">        │         ├─gvfs-afc-volume───3*[&#123;gvfs-afc-volume&#125;]</span><br><span class="line">        │         ├─gvfs-goa-volume───2*[&#123;gvfs-goa-volume&#125;]</span><br><span class="line">        │         ├─gvfs-gphoto2-vo───2*[&#123;gvfs-gphoto2-vo&#125;]</span><br><span class="line">        │         ├─gvfs-mtp-volume───2*[&#123;gvfs-mtp-volume&#125;]</span><br><span class="line">        │         ├─gvfs-udisks2-vo───3*[&#123;gvfs-udisks2-vo&#125;]</span><br><span class="line">        │         ├─gvfsd───2*[&#123;gvfsd&#125;]</span><br><span class="line">        │         ├─gvfsd-fuse───5*[&#123;gvfsd-fuse&#125;]</span><br><span class="line">        │         ├─gvfsd-metadata───2*[&#123;gvfsd-metadata&#125;]</span><br><span class="line">        │         └─tracker-miner<span class="_">-f</span>───4*[&#123;tracker-miner<span class="_">-f</span>&#125;]</span><br><span class="line">        ├─systemd-journal</span><br><span class="line">        ├─systemd-logind</span><br><span class="line">        ├─systemd-resolve</span><br><span class="line">        ├─systemd-timesyn───&#123;systemd-timesyn&#125;</span><br><span class="line">        ├─systemd-udevd</span><br><span class="line">        ├─udisksd───4*[&#123;udisksd&#125;]</span><br><span class="line">        ├─unattended-upgr───&#123;unattended-upgr&#125;</span><br><span class="line">        ├─upowerd───2*[&#123;upowerd&#125;]</span><br><span class="line">        ├─whoopsie───2*[&#123;whoopsie&#125;]</span><br><span class="line">        └─wpa_supplicant</span><br></pre></td></tr></table></figure><p>一般新系统都是<code>systemd</code>，就以它为例了。</p><h3 id="创建-service-文件"><a class="header-anchor" href="#创建-service-文件">#</a>创建 service 文件</h3><p><code>service</code>可以放在<code>/etc/systemd/system/</code>目录中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~/Desktop$ <span class="built_in">cd</span> /etc/systemd/system/</span><br><span class="line">onns@onns-desktop:/etc/systemd/system$ sudo vi ngrok.service</span><br></pre></td></tr></table></figure><p>新建了一个名为<code>ngrok.service</code>的服务，这个取决于自己的服务名字咯，可以<code>ls</code>看一下，你会发现一些常用的比如远程连接的<code>sshd.service</code>都在这个文件夹里。</p><p>填写内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=ngrok</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/home/onns/Desktop/ngrok -config /home/onns/Desktop/ngrok.cfg start win ssh</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -HUP <span class="variable">$MAINPID</span></span><br><span class="line">KillMode=process</span><br><span class="line">IgnoreSIGPIPE=<span class="literal">true</span></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=3</span><br><span class="line">Type=simple</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>这里也有很多我不知道的参数，不过目前我还用不上，实在没时间去挨个了解了，主要配置<code>Description</code>和<code>ExecStart</code>就行。</p><p><code>Description</code>：就是给人看的，告诉别人你这个<code>service</code>是啥。<br><code>After</code>：依赖服务，就是这个服务必须在哪些<code>service</code>运行之后才能运行。<br><code>ExecStart</code>：就执行脚本咯。这个是重点！<br><code>Restart</code>：重启，就是上面说的，意外终止由系统帮你重启。<br><code>RestartSec</code>：每多少秒尝试一次。</p><h3 id="配置"><a class="header-anchor" href="#配置">#</a>配置</h3><p>其实这个时候就可以启动你创建好的服务了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:/etc/systemd/system$ systemctl start ngrok.service</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===</span><br><span class="line">Authentication is required to start <span class="string">'ngrok.service'</span>.</span><br><span class="line">Authenticating as: onns,,, (onns)</span><br><span class="line">Password:</span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br><span class="line">Warning: The unit file, <span class="built_in">source</span> configuration file or drop-ins of ngrok.service changed on disk. Run <span class="string">'systemctl daemon-reload'</span> to reload units.</span><br></pre></td></tr></table></figure><p>需要密码验证，然后有一句特殊提示：</p><blockquote><p>Warning: The unit file, source configuration file or drop-ins of ngrok.service changed on disk. Run ‘systemctl daemon-reload’ to reload units.</p></blockquote><p>所以其实要重新加载一下（因为你毕竟添加了一个<code>service</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:/etc/systemd/system$ systemctl daemon-reload</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.reload-daemon ===</span><br><span class="line">Authentication is required to reload the systemd state.</span><br><span class="line">Authenticating as: onns,,, (onns)</span><br><span class="line">Password:</span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br></pre></td></tr></table></figure><p>然后就可以开启服务了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:/etc/systemd/system$ systemctl start ngrok.service</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===</span><br><span class="line">Authentication is required to start <span class="string">'ngrok.service'</span>.</span><br><span class="line">Authenticating as: onns,,, (onns)</span><br><span class="line">Password:</span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br></pre></td></tr></table></figure><p>然后查看这个服务的状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:/etc/systemd/system$ systemctl status ngrok.service</span><br><span class="line">● ngrok.service - ngrok</span><br><span class="line">     Loaded: loaded (/etc/systemd/system/ngrok.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Mon 2020-12-14 18:31:42 CST; 30min ago</span><br><span class="line">   Main PID: 37616 (ngrok)</span><br><span class="line">      Tasks: 6 (<span class="built_in">limit</span>: 8967)</span><br><span class="line">     CGroup: /system.slice/ngrok.service</span><br><span class="line">             └─37616 /home/onns/Desktop/ngrok -config /home/onns/Desktop/ngrok.cfg start win ssh</span><br><span class="line"></span><br><span class="line">12月 14 18:31:42 onns-desktop systemd[1]: Started ngrok.</span><br></pre></td></tr></table></figure><p>博客的代码是没有颜色的，可以凑合着看一下。</p><p>然后最重要的一步是开启<code>开机启动</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:/etc/systemd/system$ systemctl <span class="built_in">enable</span> ngrok.service</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-unit-files ===</span><br><span class="line">Authentication is required to manage system service or unit files.</span><br><span class="line">Authenticating as: onns,,, (onns)</span><br><span class="line">Password:</span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.reload-daemon ===</span><br><span class="line">Authentication is required to reload the systemd state.</span><br><span class="line">Authenticating as: onns,,, (onns)</span><br><span class="line">Password:</span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br></pre></td></tr></table></figure><h3 id="总结"><a class="header-anchor" href="#总结">#</a>总结</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 制作好 .service 文件之后</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重载一下service文件</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启服务开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> ngrok.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启服务</span></span><br><span class="line">systemctl start ngrok.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务状态</span></span><br><span class="line">systemctl status ngrok.service</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><p>看了好多链接，发现都不是很通用，到时候最好去看看别人怎么写的，然后 copy 一下</p><ul><li><a href="https://github.com/vincenthsu/systemd-ngrok" target="_blank" rel="noopener">vincenthsu / systemd-ngrok</a></li><li><a href="https://blog.csdn.net/zbc415766331/article/details/104761027" target="_blank" rel="noopener">Ubuntu18.04 添加自启动 Service</a> 这个链接的<code>ExecStart</code>直接写了一个<code>.sh</code>文件，我第一次反正是失败了。</li><li><a href="https://blog.csdn.net/oxp7085915/article/details/78153190" target="_blank" rel="noopener">ngrok 后台运行</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ngrok </tag>
            
            <tag> service </tag>
            
            <tag> systemd </tag>
            
            <tag> bios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ngrok我终于懂了</title>
      <link href="/blog/2020/12/09/ngrok-doc/"/>
      <url>/blog/2020/12/09/ngrok-doc/</url>
      
        <content type="html"><![CDATA[<h2 id="20211006-更新"><a class="header-anchor" href="#20211006-更新">#</a>20211006 更新</h2><p>如果在很高的 golang 版本下编译会有问题，解决方案是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env -w GO111MODULE=off</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h3><ul><li><a href="https://www.jianshu.com/p/fc74f99ba9e2" target="_blank" rel="noopener">ngrok 编译遇到的小坑</a></li></ul><h2 id="20210107-更新"><a class="header-anchor" href="#20210107-更新">#</a>20210107 更新</h2><p>与<code>TCP</code>协议不同的是，ngrok 的 HTTP/HTTPS 协议的端口无法通过<code>remote_port</code>参数在客户端指定，而是在服务端预先已经指定好的：<code>-httpAddr=&quot;:82&quot; -httpsAddr=&quot;:83&quot;</code>。</p><p>ngrok 的 http 协议通过不同的子域名来区别服务类型，所以配置方法是：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nginx:</span></span><br><span class="line">  <span class="attr">subdomain:</span> <span class="string">"io"</span></span><br><span class="line">  <span class="attr">proto:</span></span><br><span class="line">    <span class="attr">http:</span> <span class="string">"192.168.1.119:80"</span></span><br></pre></td></tr></table></figure><h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>之前配<code>ngrok</code>的时候都是看着教程，xjb 配，因为一般都是<code>http</code>，所以也没那么麻烦，这次终于一次性把所有的坑都踩完了。之后应该不会有任何问题了！<s>（不是</s></p><p>大部分内容之前的文章《<a href="https://onns.xyz/blog/2020/08/17/intranet-penetration-use-ngrok/">用 ngrok 进行内网穿透</a>》里都有写，可以互相参照。</p><p><strong>用生成证书的方式我一直运行失败，所以建议用机构颁发的证书，阿里云有免费的可以用。</strong></p><a id="more"></a><h2 id="安装"><a class="header-anchor" href="#安装">#</a>安装</h2><p>安装依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc mercurial git bzr subversion golang golang-pkg-windows-amd64 golang-pkg-windows-386 -y</span><br></pre></td></tr></table></figure><p>下载 ngrok 源码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/inconshreveable/ngrok.git ngrok</span><br></pre></td></tr></table></figure><p>证书就不用生成了，生成的也用不了，之前的<code>ngrok</code>不成功全是卡在这里，直接去阿里云申请，具体百度。</p><p>编译服务器和客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Linux服务端</span></span><br><span class="line">GOOS=linux GOARCH=amd64 make release-server</span><br><span class="line"><span class="comment"># Windows客户端</span></span><br><span class="line">GOOS=windows GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure><p>其它参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Linux服务端/客户端</span></span><br><span class="line"><span class="comment"># 32位</span></span><br><span class="line">GOOS=linux GOARCH=386 make release-server</span><br><span class="line">GOOS=linux GOARCH=386 make release-client</span><br><span class="line"><span class="comment"># 64位</span></span><br><span class="line">GOOS=linux GOARCH=amd64 make release-server</span><br><span class="line">GOOS=linux GOARCH=amd64 make release-client</span><br><span class="line"></span><br><span class="line"><span class="comment"># MacOS服务端/客户端</span></span><br><span class="line">GOOS=darwin GOARCH=386 make release-server</span><br><span class="line">GOOS=darwin GOARCH=386 make release-client</span><br><span class="line"></span><br><span class="line">GOOS=darwin GOARCH=amd64 make release-server</span><br><span class="line">GOOS=darwin GOARCH=amd64 make release-client</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows服务端/客户端</span></span><br><span class="line">GOOS=windows GOARCH=386 make release-server</span><br><span class="line">GOOS=windows GOARCH=386 make release-client</span><br><span class="line"></span><br><span class="line">GOOS=windows GOARCH=amd64 make release-server</span><br><span class="line">GOOS=windows GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure><p>我是用手机做服务器，之前以为无解的，没想到真的支持<code>arm</code>架构的，yyds！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GOOS=linux GOARCH=arm make release-server</span><br><span class="line">GOOS=linux GOARCH=arm make release-client</span><br></pre></td></tr></table></figure><p>就是不知道<code>arm64</code>能不能行，有机会再试试。</p><h2 id="运行"><a class="header-anchor" href="#运行">#</a>运行</h2><p>要超级管理员权限才行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/ngrokd -domain=<span class="string">"ngrok.onns.xyz"</span> -httpAddr=<span class="string">":8000"</span> -httpsAddr=<span class="string">":4430"</span> -tlsKey=ng.key -tlsCrt=ng.pem</span><br></pre></td></tr></table></figure><p>还有一个参数是<code>tunnelAddr</code>，默认是<code>4443</code>，是客户端和服务端通信的端口。</p><p><code>ng.key</code>和<code>ng.pem</code>是申请的证书。</p><p>没什么问题的话，就可以常驻后台了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./bin/ngrokd -domain=<span class="string">"onns.xyz"</span> -httpAddr=<span class="string">":82"</span> -httpsAddr=<span class="string">":83"</span> &gt;&gt; /home/deploy/ngrok/a.txt 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>改天一定看如何把自己的代码做成<code>service</code>！！！！</p><h2 id="客户端配置"><a class="header-anchor" href="#客户端配置">#</a>客户端配置</h2><p>新建一个<code>ngrok.cfg</code>文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server_addr:</span> <span class="string">"ngrok.onns.xyz:4443"</span></span><br><span class="line"><span class="attr">trust_host_root_certs:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">tunnels:</span></span><br><span class="line">  <span class="attr">ssh:</span></span><br><span class="line">    <span class="attr">remote_port:</span> <span class="number">2222</span></span><br><span class="line">    <span class="attr">proto:</span></span><br><span class="line">      <span class="attr">tcp:</span> <span class="string">"22"</span></span><br><span class="line">  <span class="attr">mxy:</span></span><br><span class="line">    <span class="attr">remote_port:</span> <span class="number">2223</span></span><br><span class="line">    <span class="attr">proto:</span></span><br><span class="line">      <span class="attr">tcp:</span> <span class="string">"22"</span></span><br><span class="line">  <span class="attr">v2:</span></span><br><span class="line">    <span class="attr">remote_port:</span> <span class="number">9891</span></span><br><span class="line">    <span class="attr">proto:</span></span><br><span class="line">      <span class="attr">tcp:</span> <span class="string">"9891"</span></span><br><span class="line">  <span class="attr">win:</span></span><br><span class="line">    <span class="attr">remote_port:</span> <span class="number">33891</span></span><br><span class="line">    <span class="attr">proto:</span></span><br><span class="line">      <span class="attr">tcp:</span> <span class="string">"192.168.1.136:3389"</span></span><br></pre></td></tr></table></figure><p>之前一直以为<code>remote_port</code>是随机的，原来可以指定，参数都很清楚，就不用解释了！</p><p>然后开启服务，可以只开启一部分：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngrok -config=ngrok.cfg start ssh win</span><br></pre></td></tr></table></figure><p>或者直接开启所有服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngrok -config=ngrok.cfg start-all</span><br></pre></td></tr></table></figure><p>收工，终于可以抛弃 teamviewer 了！自带的远程桌面是真的流畅！！！</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.safebuff.com/2016/03/15/Run-Ngrok-on-Your-Own-Server/" target="_blank" rel="noopener">Run Ngrok on Your Own Server</a></li><li><a href="https://www.zdaiot.com/Linux/%E8%BD%AF%E4%BB%B6/Centos%E6%90%AD%E5%BB%BANgrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/" target="_blank" rel="noopener">Centos 搭建 Ngrok 实现内网穿透</a></li><li><a href="https://zj-network-guide.readthedocs.io/zh_CN/latest/intranet-penetration/ngrok/%5Bngrok%5DTCP%E5%92%8CHTTP%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">[ngrok]TCP 和 HTTP 连接配置¶</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> intranet penetration </tag>
            
            <tag> ngrok </tag>
            
            <tag> ssh </tag>
            
            <tag> 内网穿透 </tag>
            
            <tag> arm </tag>
            
            <tag> remote desktop </tag>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DT算法源码阅读——轨迹筛选部分</title>
      <link href="/blog/2020/12/08/dt-source-code-check-trajectory/"/>
      <url>/blog/2020/12/08/dt-source-code-check-trajectory/</url>
      
        <content type="html"><![CDATA[<p>醉了，写综述看几十页的原论文也就算了，论文里居然没把问题表达清楚，还好源码开源了，不然都不知道到时候怎么 si 的。</p><a id="more"></a><p>原文是：</p><blockquote><p>As static trajectories do not contain motion information, we prune them in a post-processing stage. Trajectories with sudden large displacements, most likely to be erroneous, are also removed. Such trajectories are detected, if the displacement vector between two consecutive frames is larger than 70% of the overall displacement of the trajectory.</p></blockquote><p>代码开源在：<a href="http://lear.inrialpes.fr/people/wang/dense_trajectories" target="_blank" rel="noopener">Dense Trajectories Video Description</a>。</p><p>其中的轨迹筛选源码在<code>#include &quot;Descriptors.h&quot;</code>中：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// check whether a trajectory is valid or not</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsValid</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Point2f&gt;&amp; track, <span class="keyword">float</span>&amp; mean_x, <span class="keyword">float</span>&amp; mean_y, <span class="keyword">float</span>&amp; var_x, <span class="keyword">float</span>&amp; var_y, <span class="keyword">float</span>&amp; length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> size = track.size();</span><br><span class="line"><span class="keyword">float</span> norm = <span class="number">1.</span>/size;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">mean_x += track[i].x;</span><br><span class="line">mean_y += track[i].y;</span><br><span class="line">&#125;</span><br><span class="line">mean_x *= norm;</span><br><span class="line">mean_y *= norm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line"><span class="keyword">float</span> temp_x = track[i].x - mean_x;</span><br><span class="line"><span class="keyword">float</span> temp_y = track[i].y - mean_y;</span><br><span class="line">var_x += temp_x*temp_x;</span><br><span class="line">var_y += temp_y*temp_y;</span><br><span class="line">&#125;</span><br><span class="line">var_x *= norm;</span><br><span class="line">var_y *= norm;</span><br><span class="line">var_x = <span class="built_in">sqrt</span>(var_x);</span><br><span class="line">var_y = <span class="built_in">sqrt</span>(var_y);</span><br><span class="line"></span><br><span class="line"><span class="comment">// remove static trajectory</span></span><br><span class="line"><span class="keyword">if</span>(var_x &lt; min_var &amp;&amp; var_y &lt; min_var)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// remove random trajectory</span></span><br><span class="line"><span class="keyword">if</span>( var_x &gt; max_var || var_y &gt; max_var )</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> cur_max = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size<span class="number">-1</span>; i++) &#123;</span><br><span class="line">track[i] = track[i+<span class="number">1</span>] - track[i];</span><br><span class="line"><span class="keyword">float</span> temp = <span class="built_in">sqrt</span>(track[i].x*track[i].x + track[i].y*track[i].y);</span><br><span class="line"></span><br><span class="line">length += temp;</span><br><span class="line"><span class="keyword">if</span>(temp &gt; cur_max)</span><br><span class="line">cur_max = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(cur_max &gt; max_dis &amp;&amp; cur_max &gt; length*<span class="number">0.7</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">track.pop_back();</span><br><span class="line">norm = <span class="number">1.</span>/length;</span><br><span class="line"><span class="comment">// normalize the trajectory</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size<span class="number">-1</span>; i++)</span><br><span class="line">track[i] *= norm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后加一点自己的注释。</p><p>首先有一些变量，在<code>#include &quot;DenseTrack.h&quot;</code>中定义的：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// parameters for rejecting trajectory</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> min_var = <span class="built_in">sqrt</span>(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> max_var = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> max_dis = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>这三个代表<code>最小位移的阈值</code>、<code>最大位移的阈值</code>和<code>条件筛选阈值</code>。第三个可能有点懵逼，看代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// remove static trajectory</span></span><br><span class="line"><span class="keyword">if</span>(var_x &lt; min_var &amp;&amp; var_y &lt; min_var)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// remove random trajectory</span></span><br><span class="line"><span class="keyword">if</span>( var_x &gt; max_var || var_y &gt; max_var )</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>这个就是前两句了：</p><blockquote><p>As static trajectories do not contain motion information, we prune them in a post-processing stage. Trajectories with sudden large displacements, most likely to be erroneous, are also removed.</p></blockquote><p>不怎么动的，和运动幅度过大的，都会被剔除。</p><p>然后就是第三个：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(cur_max &gt; max_dis &amp;&amp; cur_max &gt; length*<span class="number">0.7</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><blockquote><p>Such trajectories are detected, if the displacement vector between two consecutive frames is larger than 70% of the overall displacement of the trajectory.</p></blockquote><p>这句话我以为是在说把符合这个条件的选出来（作为轨迹），没想到这也是剔除项，这没有源码谁能发现的了啊！</p><p>也就是说，如果相邻两帧之间的最大位移向量大于总位移轨迹的<code>70%</code>，那么这样的轨迹也会被检测到（并剔除）。</p><p>不过这个有一个先决条件<code>cur_max &gt; max_dis</code>，猜测可能的原因是保证一些细节吧？大概有些单次位移虽然很大，但是我想不出来为什么这样了= =！</p><p><strong>以上，如果有人碰巧看到了，有什么错误欢迎指正，感恩。</strong></p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> DT </tag>
            
            <tag> dense trajectories </tag>
            
            <tag> 密集轨迹算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（14）</title>
      <link href="/blog/2020/12/02/the-linux-command-line-note-14/"/>
      <url>/blog/2020/12/02/the-linux-command-line-note-14/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201202-1.png" alt="xlogo"></p></center><p>这个<code>xlogo</code>命令可以在显示屏上显示一个<code>X</code>，可以随着拖动变大小，必须要有显示器才行。</p><a id="more"></a><h2 id=""><a class="header-anchor" href="#">#</a>&amp;</h2><p>在命令后加<code>&amp;</code>后台执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &amp;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ xlogo &amp;</span><br><span class="line">[1] 3642</span><br></pre></td></tr></table></figure><p><code>[1] 3642</code>是 <code>shell</code> 特性的一部分，叫做<code>任务控制</code>（job control）。</p><p><code>任务号</code>（job number）为<strong>1</strong>，PID 为<strong>3642</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ ps</span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line">   2306 pts/0    00:00:00 bash</span><br><span class="line">   3642 pts/0    00:00:00 xlogo</span><br><span class="line">   4229 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure><p><code>jobs</code>命令列出从终端中启动了的任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ <span class="built_in">jobs</span></span><br><span class="line">[1]+  Running                 xlogo &amp;</span><br></pre></td></tr></table></figure><h2 id="fg"><a class="header-anchor" href="#fg">#</a>fg</h2><p><code>fg</code>命令让一个进程返回前台：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fg</span> %jobspec</span><br></pre></td></tr></table></figure><p><code>fg</code>命令之后接一个百分号和任务序号（jobspec）。</p><p>如果只有一个后台任务，那么<code>jobspec</code>（job specification）是可有可无的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ <span class="built_in">jobs</span></span><br><span class="line">[1]+  Running                 xlogo &amp;</span><br><span class="line">onns@onns-desktop:~$ <span class="built_in">fg</span> %1</span><br><span class="line">xlogo</span><br></pre></td></tr></table></figure><h2 id="ctrl-z"><a class="header-anchor" href="#ctrl-z">#</a>ctrl z</h2><p>停止进程，这么做通常是为了允许前台进程被移动到后台。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ xlogo</span><br><span class="line">^Z</span><br><span class="line">[2]+  Stopped                 xlogo</span><br><span class="line"></span><br><span class="line">onns@onns-desktop:~$ <span class="built_in">jobs</span></span><br><span class="line">[1]-  Stopped                 xlogo</span><br><span class="line">[2]+  Stopped                 xlogo</span><br></pre></td></tr></table></figure><p>使用 <code>fg</code> 命令，可以恢复程序到前台运行，或者用 <code>bg</code> 命令把程序移到后台。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ <span class="built_in">bg</span> %2</span><br><span class="line">[2]+ xlogo &amp;</span><br><span class="line">onns@onns-desktop:~$ <span class="built_in">jobs</span></span><br><span class="line">[1]+  Stopped                 xlogo</span><br><span class="line">[2]-  Running                 xlogo &amp;</span><br></pre></td></tr></table></figure><h2 id="kill"><a class="header-anchor" href="#kill">#</a>kill</h2><p><code>kill</code>命令用来终止程序。</p><blockquote><p>这个 <code>kill</code> 命令不是真的“杀死”程序，而是给程序发送信号。信号是操作系统与程序之间进行通信时所采用的几种方式中的一种。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> [-signal] PID...</span><br></pre></td></tr></table></figure><p>如果在命令行中没有指定信号，那么默认情况下，发送<code>TERM</code>（Terminate，终止）信号。</p><ul><li>编号<code>1</code>代表<code>HUP</code>，挂起(Hangup)。这是美好往昔的残留部分，那时候终端机通过电话线和调制解调器连接到远端的计算机。这个信号被用来告诉程序，控制的终端机已经“挂断”。通过关闭一个终端会话，可以展示这个信号的作用。在当前终端运行的前台程序将会收到这个信号并终止。许多守护进程也使用这个信号，来重新初始化。这意味着，当一个守护进程收到这个信号后，这个进 程会重新启动，并且重新读取它的配置文件。Apache 网络服务器守护进程就是一个例子。</li><li>编号<code>2</code>代表<code>INT</code>，中断。实现和 Ctrl-c 一样的功能，由终端发送。通常， 它会终止一个程序。</li><li>编号<code>9</code>代表<code>KILL</code>，杀死。这个信号很特别。尽管程序可能会选择不同的 方式来处理发送给它的信号，其中也包含忽略信号， 但是 KILL 信号从不被发送到目标程序。而是内核立 即终止这个进程。当一个进程以这种方式终止的时候， 它没有机会去做些“清理”工作，或者是保存工作。 因为这个原因，把 KILL 信号看作最后一招，当其它 终止信号失败后，再使用它。</li><li>编号<code>15</code>代表<code>TERM</code>，终止。这是 kill 命令发送的默认信号。如果程序仍然 “活着”，可以接受信号，那么这个它会终止。</li><li>编号<code>18</code>代表<code>CONT</code>，继续。在一个停止信号后，这个信号会恢复进程的运 行。</li><li>编号<code>19</code>代表<code>STOP</code>，停止。这个信号导致进程停止运行，而不是终止。像 KILL 信号，它不被发送到目标进程，因此它不能被忽略。</li></ul><p><strong>进程，和文件一样，拥有所有者，所以为了能够通过 <code>kill</code> 命令来给进程发送信号，你必须是 进程的所有者(或者是超级用户)。</strong></p><p><code>kill -l</code>可以得到一个完整的信号列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">onns@onns-desktop:~$ <span class="built_in">kill</span> -l</span><br><span class="line"> 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP</span><br><span class="line"> 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL10) SIGUSR1</span><br><span class="line">11) SIGSEGV12) SIGUSR213) SIGPIPE14) SIGALRM15) SIGTERM</span><br><span class="line">16) SIGSTKFLT17) SIGCHLD18) SIGCONT19) SIGSTOP20) SIGTSTP</span><br><span class="line">21) SIGTTIN22) SIGTTOU23) SIGURG24) SIGXCPU25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM27) SIGPROF28) SIGWINCH29) SIGIO30) SIGPWR</span><br><span class="line">31) SIGSYS34) SIGRTMIN35) SIGRTMIN+136) SIGRTMIN+237) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+439) SIGRTMIN+540) SIGRTMIN+641) SIGRTMIN+742) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+944) SIGRTMIN+1045) SIGRTMIN+1146) SIGRTMIN+1247) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+1449) SIGRTMIN+1550) SIGRTMAX-1451) SIGRTMAX-1352) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-1154) SIGRTMAX-1055) SIGRTMAX-956) SIGRTMAX-857) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-659) SIGRTMAX-560) SIGRTMAX-461) SIGRTMAX-362) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-164) SIGRTMAX</span><br></pre></td></tr></table></figure><p>不是很常用，蛮看一下罢了。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（13）</title>
      <link href="/blog/2020/11/29/the-linux-command-line-note-13/"/>
      <url>/blog/2020/11/29/the-linux-command-line-note-13/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><blockquote><p>当系统启动的时候，内核先把一些它自己的活动初始化为进程，然后运行一个叫做 init 的程 序。init，依次地，再运行一系列的称为 init 脚本的 shell 脚本(位于/etc)，它们可以启动所有 的系统服务。其中许多系统服务以守护(daemon)程序的形式实现，守护程序仅在后台运行，没有任何用户接口 (User Interface)。这样，即使我们没有登录系统，至少系统也在忙于执行一 些例行事务。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p></blockquote><p>在进程方案中，一个程序可以发动另一个程序被表述为一个父进程可以产生一个子进程。</p><blockquote><p>内核维护每个进程的信息，以此来保持事情有序。例如，系统分配给每个进程一个数字，这 个数字叫做进程 (process) ID 或 PID。PID 号按升序分配，init 进程的 PID 总是 1。内核也对 分配给每个进程的内存和就绪状态进行跟踪以便继续执行这个进程。</p></blockquote><h2 id="ps"><a class="header-anchor" href="#ps">#</a>ps</h2><p><code>ps</code>全称<code>process status</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ps</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">11583 pts/0    00:00:00 bash</span><br><span class="line">11600 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure><p>默认情况下，ps 不会显示很多进程信息，只是列出与当前终端会话相关的进程。</p><p><code>TTY</code> 是 “Teletype”(直译电传打字机) 的简写，是指进程的控制终端。<br><code>TIME</code> 字段表示进程所消耗的 CPU 时间数量。</p><p>加上 <code>x</code> 选项，告诉 <code>ps</code> 命令，展示所有进程，不管它们由什么终端（如果有的话）控制。</p><p>在 TTY 一栏中出现的<code>?</code>，表示没有控制终端。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ps x</span><br><span class="line">  PID TTY      STAT   TIME COMMAND</span><br><span class="line">  784 ?        Ss     0:00 /lib/systemd/systemd --user</span><br><span class="line">  785 ?        S      0:00 (sd-pam)</span><br><span class="line">12071 ?        S      0:00 sshd: deploy@pts/0</span><br><span class="line">12072 pts/0    Ss     0:00 -bash</span><br><span class="line">12082 pts/0    R+     0:00 ps x</span><br></pre></td></tr></table></figure><p>输出结果中，新添加了一栏，标题为 <code>STAT</code>。 <code>STAT</code> 是 “state” 的简写，它揭示了进程当前状态：</p><p><code>R</code>： 运行中。这意味着，进程正在运行或准备运行。<br><code>S</code>： 正在睡眠。进程没有运行，而是，正在等待一个事件，比如 说，一个按键或者网络分组。<br><code>D</code>： 不可中断睡眠。进程正在等待 I/O，比方说，一个磁盘驱动 器的 I/O。<br><code>T</code>： 已停止. 已经指示进程停止运行。稍后介绍更多。<br><code>Z</code>： 一个死进程或“僵尸”进程。这是一个已经终止的子进程， 但是它的父进程还没有清空它。(父进程没有把子进程从进程表中删除)<br><code>&lt;</code>： 一个高优先级进程。这可能会授予一个进程更多重要的资 源，给它更多的 CPU 时间。进程的这种属性叫做 niceness。 具有高优先级的进程据说是不好的(less nice)，因为它占用了比较多的 CPU 时间，这样就给其它进程留下很少时间。<br><code>N</code>： 低优先级进程。一个低优先级进程(一个“nice”进程)只有 当其它高优先级进程被服务了之后，才会得到处理器时间。</p><p>不过我的系统里有<code>Ss</code>和<code>R+</code>之类的，在书里没有。</p><p>还有一个选项<code>aux</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root         1  0.0  0.4 225444  8820 ?        Ss   Jun12   7:55 /lib/systemd/systemd --system --deserialize 19</span><br><span class="line">root         2  0.0  0.0      0     0 ?        S    Jun12   0:00 [kthreadd]</span><br><span class="line">root         4  0.0  0.0      0     0 ?        I&lt;   Jun12   0:00 [kworker/0:0H]</span><br><span class="line">root         6  0.0  0.0      0     0 ?        I&lt;   Jun12   0:00 [mm_percpu_wq]</span><br></pre></td></tr></table></figure><p><code>USER</code>： 用户 ID. 进程的所有者。<br><code>%CPU</code>： 以百分比表示的 CPU 使用率。<br><code>%MEM</code>： 以百分比表示的内存使用率。<br><code>VSZ</code>： 虚拟内存大小。<br><code>RSS</code>： 进程占用的物理内存的大小，以千字节为单位。<br><code>START</code>： 进程启动的时间。若它的值超过 24 小时，则用天表示。</p><h2 id="top"><a class="header-anchor" href="#top">#</a>top</h2><p>默认情况下，<code>top</code>每三秒钟更新一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">top - 19:25:51 up 170 days,  1:13,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class="line">Tasks:  89 total,   1 running,  57 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.3 us,  0.7 sy,  0.0 ni, 99.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  2041216 total,   143632 free,   672572 used,  1225012 buff/cache</span><br><span class="line">KiB Swap:   969964 total,   969964 free,        0 used.  1157724 avail Mem</span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND</span><br></pre></td></tr></table></figure><p><code>top</code>：程序名。<br><code>19:25:51</code>：当前时间。<br><code>up 170 days, 1:13</code>：这是正常运行时间。它是计算机从上次启动到现在所运行的时间。<br><code>1 user</code>：登录系统用户数。<br><code>load average: 0.00, 0.00, 0.00</code>：加载平均值。等待运行的进程数目，也就是说，处于可以运行状态并共享 CPU 的进程个数。第一个是<code>最后 60 秒的平均值</code>，下一个是<code>前 5 分钟的平均值</code>，最后一个是<code>前 15 分钟的平均值</code>。若平均值低于<code>1.0</code>，则指示计算机工作不忙碌。<br><code>Tasks</code>：总结了进程数目和这些进程的各种状态。<br><code>Cpu(s)</code>：描述了 CPU 正在进行的活动的特性。<br><code>us</code>：用户进程。<br><code>sy</code>：系统（内核）进程。<br><code>ni</code>：<code>nice</code>（低优先级）进程。<br><code>id</code>：<code>CPU</code>空闲率。<br><code>wa</code>：等待<code>I/O</code>。<br><code>hi</code>：硬件中断。<br><code>si</code>：软件中断。<br><code>st</code>：cpu cycle 被虚拟化偷走的比例。<br><code>Mem</code>：物理内存的使用情况。<br><code>Swap</code>：交换分区（虚拟内存）的使用情况。</p><p><code>h</code>命令显示帮助。<br><code>q</code>退出<code>top</code>命令。</p><h2 id=""><a class="header-anchor" href="#">#</a>&amp;</h2><p>在命令后加<code>&amp;</code>后台执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &amp;</span><br></pre></td></tr></table></figure><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><code>init</code>进程的进程号是<code>1</code>，但好像<code>Ubuntu 18.04</code>之后开始用<code>systemd</code>作为初始进程了。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（12）</title>
      <link href="/blog/2020/11/24/the-linux-command-line-note-12/"/>
      <url>/blog/2020/11/24/the-linux-command-line-note-12/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><p>每个命令还是要给个例子，我<code>tee</code>命令虽然知道是怎么工作的，但是用的时候还是自然而然的加了一个<code>&gt;</code>，错了= =。</p><a id="more"></a><h2 id="su"><a class="header-anchor" href="#su">#</a>su</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su [-[l]] [user]</span><br></pre></td></tr></table></figure><p>如果包含<code>-l</code>选项，那么会为指定用户启动一个需要登录的<code>shell</code>，如果不指定用户，那么就假定是<strong>超级用户</strong>。</p><p><code>-l</code>可以缩写为<code>-</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deploy@iZwz96txzmeg2f5wu9eqigZ:~$ su -</span><br><span class="line">Password:</span><br><span class="line">root@iZwz96txzmeg2f5wu9eqigZ:~<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>也可以只执行单个命令，而不是启动一个新的可交互的 shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -c <span class="string">'command'</span></span><br></pre></td></tr></table></figure><p><code>单引号</code>保证了不会有任何展开。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ su -c <span class="string">'ls -l /root/*'</span></span><br><span class="line">Password:</span><br><span class="line">-rw------- 1 root root 200604 Sep 17 21:43 /root/nohup.out</span><br><span class="line">-rw-r--r-- 1 root root     22 Sep 18 12:24 /root/py.log</span><br><span class="line">-rw-r--r-- 1 root root   1579 Sep  9 16:14 /root/sync.log</span><br><span class="line"></span><br><span class="line">/root/go:</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x 3 root root 4096 Sep  9 16:16 src</span><br></pre></td></tr></table></figure><h2 id="sudo"><a class="header-anchor" href="#sudo">#</a>sudo</h2><p>管理员能够配置<code>sudo</code>命令，从而允许一个普通用户以不同的身份（通常是超级用户），通过一种非常可控的方式来执行命令。<strong>尤其是，只有一个用户可以执行一个或多个特殊命令时。</strong></p><p><code>sudo</code>命令不要求超级用户的密码，而是使用自己的密码来认证。</p><p><code>su</code> 和 <code>sudo</code> 之间的一个重要区别是 <code>sudo</code> 不会重新启动一个 <code>shell</code>，也不会加载另一个用户的 <code>shell</code> 运行环境。这意味者命令不必用单引号引起来。</p><blockquote><p>几年前，大多数的 Linux 发行版都依赖于 su 命令，来达到目的。su 命令不需要 sudo 命令所要求的配置，su 命令拥有一个 root 帐号，是 Unix 中的传统。但这会引起问题。所有用户会企图以 root 用户帐号来操纵系统。事实上，一些用户专门以 root 用户帐号来操作系统，因为这样做，的确消除了所有那些讨厌的“权限被拒绝” 的消息。你这样做就会使得 Linux 系统的安全性能被降低到和 Windows 系统相同 的级别。不是一个好主意。<br>当引进 Ubuntu 的时候，它的创作者们采取了不同的策略。默认情况下，Ubuntu 不允许用户登录到 root 帐号(因为不能为 root 帐号设置密码)，而是使用 sudo 命 令授予普通用户超级用户权限。通过 sudo 命令，最初的用户可以拥有超级用户权 限，也可以授予随后的用户帐号相似的权力。</p></blockquote><h2 id="chown"><a class="header-anchor" href="#chown">#</a>chown</h2><p><code>chown</code>命令被用来更改文件或目录的所有者和用户组。使用这个命令需要超级用户权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown [owner][:[group]] file...</span><br></pre></td></tr></table></figure><p><code>bob</code>： 把文件所有者从当前属主更改为用户 bob。<br><code>bob:users</code>： 把文件所有者改为用户 bob，文件用户组改为用户组 users。<br><code>:admins</code>： 把文件用户组改为组 admins，文件所有者不变。<br><code>bob:</code>： 文件所有者改为用户 bob，文件用户组改为用户 bob 登录 系统时所属的用户组。</p><p><strong>在大多数的配置中，sudo 命令会相信你几分钟，直到计时结束。</strong></p><h2 id="chgrp"><a class="header-anchor" href="#chgrp">#</a>chgrp</h2><blockquote><p>在旧版 Unix 系统中，chown 命令只能更改文件所有权，而不是用户组所有权。为了达到目的， 使用一个独立的命令，chgrp 来完成。除了限制多一点之外，chgrp 命令与 chown 命令使用起 来很相似。</p></blockquote><h2 id="passwd"><a class="header-anchor" href="#passwd">#</a>passwd</h2><p>设置或更改用户密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd [user]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（11）</title>
      <link href="/blog/2020/11/20/the-linux-command-line-note-11/"/>
      <url>/blog/2020/11/20/the-linux-command-line-note-11/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="用户"><a class="header-anchor" href="#用户">#</a>用户</h2><p>当一个用户拥有一个文件或目录时，用户对这个文件或目录的访问权限拥有控制权。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ id</span><br><span class="line">uid=501(onns) gid=20(staff) groups=20(staff),12(everyone),61(localaccounts),79(_appserverusr),80(admin),81(_appserveradm),98(_lpadmin),33(_appstore),100(_lpoperator),204(_developer),250(_analyticsusers),395(com.apple.access_ftp),398(com.apple.access_screensharing),399(com.apple.access_ssh),400(com.apple.access_remote_ae),701(com.apple.sharepoint.group.1)</span><br></pre></td></tr></table></figure><p>对于文件和目录的访问权力是根据读访问、写访问和执行访问来定义的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ &gt; foo.txt</span><br><span class="line">$ ls -l foo.txt</span><br><span class="line">-rw-r--r--@ 1 onns  staff  12 Nov 20 20:36 foo.txt</span><br></pre></td></tr></table></figure><p><strong>列表的前十个字符是文件的属性，第一个字符表明文件类型。</strong></p><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>-</code></td><td style="text-align:left">一个普通文件</td></tr><tr><td style="text-align:center"><code>d</code></td><td style="text-align:left">一个目录</td></tr><tr><td style="text-align:center"><code>l</code></td><td style="text-align:left">一个符号链接<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></td></tr><tr><td style="text-align:center"><code>c</code></td><td style="text-align:left">一个字符设备文件<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></td></tr><tr><td style="text-align:center"><code>b</code></td><td style="text-align:left">一个块设备文件<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></td></tr></tbody></table><p>剩下的九个字符叫做文件模式，代表着<code>文件所有者</code>、<code>文件组所有者</code>和<code>其他人</code>的<code>读</code>、<code>写</code>和<code>执行</code>权限。</p><p>文件：</p><ul><li><code>r</code>：允许打开并读取文件内容。</li><li><code>w</code>：允许写入文件内容或截断文件。但是<code>不允许</code>对文件进行<code>重命名</code>或<code>删除</code>，<strong>重命名或删除是由目录的属性决定的</strong>。</li><li><code>x</code>：允许将文件作为程序来执行，使用脚本语言编写的程序必须设置为可读才能被执行。</li></ul><p>目录：</p><ul><li><code>r</code>：允许列出目录中的内容，前提是目录必须设置了<code>可执行属性(x)</code>。</li><li><code>w</code>：允许在目录下新建、删除或重命名文件，前提是目录必须设置了<code>可执行属性(x)</code>。</li><li><code>x</code>：允许进入目录，例如：<code>cd directory</code>。</li></ul><h2 id="chmod"><a class="header-anchor" href="#chmod">#</a>chmod</h2><p><strong>只有文件的所有者或者超级用户才能更改文件或目录的模式。</strong></p><p><code>chmod</code>命令支持两种不同的方法来改变文件模式：<code>八进制数字表示法</code>或<code>符号表示法</code>。</p><table><thead><tr><th style="text-align:center">八进制</th><th style="text-align:center">二进制</th><th style="text-align:center">文件模式</th></tr></thead><tbody><tr><td style="text-align:center"><code>0</code></td><td style="text-align:center"><code>000</code></td><td style="text-align:center"><code>---</code></td></tr><tr><td style="text-align:center"><code>1</code></td><td style="text-align:center"><code>001</code></td><td style="text-align:center"><code>--x</code></td></tr><tr><td style="text-align:center"><code>2</code></td><td style="text-align:center"><code>010</code></td><td style="text-align:center"><code>-w-</code></td></tr><tr><td style="text-align:center"><code>3</code></td><td style="text-align:center"><code>011</code></td><td style="text-align:center"><code>-wx</code></td></tr><tr><td style="text-align:center"><code>4</code></td><td style="text-align:center"><code>100</code></td><td style="text-align:center"><code>r--</code></td></tr><tr><td style="text-align:center"><code>5</code></td><td style="text-align:center"><code>101</code></td><td style="text-align:center"><code>r-x</code></td></tr><tr><td style="text-align:center"><code>6</code></td><td style="text-align:center"><code>110</code></td><td style="text-align:center"><code>rw-</code></td></tr><tr><td style="text-align:center"><code>7</code></td><td style="text-align:center"><code>111</code></td><td style="text-align:center"><code>rwx</code></td></tr></tbody></table><p>常用权限：<code>7 (rwx)</code>，<code>6 (rw-)</code>，<code>5 (r-x)</code>，<code>4 (r--)</code>，和 <code>0 (-–)</code>。</p><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:left">解释</th></tr></thead><tbody><tr><td style="text-align:center"><code>u</code></td><td style="text-align:left"><code>user</code>的简写，意思是文件或目录的所有者。</td></tr><tr><td style="text-align:center"><code>g</code></td><td style="text-align:left"><code>groups</code>的简写，用户组。</td></tr><tr><td style="text-align:center"><code>o</code></td><td style="text-align:left"><code>others</code>的简写，意思是其他所有的人。</td></tr><tr><td style="text-align:center"><code>a</code></td><td style="text-align:left"><code>all</code>的简写，是<code>u</code>、<code>g</code>和<code>o</code>三者的联合。</td></tr></tbody></table><p><strong>如果没有指定字符，则假定使用<code>all</code>。</strong></p><p>权限操作：</p><ul><li><code>+</code>：加上一个权限。</li><li><code>-</code>：删掉一个权限。</li><li><code>=</code>：只有指定的权限可用，其它所有的权限被删除。</li></ul><p><strong>多种设定可以用逗号分开。</strong></p><p><code>u+x,go=rw</code>：给文件拥有者执行权限并给组和其他人读和执行的权限。</p><h2 id="umask"><a class="header-anchor" href="#umask">#</a>umask</h2><p>当创建一个文件时，<code>umask</code>命令控制着文件的默认权限。<br><code>umask</code>以掩码的形式来工作，和网关那里差不多，一般是<code>022</code>和<code>002</code>。</p><p>比如说正常一个权限是<code>666</code>（<code>110 110 110</code>），即<code>rw-rw-rw-</code>，被<code>022</code>（<code>000 010 010</code>）的<code>umask</code>后会变成<code>110 100 100</code>，即<code>644</code>，<code>rw-r--r--</code>。</p><blockquote><p>虽然我们通常看到一个八进制的权限掩码用三位数字来表示，但是从技术层面上来讲，用四位数字来表示它更确切些。为什么呢？因为除了读取、写入和执行权限之外，还有其它较少用到的权限设置。</p></blockquote><blockquote><p>其中之一是 setuid 位(八进制 4000)。当应用到一个可执行文件时，它把有效用户 ID 从真正的用户(实际运行程序的用户)设置成程序所有者的 ID。这种操作通常会应用到一些由超级用户所拥有的程序。当一个普通用户运行一个程序，这个程序由根用户 (root) 所有，并且设置了 setuid 位，这个程序运行时具有超级用户的特权，这样程序就可以访问普通用户禁止访问的文件和目录。很明显，因为这会引起安全方面的问题，所有可以设置 setuid 位的程序个数，必须控制在绝对小的范围内。</p></blockquote><blockquote><p>第二个是 setgid 位(八进制 2000)，这个相似于 setuid 位，把有效用户组 ID 从真正的用户组 ID 更改为文件所有者的组 ID。如果设置了一个目录的 setgid 位，则目录中新创建的文件具有这个目录用户组的所有权，而不是文件创建者所属用户组的所有权。对于共享目录来说，当一个普通用户组中的成员，需要访问共享目录中的所有文件，而不管文件所有者的主用户组时，那么设置 setgid 位很有用处。</p></blockquote><blockquote><p>第三个是 sticky 位(八进制 1000)。这个继承于 Unix，在 Unix 中，它可能把一个可执行文件标志为“不可交换的”。在 Linux 中，会忽略文件的 sticky 位，但是如果一个目录设置了 sticky 位，那么它能阻止用户删除或重命名文件，除非用户是这个目录的所有者，或者是文件所有者，或是超级用户。这个经常用来控制访问共享目录，比方说/tmp。</p></blockquote><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>注意对于符号链接文件，剩余的文件属性总是<code>rwxrwxrwx</code>，而且都是虚拟值。真正的文件属性是指符号链接<code>所指向的文件的属性</code>。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>这种文件类型是指按照字节流来处理数据的设备。比如说终端机或者调制解调器。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>这种文件类型是指按照数据块来处理数据的设备，例如一个硬盘或者 CD-ROM 盘。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（10）</title>
      <link href="/blog/2020/11/17/the-linux-command-line-note-10/"/>
      <url>/blog/2020/11/17/the-linux-command-line-note-10/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><h2 id="恢复-alt-键功能"><a class="header-anchor" href="#恢复-alt-键功能">#</a>恢复 alt 键功能</h2><p>在<code>MacOS</code>的<code>Terminal</code>里，用<code>alt</code>组合键总是不好使，这次查了一下，问题解决。</p><p><code>Terminal</code> -&gt; <code>Preferences</code>（快捷键<code>cmd + ,</code>） -&gt; <code>Profiles</code> -&gt; <code>Keyboard</code> -&gt; <code>Use Option as Meta key</code></p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201117-1.jpg" alt="Use Option as Meta key"></p></center><h3 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h3><ul><li><a href="https://superuser.com/questions/496090/how-to-use-alt-commands-in-a-terminal-on-os-x" target="_blank" rel="noopener">How to use ALT commands in a terminal on OS X?</a></li></ul><a id="more"></a><h2 id="移动光标"><a class="header-anchor" href="#移动光标">#</a>移动光标</h2><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl-a</code></td><td style="text-align:left">移动光标到行首。</td></tr><tr><td style="text-align:center"><code>Ctrl-e</code></td><td style="text-align:left">移动光标到行尾。</td></tr><tr><td style="text-align:center"><code>Ctrl-f</code></td><td style="text-align:left">光标后移一个字符</td></tr><tr><td style="text-align:center"><code>Ctrl-b</code></td><td style="text-align:left">光标前移一个字符</td></tr><tr><td style="text-align:center"><code>Alt-f</code></td><td style="text-align:left">光标后移一个字。</td></tr><tr><td style="text-align:center"><code>Alt-b</code></td><td style="text-align:left">光标前移一个字。</td></tr><tr><td style="text-align:center"><code>Ctrl-l</code></td><td style="text-align:left">清空屏幕，移动光标到左上角。</td></tr></tbody></table><h2 id="修改文本"><a class="header-anchor" href="#修改文本">#</a>修改文本</h2><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl-d</code></td><td style="text-align:left">删除光标位置的字符。</td></tr><tr><td style="text-align:center"><code>Ctrl-t</code></td><td style="text-align:left">光标位置的字符和光标前面的字符互换位置。</td></tr><tr><td style="text-align:center"><code>Alt-t</code></td><td style="text-align:left">光标位置的字和其前面的字互换位置。</td></tr><tr><td style="text-align:center"><code>Alt-l</code></td><td style="text-align:left">把从光标位置到字尾的字符转换成小写字母。</td></tr><tr><td style="text-align:center"><code>Alt-u</code></td><td style="text-align:left">把从光标位置到字尾的字符转换成大写字母。</td></tr></tbody></table><p><code>ctrl + t</code>这个很有用，因为其实经常都是打反两个字母，比如我，经常把<code>conda activate</code>打成<code>conda acitvate</code>。但是我在<code>macOS</code>上测试的时候，确实是<strong>光标位置的字符和光标前面的字符互换位置</strong>，但是换位完之后，<strong>光标往后挪了一个位置</strong>（如果后面还有文本的话）。</p><h2 id="剪切粘贴"><a class="header-anchor" href="#剪切粘贴">#</a>剪切粘贴</h2><p><code>Readline</code>的文档使用术语 <code>killing</code> 和 <code>yanking</code> 来指我们平常所说的剪切和粘贴。剪切下来的本文被存储在一个叫做<code>剪切环</code>（kill-ring）的缓冲区中。</p><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl-k</code></td><td style="text-align:left">剪切从光标位置到行尾的文本。</td></tr><tr><td style="text-align:center"><code>Ctrl-u</code></td><td style="text-align:left">剪切从光标位置到行首的文本。</td></tr><tr><td style="text-align:center"><code>Alt-d</code></td><td style="text-align:left">剪切从光标位置到词尾的文本。</td></tr><tr><td style="text-align:center"><code>Alt-Backspace</code></td><td style="text-align:left">剪切从光标位置到词头的文本。如果光标在一个单词的开头，剪切前一个单词。</td></tr><tr><td style="text-align:center"><code>Ctrl-y</code></td><td style="text-align:left">把剪切环中的文本粘贴到光标位置。</td></tr></tbody></table><p><code>Alt-Backspace</code>如果光标在一个单词的开头，剪切前一个单词，<strong>同时会把两个词之间的空格也一起</strong>剪切掉并且存在剪切环里。</p><h2 id="自动补全"><a class="header-anchor" href="#自动补全">#</a>自动补全</h2><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Alt-?</code></td><td style="text-align:left">显示可能的自动补全列表。</td></tr><tr><td style="text-align:center"><code>Alt-*</code></td><td style="text-align:left">插入所有可能的自动补全。</td></tr></tbody></table><p><code>alt + ?</code>等效于<code>tab</code>两次。</p><p>这俩命令我试不出来。。好在目前也没什么用= =！</p><h2 id="历史命令"><a class="header-anchor" href="#历史命令">#</a>历史命令</h2><p><code>bash</code>维护着一个已经执行过的命令的历史列表。这个命令列表被保存在你家目录下，一个叫做<code>.bash_history</code>的文件里。</p><p><strong>在默认情况下，bash 会存储你所输入的最后 <code>500</code> 个命令。</strong></p><p>每个历史记录都有行号，我们可以使用一种叫做<code>历史命令展开</code>的方式，来调用行号所代表的这一行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!line-number</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">history</span></span><br><span class="line">  995  uniq --<span class="built_in">help</span></span><br><span class="line">  996  uniq</span><br><span class="line">  997  ls /bin /usr/bin | sort | uniq -d | less</span><br><span class="line">  998  ssh root@xiaoxia.onns.xyz</span><br><span class="line">  999  blog</span><br><span class="line"> 1000  cpblog</span><br><span class="line"> 1001  ssh root@xiaoxia.onns.xyz</span><br><span class="line"> 1002  clear</span><br><span class="line"> 1003  ashdasda  adad</span><br><span class="line"> 1004  askdhakdjah akjsdhakjdhakjd akdjhakjdhajdk</span><br><span class="line"> 1005  hkasdhakjsdha ahdsaksjdhktttttt[</span><br><span class="line"> 1006  abcd123456abcd123456abcd12abcd123456abcd123456abcd123456 3456 ahskdasdjha</span><br><span class="line"> 1007  <span class="built_in">which</span>-command ls</span><br><span class="line"> 1008  ls D</span><br><span class="line"> 1009  <span class="built_in">history</span></span><br><span class="line"> 1010  ls /bin /usr/bin | sort | uniq -d | less</span><br><span class="line">$ !995</span><br><span class="line">uniq --<span class="built_in">help</span></span><br><span class="line">uniq: illegal option -- -</span><br><span class="line">usage: uniq [-c | -d | -u] [-i] [-f fields] [-s chars] [input [output]]</span><br></pre></td></tr></table></figure><p><strong><code>bash</code>也具有增量搜索历史列表的能力。</strong><br>输入 <code>Ctrl-r</code> 来启动增量搜索，接着输入你要寻找的字。当你找到它以后，你可以敲入 <code>Enter</code> 来执行命令，或者输入 <code>Ctrl-j</code>，从历史列表中复制这一行到当前命令行。再次输入 <code>Ctrl-r</code>，来找到下一个匹配项(历史列表中向上移动)。输入 <code>Ctrl-g</code> 或者 <code>Ctrl-c</code>，退出搜索。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">bck-i-search: _</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ uniq --<span class="built_in">help</span></span><br><span class="line">bck-i-search: un_</span><br></pre></td></tr></table></figure><p>说实话，好麻烦，我还是喜欢用<code>grep + 管道</code>。</p><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl-p</code></td><td style="text-align:left">移动到上一个历史条目。类似于上箭头按键。</td></tr><tr><td style="text-align:center"><code>Ctrl-n</code></td><td style="text-align:left">移动到下一个历史条目。类似于下箭头按键。</td></tr><tr><td style="text-align:center"><code>Alt-&lt;</code></td><td style="text-align:left">移动到历史列表开头。</td></tr><tr><td style="text-align:center"><code>Alt-&gt;</code></td><td style="text-align:left">移动到历史列表结尾，即当前命令行。</td></tr><tr><td style="text-align:center"><code>Ctrl-r</code></td><td style="text-align:left">反向增量搜索。从当前命令行开始，向上增量搜索。</td></tr><tr><td style="text-align:center"><code>Alt-p</code></td><td style="text-align:left">反向搜索，非增量搜索。(输入要查找的字符串，按下 Enter 来执行搜索)。</td></tr><tr><td style="text-align:center"><code>Alt-n</code></td><td style="text-align:left">向前搜索，非增量。</td></tr><tr><td style="text-align:center"><code>Ctrl-o</code></td><td style="text-align:left">执行历史列表中的当前项，并移到下一个。如果你想要执行 历史列表中一系列的命令，这很方便。</td></tr></tbody></table><p>历史命令展开：</p><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>!!</code></td><td style="text-align:left">重复最后一次执行的命令。可能按下上箭头按键和 enter 键 更容易些。</td></tr><tr><td style="text-align:center"><code>!number</code></td><td style="text-align:left">重复历史列表中第 number 行的命令。</td></tr><tr><td style="text-align:center"><code>!string</code></td><td style="text-align:left">重复最近历史列表中，以这个字符串开头的命令。</td></tr><tr><td style="text-align:center"><code>!?string</code></td><td style="text-align:left">重复最近历史列表中，包含这个字符串的命令。</td></tr></tbody></table><p><strong>应该小心谨慎地使用 <code>!string</code> 和 <code>!?string</code> 格式，除非你完全确信历史列表条目的内容。</strong></p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（9）</title>
      <link href="/blog/2020/11/16/the-linux-command-line-note-9/"/>
      <url>/blog/2020/11/16/the-linux-command-line-note-9/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="字符展开"><a class="header-anchor" href="#字符展开">#</a>字符展开</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> *</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> *</span><br><span class="line">anaconda-ks.cfg certbot-auto ls-output.txt uniq-test</span><br></pre></td></tr></table></figure><p><code>shell</code>在<code>echo</code>命令被执行前把<code>*</code>展开成了另外的东西。</p><p>当回车键被按下时，<code>shell</code>在命令被执行前在命令行上自动展开任何符合条件的字符，所以<code>echo</code>命令的实际参数并不是<code>*</code>，而是它<code>展开后的结果</code>。</p><h2 id="路径名展开"><a class="header-anchor" href="#路径名展开">#</a>路径名展开</h2><p>通配符所依赖的工作机制叫做<code>路径名展开</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> D*</span><br><span class="line">Desktop Documents Downloads</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> *s</span><br><span class="line">Applications Documents Downloads Movies Pictures sensors</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> [[:upper:]]*</span><br><span class="line">Applications Desktop Documents Downloads Library Movies Music Pictures Postman Public</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> /usr/*/share</span><br><span class="line">/usr/<span class="built_in">local</span>/share</span><br></pre></td></tr></table></figure><p>以圆点字符开头的文件名是隐藏文件，路径名展开也尊重这种行为，<code>echo *</code>不会显示隐藏文件。</p><p><code>~</code>当它用在一个单词的开头时，它会展开成指定用户的家目录名，如果没有指定用户名，则展开成当前用户的家目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> ~</span><br><span class="line">/Users/onns</span><br></pre></td></tr></table></figure><p>如果有用户<code>foo</code>这个帐号，那么：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> ~foo</span><br><span class="line">/home/foo</span><br></pre></td></tr></table></figure><h2 id="算术表达式展开"><a class="header-anchor" href="#算术表达式展开">#</a>算术表达式展开</h2><p><code>shell</code>在展开中执行算数表达式，这允许我们把<code>shell</code>提示当作计算器来使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$((expression))</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $((2*3))</span><br><span class="line">6</span><br></pre></td></tr></table></figure><p><strong>算术表达式只支持整数。</strong></p><p>然而我好像用了不是整数的数，也算出来结果了，可能和<code>Linux</code>版本有关系：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $((5.2423/2))</span><br><span class="line">2.6211500000000001</span><br></pre></td></tr></table></figure><p>支持的运算符：<code>+</code> <code>-</code> <code>*</code> <code>/</code> <code>%</code> <code>**</code>。</p><p>因为只支持整数，所以<code>除法的结果也是整数</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $((5/2))</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p><strong>在算术表达式中空格并不重要，并且表达式可以嵌套。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $(($((5**2)) * 3))</span><br><span class="line">75</span><br></pre></td></tr></table></figure><h2 id="花括号展开"><a class="header-anchor" href="#花括号展开">#</a>花括号展开</h2><p>可以从一个包含花括号的模式中创建多个文本字符串。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> Front-&#123;A,B,C&#125;-Back</span><br><span class="line">Front-A-Back Front-B-Back Front-C-Back</span><br></pre></td></tr></table></figure><p>花括号展开模式可能包含一个开头部分叫做<code>报头</code>，一个结尾部分叫做<code>附言</code>。</p><p><code>花括号表达式</code>本身可能包含一个由<code>逗号分开的字符串列表</code>，或者一个<code>整数区间</code>，或者<code>单个的字符的区间</code>。</p><p><strong>这种模式不能嵌入空白字符。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> Number_&#123;1..5&#125;</span><br><span class="line">Number_1 Number_2 Number_3 Number_4 Number_5</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> &#123;Z..A&#125;</span><br><span class="line">Z Y X W V U T S R Q P O N M L K J I H G F E D C B A</span><br></pre></td></tr></table></figure><p><strong>花括号展开可以嵌套：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> a&#123;A&#123;1,2&#125;,B&#123;3,4&#125;&#125;b</span><br><span class="line">aA1b aA2b aB3b aB4b</span><br></pre></td></tr></table></figure><p>还有一些<code>参数变量</code>展开：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$USER</span></span><br><span class="line">onns</span><br></pre></td></tr></table></figure><p>但在参数展开中，如果你拼写错了一个变量名，<strong>展开仍然会进行</strong>，只是展开的结果是一个空字符串：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$SUER</span></span><br></pre></td></tr></table></figure><h2 id="命令替换"><a class="header-anchor" href="#命令替换">#</a>命令替换</h2><p>命令替换允许我们把一个命令的输出作为一个展开模式来使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $(ls)</span><br><span class="line">Applications Desktop Documents Downloads Library Movies Music Pictures Postman Public go node sensors</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l $(<span class="built_in">which</span> cp)</span><br><span class="line">-rwxr-xr-x  1 root  wheel  42272 May 28 07:37 /bin/cp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ file $(ls /usr/bin/* | grep zip)</span><br><span class="line">/usr/bin/bunzip2:        Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/bzip2:          Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/bzip2recover:   Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/funzip:         Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/gunzip:         Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/gzip:           Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/unzip:          Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/unzipsfx:       Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zip:            Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zipcloak:       Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zipdetails:     Perl script text executable</span><br><span class="line">/usr/bin/zipdetails5.18: Perl script text executable</span><br><span class="line">/usr/bin/zipdetails5.28: Perl script text executable</span><br><span class="line">/usr/bin/zipgrep:        POSIX shell script text executable, ASCII text</span><br><span class="line">/usr/bin/zipinfo:        Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zipnote:        Mach-O 64-bit executable x86_64</span><br><span class="line">/usr/bin/zipsplit:       Mach-O 64-bit executable x86_64</span><br></pre></td></tr></table></figure><p>在旧版<code>shell</code>程序中，有另一种语法也支持命令替换，使用<code>倒引号</code>来代替美元符号和括号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l `<span class="built_in">which</span> cp`</span><br><span class="line">-rwxr-xr-x  1 root  wheel  42272 May 28 07:37 /bin/cp</span><br></pre></td></tr></table></figure><h2 id="引用"><a class="header-anchor" href="#引用">#</a>引用</h2><p>用<code>双引号</code>包裹的字符串，<code>单词分割</code>、<code>路径名展开</code>、<code>波浪线展开</code>和<code>花括号展开</code>会失效，<code>参数展开</code>、 <code>算术展开</code>和<code>命令替换</code>仍然执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"<span class="variable">$USER</span> <span class="variable">$((2+2)</span>) <span class="variable">$(cal)</span>"</span></span><br><span class="line">onns 4    November 2020      </span><br><span class="line">Su Mo Tu We Th Fr Sa  </span><br><span class="line"> 1  2  3  4  5  6  7  </span><br><span class="line"> 8  9 10 11 12 13 14  </span><br><span class="line">15 16 17 18 19 20 21  </span><br><span class="line">22 23 24 25 26 27 28  </span><br><span class="line">29 30</span><br></pre></td></tr></table></figure><p>例外的是<code>$</code> <code>\</code> <code>`</code>。</p><p>在默认情况下，单词分割机制会在单词中寻找<code>空格</code>，<code>制表符</code>，和<code>换行符</code>，并把它们看作单词之间的界定符。这意味着无引用的空格，制表符和换行符都不是文本的一部分，它们只作为<code>分隔符</code>使用。</p><p>虽然命令替换还有效果，但是有时候可能会有用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> $(cal)</span><br><span class="line">November 2020 Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"<span class="variable">$(cal)</span>"</span></span><br><span class="line">   November 2020      </span><br><span class="line">Su Mo Tu We Th Fr Sa  </span><br><span class="line"> 1  2  3  4  5  6  7  </span><br><span class="line"> 8  9 10 11 12 13 14  </span><br><span class="line">15 16 17 18 19 20 21  </span><br><span class="line">22 23 24 25 26 27 28  </span><br><span class="line">29 30</span><br></pre></td></tr></table></figure><p>如果需要禁止所有的展开，我们要使用<code>单引号</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">'$USER $((2+2)) $(cal)'</span></span><br><span class="line"><span class="variable">$USER</span> $((2+2)) $(cal)</span><br></pre></td></tr></table></figure><p>也可以用单个的转义字符反斜杠<code>\</code>。</p><p><strong>注意在单引号中，反斜杠失去它的特殊含义，它被看作普通字符。</strong></p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（8）</title>
      <link href="/blog/2020/11/15/the-linux-command-line-note-8/"/>
      <url>/blog/2020/11/15/the-linux-command-line-note-8/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="sort"><a class="header-anchor" href="#sort">#</a>sort</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">$ sort --<span class="built_in">help</span></span><br><span class="line">Usage: sort [OPTION]... [FILE]...</span><br><span class="line">  or:  sort [OPTION]... --files0-from=F</span><br><span class="line">Write sorted concatenation of all FILE(s) to standard output.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">Ordering options:</span><br><span class="line"></span><br><span class="line">  -b, --ignore-leading-blanks  ignore leading blanks</span><br><span class="line">  -d, --dictionary-order      consider only blanks and alphanumeric characters</span><br><span class="line">  -f, --ignore-case           fold lower <span class="keyword">case</span> to upper <span class="keyword">case</span> characters</span><br><span class="line">  -g, --general-numeric-sort  compare according to general numerical value</span><br><span class="line">  -i, --ignore-nonprinting    consider only printable characters</span><br><span class="line">  -M, --month-sort            compare (unknown) &lt; <span class="string">'JAN'</span> &lt; ... &lt; <span class="string">'DEC'</span></span><br><span class="line">  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)</span><br><span class="line">  -n, --numeric-sort          compare according to string numerical value</span><br><span class="line">  -R, --random-sort           sort by random <span class="built_in">hash</span> of keys</span><br><span class="line">      --random-source=FILE    get random bytes from FILE</span><br><span class="line">  -r, --reverse               reverse the result of comparisons</span><br><span class="line">      --sort=WORD             sort according to WORD:</span><br><span class="line">                                general-numeric -g, human-numeric -h, month -M,</span><br><span class="line">                                numeric -n, random -R, version -V</span><br><span class="line">  -V, --version-sort          natural sort of (version) numbers within text</span><br><span class="line"></span><br><span class="line">Other options:</span><br><span class="line"></span><br><span class="line">      --batch-size=NMERGE   merge at most NMERGE inputs at once;</span><br><span class="line">                            <span class="keyword">for</span> more use temp files</span><br><span class="line">  -c, --check, --check=diagnose-first  check <span class="keyword">for</span> sorted input; <span class="keyword">do</span> not sort</span><br><span class="line">  -C, --check=quiet, --check=silent  like -c, but <span class="keyword">do</span> not report first bad line</span><br><span class="line">      --compress-program=PROG  compress temporaries with PROG;</span><br><span class="line">                              decompress them with PROG -d</span><br><span class="line">      --debug               annotate the part of the line used to sort,</span><br><span class="line">                              and warn about questionable usage to stderr</span><br><span class="line">      --files0-from=F       <span class="built_in">read</span> input from the files specified by</span><br><span class="line">                            NUL-terminated names <span class="keyword">in</span> file F;</span><br><span class="line">                            If F is - <span class="keyword">then</span> <span class="built_in">read</span> names from standard input</span><br><span class="line">  -k, --key=KEYDEF          sort via a key; KEYDEF gives location and <span class="built_in">type</span></span><br><span class="line">  -m, --merge               merge already sorted files; <span class="keyword">do</span> not sort</span><br><span class="line">  -o, --output=FILE         write result to FILE instead of standard output</span><br><span class="line">  -s, --stable              stabilize sort by disabling last-resort comparison</span><br><span class="line">  -S, --buffer-size=SIZE    use SIZE <span class="keyword">for</span> main memory buffer</span><br><span class="line">  -t, --field-separator=SEP  use SEP instead of non-blank to blank transition</span><br><span class="line">  -T, --temporary-directory=DIR  use DIR <span class="keyword">for</span> temporaries, not <span class="variable">$TMPDIR</span> or /tmp;</span><br><span class="line">                              multiple options specify multiple directories</span><br><span class="line">      --parallel=N          change the number of sorts run concurrently to N</span><br><span class="line">  -u, --unique              with -c, check <span class="keyword">for</span> strict ordering;</span><br><span class="line">                              without -c, output only the first of an equal run</span><br><span class="line">  -z, --zero-terminated     end lines with 0 byte, not newline</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">KEYDEF is F[.C][OPTS][,F[.C][OPTS]] <span class="keyword">for</span> start and stop position, <span class="built_in">where</span> F is a</span><br><span class="line">field number and C a character position <span class="keyword">in</span> the field; both are origin 1, and</span><br><span class="line">the stop position defaults to the line<span class="string">'s end.  If neither -t nor -b is in</span></span><br><span class="line"><span class="string">effect, characters in a field are counted from the beginning of the preceding</span></span><br><span class="line"><span class="string">whitespace.  OPTS is one or more single-letter ordering options [bdfgiMhnRrV],</span></span><br><span class="line"><span class="string">which override global ordering options for that key.  If no key is given, use</span></span><br><span class="line"><span class="string">the entire line as the key.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SIZE may be followed by the following multiplicative suffixes:</span></span><br><span class="line"><span class="string">% 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">With no FILE, or when FILE is -, read standard input.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">*** WARNING ***</span></span><br><span class="line"><span class="string">The locale specified by the environment affects sort order.</span></span><br><span class="line"><span class="string">Set LC_ALL=C to get the traditional sort order that uses</span></span><br><span class="line"><span class="string">native byte values.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GNU coreutils online help: &lt;http://www.gnu.org/software/coreutils/&gt;</span></span><br><span class="line"><span class="string">Report sort translation bugs to &lt;http://translationproject.org/team/&gt;</span></span><br><span class="line"><span class="string">For complete documentation, run: info coreutils '</span>sort invocation<span class="string">'</span></span><br></pre></td></tr></table></figure><ul><li><code>-b</code> 忽略每行前面开始出的空格字符。</li><li><code>-c</code> 检查文件是否已经按照顺序排序。</li><li><code>-d</code> 排序时，处理英文字母、数字及空格字符外，忽略其他的字符。</li><li><code>-f</code> 排序时，将小写字母视为大写字母。</li><li><code>-i</code> 排序时，除了 040 至 176 之间的 ASCII 字符外，忽略其他的字符。</li><li><code>-m</code> 将几个排序好的文件进行合并。</li><li><code>-M</code> 将前面 3 个字母依照月份的缩写进行排序。</li><li><code>-n</code> 依照数值的大小排序。</li><li><code>-u</code> 意味着是唯一的(unique)，输出的结果是去完重了的。</li><li><code>-o</code>&lt;输出文件&gt; 将排序后的结果存入指定的文件。</li><li><code>-r</code> 以相反的顺序来排序。</li><li><code>-t&lt;分隔字符&gt;</code> 指定排序时所用的栏位分隔字符。</li><li><code>+&lt;起始栏位&gt;-&lt;结束栏位&gt;</code> 以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。</li><li><code>--help</code> 显示帮助。</li><li><code>--version</code> 显示版本信息。</li></ul><p>排序命令，默认是按照字典序排序。</p><h2 id="uniq"><a class="header-anchor" href="#uniq">#</a>uniq</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ uniq --<span class="built_in">help</span></span><br><span class="line">Usage: uniq [OPTION]... [INPUT [OUTPUT]]</span><br><span class="line">Filter adjacent matching lines from INPUT (or standard input),</span><br><span class="line">writing to OUTPUT (or standard output).</span><br><span class="line"></span><br><span class="line">With no options, matching lines are merged to the first occurrence.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">  -c, --count           prefix lines by the number of occurrences</span><br><span class="line">  -d, --repeated        only <span class="built_in">print</span> duplicate lines, one <span class="keyword">for</span> each group</span><br><span class="line">  -D, --all-repeated[=METHOD]  <span class="built_in">print</span> all duplicate lines</span><br><span class="line">                          groups can be delimited with an empty line</span><br><span class="line">                          METHOD=&#123;none(default),prepend,separate&#125;</span><br><span class="line">  -f, --skip-fields=N   avoid comparing the first N fields</span><br><span class="line">      --group[=METHOD]  show all items, separating groups with an empty line</span><br><span class="line">                          METHOD=&#123;separate(default),prepend,append,both&#125;</span><br><span class="line">  -i, --ignore-case     ignore differences <span class="keyword">in</span> <span class="keyword">case</span> when comparing</span><br><span class="line">  -s, --skip-chars=N    avoid comparing the first N characters</span><br><span class="line">  -u, --unique          only <span class="built_in">print</span> unique lines</span><br><span class="line">  -z, --zero-terminated  end lines with 0 byte, not newline</span><br><span class="line">  -w, --check-chars=N   compare no more than N characters <span class="keyword">in</span> lines</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">A field is a run of blanks (usually spaces and/or TABs), <span class="keyword">then</span> non-blank</span><br><span class="line">characters.  Fields are skipped before chars.</span><br><span class="line"></span><br><span class="line">Note: <span class="string">'uniq'</span> does not detect repeated lines unless they are adjacent.</span><br><span class="line">You may want to sort the input first, or use <span class="string">'sort -u'</span> without <span class="string">'uniq'</span>.</span><br><span class="line">Also, comparisons honor the rules specified by <span class="string">'LC_COLLATE'</span>.</span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report uniq translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">For complete documentation, run: info coreutils <span class="string">'uniq invocation'</span></span><br></pre></td></tr></table></figure><ul><li><code>-c或--count</code> 在每列旁边显示该行重复出现的次数。</li><li><code>-d或--repeated</code> 仅显示重复出现的行列。</li><li><code>-f&lt;栏位&gt;或--skip-fields=&lt;栏位&gt;</code> 忽略比较指定的栏位。</li><li><code>-s&lt;字符位置&gt;或--skip-chars=&lt;字符位置&gt;</code> 忽略比较指定的字符。</li><li><code>-u或--unique</code> 仅显示出一次的行列。</li><li><code>-w&lt;字符位置&gt;或--check-chars=&lt;字符位置&gt;</code> 指定要比较的字符。</li><li><code>--help</code> 显示帮助。</li><li><code>--version</code> 显示版本信息。</li><li><code>[输入文件]</code> 指定已排序好的文本文件。如果不指定此项，则从标准读取数据；</li><li><code>[输出文件]</code> 指定输出的文件。如果不指定此选项，则将内容显示到标准输出设备（显示终端）。</li></ul><p><code>uniq</code>从数据列表中删除任何重复行。</p><p>假设有如下文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ vi uniq-test</span><br><span class="line">A</span><br><span class="line">A</span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">B</span><br><span class="line">B</span><br><span class="line">B</span><br><span class="line">B</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">D</span><br><span class="line">D</span><br><span class="line">D</span><br><span class="line">C</span><br><span class="line">B</span><br><span class="line">A</span><br></pre></td></tr></table></figure><p>执行<code>uniq</code>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ uniq uniq-test</span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br><span class="line">D</span><br><span class="line">C</span><br><span class="line">B</span><br><span class="line">A</span><br></pre></td></tr></table></figure><p><strong>当重复的行并不相邻时，<code>uniq</code>命令是不起作用的。</strong></p><p><strong>所以一般<code>uniq</code>之前先<code>sort</code>一下，这两个命令经常一起用。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sort uniq-test | uniq</span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br><span class="line">D</span><br></pre></td></tr></table></figure><h2 id="wc"><a class="header-anchor" href="#wc">#</a>wc</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ wc --<span class="built_in">help</span></span><br><span class="line">Usage: wc [OPTION]... [FILE]...</span><br><span class="line">  or:  wc [OPTION]... --files0-from=F</span><br><span class="line">Print newline, word, and byte counts <span class="keyword">for</span> each FILE, and a total line <span class="keyword">if</span></span><br><span class="line">more than one FILE is specified.  With no FILE, or when FILE is -,</span><br><span class="line"><span class="built_in">read</span> standard input.  A word is a non-zero-length sequence of characters</span><br><span class="line">delimited by white space.</span><br><span class="line">The options below may be used to select <span class="built_in">which</span> counts are printed, always <span class="keyword">in</span></span><br><span class="line">the following order: newline, word, character, byte, maximum line length.</span><br><span class="line">  -c, --bytes            <span class="built_in">print</span> the byte counts</span><br><span class="line">  -m, --chars            <span class="built_in">print</span> the character counts</span><br><span class="line">  -l, --lines            <span class="built_in">print</span> the newline counts</span><br><span class="line">      --files0-from=F    <span class="built_in">read</span> input from the files specified by</span><br><span class="line">                           NUL-terminated names <span class="keyword">in</span> file F;</span><br><span class="line">                           If F is - <span class="keyword">then</span> <span class="built_in">read</span> names from standard input</span><br><span class="line">  -L, --max-line-length  <span class="built_in">print</span> the length of the longest line</span><br><span class="line">  -w, --words            <span class="built_in">print</span> the word counts</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report wc translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">For complete documentation, run: info coreutils <span class="string">'wc invocation'</span></span><br></pre></td></tr></table></figure><ul><li><code>-c或--bytes或--chars</code> 只显示 Bytes 数。</li><li><code>-l或--lines</code> 显示行数。</li><li><code>-w或--words</code> 只显示字数。</li><li><code>--help</code> 在线帮助。</li><li><code>--version</code> 显示版本信息。</li></ul><p><code>wc</code>命令是用来显示文件所包含的行数、字数和字节数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wc ls-output.txt</span><br><span class="line"> 1873  1872 17825 ls-output.txt</span><br></pre></td></tr></table></figure><h2 id="grep"><a class="header-anchor" href="#grep">#</a>grep</h2><p><code>grep</code>用来找到文件中的匹配文本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep pattern [file...]</span><br></pre></td></tr></table></figure><p>比如用来查找名字里包含<code>zip</code>的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ls /bin /usr/bin | sort | uniq | grep zip</span><br><span class="line">gpg-zip</span><br><span class="line">gunzip</span><br><span class="line">gzip</span><br><span class="line">zip</span><br><span class="line">zipcloak</span><br><span class="line">zipnote</span><br><span class="line">zipsplit</span><br></pre></td></tr></table></figure><p><code>-i</code>使得 <code>grep</code> 在执行搜索时忽略大小写，<code>-v</code>选项会告诉 <code>grep</code> 只打印不匹配的行。</p><h2 id="head-tail"><a class="header-anchor" href="#head-tail">#</a>head / tail</h2><p>查看文件的头部/尾部。</p><p><code>-n</code>来调整显示多少行。</p><p>因为有一些日志文件的尾部可能一直有更新，所以可以用<code>-f</code>选项一直把最新的尾部文件显示到屏幕上，用<code>ctrl+c</code>来停止监听。</p><h2 id="tee"><a class="header-anchor" href="#tee">#</a>tee</h2><p><code>tee</code>程序从标准输入读入数据，并且同时复制数据到标准输出（允许数据继续随着管道线流动）和一个或多个文件。</p><p>用处是可以从一系列的管道中间读取数据到别的地方。（直观的想法就是，在管道上添加一个分支，<s>私接水管（不是</s>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ ls /usr/bin | tee ls.txt | grep zip</span><br><span class="line">bunzip2</span><br><span class="line">bzip2</span><br><span class="line">bzip2recover</span><br><span class="line">funzip</span><br><span class="line">gunzip</span><br><span class="line">gzip</span><br><span class="line">unzip</span><br><span class="line">unzipsfx</span><br><span class="line">zip</span><br><span class="line">zipcloak</span><br><span class="line">zipdetails</span><br><span class="line">zipdetails5.18</span><br><span class="line">zipdetails5.28</span><br><span class="line">zipgrep</span><br><span class="line">zipinfo</span><br><span class="line">zipnote</span><br><span class="line">zipsplit</span><br></pre></td></tr></table></figure><p><code>ls.txt</code>里也有<code>ls /usr.bin</code>的数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat ls.txt | wc -l</span><br><span class="line">    1012</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（7）</title>
      <link href="/blog/2020/11/10/the-linux-command-line-note-7/"/>
      <url>/blog/2020/11/10/the-linux-command-line-note-7/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="cat"><a class="header-anchor" href="#cat">#</a>cat</h2><p><code>cat</code>命令读取一个或多个文件，然后复制它们到标准输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat [file]</span><br></pre></td></tr></table></figure><p><code>cat</code>经常被用来显示简短的文本文件。</p><p><code>cat</code>可以把多个分片的文件连在一起：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat movie.mpeg.0* &gt; movie.mpeg</span><br></pre></td></tr></table></figure><p>因为通配符总是以有序的方式展开，所以这些参数会以正确顺序安排。</p><p><code>cat</code>如果不加参数直接运行，将默认连接<code>标准输入</code>和<code>标准输出</code>。可以使用这种行为来创建简短的文本文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@liupans-MacBook-Air ~ % cat &gt; lazy_dog.txt</span><br><span class="line">The quick brown fox jumped over the lazy dog.%</span><br><span class="line">onns@liupans-MacBook-Air ~ % cat lazy_dog.txt</span><br><span class="line">The quick brown fox jumped over the lazy dog.%</span><br></pre></td></tr></table></figure><p>输入<code>Ctrl-d</code>可以告诉<code>cat</code>已经到达文件末尾<code>EOF</code>。</p><h2 id="匿名管道"><a class="header-anchor" href="#匿名管道">#</a>匿名管道</h2><p><code>|</code>可以让一个命令的标准输出通过管道送至另一个命令的标准输入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command1 | command2</span><br></pre></td></tr></table></figure><p>心情不好，晚安。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（6）</title>
      <link href="/blog/2020/11/09/the-linux-command-line-note-6/"/>
      <url>/blog/2020/11/09/the-linux-command-line-note-6/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="alias"><a class="header-anchor" href="#alias">#</a>alias</h2><p><code>alias</code>用来创建别名，可以把多个命令放在同一行，命令之间用<code>;</code>分隔。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> name=<span class="string">'command1; command2; command3...'</span></span><br></pre></td></tr></table></figure><p>在创建别名的时候，应该用<code>type</code>来测试一下这个<code>别名</code>有没有被用过。</p><p>删除别名，使用<code>unalias</code>命令。</p><p>在命令行里定义的别名，<code>shell关闭</code>之后就会消失。</p><h2 id="标准输入、输出和错误"><a class="header-anchor" href="#标准输入、输出和错误">#</a>标准输入、输出和错误</h2><p><code>Unix</code>下万物皆文件，默认情况下，<code>标准输出</code>和<code>标准错误</code>都连接到屏幕，即<code>stdout</code>和<code>stderr</code>。<code>标准输入</code>连接到键盘上，即<code>stdin</code>。</p><h2 id="标准输出重定向"><a class="header-anchor" href="#标准输出重定向">#</a>标准输出重定向</h2><p>使用<code>&gt;</code>重定向符后接文件名将标准输出重定向到除屏幕以外的另一个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &gt; filename</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /usr/bin &gt; ls-output.txt</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l ls-output.txt</span><br><span class="line">-rw-r--r-- 1 onns onns 44260 Nov  9 12:56 ls-output.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr &gt; ls-output.txt</span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l ls-output.txt</span><br><span class="line">-rw-r--r-- 1 onns onns 0 Nov  9 12:59 ls-output.txt</span><br></pre></td></tr></table></figure><p><code>ls</code>程序不把它的<code>错误信息</code>输送到<code>标准输出</code>。</p><p>而且，当我们使用<code>&gt;</code>重定向符来重定向输出结果时，目标文件总是从<code>开头被重写</code>。</p><p>快速<code>清空一个文件内容</code>或者<code>创建一个新的空文件</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; ls-output.txt</span><br></pre></td></tr></table></figure><p>使用<code>&gt;&gt;</code>操作符，将导致输出结果添加到文件内容之后，即<code>追加</code>。如果文件不存在，文件会被创建。</p><h2 id="标准错误重定向"><a class="header-anchor" href="#标准错误重定向">#</a>标准错误重定向</h2><p><code>stdin</code>、<code>stdout</code>和<code>stderr</code>在<code>shell</code>内部被称为<strong>文件描述符</strong><code>0</code>、<code>1</code>和<code>2</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /bin/usr 2&gt; ls-error.txt</span><br></pre></td></tr></table></figure><p><code>2</code>和<code>&gt;</code>要紧挨着，不然会报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr 2 &gt; ls-error.txt</span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">ls: cannot access <span class="string">'2'</span>: No such file or directory</span><br></pre></td></tr></table></figure><p>如果想要把标准输出和标准错误一起重定向，有两种方法，老方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /bin/usr &gt; ls-output.txt 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><strong>标准错误的重定向必须总是出现在标准输出重定向之后。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr &gt; ls-output.txt <span class="comment"># 错误还是会输出到标准输出</span></span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt <span class="comment"># 文件里没有东西</span></span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr &gt; ls-output.txt 2&gt;&amp;1 <span class="comment"># 正确写法</span></span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt <span class="comment"># 文件内容正常</span></span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr 2&gt;&amp;1 &gt; ls-output.txt <span class="comment"># 标准错误的重定向必须总是出现在标准输出重定向之后</span></span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt</span><br></pre></td></tr></table></figure><p>第二种方法是<code>&amp;&gt;</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l /bin/usr &amp;&gt; ls-output.txt</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ cat ls-output.txt</span><br><span class="line">ls: cannot access <span class="string">'/bin/usr'</span>: No such file or directory</span><br></pre></td></tr></table></figure><p><code>/dev/null</code>文件是系统设备，叫做<code>位存储桶</code>，它可以接受输入，并且对输入不做任何处理。<br>可以把不需要的东西输出给垃圾桶：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /bin/usr 2&gt; /dev/null</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（5）</title>
      <link href="/blog/2020/11/08/the-linux-command-line-note-5/"/>
      <url>/blog/2020/11/08/the-linux-command-line-note-5/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="命令"><a class="header-anchor" href="#命令">#</a>命令</h2><p>四种命令的形式：</p><ol><li>一个可执行程序</li><li>一个内建于<code>shell</code>自身的命令，内部命令</li><li>一个<code>shell</code>函数</li><li>一个命令别名</li></ol><h2 id="type"><a class="header-anchor" href="#type">#</a>type</h2><p><code>type</code>命令是<code>shell</code>内部命令，它会显示命令的类别：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span> <span class="built_in">command</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">type</span> <span class="built_in">type</span></span><br><span class="line"><span class="built_in">type</span> is a shell <span class="built_in">builtin</span></span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">type</span> ls</span><br><span class="line">ls is aliased to `ls --color=auto`</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">type</span> cp</span><br><span class="line">cp is /bin/cp</span><br></pre></td></tr></table></figure><h2 id="which"><a class="header-anchor" href="#which">#</a>which</h2><p><code>which</code>用来查找一个可执行程序的位置，因为一个程序可能有很多个版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> <span class="built_in">command</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">which</span> ls</span><br><span class="line">/bin/ls</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">which</span> win-lab406</span><br><span class="line">/mnt/d/weiyun/Code/bash/win-lab406</span><br></pre></td></tr></table></figure><p><strong>这个命令只对可执行程序有效，不包括内建命令和命令别名。</strong></p><p>第二个命令是我自己写的。</p><p>当我企图查找内部命令的时候，根本找不到= =，什么提示都没有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">which</span> <span class="built_in">cd</span></span><br><span class="line">onns@DESKTOP-5JJP7PL:~$</span><br></pre></td></tr></table></figure><h2 id="help"><a class="header-anchor" href="#help">#</a>help</h2><p><code>help</code>命令大概就是用来提示你这个命令怎么用的吧…</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span> <span class="built_in">command</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ <span class="built_in">help</span> <span class="built_in">cd</span></span><br><span class="line"><span class="built_in">cd</span>: <span class="built_in">cd</span> [-L|[-P [-e]] [-@]] [dir]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>出现在命令语法说明中的方括号，表示<code>可选的</code>项目。<br><code>一个竖杠字符</code>表示互斥选项。</p><blockquote><p>虽<code>cd</code>命令的帮助文档很简洁准确，但它决不是教程。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p></blockquote><p><code>--help</code>是一个很多程序支持的选项，作用是：<strong>显示命令所支持的语法和选项说明</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ mkdir --<span class="built_in">help</span></span><br><span class="line">Usage: mkdir [OPTION]... DIRECTORY...</span><br><span class="line">Create the DIRECTORY(ies), <span class="keyword">if</span> they <span class="keyword">do</span> not already exist.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">  -m, --mode=MODE   <span class="built_in">set</span> file mode (as <span class="keyword">in</span> chmod), not a=rwx - <span class="built_in">umask</span></span><br><span class="line">  -p, --parents     no error <span class="keyword">if</span> existing, make parent directories as needed</span><br><span class="line">  -v, --verbose     <span class="built_in">print</span> a message <span class="keyword">for</span> each created directory</span><br><span class="line">  -Z                   <span class="built_in">set</span> SELinux security context of each created directory</span><br><span class="line">                         to the default <span class="built_in">type</span></span><br><span class="line">      --context[=CTX]  like -Z, or <span class="keyword">if</span> CTX is specified <span class="keyword">then</span> <span class="built_in">set</span> the SELinux</span><br><span class="line">                         or SMACK security context to CTX</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">Report mkdir translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">Full documentation at: &lt;http://www.gnu.org/software/coreutils/mkdir&gt;</span><br><span class="line">or available locally via: info <span class="string">'(coreutils) mkdir invocation'</span></span><br></pre></td></tr></table></figure><h2 id="man"><a class="header-anchor" href="#man">#</a>man</h2><p><code>man</code>命令用来查看一些程序的文档手册：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man program</span><br></pre></td></tr></table></figure><p>手册文档的格式有点不同，一般地包含<code>一个标题</code>、<code>命令语法的纲要</code>、<code>命令用途的说明</code>、以及<code>每个命令选项</code>的列表和说明。<strong>手册文档通常并不包含实例。</strong></p><p>在大多<code>Linux</code>系统中，<code>man</code>使<code>less</code>工具来显示参考手册，所以当浏览文档时，你所熟<code>less</code>悉命令都能有效。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><p>参考手册有很多不同的章节：</p><table><thead><tr><th style="text-align:center">章节</th><th style="text-align:left">内容</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:left">用户命令</td></tr><tr><td style="text-align:center">2</td><td style="text-align:left">程序接口内核系统调用</td></tr><tr><td style="text-align:center">3</td><td style="text-align:left">C 库函数程序接口</td></tr><tr><td style="text-align:center">4</td><td style="text-align:left">特殊文件，比如说设备结点和驱动程序</td></tr><tr><td style="text-align:center">5</td><td style="text-align:left">文件格式</td></tr><tr><td style="text-align:center">6</td><td style="text-align:left">游戏娱乐，如屏幕保护程序</td></tr><tr><td style="text-align:center">7</td><td style="text-align:left">其他方面</td></tr><tr><td style="text-align:center">8</td><td style="text-align:left">系统管理员命令</td></tr></tbody></table><p>有时候，我们需要查看参考手册的特定章节，从而找到我们需要的信息。如果我们要查找一种文件格式，而同时它也是一个命令名时, 这种情况尤其正确。没有指定章节号，我们总是得到第一个匹配项，可能在第一章节。我们这样使用<code>man</code>命令，来指定章节号：<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man section search_term</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ man 5 passwd</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$</span><br></pre></td></tr></table></figure><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>老实说，没看懂这句话啥意思。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>看到这里的时候，我大概已经忘了<code>less</code>怎么用了，不愧是我。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>没看懂这句话。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（4）</title>
      <link href="/blog/2020/11/06/the-linux-command-line-note-4/"/>
      <url>/blog/2020/11/06/the-linux-command-line-note-4/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><h2 id="移动文件"><a class="header-anchor" href="#移动文件">#</a>移动文件</h2><p>感觉<code>mv</code>和<code>cp</code>是一样的，只是不同的在于，<code>mv</code>移动文件夹的时候不需要<code>-r</code>，自动完成的。</p><p>两种用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv item1 item2</span><br></pre></td></tr></table></figure><p>把文件或目录<code>item1</code>移动或重命名为<code>item2</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv item1... directory</span><br></pre></td></tr></table></figure><p>把一个或多个条目从一个目录移动到另一个目录中。</p><p><code>mv</code>命令的一些参数选项：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:left">长选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>-i</code></td><td style="text-align:left"><code>--interactive</code></td><td style="text-align:left">在重写一个已经存在的文件之前，提示用户确认信息。如果不指定这个选项，mv 命令会默认重写文件内容。</td></tr><tr><td style="text-align:center"><code>-u</code></td><td style="text-align:left"><code>--update</code></td><td style="text-align:left">当把文件从一个目录移动另一个目录时，只是移动不存在的文件，或者文件内容新于目标目录相对应文件的内容。</td></tr><tr><td style="text-align:center"><code>-v</code></td><td style="text-align:left"><code>--verbose</code></td><td style="text-align:left">显示详细的命令操作信息</td></tr></tbody></table><p>示例：</p><ul><li><code>mv file1 file2</code> 移动 file1 到 file2。如果 file2 存在，它的内容会被 file1 的内容重写。如果 file2 不存在，则创建 file2。这两种情况下，file1 都不再存在。</li><li><code>mv -i file1 file2</code> 除了如果 file2 存在的话，在 file2 被重写之前，用户会得到提示信息外，这个和上面的选项一样。</li><li><code>mv file1 file2 dir1</code> 移动 file1 和 file2 到目录 dir1 中。dir1 必须已经存在。</li><li><code>mv dir1 dir2</code> 如果目录 dir2 不存在，创建目录 dir2，并且移动目录 dir1 的内容到目录 dir2 中，同时删除目录 dir1。如果目录 dir2 存在，移动目录<code>dir1</code>及<code>它的内容</code>到目录<code>dir2</code>。</li></ul><h2 id="删除文件"><a class="header-anchor" href="#删除文件">#</a>删除文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm item...</span><br></pre></td></tr></table></figure><p>感觉在 linux 下第一个知道的命令大概就是<code>rm -rf /*</code>吧…</p><p>一些选项：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:left">长选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>-i</code></td><td style="text-align:left"><code>--interactive</code></td><td style="text-align:left">在删除已存在的文件前，提示用户确认信息。如果不指定这个选项，rm 会默默地删除文件</td></tr><tr><td style="text-align:center"><code>-r</code></td><td style="text-align:left"><code>--recursive</code></td><td style="text-align:left">递归地删除文件，这意味着，如果要删除一个目录，而此目录又包含子目录，那么子目录也会被删除。要删除一个目录，必须指定这个选项。</td></tr><tr><td style="text-align:center"><code>-f</code></td><td style="text-align:left"><code>--force</code></td><td style="text-align:left">忽视不存在的文件，不显示提示信息。这选项覆盖了<code>--interactive</code>选项。</td></tr><tr><td style="text-align:center"><code>-v</code></td><td style="text-align:left"><code>--verbose</code></td><td style="text-align:left">显示详细的命令操作信息</td></tr></tbody></table><p><strong>类 Unix 系统，是没有复原命令的</strong></p><p>当你使用带有通配符的<code>rm</code>命令时，除了仔细检查输入的内容外，先用<code>ls</code>命令来测试通配。<br>当你使用带有通配符的<code>rm</code>命令时，除了仔细检查输入的内容外，先用<code>ls</code>命令来测试通配。<br>当你使用带有通配符的<code>rm</code>命令时，除了仔细检查输入的内容外，先用<code>ls</code>命令来测试通配。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm *.html <span class="comment"># 删除所有html文件</span></span><br><span class="line">rm * .html <span class="comment"># 会删除目录中的所有文件，并提示没有“.html”文件</span></span><br></pre></td></tr></table></figure><h2 id="创建链接"><a class="header-anchor" href="#创建链接">#</a>创建链接</h2><p>硬链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln file link</span><br></pre></td></tr></table></figure><p>符号链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s item link</span><br></pre></td></tr></table></figure><p><code>item</code>可以是一个文件或是一个目录。</p><p><code>硬链接</code>的缺点：</p><ul><li>一个硬链接不能关联它所在文件系统之外的文件。这是说一个链接不能关联与链接本身不在同一个磁盘分区上的文件。</li><li>一个硬链接不能关联一个目录。</li></ul><p>一个硬链接和文件本身没有什么区别。</p><p>当一个硬链接被删除时，这个链接被删除，但是文件本身的内容仍然存在，直到所有关联这个文件的链接都删除掉。</p><p>当你删除一个符号链接时，只有这个链接被删除，而不是文件自身。</p><p>如果先于符号链接删除文件，这个链接<code>仍然存在</code>，但是不指向任何东西。（会被 ls 命令标红，表示<code>坏链接</code>）</p><h3 id="测试"><a class="header-anchor" href="#测试">#</a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ vi fun</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ln fun fun-hard</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls</span><br><span class="line">fun  fun-hard</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun</span><br><span class="line">-rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun-hard</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -li</span><br><span class="line">total 0</span><br><span class="line">35465847065606899 -rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun</span><br><span class="line">35465847065606899 -rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun-hard</span><br></pre></td></tr></table></figure><p>可以通过<code>-i</code>参数来展示文件索引节点的信息，可以看出这实际上是索引的同一个文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ln -s fun fun-sym</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls -l</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun</span><br><span class="line">-rw-r--r-- 2 onns onns 19 Nov  6 14:23 fun-hard</span><br><span class="line">lrwxrwxrwx 1 onns onns  3 Nov  6 14:25 fun-sym -&gt; fun</span><br></pre></td></tr></table></figure><p><code>符号链接</code>的大小是指向文件字符的大小，而不是实际大小，因为<code>fun-sym</code>指向的是<code>fun</code>，<code>fun</code>有<code>三个字符</code>，所以大小是<code>3</code>。</p><p>对于符号链接，有一点值得记住，执行的大多数文件操作是针对链接的对象，而不是链接本身。</p><p>而<code>rm</code>命令是个特例。当你删除链接的时候，<strong>删除链接本身</strong>，而不是链接的对象。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（3）</title>
      <link href="/blog/2020/11/05/the-linux-command-line-note-3/"/>
      <url>/blog/2020/11/05/the-linux-command-line-note-3/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><p>今天是晚餐后看的，看完想睡一会，困</p><a id="more"></a><h2 id="通配符"><a class="header-anchor" href="#通配符">#</a>通配符</h2><ul><li><code>*</code> 匹配任意多个字符（包括零个或一个）</li><li><code>?</code> 匹配任意一个字符（不包括零个）</li><li><code>[characters]</code> 匹配任意一个属于<code>字符集</code>中的字符</li><li><code>[!characters]</code> 匹配任意一个不是<code>字符集</code>中的字符</li><li><code>[[:class:]]</code> 匹配任意一个属于指定<code>字符类</code>中的字符</li></ul><p>字符类</p><ul><li><code>[:alnum:]</code> 匹配任意一个字母或数字</li><li><code>[:alpha:]</code> 匹配任意一个字母</li><li><code>[:digit:]</code> 匹配任意一个数字</li><li><code>[:lower:]</code> 匹配任意一个小写字母</li><li><code>[:upper:]</code> 匹配任意一个大写字母</li></ul><p>一些示例：</p><ul><li><code>*</code> 所有文件</li><li><code>g*</code> 文件名以“g”开头的文件</li><li><code>b*.txt</code> 以“b” 开头，中间有零个或任意多个字符，并以”.txt”结尾的文件</li><li><code>Data???</code> 以<code>Data</code>开头，其后紧接着<code>3</code>个字符的文件</li><li><code>[abc]*</code> 文件名以<code>a</code>、<code>b</code>或<code>c</code>开头的文件</li><li><code>BACKUP.[0-9][0-9][0-9]</code> 以<code>BACKUP.</code>开头，并紧接着<code>3</code>个数字的文件</li><li><code>[[:upper:]]*</code> 以<code>大写字母</code>开头的文件</li><li><code>[![:digit:]]*</code> <code>不以数字</code>开头的文件</li><li><code>*[[:lower:]123]</code> 文件名以<code>小写字母</code>结尾，或以<code>1</code>、<code>2</code>或<code>3</code>结尾的文件</li></ul><p>之前写正则时候的<code>[A-Z]</code>和<code>[a-z]</code>虽然都有效果，但是已经很老了，不一定会有期望的效果，可以弃用了。</p><blockquote><p>虽然它们仍然起作用，但是你必须小心地使用它们，因为它们不会产生你期望的输出结果，除非你合理地配置它们。从现在开始，你应该避免使用它们，并且用字符类来代替它们。</p></blockquote><h2 id="创建目录"><a class="header-anchor" href="#创建目录">#</a>创建目录</h2><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir directory...</span><br></pre></td></tr></table></figure><p>上面命令的<code>...</code>代表那个参数可以重复，即可以一次性创建多个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir dir1 dir2 dir3</span><br></pre></td></tr></table></figure><p>会创建三个目录。</p><h2 id="复制文件和目录"><a class="header-anchor" href="#复制文件和目录">#</a>复制文件和目录</h2><p>两种用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp item1 item2</span><br></pre></td></tr></table></figure><p>复制单个文件或目录<code>item1</code>到文件或目录<code>item2</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp item1... directory</span><br></pre></td></tr></table></figure><p>复制多个项目（文件或目录）到一个目录下。</p><p><code>cp</code>命令的一些参数选项：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:left">长选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>-a</code></td><td style="text-align:left"><code>--archive</code></td><td style="text-align:left">复制文件和目录，以及它们的属性，包括所有权和权限。通常，副本具有用户所操作文件的默认属性。</td></tr><tr><td style="text-align:center"><code>-i</code></td><td style="text-align:left"><code>--interactive</code></td><td style="text-align:left">在重写已存在文件之前，提示用户确认。如果这个选项不指定，cp 命令会默认重写文件。</td></tr><tr><td style="text-align:center"><code>-r</code></td><td style="text-align:left"><code>--recursive</code></td><td style="text-align:left">递归地复制目录及目录中的内容。当复制目录时，需要这个选项（或者-a 选项）。</td></tr><tr><td style="text-align:center"><code>-u</code></td><td style="text-align:left"><code>--update</code></td><td style="text-align:left">当把文件从一个目录复制到另一个目录时，仅复制目标目录中不存在的文件，或者是文件内容新于目标目录中已经存在的文件。</td></tr><tr><td style="text-align:center"><code>-v</code></td><td style="text-align:left"><code>--verbose</code></td><td style="text-align:left">显示详细的命令操作信息</td></tr></tbody></table><p>示例：</p><ul><li><code>cp file1 file2</code> 复制文件 file1 内容到文件 file2。如果 file2 已经存在，file2 的内容会被 file1 的内容重写。如果 file2 不存在，则会创建 file2。</li><li><code>cp -i file1 file2</code> 这条命令和上面的命令一样，除了如果文件 file2 存在的话，在文件 file2 被重写之前，会提示用户确认信息。</li><li><code>cp file1 file2 dir1</code> 复制文件 file1 和文件 file2 到目录 dir1。目录 dir1 必须存在。</li><li><code>cp dir1/* dir2</code> 使用一个通配符，在目录 dir1 中的所有文件都被复制到目录 dir2 中。dir2 必须已经存在。</li><li><code>cp -r dir1 dir2</code> 复制目录 dir1 中的内容到目录 dir2。如果目录 dir2 不存在，创建目录 dir2，操作完成后，目录 dir2 中的内容和 dir1 中的一样。如果目录 dir2 存在，则目录<code>dir1</code>和<code>目录中的内容</code>将会被复制到<code>dir2</code>中。</li></ul><p>最后一个比较难理解，做个例子自己试一下！</p><h3 id="示例"><a class="header-anchor" href="#示例">#</a>示例</h3><p>首先创建一下测试的环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ mkdir dir1</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ mkdir dir2</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ vi dir1/text1</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ vi dir2/text2</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ vi dir1/text3</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls dir1/ dir2/</span><br><span class="line">dir1/:</span><br><span class="line">text1  text3</span><br><span class="line"></span><br><span class="line">dir2/:</span><br><span class="line">text2</span><br></pre></td></tr></table></figure><p>然后执行一下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ cp -r dir1 dir2</span><br></pre></td></tr></table></figure><p>然后查看结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">onns@DESKTOP-5JJP7PL:~$ ls dir1 dir2</span><br><span class="line">dir1:</span><br><span class="line">text1  text3</span><br><span class="line"></span><br><span class="line">dir2:</span><br><span class="line">dir1  text2</span><br><span class="line">onns@DESKTOP-5JJP7PL:~$ ls dir1 dir2 dir2/dir1</span><br><span class="line">dir1:</span><br><span class="line">text1  text3</span><br><span class="line"></span><br><span class="line">dir2:</span><br><span class="line">dir1  text2</span><br><span class="line"></span><br><span class="line">dir2/dir1:</span><br><span class="line">text1  text3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报-20201105</title>
      <link href="/blog/2020/11/05/weekly-report-20201105/"/>
      <url>/blog/2020/11/05/weekly-report-20201105/</url>
      
        <content type="html"><![CDATA[<center ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();"><table><thead><tr><th style="text-align:center">2020-11-05</th><th style="text-align:center">周报#11</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h1 id="i-task-achieved-last-week"><a class="header-anchor" href="#i-task-achieved-last-week">#</a>I. Task achieved last week</h1><hr><ul><li>《MotionSqueeze: Neural Motion Feature Learning for Video Understanding》重新精读了一遍并整理了笔记。</li><li>添加了<code>MS</code>模块的网络，准确率分别提高了<code>0.6%</code>和<code>0.8%</code>。</li><li>《Temporal Interlacing Network》网络的效果不好，准确率大概降低了<code>0.8%</code>，设计的模块可能和我现有的网络有所冲突。</li></ul><h1 id="ii-reports"><a class="header-anchor" href="#ii-reports">#</a>II. Reports</h1><hr><h2 id="motionsqueeze-neural-motion-feature-learning-for-video-understanding"><a class="header-anchor" href="#motionsqueeze-neural-motion-feature-learning-for-video-understanding">#</a>MotionSqueeze: Neural Motion Feature Learning for Video Understanding</h2><p>主要的创新点是<code>MS module</code>，它把这个结构插入到了<code>ResNet</code>的网络中间，具体来说在<code>layer2</code>之后，<code>layer3</code>之前。</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201022-1.png" alt="结构图"></p></center><p>逻辑上如下图所示，道理上说得很清楚，首先进行关联性计算，就是为了判断当前的点可能会位移到什么位置，即什么位置的点最有可能是由当前的点位移过去的。</p><p>然后通过估计上的点，计算偏移。</p><p>最后计算特征转换。（这个其实我没太理解）</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201022-2.png" alt="结构图"></p></center><!-- more --><h2 id="相关工作"><a class="header-anchor" href="#相关工作">#</a>相关工作</h2><p>对于一个视频来说，动作是最显著的特征，动作模型提取得好，识别的准确率就会提高。</p><p>卷积在捕获平移等变化的模型上具备有效性，但是对相对运动的物体上建模就很难让人感到满意。</p><blockquote><p>convolution is effective in capturing translation-equivariant patterns but not in modeling relative movement of objects</p></blockquote><p>论文的主要工作放在如何学习动作特征上。</p><blockquote><p>we focus on efficient learning of motion features.</p></blockquote><p>一些现有的研究方向进展：</p><ol><li>有一些在推理部分不需要光流输入，但是训练仍然需要的。</li><li>通过计算特征的时空梯度来表征动作特征。</li><li>提出了一种卷积模块，通过在外观特征之间进行空间移动和减法运算来提取运动特征。</li><li>计算卷积神经网络中间层的特征层光流，虽然效果很好，但是需要很高的计算量，因为在网络中间层进行操作。</li></ol><p>光流估计方法：</p><ol><li>对特征图构建张量，并对张量进行回归。</li><li>通过堆叠的特征层来进行粗略的光流估计。</li></ol><p>不过这些方法都需要光流图做<code>ground-truth</code>。</p><p>最近的一些相关工作：</p><ol><li>利用连续帧的特征图之间的相关信息来代替光学图像。不过这个完整模型的大小与双流网络相当。</li><li>提出<code>correspondences proposal</code>模块来学习视频间的联系。</li></ol><h2 id="ms模块"><a class="header-anchor" href="#ms模块">#</a>MS模块</h2><p>主要分为三个步骤<code>相关性计算</code>（correlation computation）、<code>位移估计</code>（displacement estimation）和<code>特征变换</code>（feature transformation）。</p><h3 id="相关性计算"><a class="header-anchor" href="#相关性计算">#</a>相关性计算</h3><p>定义给定的某一个特征层的输入特征图$\mathbf{F}^{(t)}$和$\mathbf{F}^{(t+1)}$，$\mathbf{F}$的大小为：</p><p>$$<br>\mathbf{F} \in \mathbb{R}^{C \times H \times W}<br>$$</p><p>对于某一个位置$\mathbf{x}$和位移$\mathbf{p}$的相关性可以通过下列公式得到：</p>$$s(\mathbf{x},\mathbf{p},t)=\mathbf{F}^{(t)}_{\mathbf{x}} \cdot \mathbf{F}^{(t+1)}_{\mathbf{x}+\mathbf{p}}$$<p>$\cdot$代表<code>点积</code>。</p><p>为了保证计算效率，同时也可以从经验中得到其实一个位置的运动相对不会很大（鉴于数据集是25帧-56帧不等，其实也还是蛮大的）<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，$\mathbf{p}$有一个范围$\mathbf{p}\in[-k,k]^2$。</p><p>最终相关性结果为：</p><p>$$<br>\mathbf{S}^{(t)} \in \mathbb{R}^{H \times W \times P^2}, P=2k+1<br>$$</p><p>这个计算量与$P^2$个$1 \times 1$的卷积核计算量相当，整个视频的FLOPs为$T H W C P^2$。</p><p>在计算相关性之前，先在前面进行一次卷积操作，目的是为了对这些特征通道进行加权，进而来学习相关的视觉联系。</p><blockquote><p>We apply a convolution layer before computing correlations, which learns to weight informative feature channels for learning visual correspondences.</p></blockquote><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201102-1.png" alt="MS结构图"></p></center><h3 id="位移估计"><a class="header-anchor" href="#位移估计">#</a>位移估计</h3><p>在前面，我们已经得到了某个点，与这个点在下一帧图像中周围点的相关性张量，然后就可以找出这里面相关性最大的点做位移估计。</p><p>最简单且最有效地方法当然是直接用$\mathrm{argmax}_{\mathbf{p}}s(\mathbf{x},\mathbf{p},t)$来计算，但是这个方法是<code>不可微的</code>，所以用一个替代方法：<code>soft-argmax</code>，定义如下：</p><p>$$<br>d(\mathbf{x},t) = \sum_{\mathbf{p}} \frac{\exp(s(\mathbf{x},\mathbf{p},t))}{\sum_{\mathbf{p}’}{\exp(s(\mathbf{x},\mathbf{p}’,t))}} \mathbf{p}.<br>$$</p><p>但是这个方法会对周围的噪点比较敏感，因为他受所有的点的值影响，解决方法是：<code>kernel-soft-argmax</code>，思路是对非中心点进行抑制，所以得到的结果大部分会来自中心点，及周围相关的点：</p><p>$$<br>d(\mathbf{x},t) = \sum_{\mathbf{p}} \frac{\exp(g(\mathbf{x},\mathbf{p},t)s(\mathbf{x},\mathbf{p},t) / \tau )}{\sum_{\mathbf{p}’}{\exp( g(\mathbf{x},\mathbf{p}’,t) s(\mathbf{x},\mathbf{p}’,t) / \tau )}}  \mathbf{p},<br>$$</p><p>$$<br>g(\mathbf{x},\mathbf{p},t) = \frac{1}{\sqrt{2\pi}\sigma}\exp(\frac{\mathbf{p}-\mathrm{argmax}_{\mathbf{p}}s(\mathbf{x},\mathbf{p},t)}{\sigma^{2}})<br>$$</p><p>根据经验，令$\sigma=5$。$\tau$是一个温度因子，用来调节<code>softmax</code>的分布，随着$\tau$的下降，<code>softmax</code>表现为<code>argmax</code>，令$\tau=0.01$。</p><p>除此之外，使用相关置信度图作为辅助运动信息，求解方法是对每个位置点$\mathbf{x}$进行最大池化：</p><p>$$<br>s^{*}(\mathbf{x},t) =\max_{\mathbf{p}}s(\mathbf{x},\mathbf{p},t)<br>$$</p><p>$$<br>\mathbf{S}^* \in \mathbb{R}^{H \times W \times 1}<br>$$</p><p>论文里说位移估计最后出来有两个通道，但是我目前还不知道为什么是双通道，待到看代码应该可以知道。</p><p>然后把两通道和上面的单通道合并，得到位移估计张量：</p><p>$$<br>\mathbf{D}^{(t)} \in \mathbb{R}^{H \times W \times 3}<br>$$</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201102-1.png" alt="MS结构图"></p></center><h3 id="特征变换"><a class="header-anchor" href="#特征变换">#</a>特征变换</h3><p>用四层卷积卷，<code>depth-wise separable convolution</code>，因为上述特征都是通过两帧相减得到的，所以最后会少一个特征，论文直接令$\mathbf{M}^{(T)}=\mathbf{M}^{(T-1)}$，$\mathbf{M}^{(T)}$是上一步的$\mathbf{D}^{(T)}$卷积得到的。</p><p>经过卷积操作，也恢复成了原来的尺寸：</p><p>$$<br>\mathbf{D}^{(t)} \in \mathbb{R}^{H \times W \times C}<br>$$</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201102-1.png" alt="MS结构图"></p></center><p>最终的结果会加回到原来的特征图上，论文通过做实验发现这样效果最好：</p><p>$$<br>\mathbf{F}’^{(t)} =\mathbf{F}^{(t)} + \mathbf{M}^{(t)}<br>$$</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201102-2.png" alt="网络图"></p></center><h2 id="详细代码"><a class="header-anchor" href="#详细代码">#</a>详细代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x = self.layer1(x)                             </span><br><span class="line">x = self.layer2(x)          </span><br><span class="line"></span><br><span class="line"><span class="comment"># Flow </span></span><br><span class="line">flow_1, match_v = self.flow_computation(x, temperature=temperature)</span><br><span class="line">x = self.flow_refinement(flow_1, x, match_v)</span><br><span class="line"><span class="comment"># EndFlow </span></span><br><span class="line"></span><br><span class="line">x = self.layer3(x)                           </span><br><span class="line">x = self.layer4(x)</span><br></pre></td></tr></table></figure><p>首先是代码入口，代码就是在<code>ResNet</code>的层之间添加的，具体的是在<code>layer2</code>和<code>layer3</code>之间。一共有两个方法，一共是上面说的<code>MS</code>的计算，即<code>flow_computation</code>，这里出来的结果是上面说的$\mathbf{D}^{(t)}$，上面说过$\mathbf{D}^{(t)}$有三个通道，<code>flow_1</code>是前两个<code>光流通道</code>，<code>match_v</code>是第三个的辅助运动信息，即$\mathbf{S}^*$。第二个是<code>MS</code>的几个卷积层+最终的融合，就是从$\mathbf{D}^{(t)}$到$\mathbf{M}^{(t)}$再到$\mathbf{F}'^{(t)}$的过程，即<code>flow_refinement</code>。</p><p>然后看一下<code>flow_computation</code>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flow_computation</span><span class="params">(self, x, pos=<span class="number">2</span>, temperature=<span class="number">100</span>)</span>:</span></span><br><span class="line"></span><br><span class="line">x = self.chnl_reduction(x)</span><br><span class="line"><span class="comment"># chnl_reduction 源码如下，主要做的操作是降低通道数</span></span><br><span class="line"><span class="comment"># self.chnl_reduction = nn.Sequential(</span></span><br><span class="line"><span class="comment">#     nn.Conv2d(128*block.expansion, 64, kernel_size=1, stride=1, padding=0, bias=False),</span></span><br><span class="line"><span class="comment">#     nn.BatchNorm2d(64),</span></span><br><span class="line"><span class="comment">#     nn.ReLU(inplace=True)</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">size = x.size()               </span><br><span class="line">x = x.view((<span class="number">-1</span>, self.num_segments) + size[<span class="number">1</span>:])        <span class="comment"># N T C H W</span></span><br><span class="line">x = x.permute(<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>).contiguous() <span class="comment"># B C T H W   </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># match to flow            </span></span><br><span class="line">k = <span class="number">1</span>            </span><br><span class="line">temperature = temperature                    </span><br><span class="line">b,c,t,h,w = x.size()            </span><br><span class="line">t = t<span class="number">-1</span>         </span><br><span class="line"></span><br><span class="line">x_pre = x[:,:,:<span class="number">-1</span>].permute(<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>).contiguous().view(<span class="number">-1</span>,c,h,w)</span><br><span class="line">x_post = x[:,:,<span class="number">1</span>:].permute(<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>).contiguous().view(<span class="number">-1</span>,c,h,w)</span><br><span class="line"></span><br><span class="line">match = self.matching_layer(x_pre, x_post)    <span class="comment"># (B*T-1*group, H*W, H*W)          </span></span><br><span class="line">u, v, confidence = self.match_to_flow_soft(match, k, h, w, temperature)</span><br><span class="line">flow = tr.cat([u,v], dim=<span class="number">1</span>).view(<span class="number">-1</span>, <span class="number">2</span>*k, h, w)  <span class="comment">#  (b, 2, h, w)            </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># backward flow</span></span><br><span class="line"><span class="comment">#             match2 = self.matching_layer(x_post, x_pre)</span></span><br><span class="line"><span class="comment">#             u_2, v_2, confidence_2 = self.match_to_flow_soft(match2, k, h, w,temperature)       </span></span><br><span class="line"><span class="comment">#             flow_2 = tr.cat([u_2,v_2],dim=1).view(-1,2, h, w)   </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> flow, confidence</span><br></pre></td></tr></table></figure><p>首先进行了降低通道数的操作，然后对于不同 $t$ 时刻的特征图，进行<code>matching_layer</code>操作，得到<code>match</code>张量，对应论文中的$\mathbf{S}^{(t)}$，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">feature1 = self.L2normalize(feature1)</span><br><span class="line">feature2 = self.L2normalize(feature2)</span><br><span class="line">b, c, h1, w1 = feature1.size()</span><br><span class="line">b, c, h2, w2 = feature2.size()</span><br><span class="line">corr = self.correlation_sampler(feature1, feature2)</span><br><span class="line">corr = corr.view(b, self.patch * self.patch, h1* w1) <span class="comment"># Channel : target // Spatial grid : source</span></span><br><span class="line">corr = self.relu(corr)</span><br><span class="line"><span class="keyword">return</span> corr</span><br></pre></td></tr></table></figure><p>直接写了一个<code>forward</code>方法，<code>correlation_sampler</code>调用的是一个第三方的库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.correlation_sampler = SpatialCorrelationSampler(ks, patch, stride, pad, patch_dilation)</span><br></pre></td></tr></table></figure><p>总得来说就是求相关性的。</p><p>然后是<code>match_to_flow_soft</code>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">match_to_flow_soft</span><span class="params">(self, match, k, h,w, temperature=<span class="number">1</span>, mode=<span class="string">'softmax'</span>)</span>:</span>        </span><br><span class="line">b, c , s = match.size()     </span><br><span class="line">idx = tr.arange(h*w, dtype=tr.float32).to(<span class="string">'cuda'</span>)</span><br><span class="line">idx_x = idx % w</span><br><span class="line">idx_x = idx_x.repeat(b,k,<span class="number">1</span>).to(<span class="string">'cuda'</span>)</span><br><span class="line">idx_y = tr.floor(idx / w)   </span><br><span class="line">idx_y = idx_y.repeat(b,k,<span class="number">1</span>).to(<span class="string">'cuda'</span>)</span><br><span class="line"></span><br><span class="line">soft_idx_x = idx_x[:,:<span class="number">1</span>]</span><br><span class="line">soft_idx_y = idx_y[:,:<span class="number">1</span>]</span><br><span class="line">displacement = (self.patch<span class="number">-1</span>)/<span class="number">2</span></span><br><span class="line"></span><br><span class="line">topk_value, topk_idx = tr.topk(match, k, dim=<span class="number">1</span>)    <span class="comment"># (B*T-1, k, H*W)</span></span><br><span class="line">topk_value = topk_value.view(<span class="number">-1</span>,k,h,w)</span><br><span class="line"></span><br><span class="line">match = self.apply_gaussian_kernel(match, h, w, self.patch, sigma=<span class="number">5</span>)</span><br><span class="line">match = match*temperature</span><br><span class="line">match_pre = self.soft_argmax(match)</span><br><span class="line">smax = match_pre           </span><br><span class="line">smax = smax.view(b,self.patch,self.patch,h,w)</span><br><span class="line">x_kernel = tr.arange(-displacement*self.patch_dilation, displacement*self.patch_dilation+<span class="number">1</span>, step=self.patch_dilation, dtype=tr.float).to(<span class="string">'cuda'</span>)</span><br><span class="line">y_kernel = tr.arange(-displacement*self.patch_dilation, displacement*self.patch_dilation+<span class="number">1</span>, step=self.patch_dilation, dtype=tr.float).to(<span class="string">'cuda'</span>)</span><br><span class="line">x_mult = x_kernel.expand(b,self.patch).view(b,self.patch,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">y_mult = y_kernel.expand(b,self.patch).view(b,self.patch,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">smax_x = smax.sum(dim=<span class="number">1</span>, keepdim=<span class="literal">False</span>) <span class="comment">#(b,w=k,h,w)</span></span><br><span class="line">smax_y = smax.sum(dim=<span class="number">2</span>, keepdim=<span class="literal">False</span>) <span class="comment">#(b,h=k,h,w)</span></span><br><span class="line">flow_x = (smax_x*x_mult).sum(dim=<span class="number">1</span>, keepdim=<span class="literal">True</span>).view(<span class="number">-1</span>,<span class="number">1</span>,h*w) <span class="comment"># (b,1,h,w)</span></span><br><span class="line">flow_y = (smax_y*y_mult).sum(dim=<span class="number">1</span>, keepdim=<span class="literal">True</span>).view(<span class="number">-1</span>,<span class="number">1</span>,h*w) <span class="comment"># (b,1,h,w)    </span></span><br><span class="line"></span><br><span class="line">flow_x = (flow_x / (self.patch_dilation * displacement))</span><br><span class="line">flow_y = (flow_y / (self.patch_dilation * displacement))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> flow_x, flow_y, topk_value</span><br></pre></td></tr></table></figure><p>这里就可以解释上面的疑问了，为什么匹配出来的通道数是<code>2</code>，就是和光流一样的原因，一个是<code>x</code>方向上的，一个是<code>y</code>方向上的。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>这第二句话是我自己加的，论文里只是为了保证计算效率。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（2）</title>
      <link href="/blog/2020/11/03/the-linux-command-line-note-2/"/>
      <url>/blog/2020/11/03/the-linux-command-line-note-2/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><p>睡前每天看一点～打卡！</p><a id="more"></a><p><code>ls</code>的参数：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:left">长选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>-r</code></td><td style="text-align:left"><code>--reverse</code></td><td style="text-align:left">逆序输出</td></tr><tr><td style="text-align:center"><code>-t</code></td><td style="text-align:left"></td><td style="text-align:left">按照修改时间来排序</td></tr><tr><td style="text-align:center"><code>-l</code></td><td style="text-align:left"></td><td style="text-align:left">以长格式显示结果</td></tr></tbody></table><p>感觉<code>-l</code>参数是最常用的了，会输出一些有用的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">onns@liupans-MacBook-Air blog % ls -l</span><br><span class="line">total 12304</span><br><span class="line">-rw-r--r--    1 onns  staff     2586 Aug 11 20:20 _config.yml</span><br><span class="line">-rw-r--r--    1 onns  staff  6097875 Nov  2 11:15 db.json</span><br><span class="line">drwxr-xr-x  450 onns  staff    14400 Oct 17 13:47 node_modules</span><br><span class="line">-rw-r--r--    1 onns  staff   189013 Oct 17 13:47 package-lock.json</span><br><span class="line">-rw-r--r--    1 onns  staff      833 Oct 17 13:47 package.json</span><br><span class="line">drwxr-xr-x   26 onns  staff      832 Oct 17 14:01 public</span><br><span class="line">drwxr-xr-x    5 onns  staff      160 Jun 14 20:08 scaffolds</span><br><span class="line">drwxr-xr-x   13 onns  staff      416 Aug 10 00:29 <span class="built_in">source</span></span><br><span class="line">drwxr-xr-x    4 onns  staff      128 Aug 11 19:24 themes</span><br></pre></td></tr></table></figure><p><code>-rw-r--r--</code>表示对文件的权限，第一个字符代表<code>文件类型</code>：</p><ul><li><code>-</code>代表是一个普通文件。</li><li><code>d</code>代表是一个目录。</li></ul><p>后面的是权限字符，后面会讲。</p><p><code>1</code> 代表<code>硬链接</code>的数目。</p><p><code>onns</code>代表文件所有者的用户名。</p><p><code>staff</code>代表所属用户组的组名。</p><p><code>2586</code>是以字节数表示的文件大小。</p><p>最后是<code>上次修改时间</code>和<code>文件名</code>。</p><hr><p><code>file</code>命令用来查看文件的类型：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onns@liupans-MacBook-Air image % file draw-20200207.jpg</span><br><span class="line">draw-20200207.jpg: JPEG image data, Exif standard: [TIFF image data, big-endian, direntries=7, orientation=upper-left, xresolution=98, yresolution=106, resolutionunit=2, software=Adobe Photoshop 21.0 (Macintosh), datetime=2020:02:07 19:32:03], baseline, precision 8, 3508x2480, components 3</span><br></pre></td></tr></table></figure><hr><p><code>less</code>命令用来浏览文本文件，是<code>more</code>命令的升级版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less filename</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">Page UP or b</td><td style="text-align:center">向上翻滚一页</td></tr><tr><td style="text-align:center">Page Down or space</td><td style="text-align:center">向下翻滚一页</td></tr><tr><td style="text-align:center">UP Arrow</td><td style="text-align:center">向上翻滚一行</td></tr><tr><td style="text-align:center">Down Arrow</td><td style="text-align:center">向下翻滚一行</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center">移动到最后一行</td></tr><tr><td style="text-align:center">1G or g</td><td style="text-align:center">移动到开头一行</td></tr><tr><td style="text-align:center">/charaters</td><td style="text-align:center">向前查找指定的字符串</td></tr><tr><td style="text-align:center">n</td><td style="text-align:center">向前查找下一个出现的字符串，这个字符串是之前所指定查找的</td></tr><tr><td style="text-align:center">h</td><td style="text-align:center">显示帮助屏幕</td></tr><tr><td style="text-align:center">q</td><td style="text-align:center">退出 less 程序</td></tr></tbody></table><hr><p>在 <code>ls -l</code>的时候，如果最前面的字符不是<code>-</code>也不是<code>d</code>而是<code>l</code>，代表是一个<code>符号链接</code>。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作计划-20201102</title>
      <link href="/blog/2020/11/02/weekly-plan-20201102/"/>
      <url>/blog/2020/11/02/weekly-plan-20201102/</url>
      
        <content type="html"><![CDATA[<center ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();"><table><thead><tr><th style="text-align:center">2020-11-02</th><th style="text-align:center">工作计划#01</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><ol><li>《MotionSqueeze: Neural Motion Feature Learning for Video Understanding》这篇论文，提出的结构应用到我现在的方法上有一定的提升，大概<code>0.6%</code>，之前已经精读过论文。准备花一天时间去结合论文，把它的思路，以及相关的代码理解。同时对于这个实验的相关实验数据要进行整理。<br><strong>预计所需时间</strong>：<code>1-2</code>天</li><li>《Temporal Interlacing Network》已经总体上读了一遍，实验在跑，如果效果比较好的话，需要花费时间来精读一遍文章，同时阅读代码，并且整理实验结果，如果实验不好，可能会尝试在别的思路上改进自己的网络。<br>相关的笔记还没整理，可能要抽个时间把笔记整理一下，关于这篇论文的。<br><strong>预计所需时间</strong>：<code>1</code>天</li><li>三方协议可能需要填写和寄出，相关的事宜需要半天的时间来整理。<br><strong>预计所需时间</strong>：<code>0.5</code>天</li><li>准备开始着手构建数据集，要归纳一下我们所需要的识别的几大类，以及相应的拍摄角度等，同时要撰写拍摄的规范文档，以及拍摄的顺序，尽量在最短的时间用最高效的办法拍出数据。<br><strong>预计所需时间</strong>：<code>2-3</code>天</li><li>有一个基于我目前的所有改进的网络正在训练，相关的结果也会在本周出来，需要花费时间进行整理。<br><strong>预计所需时间</strong>：<code>1</code>天</li><li>目前的所有工作都是基于数据集，没有办法进行演示，到时候真的需要应用还需要单独写一些代码。<br><strong>预计所需时间</strong>：<code>3-5</code>天</li></ol><p>以上是我最近计划进行的任务，可能一周内无法全部完成。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TIN代码修改</title>
      <link href="/blog/2020/11/01/temporal-interlacing-network-code-debug/"/>
      <url>/blog/2020/11/01/temporal-interlacing-network-code-debug/</url>
      
        <content type="html"><![CDATA[<h2 id="tin-编译-cuda-shift-失效"><a class="header-anchor" href="#tin-编译-cuda-shift-失效">#</a>TIN 编译 cuda_shift 失效</h2><p>提示说：</p><blockquote><p>shift_cuda.cpp:18:26: error: ‘THCState_getCurrentStream’ was not declared in this scope</p></blockquote><a id="more"></a><p>解决方法按照就是把：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ShiftDataCudaForward(THCState_getCurrentStream(state),</span><br><span class="line">data.data&lt;<span class="keyword">float</span>&gt;(),</span><br><span class="line">shift.data&lt;<span class="keyword">int</span>&gt;(),</span><br><span class="line">batch_size,</span><br><span class="line">channels,</span><br><span class="line">tsize,</span><br><span class="line">hwsize,</span><br><span class="line">groupsize,</span><br><span class="line">out.data&lt;<span class="keyword">float</span>&gt;());</span><br></pre></td></tr></table></figure><p>替换成：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ShiftDataCudaForward(at::cuda::getCurrentCUDAStream(),</span><br><span class="line">data.data&lt;<span class="keyword">float</span>&gt;(),</span><br><span class="line">shift.data&lt;<span class="keyword">int</span>&gt;(),</span><br><span class="line">batch_size,</span><br><span class="line">channels,</span><br><span class="line">tsize,</span><br><span class="line">hwsize,</span><br><span class="line">groupsize,</span><br><span class="line">out.data&lt;<span class="keyword">float</span>&gt;());</span><br></pre></td></tr></table></figure><h3 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h3><ul><li><a href="https://blog.csdn.net/qq_31833411/article/details/109064222" target="_blank" rel="noopener">Pytorch1.5 升级 1.6 CPP 代码修改（RuntimeError: Error compiling objects for extension）</a></li></ul><h2 id="autograd-报错"><a class="header-anchor" href="#autograd-报错">#</a>autograd 报错</h2><p>提示说：</p><blockquote><p>RuntimeError: Legacy autograd function with non-static forward method is deprecated. Please use new-style autograd function with static forward method. (Example: <a href="https://pytorch.org/docs/stable/autograd.html#torch.autograd.Function" target="_blank" rel="noopener">https://pytorch.org/docs/stable/autograd.html#torch.autograd.Function</a>)</p></blockquote><p>参照<a href="https://pytorch.org/docs/stable/notes/extending.html" target="_blank" rel="noopener">官方文档</a>，在<code>rtc_wrap.py</code>文件中的<code>forward</code>和<code>backward</code>方法前添加<code>@staticmethod</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Code for "Temporal Interlacing Network"</span></span><br><span class="line"><span class="comment"># Hao Shao, Shengju Qian, Yu Liu</span></span><br><span class="line"><span class="comment"># shaoh19@mails.tsinghua.edu.cn, sjqian@cse.cuhk.edu.hk, yuliu@ee.cuhk.edu.hk</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cudashift <span class="keyword">as</span> backend</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShiftFeatureFunc</span><span class="params">(Function)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">super(ShiftFeatureFunc, self).__init__()</span><br><span class="line"></span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, data, shift)</span>:</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> data.is_cuda <span class="keyword">or</span> <span class="keyword">not</span> shift.is_cuda:</span><br><span class="line"><span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> data.requires_grad:</span><br><span class="line">self.save_for_backward(shift)</span><br><span class="line"></span><br><span class="line">out = torch.zeros_like(data)</span><br><span class="line">backend.shift_featuremap_cuda_forward(data, shift, out)</span><br><span class="line"><span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backward</span><span class="params">(self, grad_output)</span>:</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> grad_output.is_cuda:</span><br><span class="line"><span class="keyword">raise</span> NotImplementedError</span><br><span class="line">shift = self.saved_tensors[<span class="number">0</span>]</span><br><span class="line">data_grad_input = grad_output.new(*grad_output.size()).zero_()</span><br><span class="line">shift_grad_input = shift.new(*shift.size()).zero_()</span><br><span class="line">backend.shift_featuremap_cuda_backward(grad_output, shift, data_grad_input)</span><br><span class="line"><span class="keyword">return</span> data_grad_input, shift_grad_input</span><br></pre></td></tr></table></figure><p>然后在<code>temporal_interlace.py</code>文件中的<code>linear_sampler</code>方法，替换如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">linear_sampler</span><span class="params">(data, bias)</span>:</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">data: N * T * C * H * W</span></span><br><span class="line"><span class="string">bias: N * T * Groups</span></span><br><span class="line"><span class="string">weight: N * T</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">N, T, C, H, W = data.shape</span><br><span class="line">bias_0 = torch.floor(bias).int()</span><br><span class="line">bias_1 = bias_0 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># N * T * C * H * W</span></span><br><span class="line">sf1 = ShiftFeatureFunc.apply</span><br><span class="line">sf2 = ShiftFeatureFunc.apply</span><br><span class="line"></span><br><span class="line">data = data.view(N, T, C, H*W).contiguous()</span><br><span class="line">data_0 = sf1(data, bias_0)</span><br><span class="line">data_1 = sf2(data, bias_1)</span><br><span class="line"></span><br><span class="line">w_0 = <span class="number">1</span> - (bias - bias_0.float())</span><br><span class="line">w_1 = <span class="number">1</span> - w_0</span><br><span class="line"></span><br><span class="line">groupsize = bias.shape[<span class="number">1</span>]</span><br><span class="line">w_0 = w_0[:, :, <span class="literal">None</span>].repeat(<span class="number">1</span>, <span class="number">1</span>, C // groupsize )</span><br><span class="line">w_0 = w_0.view(w_0.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">w_1 = w_1[:, :, <span class="literal">None</span>].repeat(<span class="number">1</span>, <span class="number">1</span>, C // groupsize )</span><br><span class="line">w_1 = w_1.view(w_1.size(<span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">w_0 = w_0[:,<span class="literal">None</span>,:,<span class="literal">None</span>]</span><br><span class="line">w_1 = w_1[:,<span class="literal">None</span>,:,<span class="literal">None</span>]</span><br><span class="line"></span><br><span class="line">out = w_0 * data_0 + w_1 * data_1</span><br><span class="line">out = out.view(N, T, C, H, W)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> out</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h3><ul><li><a href="https://pytorch.org/docs/stable/notes/extending.html" target="_blank" rel="noopener">EXTENDING PYTORCH</a></li></ul><p>错误解决，效果待测试。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> tin </tag>
            
            <tag> pytorch </tag>
            
            <tag> pytorch 1.6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给学弟妹的建议</title>
      <link href="/blog/2020/10/30/suggestion/"/>
      <url>/blog/2020/10/30/suggestion/</url>
      
        <content type="html"><![CDATA[<p><span ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();">—</span></p><h2 id="建议"><a class="header-anchor" href="#建议">#</a>建议</h2><a id="more"></a><p>首先，你要明白你自己所喜欢的，或者说如果必须要选择一个的话：</p><ol><li>算法</li><li>继续深造</li><li>开发</li><li>其它岗位（产品、技术性要求不高的其它行业）</li></ol><p>因为我可能心里更倾向于做开发，因为相对于其它的方向来说更加适合我，所以后续以此为例来说明。</p><p>开发也会分成很多个岗位，最常见的四个岗位是<code>前端</code> <code>后端</code> <code>客户端</code> <code>测试</code></p><p>首先可能你要跟踪一下你所期望的工作岗位，它的对应要求是什么，这都有一个<strong>延迟时间</strong>的概念，比如：</p><ol><li><p>你不是毕业了才开始找工作，在你研二结束的时候，秋招就已经开始了</p></li><li><p>有些知识和技能是需要时间沉淀的，不是突击就可以搞定的，比如学习一门语言，可能一年才能入门，而你如果想要找到对应的工作，以下几点一定要有一点满足：</p><ol><li><p>在你硕士科研或者项目工作中有类似的可以去打磨技能的场景，比如写求两个数的中值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> mid = (min + max) / <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>但你有没有想过，这个数字可能会超过你当前可以存储的范围，溢出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> mid = min + (max - min) / <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>再往下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> mid = min + ((max - min) &gt;&gt; <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>理论知识真的要在实际的场景中，才会发现自己存在的一些问题，并积累相关经验</p></li><li><p>如果可以，合理安排自己的科研时间，在可能的情况下去参加实习，提早了解相关要求，而且实习门槛低，而且转正流程方便，大部分情况下都可以转正，而且给了自己一个反悔的机会（你永远不知道你未来要去的公司环境是否符合你的预期，但你可以选择去提前了解，再决定去不去，而不是后悔当初选择来）</p></li><li><p>身边或者实验室有一些横向的项目，积极主动的去参加。这些都是可以提升你的经验的组成部分</p></li></ol><p>总得来说，你所学的是<strong>螺丝刀的使用基本技巧</strong>，你面试的时候的问题可能会是<strong>螺丝的设计原理，如何设计螺纹间距</strong>，你真正的工作是<strong>拧螺丝</strong>，是有一个不平衡的，要自己去调整。</p></li></ol><p>合理的利用时间去完善这些。</p><p>剩下的时间，也就是主要的时间，是要交给学业的，这里，首先最重要的几点建议：</p><ol><li>如果不是特别喜欢，真的想去听某节课，建议多问问学长学姐，什么课比较好拿分数，什么课要求很高但没有什么意义，避免“踩雷”，有些课要求会很高不说，所学到的知识可能很大程度上没有达到你的期望。</li><li>早点确定自己的研究课题，这个课题可能是导师的，也可能是自己特别感兴趣的，后者就一定要先和导师沟通，说服老师同意你的观点。越早确定课题，才能在这个课题上走得更远，也更容易出成果。入门一个方向是十分难的，切换的成本十分高昂（亲身经历告诉大家）。</li><li>合理的作息规划，在大多数情况下，实验室的学习效率会更高，不要骗自己说在宿舍也能学习，如果可以，还是要多来实验室。</li><li>最好不要自己“一个人”科研，如果可以，尽可能地几个人共同的推进一个科研项目，因为每个人的不擅长领域是不同的，合作有利于互补。</li></ol><h2 id="毕业相关"><a class="header-anchor" href="#毕业相关">#</a>毕业相关</h2><ol><li>学术讲座最好挑几场拍一下照片，或者结束抑或是听的途中记录一下，到时候要写 1000-2000 字的讲座心得，可是我已经忘记大部分讲座的内容了。。。</li><li>毕业材料，如果不涉及到抄袭的问题，可以作为实验室内部的参考留下来，作为一种实验室的<s>传承</s>。</li></ol>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报-20201029</title>
      <link href="/blog/2020/10/29/weekly-report-20201029/"/>
      <url>/blog/2020/10/29/weekly-report-20201029/</url>
      
        <content type="html"><![CDATA[<center ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();"><table><thead><tr><th style="text-align:center">2020-10-29</th><th style="text-align:center">周报#10</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h1 id="i-task-achieved-last-week"><a class="header-anchor" href="#i-task-achieved-last-week">#</a>I. Task achieved last week</h1><hr><ul><li>《TAM: Temporal Adaptive Module for Video Recognition》</li><li>验证了<code>TAM</code>，方法不具有普适性，只能在它自己的网络里运行，并且我认为他的效果来源大部分可能源自超参数的修改。</li><li>改进了<code>PAN</code>，最终准确率提高了<code>0.3%</code>，考虑到在<code>PAN Lite</code>降低了<code>0.3%</code>的情况下总体准确率仍然可以提高，我觉得算是一个改进点。</li></ul><h1 id="ii-reports"><a class="header-anchor" href="#ii-reports">#</a>II. Reports</h1><hr><h2 id="tam-temporal-adaptive-module-for-video-recognition"><a class="header-anchor" href="#tam-temporal-adaptive-module-for-video-recognition">#</a>TAM: Temporal Adaptive Module for Video Recognition</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/150147794" target="_blank" rel="noopener">针对动作识别的时序自适应模块–TAM - 知乎</a></li><li><a href="https://zhuanlan.zhihu.com/p/149429010" target="_blank" rel="noopener">TAM: 针对动作识别的时序自适应模块 - 知乎</a></li><li><a href="https://zhuanlan.zhihu.com/p/147657511" target="_blank" rel="noopener">[ECCV’20] TAM - 知乎</a></li><li><a href="https://zhuanlan.zhihu.com/p/141773949" target="_blank" rel="noopener">南大+商汤 TAM 时间自适应模块 - 知乎</a></li><li><a href="https://blog.csdn.net/calvinpaean/article/details/106146813" target="_blank" rel="noopener">TAM: Temporal Adaptive Module for Video Recognition论文学习_calvinpaean的博客-CSDN博客</a></li><li><a href="https://arxiv.org/pdf/2005.06803.pdf" target="_blank" rel="noopener">2005.06803.pdf</a></li><li><a href="https://arxiv.org/pdf/2005.06803v1.pdf" target="_blank" rel="noopener">2005.06803v1.pdf</a></li><li><a href="https://blog.csdn.net/irving512/article/details/106471189/" target="_blank" rel="noopener">论文浏览(1) TAM: Temporal Adaptive Module for Video Recognition_清欢-CSDN博客</a></li><li><a href="https://github.com/liu-zhy/temporal-adaptive-module" target="_blank" rel="noopener">liu-zhy/temporal-adaptive-module: TAM: Temporal Adaptive Module for Video Recognition</a></li><li><a href="https://arxiv.org/abs/2005.06803" target="_blank" rel="noopener">[2005.06803] TAM: Temporal Adaptive Module for Video Recognition</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报-20201022</title>
      <link href="/blog/2020/10/22/weekly-report-20201022/"/>
      <url>/blog/2020/10/22/weekly-report-20201022/</url>
      
        <content type="html"><![CDATA[<center ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();"><table><thead><tr><th style="text-align:center">2020-10-22</th><th style="text-align:center">周报#09</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h1 id="i-task-achieved-last-week"><a class="header-anchor" href="#i-task-achieved-last-week">#</a>I. Task achieved last week</h1><hr><ul><li>《STM: SpatioTemporal and Motion Encoding for Action Recognition》</li><li>《MotionSqueeze: Neural Motion Feature Learning for Video Understanding》</li></ul><h1 id="ii-reports"><a class="header-anchor" href="#ii-reports">#</a>II. Reports</h1><hr><h2 id="stm-spatiotemporal-and-motion-encoding-for-action-recognition"><a class="header-anchor" href="#stm-spatiotemporal-and-motion-encoding-for-action-recognition">#</a>STM: SpatioTemporal and Motion Encoding for Action Recognition</h2><p>这个是TEA的灵感来源，感觉变化不是很大，但是效果不错，而且实验做的足够多。</p><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://blog.csdn.net/irving512/article/details/107085867/" target="_blank" rel="noopener">论文浏览(14) STM: SpatioTemporal and Motion Encoding for Action Recognition</a></li><li><a href="https://zhuanlan.zhihu.com/p/85242145" target="_blank" rel="noopener">STM: SpatioTemporal and Motion Encoding</a></li><li><a href="https://zhuanlan.zhihu.com/p/87048160" target="_blank" rel="noopener">ICCV2019 行为识别新文 STM</a></li><li><a href="https://mna12478.github.io/action_16/" target="_blank" rel="noopener">STM SpatioTemporal and Motion Encoding for Action Recognition (ICCV 2019)</a></li><li><a href="https://arxiv.org/pdf/1908.02486.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1908.02486.pdf</a></li></ul><h2 id="motionsqueeze-neural-motion-feature-learning-for-video-understanding"><a class="header-anchor" href="#motionsqueeze-neural-motion-feature-learning-for-video-understanding">#</a>MotionSqueeze: Neural Motion Feature Learning for Video Understanding</h2><p>主要的创新点是<code>MS module</code>，它把这个结构插入到了<code>ResNet</code>的网络中间，具体来说在<code>layer2</code>之后，<code>layer3</code>之前。</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201022-1.png" alt="结构图"></p></center><p>逻辑上如下图所示，道理上说得很清楚，首先进行关联性计算，就是为了判断当前的点可能会位移到什么位置，即什么位置的点最有可能是由当前的点位移过去的。</p><p>然后通过估计上的点，计算偏移。</p><p>最后计算特征转换。（这个其实我没太理解）</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201022-2.png" alt="结构图"></p></center><h1 id="iii-plan-for-this-week"><a class="header-anchor" href="#iii-plan-for-this-week">#</a>III. Plan for this week</h1><hr><ul><li>可能需要和老师沟通一下，确定一下接下来的研究计划。</li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MotionSqueeze Neural Motion FeatureLearning for Video Understanding</title>
      <link href="/blog/2020/10/20/motionsqueeze-neural-motion-feature-learning-for-video-understanding/"/>
      <url>/blog/2020/10/20/motionsqueeze-neural-motion-feature-learning-for-video-understanding/</url>
      
        <content type="html"><![CDATA[<h2 id="motionsqueeze-neural-motion-feature-learning-for-video-understanding"><a class="header-anchor" href="#motionsqueeze-neural-motion-feature-learning-for-video-understanding">#</a>MotionSqueeze: Neural Motion Feature Learning for Video Understanding</h2><p>主要的创新点是<code>MS module</code>，它把这个结构插入到了<code>ResNet</code>的网络中间，具体来说在<code>layer2</code>之后，<code>layer3</code>之前。</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201022-1.png" alt="结构图"></p></center><p>逻辑上如下图所示，道理上说得很清楚，首先进行关联性计算，就是为了判断当前的点可能会位移到什么位置，即什么位置的点最有可能是由当前的点位移过去的。</p><p>然后通过估计上的点，计算偏移。</p><p>最后计算特征转换。（这个其实我没太理解）</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201022-2.png" alt="结构图"></p></center><a id="more"></a><h2 id="相关工作"><a class="header-anchor" href="#相关工作">#</a>相关工作</h2><p>对于一个视频来说，动作是最显著的特征，动作模型提取得好，识别的准确率就会提高。</p><p>卷积在捕获平移等变化的模型上具备有效性，但是对相对运动的物体上建模就很难让人感到满意。</p><blockquote><p>convolution is effective in capturing translation-equivariant patterns but not in modeling relative movement of objects</p></blockquote><p>论文的主要工作放在如何学习动作特征上。</p><blockquote><p>we focus on efficient learning of motion features.</p></blockquote><p>一些现有的研究方向进展：</p><ol><li>有一些在推理部分不需要光流输入，但是训练仍然需要的。</li><li>通过计算特征的时空梯度来表征动作特征。</li><li>提出了一种卷积模块，通过在外观特征之间进行空间移动和减法运算来提取运动特征。</li><li>计算卷积神经网络中间层的特征层光流，虽然效果很好，但是需要很高的计算量，因为在网络中间层进行操作。</li></ol><p>光流估计方法：</p><ol><li>对特征图构建张量，并对张量进行回归。</li><li>通过堆叠的特征层来进行粗略的光流估计。</li></ol><p>不过这些方法都需要光流图做<code>ground-truth</code>。</p><p>最近的一些相关工作：</p><ol><li>利用连续帧的特征图之间的相关信息来代替光学图像。不过这个完整模型的大小与双流网络相当。</li><li>提出<code>correspondences proposal</code>模块来学习视频间的联系。</li></ol><h2 id="ms模块"><a class="header-anchor" href="#ms模块">#</a>MS模块</h2><p>主要分为三个步骤<code>相关性计算</code>（correlation computation）、<code>位移估计</code>（displacement estimation）和<code>特征变换</code>（feature transformation）。</p><h3 id="相关性计算"><a class="header-anchor" href="#相关性计算">#</a>相关性计算</h3><p>定义给定的某一个特征层的输入特征图$\mathbf{F}^{(t)}$和$\mathbf{F}^{(t+1)}$，$\mathbf{F}$的大小为：</p><p>$$<br>\mathbf{F} \in \mathbb{R}^{C \times H \times W}<br>$$</p><p>对于某一个位置$\mathbf{x}$和位移$\mathbf{p}$的相关性可以通过下列公式得到：</p>$$s(\mathbf{x},\mathbf{p},t)=\mathbf{F}^{(t)}_{\mathbf{x}} \cdot \mathbf{F}^{(t+1)}_{\mathbf{x}+\mathbf{p}}$$<p>$\cdot$代表<code>点积</code>。</p><p>为了保证计算效率，同时也可以从经验中得到其实一个位置的运动相对不会很大（鉴于数据集是25帧-56帧不等，其实也还是蛮大的）<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，$\mathbf{p}$有一个范围$\mathbf{p}\in[-k,k]^2$。</p><p>最终相关性结果为：</p><p>$$<br>\mathbf{S}^{(t)} \in \mathbb{R}^{H \times W \times P^2}, P=2k+1<br>$$</p><p>这个计算量与$P^2$个$1 \times 1$的卷积核计算量相当，整个视频的FLOPs为$T H W C P^2$。</p><p>在计算相关性之前，先在前面进行一次卷积操作，目的是为了对这些特征通道进行加权，进而来学习相关的视觉联系。</p><blockquote><p>We apply a convolution layer before computing correlations, which learns to weight informative feature channels for learning visual correspondences.</p></blockquote><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201102-1.png" alt="MS结构图"></p></center><h3 id="位移估计"><a class="header-anchor" href="#位移估计">#</a>位移估计</h3><p>在前面，我们已经得到了某个点，与这个点在下一帧图像中周围点的相关性张量，然后就可以找出这里面相关性最大的点做位移估计。</p><p>最简单且最有效地方法当然是直接用$\mathrm{argmax}_{\mathbf{p}}s(\mathbf{x},\mathbf{p},t)$来计算，但是这个方法是<code>不可微的</code>，所以用一个替代方法：<code>soft-argmax</code>，定义如下：</p><p>$$<br>d(\mathbf{x},t) = \sum_{\mathbf{p}} \frac{\exp(s(\mathbf{x},\mathbf{p},t))}{\sum_{\mathbf{p}’}{\exp(s(\mathbf{x},\mathbf{p}’,t))}} \mathbf{p}.<br>$$</p><p>但是这个方法会对周围的噪点比较敏感，因为他受所有的点的值影响，解决方法是：<code>kernel-soft-argmax</code>，思路是对非中心点进行抑制，所以得到的结果大部分会来自中心点，及周围相关的点：</p><p>$$<br>d(\mathbf{x},t) = \sum_{\mathbf{p}} \frac{\exp(g(\mathbf{x},\mathbf{p},t)s(\mathbf{x},\mathbf{p},t) / \tau )}{\sum_{\mathbf{p}’}{\exp( g(\mathbf{x},\mathbf{p}’,t) s(\mathbf{x},\mathbf{p}’,t) / \tau )}}  \mathbf{p},<br>$$</p><p>$$<br>g(\mathbf{x},\mathbf{p},t) = \frac{1}{\sqrt{2\pi}\sigma}\exp(\frac{\mathbf{p}-\mathrm{argmax}_{\mathbf{p}}s(\mathbf{x},\mathbf{p},t)}{\sigma^{2}})<br>$$</p><p>根据经验，令$\sigma=5$。$\tau$是一个温度因子，用来调节<code>softmax</code>的分布，随着$\tau$的下降，<code>softmax</code>表现为<code>argmax</code>，令$\tau=0.01$。</p><p>除此之外，使用相关置信度图作为辅助运动信息，求解方法是对每个位置点$\mathbf{x}$进行最大池化：</p><p>$$<br>s^{*}(\mathbf{x},t) =\max_{\mathbf{p}}s(\mathbf{x},\mathbf{p},t)<br>$$</p><p>$$<br>\mathbf{S}^* \in \mathbb{R}^{H \times W \times 1}<br>$$</p><p>论文里说位移估计最后出来有两个通道，但是我目前还不知道为什么是双通道，待到看代码应该可以知道。</p><p>然后把两通道和上面的单通道合并，得到位移估计张量：</p><p>$$<br>\mathbf{D}^{(t)} \in \mathbb{R}^{H \times W \times 3}<br>$$</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201102-1.png" alt="MS结构图"></p></center><h3 id="特征变换"><a class="header-anchor" href="#特征变换">#</a>特征变换</h3><p>用四层卷积卷，<code>depth-wise separable convolution</code>，因为上述特征都是通过两帧相减得到的，所以最后会少一个特征，论文直接令$\mathbf{M}^{(T)}=\mathbf{M}^{(T-1)}$，$\mathbf{M}^{(T)}$是上一步的$\mathbf{D}^{(T)}$卷积得到的。</p><p>经过卷积操作，也恢复成了原来的尺寸：</p><p>$$<br>\mathbf{D}^{(t)} \in \mathbb{R}^{H \times W \times C}<br>$$</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201102-1.png" alt="MS结构图"></p></center><p>最终的结果会加回到原来的特征图上，论文通过做实验发现这样效果最好：</p><p>$$<br>\mathbf{F}’^{(t)} =\mathbf{F}^{(t)} + \mathbf{M}^{(t)}<br>$$</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201102-2.png" alt="网络图"></p></center><h2 id="详细代码"><a class="header-anchor" href="#详细代码">#</a>详细代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x = self.layer1(x)                             </span><br><span class="line">x = self.layer2(x)          </span><br><span class="line"></span><br><span class="line"><span class="comment"># Flow </span></span><br><span class="line">flow_1, match_v = self.flow_computation(x, temperature=temperature)</span><br><span class="line">x = self.flow_refinement(flow_1, x, match_v)</span><br><span class="line"><span class="comment"># EndFlow </span></span><br><span class="line"></span><br><span class="line">x = self.layer3(x)                           </span><br><span class="line">x = self.layer4(x)</span><br></pre></td></tr></table></figure><p>首先是代码入口，代码就是在<code>ResNet</code>的层之间添加的，具体的是在<code>layer2</code>和<code>layer3</code>之间。一共有两个方法，一共是上面说的<code>MS</code>的计算，即<code>flow_computation</code>，这里出来的结果是上面说的$\mathbf{D}^{(t)}$，上面说过$\mathbf{D}^{(t)}$有三个通道，<code>flow_1</code>是前两个<code>光流通道</code>，<code>match_v</code>是第三个的辅助运动信息，即$\mathbf{S}^*$。第二个是<code>MS</code>的几个卷积层+最终的融合，就是从$\mathbf{D}^{(t)}$到$\mathbf{M}^{(t)}$再到$\mathbf{F}'^{(t)}$的过程，即<code>flow_refinement</code>。</p><p>然后看一下<code>flow_computation</code>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flow_computation</span><span class="params">(self, x, pos=<span class="number">2</span>, temperature=<span class="number">100</span>)</span>:</span></span><br><span class="line"></span><br><span class="line">x = self.chnl_reduction(x)</span><br><span class="line"><span class="comment"># chnl_reduction 源码如下，主要做的操作是降低通道数</span></span><br><span class="line"><span class="comment"># self.chnl_reduction = nn.Sequential(</span></span><br><span class="line"><span class="comment">#     nn.Conv2d(128*block.expansion, 64, kernel_size=1, stride=1, padding=0, bias=False),</span></span><br><span class="line"><span class="comment">#     nn.BatchNorm2d(64),</span></span><br><span class="line"><span class="comment">#     nn.ReLU(inplace=True)</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">size = x.size()               </span><br><span class="line">x = x.view((<span class="number">-1</span>, self.num_segments) + size[<span class="number">1</span>:])        <span class="comment"># N T C H W</span></span><br><span class="line">x = x.permute(<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>).contiguous() <span class="comment"># B C T H W   </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># match to flow            </span></span><br><span class="line">k = <span class="number">1</span>            </span><br><span class="line">temperature = temperature                    </span><br><span class="line">b,c,t,h,w = x.size()            </span><br><span class="line">t = t<span class="number">-1</span>         </span><br><span class="line"></span><br><span class="line">x_pre = x[:,:,:<span class="number">-1</span>].permute(<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>).contiguous().view(<span class="number">-1</span>,c,h,w)</span><br><span class="line">x_post = x[:,:,<span class="number">1</span>:].permute(<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>).contiguous().view(<span class="number">-1</span>,c,h,w)</span><br><span class="line"></span><br><span class="line">match = self.matching_layer(x_pre, x_post)    <span class="comment"># (B*T-1*group, H*W, H*W)          </span></span><br><span class="line">u, v, confidence = self.match_to_flow_soft(match, k, h, w, temperature)</span><br><span class="line">flow = tr.cat([u,v], dim=<span class="number">1</span>).view(<span class="number">-1</span>, <span class="number">2</span>*k, h, w)  <span class="comment">#  (b, 2, h, w)            </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># backward flow</span></span><br><span class="line"><span class="comment">#             match2 = self.matching_layer(x_post, x_pre)</span></span><br><span class="line"><span class="comment">#             u_2, v_2, confidence_2 = self.match_to_flow_soft(match2, k, h, w,temperature)       </span></span><br><span class="line"><span class="comment">#             flow_2 = tr.cat([u_2,v_2],dim=1).view(-1,2, h, w)   </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> flow, confidence</span><br></pre></td></tr></table></figure><p>首先进行了降低通道数的操作，然后对于不同 $t$ 时刻的特征图，进行<code>matching_layer</code>操作，得到<code>match</code>张量，对应论文中的$\mathbf{S}^{(t)}$，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">feature1 = self.L2normalize(feature1)</span><br><span class="line">feature2 = self.L2normalize(feature2)</span><br><span class="line">b, c, h1, w1 = feature1.size()</span><br><span class="line">b, c, h2, w2 = feature2.size()</span><br><span class="line">corr = self.correlation_sampler(feature1, feature2)</span><br><span class="line">corr = corr.view(b, self.patch * self.patch, h1* w1) <span class="comment"># Channel : target // Spatial grid : source</span></span><br><span class="line">corr = self.relu(corr)</span><br><span class="line"><span class="keyword">return</span> corr</span><br></pre></td></tr></table></figure><p>直接写了一个<code>forward</code>方法，<code>correlation_sampler</code>调用的是一个第三方的库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.correlation_sampler = SpatialCorrelationSampler(ks, patch, stride, pad, patch_dilation)</span><br></pre></td></tr></table></figure><p>总得来说就是求相关性的。</p><p>然后是<code>match_to_flow_soft</code>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">match_to_flow_soft</span><span class="params">(self, match, k, h,w, temperature=<span class="number">1</span>, mode=<span class="string">'softmax'</span>)</span>:</span>        </span><br><span class="line">b, c , s = match.size()     </span><br><span class="line">idx = tr.arange(h*w, dtype=tr.float32).to(<span class="string">'cuda'</span>)</span><br><span class="line">idx_x = idx % w</span><br><span class="line">idx_x = idx_x.repeat(b,k,<span class="number">1</span>).to(<span class="string">'cuda'</span>)</span><br><span class="line">idx_y = tr.floor(idx / w)   </span><br><span class="line">idx_y = idx_y.repeat(b,k,<span class="number">1</span>).to(<span class="string">'cuda'</span>)</span><br><span class="line"></span><br><span class="line">soft_idx_x = idx_x[:,:<span class="number">1</span>]</span><br><span class="line">soft_idx_y = idx_y[:,:<span class="number">1</span>]</span><br><span class="line">displacement = (self.patch<span class="number">-1</span>)/<span class="number">2</span></span><br><span class="line"></span><br><span class="line">topk_value, topk_idx = tr.topk(match, k, dim=<span class="number">1</span>)    <span class="comment"># (B*T-1, k, H*W)</span></span><br><span class="line">topk_value = topk_value.view(<span class="number">-1</span>,k,h,w)</span><br><span class="line"></span><br><span class="line">match = self.apply_gaussian_kernel(match, h, w, self.patch, sigma=<span class="number">5</span>)</span><br><span class="line">match = match*temperature</span><br><span class="line">match_pre = self.soft_argmax(match)</span><br><span class="line">smax = match_pre           </span><br><span class="line">smax = smax.view(b,self.patch,self.patch,h,w)</span><br><span class="line">x_kernel = tr.arange(-displacement*self.patch_dilation, displacement*self.patch_dilation+<span class="number">1</span>, step=self.patch_dilation, dtype=tr.float).to(<span class="string">'cuda'</span>)</span><br><span class="line">y_kernel = tr.arange(-displacement*self.patch_dilation, displacement*self.patch_dilation+<span class="number">1</span>, step=self.patch_dilation, dtype=tr.float).to(<span class="string">'cuda'</span>)</span><br><span class="line">x_mult = x_kernel.expand(b,self.patch).view(b,self.patch,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">y_mult = y_kernel.expand(b,self.patch).view(b,self.patch,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">smax_x = smax.sum(dim=<span class="number">1</span>, keepdim=<span class="literal">False</span>) <span class="comment">#(b,w=k,h,w)</span></span><br><span class="line">smax_y = smax.sum(dim=<span class="number">2</span>, keepdim=<span class="literal">False</span>) <span class="comment">#(b,h=k,h,w)</span></span><br><span class="line">flow_x = (smax_x*x_mult).sum(dim=<span class="number">1</span>, keepdim=<span class="literal">True</span>).view(<span class="number">-1</span>,<span class="number">1</span>,h*w) <span class="comment"># (b,1,h,w)</span></span><br><span class="line">flow_y = (smax_y*y_mult).sum(dim=<span class="number">1</span>, keepdim=<span class="literal">True</span>).view(<span class="number">-1</span>,<span class="number">1</span>,h*w) <span class="comment"># (b,1,h,w)    </span></span><br><span class="line"></span><br><span class="line">flow_x = (flow_x / (self.patch_dilation * displacement))</span><br><span class="line">flow_y = (flow_y / (self.patch_dilation * displacement))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> flow_x, flow_y, topk_value</span><br></pre></td></tr></table></figure><p>这里就可以解释上面的疑问了，为什么匹配出来的通道数是<code>2</code>，就是和光流一样的原因，一个是<code>x</code>方向上的，一个是<code>y</code>方向上的。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>这第二句话是我自己加的，论文里只是为了保证计算效率。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> ECCV </tag>
            
            <tag> msnet </tag>
            
            <tag> ECCV 2020 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Temporal Relational Reasoning in Videos</title>
      <link href="/blog/2020/10/20/temporal-relational-reasoning-in-videos/"/>
      <url>/blog/2020/10/20/temporal-relational-reasoning-in-videos/</url>
      
        <content type="html"><![CDATA[<h1 id="temporal-relational-reasoning-in-videos"><a class="header-anchor" href="#temporal-relational-reasoning-in-videos">#</a>Temporal Relational Reasoning in Videos</h1><p>论文中需要引用这边论文的一个结论，记录之。原来我之前就记录过，但是没有写笔记，导致我昨晚（20201228）突然想找这个结论的时候记不得是哪篇论文了，所幸找到了，不然几百篇参考文献我真是要翻到吐，万一里面还没有，那才是绝望。</p><p>其实这篇文章的<code>TRN</code>好像也是我所研究的<code>TSN</code>发展历程上的一个点，但没有细看过，说来惭愧。不过这个的效果大多已经被后面的<code>TSM</code>和<code>TEA</code>之类的取代了。</p><h2 id="时序信息的重要性"><a class="header-anchor" href="#时序信息的重要性">#</a>时序信息的重要性</h2><p>论文为了验证时序信息的重要性，对比了顺序帧和乱序帧在同一网络下的识别准确率，分别在<code>UCF101</code>和<code>something-something</code>上进行测试，证明了两点：</p><ol><li>时序信息对于行为识别准确率十分重要。</li><li><code>something-something</code>这类数据集，时序性很强，不是通过场景就能判断识别结果的。</li></ol><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20201229-4.png" alt="测试结果图"></p></center><p>进一步，作者对比了随机和顺序中识别准确率差别最大的几类，发现<code>具有单一方向的较大位移运动</code>受影响最大，比如<code>Moving something down</code>。</p><center><!-- //onns.xyz/blog/image --><!-- ../image --><p><img src="//onns.xyz/blog/image/20201229-5.png" alt="结果对比"></p></center><p>不过也有可能存在一些变高的识别结果，这个原因我没太看懂= =</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://blog.csdn.net/zuber123/article/details/89379297" target="_blank" rel="noopener">论文解读：Temporal Relational Reasoning in Videos</a></li><li><a href="https://blog.csdn.net/elaine_bao/article/details/80753506" target="_blank" rel="noopener">【论文笔记】视频分类系列 Temporal Relational Reasoning in Videos （TRN）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> ECCV </tag>
            
            <tag> ECCV 2018 </tag>
            
            <tag> TRN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Representation Flow for Action Recognition</title>
      <link href="/blog/2020/10/20/representation-flow-for-action-recognition/"/>
      <url>/blog/2020/10/20/representation-flow-for-action-recognition/</url>
      
        <content type="html"><![CDATA[<h1 id="representation-flow-for-action-recognition"><a class="header-anchor" href="#representation-flow-for-action-recognition">#</a>Representation Flow for Action Recognition</h1><h2 id="摘要"><a class="header-anchor" href="#摘要">#</a>摘要</h2><p>在本文中，我们提出了一个受光流算法启发的卷积层来学习运动表示。我们的表示流层是完全可微的层，设计用于捕获卷积神经网络内任何表示通道的流，用于动作识别。其迭代流优化参数与其他<code>CNN</code>模型参数以端到端的方式学习，最大限度地提高动作识别性能。此外，我们通过堆叠多个表示流池，引入了流表示学习流的概念。我们进行了广泛的实验评估，证实了其在计算速度和性能上优于以往使用传统光流的识别模型。该代码是公开的。</p><h2 id="flow-of-flow"><a class="header-anchor" href="#flow-of-flow">#</a>Flow of Flow</h2><p>表示流中再计算一次流。。。结果是下降的，这就和我<code>PAN</code>里的实验结论一致。</p><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://blog.csdn.net/qq_41590635/article/details/102670079" target="_blank" rel="noopener">Representation Flow for Action Recognition 论文解读</a></li><li><a href="https://zhuanlan.zhihu.com/p/68222768" target="_blank" rel="noopener">[CVPR19]Representation Flow for Action Recognition</a></li><li><a href="https://blog.csdn.net/xwmwanjy666/article/details/103353912" target="_blank" rel="noopener">Representation Flow for Action Recognition</a></li><li><a href="https://github.com/piergiaj/representation-flow-cvpr19" target="_blank" rel="noopener">https://github.com/piergiaj/representation-flow-cvpr19</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> CVPR </tag>
            
            <tag> CVPR 2019 </tag>
            
            <tag> 2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Motion Feature Network Fixed Motion Filter for Action Recognition</title>
      <link href="/blog/2020/10/20/motion-feature-network-fixed-motion-filter-for-action-recognition/"/>
      <url>/blog/2020/10/20/motion-feature-network-fixed-motion-filter-for-action-recognition/</url>
      
        <content type="html"><![CDATA[<h2 id="motion-feature-network-fixed-motion-filter-for-action-recognition"><a class="header-anchor" href="#motion-feature-network-fixed-motion-filter-for-action-recognition">#</a>Motion Feature Network: Fixed Motion Filter for Action Recognition</h2><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/87035777" target="_blank" rel="noopener">行为识别之 Motion Feature Network</a></li><li><a href="https://arxiv.org/pdf/1807.10037.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1807.10037.pdf</a></li><li><a href="https://blog.csdn.net/weixin_41648477/article/details/106113394" target="_blank" rel="noopener">【论文阅读】Motion Feature Network: Fixed Motion Filter for Action Recognition</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> ECCV </tag>
            
            <tag> ECCV 2018 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM SpatioTemporal and Motion Encoding for Action Recognition</title>
      <link href="/blog/2020/10/19/stm-spatiotemporal-and-motion-encoding-for-action-recognition/"/>
      <url>/blog/2020/10/19/stm-spatiotemporal-and-motion-encoding-for-action-recognition/</url>
      
        <content type="html"><![CDATA[<h2 id="stm-spatiotemporal-and-motion-encoding-for-action-recognition"><a class="header-anchor" href="#stm-spatiotemporal-and-motion-encoding-for-action-recognition">#</a>STM: SpatioTemporal and Motion Encoding for Action Recognition</h2><p>这个是TEA的灵感来源，感觉变化不是很大，但是效果不错，而且实验做的足够多。</p><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://blog.csdn.net/irving512/article/details/107085867/" target="_blank" rel="noopener">论文浏览(14) STM: SpatioTemporal and Motion Encoding for Action Recognition</a></li><li><a href="https://zhuanlan.zhihu.com/p/85242145" target="_blank" rel="noopener">STM: SpatioTemporal and Motion Encoding</a></li><li><a href="https://zhuanlan.zhihu.com/p/87048160" target="_blank" rel="noopener">ICCV2019 行为识别新文 STM</a></li><li><a href="https://mna12478.github.io/action_16/" target="_blank" rel="noopener">STM SpatioTemporal and Motion Encoding for Action Recognition (ICCV 2019)</a></li><li><a href="https://arxiv.org/pdf/1908.02486.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1908.02486.pdf</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> stm </tag>
            
            <tag> ICCV </tag>
            
            <tag> ICCV 2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex支持</title>
      <link href="/blog/2020/10/17/latex-for-hexo/"/>
      <url>/blog/2020/10/17/latex-for-hexo/</url>
      
        <content type="html"><![CDATA[<p>之前网站的<code>Latex</code>公式一直不稳定，这次终于狠下心来找问题了！折腾之。</p><a id="more"></a><p>先说结论，参考<a href="https://docs.mathjax.org/en/latest/web/start.html#configuring-mathjax" target="_blank" rel="noopener">Configuring MathJax</a>，在页面里插入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">MathJax = &#123;</span><br><span class="line">tex: &#123;</span><br><span class="line">inlineMath: [[<span class="string">'$'</span>, <span class="string">'$'</span>], [<span class="string">'\\('</span>, <span class="string">'\\)'</span>]]</span><br><span class="line">&#125;,</span><br><span class="line">svg: &#123;</span><br><span class="line">fontCache: <span class="string">'global'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">" async src="</span><span class="comment">//cdnjs.cloudflare.com/ajax/libs/mathjax/3.0.0/es5/latest?tex-mml-chtml.js"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>即可，开箱即食！</p><p>问题出现的原因是我主题带了上面的这个渲染，结果我装的插件<code>hexo-math</code>也渲染了，就会造成冲突。</p><p>但是问题是我还需要依赖<code>hexo-math</code>的功能，因为纯<code>Latex</code>代码在<code>hexo</code>中会被渲染成<code>html</code>，所以最开始我想的解决方法是改写<code>hexo-math</code>的代码，只保留标签渲染部分，而不要<code>Latex</code>渲染部分，后面又想自己写插件，最后发现官方有<a href="https://hexo.io/docs/tag-plugins#Raw" target="_blank" rel="noopener">raw block</a>的实现：</p><p>直接使用即可！</p><p>问题解决。</p><p>也是顺势把自己的<code>mathjax</code>版本升级了一下。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://docs.mathjax.org/en/latest/web/start.html#configuring-mathjax" target="_blank" rel="noopener">Configuring MathJax</a></li><li><a href="https://hexo.io/docs/tag-plugins#Raw" target="_blank" rel="noopener">Tag Plugins</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo-theme-even </tag>
            
            <tag> blog </tag>
            
            <tag> latex </tag>
            
            <tag> mathjax </tag>
            
            <tag> hexo-math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Temporal Pyramid Network for Action Recognition</title>
      <link href="/blog/2020/10/17/temporal-pyramid-network-for-action-recognition/"/>
      <url>/blog/2020/10/17/temporal-pyramid-network-for-action-recognition/</url>
      
        <content type="html"><![CDATA[<h1 id="temporal-pyramid-network-for-action-recognition"><a class="header-anchor" href="#temporal-pyramid-network-for-action-recognition">#</a>Temporal Pyramid Network for Action Recognition</h1><p>近期来看没有参考价值，先把相关链接记录下，省的下次重新找。</p><p><code>20210423</code>更新：因为要把引用添加到正文中，所以要加很多摘要内容，故重新补充内容。</p><a id="more"></a><h2 id="摘要"><a class="header-anchor" href="#摘要">#</a>摘要</h2><p>视觉节奏是动作的动态和时间尺度的特征。对不同动作的视觉节奏建模有助于识别它们。以前的作品通常通过对原始视频进行多速率采样和构建输入级帧金字塔来捕捉视觉节奏，这通常需要一个昂贵的多分支网络来处理。在本研究中，我们提出了一个特征级的通用时序金字塔网络<code>TPN</code>，它可以以即插即用的方式灵活地集成到<code>2D</code>或<code>3D</code>骨干网中：<code>TPN</code>的两个重要组成部分，源特征和融合特征构成了骨干的特征层次，使其能够在不同的节奏下捕获动作实例。<code>TPN</code>在几个动作识别数据集上也显示了与其他具有挑战性的基线相比的持续改进。具体来说，当配备<code>TPN</code>时，密集采样的<code>3D ResNet-50</code>在<code>Kinetics-400</code>验证集上获得了<code>2%</code>的增益。进一步的分析还显示，<code>TPN</code>在视觉节奏差异较大的动作类上获得了大部分改进，验证了<code>TPN</code>的有效性。</p><h2 id="temporal-pyramid-network"><a class="header-anchor" href="#temporal-pyramid-network">#</a>Temporal Pyramid Network</h2><p>大部分的网络在输入层面上解决时序信息的提取问题，但这需要单独的骨干网络提供支持，是计算复杂的。作者观察到单个网络中不同深度的特征已经包含了多种的时间节奏，因此提出了时序金字塔网络。</p><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/127366929" target="_blank" rel="noopener">Temporal Pyramid Network for Action Recognition</a></li><li><a href="https://blog.csdn.net/Amazingren/article/details/105631183" target="_blank" rel="noopener">【CVPR2020】Temporal Pyramid Network for Action Recognition</a></li><li><a href="https://blog.csdn.net/YoJayC/article/details/106989570" target="_blank" rel="noopener">Temporal Pyramid Network for Action Recognition（CVPR2020）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> CVPR </tag>
            
            <tag> CVPR 2020 </tag>
            
            <tag> 2020 </tag>
            
            <tag> tpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAN代码实现细节</title>
      <link href="/blog/2020/10/16/pan-code-details/"/>
      <url>/blog/2020/10/16/pan-code-details/</url>
      
        <content type="html"><![CDATA[<h2 id="pan-towards-fast-action-recognition-via-learning-persistence-of-appearance"><a class="header-anchor" href="#pan-towards-fast-action-recognition-via-learning-persistence-of-appearance">#</a>PAN: Towards Fast Action Recognition via Learning Persistence of Appearance</h2><a id="more"></a><p>两个创新模块的代码实现细节：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PA</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n_length)</span>:</span></span><br><span class="line">super(PA, self).__init__()</span><br><span class="line">self.shallow_conv = nn.Conv2d(<span class="number">3</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">self.n_length = n_length</span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> self.modules():</span><br><span class="line"><span class="keyword">if</span> isinstance(m, nn.Conv2d):</span><br><span class="line">nn.init.normal_(m.weight.data, <span class="number">0</span>, <span class="number">0.001</span>)</span><br><span class="line">nn.init.constant_(m.bias.data, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line"><span class="comment"># print(x.shape)  x:(batch_size*32,c,h,w) </span></span><br><span class="line">h, w = x.size(<span class="number">-2</span>), x.size(<span class="number">-1</span>)</span><br><span class="line">x = x.view((<span class="number">-1</span>, <span class="number">3</span>) + x.size()[<span class="number">-2</span>:]) <span class="comment"># 这句话根本没有卵用。。</span></span><br><span class="line"><span class="comment"># print(x.shape)</span></span><br><span class="line">x = self.shallow_conv(x) <span class="comment"># 通道数会变成8 即 [32, 8, 224, 224]，batch_size为1</span></span><br><span class="line">x = x.view(<span class="number">-1</span>, self.n_length, x.size(<span class="number">-3</span>), x.size(<span class="number">-2</span>)*x.size(<span class="number">-1</span>)) <span class="comment"># n_length = data_length = 4，4张图 [1*8, 4, 8, 50176] 第一个8是segment</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(self.n_length<span class="number">-1</span>):</span><br><span class="line">d_i = nn.PairwiseDistance(p=<span class="number">2</span>)(x[:,i,:,:], x[:,i+<span class="number">1</span>,:,:]).unsqueeze(<span class="number">1</span>)</span><br><span class="line">d = d_i <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">else</span> torch.cat((d, d_i), <span class="number">1</span>)</span><br><span class="line">PA = d.view(<span class="number">-1</span>, <span class="number">1</span>*(self.n_length<span class="number">-1</span>), h, w)</span><br><span class="line"><span class="comment"># print(PA.shape) PA:(batch_size*segment,m-1,h,w)</span></span><br><span class="line"><span class="keyword">return</span> PA</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VAP</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n_segment, feature_dim, num_class, dropout_ratio)</span>:</span></span><br><span class="line">super(VAP, self).__init__() <span class="comment"># feature_dim = 2048</span></span><br><span class="line">VAP_level = int(math.log(n_segment, <span class="number">2</span>)) <span class="comment"># 这个就是3级 </span></span><br><span class="line">print(<span class="string">"=&gt; Using &#123;&#125;-level VAP"</span>.format(VAP_level))</span><br><span class="line">self.n_segment = n_segment <span class="comment"># 8片</span></span><br><span class="line">self.VAP_level = VAP_level</span><br><span class="line">total_timescale = <span class="number">0</span></span><br><span class="line"><span class="comment"># for i in range(VAP_level):</span></span><br><span class="line"><span class="comment">#    timescale = 2**i</span></span><br><span class="line"><span class="comment">#    total_timescale += timescale</span></span><br><span class="line"><span class="comment">#    # https://pytorch-cn.readthedocs.io/zh/latest/package_references/torch-nn/#_2</span></span><br><span class="line"><span class="comment">#    setattr(self, "VAP_&#123;&#125;".format(timescale), nn.MaxPool3d((n_segment//timescale,1,1),1,0,(timescale,1,1)))</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(VAP_level):</span><br><span class="line">   timescale = <span class="number">2</span>**i</span><br><span class="line">   total_timescale += timescale</span><br><span class="line">   <span class="comment"># https://pytorch-cn.readthedocs.io/zh/latest/package_references/torch-nn/#_2</span></span><br><span class="line">   setattr(self, <span class="string">"VAP_&#123;&#125;"</span>.format(timescale), nn.MaxPool1d(n_segment//timescale,<span class="number">1</span>,<span class="number">0</span>,timescale)) <span class="comment"># TODO 平均池化</span></span><br><span class="line">self.GAP = nn.AdaptiveAvgPool1d(<span class="number">1</span>)</span><br><span class="line">self.TES = nn.Sequential(</span><br><span class="line">nn.Linear(total_timescale, total_timescale*<span class="number">4</span>, bias=<span class="literal">False</span>),</span><br><span class="line">nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">nn.Linear(total_timescale*<span class="number">4</span>, total_timescale, bias=<span class="literal">False</span>)</span><br><span class="line">)</span><br><span class="line">self.softmax = nn.Softmax(dim=<span class="number">1</span>)</span><br><span class="line">self.dropout = nn.Dropout(p=dropout_ratio)</span><br><span class="line">self.pred = nn.Linear(feature_dim, num_class)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fc init</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> self.modules():</span><br><span class="line"><span class="keyword">if</span> isinstance(m, nn.Linear):</span><br><span class="line">nn.init.normal_(m.weight.data, <span class="number">0</span>, <span class="number">0.001</span>)</span><br><span class="line"><span class="keyword">if</span> hasattr(m.bias, <span class="string">'data'</span>):</span><br><span class="line">nn.init.constant_(m.bias.data, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line"><span class="comment"># print(x.shape) [8 , 2048] 8应该是batch_size * segment 网络除全连接外的最后一层输出，以下都以ResNet50为例子</span></span><br><span class="line">_, d = x.size() <span class="comment"># d = 2048</span></span><br><span class="line"><span class="comment"># x = x.view(-1, self.n_segment, d, 1, 1).permute(0,2,1,3,4) # 把 特征维度和segment维度调换了一下顺序，顺便加了两个维度，1 -&gt; 1*1*1</span></span><br><span class="line"><span class="comment"># x现在是 [batch_size,2048,segment,1,1]</span></span><br><span class="line"><span class="comment"># https://www.runoob.com/python/att-tuple-tuple.html tuple()方法介绍，就是个数组合并成元组的方法</span></span><br><span class="line"><span class="comment"># torch.cat(tuple(),2)就是按照第三个维度合并（0是第一个维度）</span></span><br><span class="line"><span class="comment"># 两个.squeeze(3)就是把之前的加的两个维度给还原回去，然后再把调换的维度还原回来</span></span><br><span class="line"><span class="comment"># x = torch.cat(tuple([getattr(self, "VAP_&#123;&#125;".format(2**i))(x) for i in range(self.VAP_level)]), 2).squeeze(3).squeeze(3).permute(0,2,1)</span></span><br><span class="line"><span class="comment"># x 变成了 [batch_size,7,2048]</span></span><br><span class="line"></span><br><span class="line">x = x.view(<span class="number">-1</span>, self.n_segment, d).permute(<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>) <span class="comment">#TODO 这里可以试试15维</span></span><br><span class="line">x = torch.cat(tuple([getattr(self, <span class="string">"VAP_&#123;&#125;"</span>.format(<span class="number">2</span>**i))(x) <span class="keyword">for</span> i <span class="keyword">in</span> range(self.VAP_level)]),<span class="number">2</span>).permute(<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">w = self.GAP(x).squeeze(<span class="number">2</span>) <span class="comment"># 一个求和平均，在7这个维度上的</span></span><br><span class="line"><span class="comment"># w = [batch_size,7]</span></span><br><span class="line">w = self.softmax(self.TES(w)) <span class="comment"># 这个TES是可学习的</span></span><br><span class="line">x = x * w.unsqueeze(<span class="number">2</span>)</span><br><span class="line">x = x.sum(dim=<span class="number">1</span>)</span><br><span class="line">x = self.dropout(x)</span><br><span class="line">x = self.pred(x.view(<span class="number">-1</span>,d))</span><br><span class="line"><span class="keyword">return</span> x</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> pan </tag>
            
            <tag> pa </tag>
            
            <tag> vap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报-20201015</title>
      <link href="/blog/2020/10/15/weekly-report-20201015/"/>
      <url>/blog/2020/10/15/weekly-report-20201015/</url>
      
        <content type="html"><![CDATA[<center ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();"><table><thead><tr><th style="text-align:center">2020-10-15</th><th style="text-align:center">周报#08</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h1 id="i-task-achieved-last-week"><a class="header-anchor" href="#i-task-achieved-last-week">#</a>I. Task achieved last week</h1><hr><ul><li>了解了一下<code>ResNet50</code>的结构，以及TSM进行<code>shift</code>的代码细节。</li><li>阅读了《TEA: Temporal Excitation and Aggregation for Action Recognition》的源码，了解了相关改进细节，<code>ME</code>模块和<code>MTA</code>模块。</li><li>验证猜想的有效性。</li></ul><h1 id="ii-reports"><a class="header-anchor" href="#ii-reports">#</a>II. Reports</h1><hr><p><code>ResNet50</code>模型结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">ResNet(</span><br><span class="line">  (conv1): Conv2d(3, 64, kernel_size&#x3D;(7, 7), stride&#x3D;(2, 2), padding&#x3D;(3, 3), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (maxpool): MaxPool2d(kernel_size&#x3D;3, stride&#x3D;2, padding&#x3D;1, dilation&#x3D;1, ceil_mode&#x3D;False)</span><br><span class="line">  (layer1): Sequential(</span><br><span class="line">(0): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(64, 64, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(64, 64, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(64, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (downsample): Sequential(</span><br><span class="line">(0): Conv2d(64, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">(1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">(1): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(256, 64, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(64, 64, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(64, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(2): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(256, 64, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(64, 64, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(64, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">  )</span><br><span class="line">  (layer2): Sequential(</span><br><span class="line">(0): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(256, 128, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(128, 128, kernel_size&#x3D;(3, 3), stride&#x3D;(2, 2), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(128, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (downsample): Sequential(</span><br><span class="line">(0): Conv2d(256, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(2, 2), bias&#x3D;False)</span><br><span class="line">(1): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">(1): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(512, 128, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(128, 128, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(128, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(2): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(512, 128, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(128, 128, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(128, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(3): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(512, 128, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(128, 128, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(128, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">  )</span><br><span class="line">  (layer3): Sequential(</span><br><span class="line">(0): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(512, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(2, 2), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (downsample): Sequential(</span><br><span class="line">(0): Conv2d(512, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(2, 2), bias&#x3D;False)</span><br><span class="line">(1): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">(1): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(2): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(3): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(4): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(5): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">  )</span><br><span class="line">  (layer4): Sequential(</span><br><span class="line">(0): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(512, 512, kernel_size&#x3D;(3, 3), stride&#x3D;(2, 2), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(512, 2048, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(2048, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (downsample): Sequential(</span><br><span class="line">(0): Conv2d(1024, 2048, kernel_size&#x3D;(1, 1), stride&#x3D;(2, 2), bias&#x3D;False)</span><br><span class="line">(1): BatchNorm2d(2048, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">(1): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(2048, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(512, 512, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(512, 2048, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(2048, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(2): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(2048, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(512, 512, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(512, 2048, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(2048, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">  )</span><br><span class="line">  (avgpool): AdaptiveAvgPool2d(output_size&#x3D;(1, 1))</span><br><span class="line">  (fc): Linear(in_features&#x3D;2048, out_features&#x3D;1000, bias&#x3D;True)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_temporal_shift</span><span class="params">(net, n_segment, n_div=<span class="number">8</span>, place=<span class="string">'blockres'</span>, temporal_pool=False)</span>:</span></span><br><span class="line"><span class="keyword">if</span> temporal_pool:</span><br><span class="line">n_segment_list = [n_segment, n_segment // <span class="number">2</span>, n_segment // <span class="number">2</span>, n_segment // <span class="number">2</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">n_segment_list = [n_segment] * <span class="number">4</span></span><br><span class="line"><span class="keyword">assert</span> n_segment_list[<span class="number">-1</span>] &gt; <span class="number">0</span></span><br><span class="line"><span class="comment">#print('=&gt; n_segment per stage: &#123;&#125;'.format(n_segment_list))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">if</span> isinstance(net, torchvision.models.ResNet):</span><br><span class="line"><span class="keyword">if</span> place == <span class="string">'block'</span>:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_block_temporal</span><span class="params">(stage, this_segment)</span>:</span></span><br><span class="line">blocks = list(stage.children())</span><br><span class="line"><span class="comment">#print('=&gt; Processing stage with &#123;&#125; blocks'.format(len(blocks)))</span></span><br><span class="line"><span class="keyword">for</span> i, b <span class="keyword">in</span> enumerate(blocks):</span><br><span class="line">blocks[i] = TemporalShift(b, n_segment=this_segment, n_div=n_div)</span><br><span class="line"><span class="keyword">return</span> nn.Sequential(*(blocks))</span><br><span class="line"></span><br><span class="line">net.layer1 = make_block_temporal(net.layer1, n_segment_list[<span class="number">0</span>])</span><br><span class="line">net.layer2 = make_block_temporal(net.layer2, n_segment_list[<span class="number">1</span>])</span><br><span class="line">net.layer3 = make_block_temporal(net.layer3, n_segment_list[<span class="number">2</span>])</span><br><span class="line">net.layer4 = make_block_temporal(net.layer4, n_segment_list[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="string">'blockres'</span> <span class="keyword">in</span> place:</span><br><span class="line">n_round = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> len(list(net.layer3.children())) &gt;= <span class="number">23</span>: <span class="comment"># 如果是ResNet101的话，就每两轮采一次</span></span><br><span class="line">n_round = <span class="number">2</span></span><br><span class="line"><span class="comment">#print('=&gt; Using n_round &#123;&#125; to insert temporal shift'.format(n_round))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_block_temporal</span><span class="params">(stage, this_segment)</span>:</span></span><br><span class="line">blocks = list(stage.children())</span><br><span class="line"><span class="comment">#print('=&gt; Processing stage with &#123;&#125; blocks residual'.format(len(blocks)))</span></span><br><span class="line"><span class="keyword">for</span> i, b <span class="keyword">in</span> enumerate(blocks):</span><br><span class="line"><span class="keyword">if</span> i % n_round == <span class="number">0</span>:</span><br><span class="line">blocks[i].conv1 = TemporalShift(b.conv1, n_segment=this_segment, n_div=n_div)</span><br><span class="line"><span class="keyword">return</span> nn.Sequential(*blocks)</span><br><span class="line"></span><br><span class="line">net.layer1 = make_block_temporal(net.layer1, n_segment_list[<span class="number">0</span>])</span><br><span class="line">net.layer2 = make_block_temporal(net.layer2, n_segment_list[<span class="number">1</span>])</span><br><span class="line">net.layer3 = make_block_temporal(net.layer3, n_segment_list[<span class="number">2</span>])</span><br><span class="line">net.layer4 = make_block_temporal(net.layer4, n_segment_list[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">raise</span> NotImplementedError(place)</span><br></pre></td></tr></table></figure><p>简单来说，就是对每一层的第一个卷积操作之前，进行<code>shift</code>操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shift</span><span class="params">(x, n_segment, fold_div=<span class="number">3</span>, inplace=False)</span>:</span></span><br><span class="line">nt, c, h, w = x.size()</span><br><span class="line">n_batch = nt // n_segment</span><br><span class="line">x = x.view(n_batch, n_segment, c, h, w)</span><br><span class="line"></span><br><span class="line">fold = c // fold_div <span class="comment"># fold_div 为 8，论文中说他们测试发现1/4的shift，即左1/8和右1/8效果最好</span></span><br><span class="line"><span class="keyword">if</span> inplace:</span><br><span class="line"><span class="comment"># Due to some out of order error when performing parallel computing. </span></span><br><span class="line"><span class="comment"># May need to write a CUDA kernel.</span></span><br><span class="line"><span class="keyword">raise</span> NotImplementedError  </span><br><span class="line"><span class="comment"># out = InplaceShift.apply(x, fold)</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">out = torch.zeros_like(x) <span class="comment"># 生成一个和x维度信息一样，但是全是0的数组</span></span><br><span class="line"><span class="comment"># 假设原来是 [1,2,3,4,5,6,7,8]</span></span><br><span class="line"></span><br><span class="line">out[:, :<span class="number">-1</span>, :fold] = x[:, <span class="number">1</span>:, :fold]  <span class="comment"># shift left</span></span><br><span class="line"><span class="comment"># 变成了 [2,3,4,5,6,7,8,0]</span></span><br><span class="line"></span><br><span class="line">out[:, <span class="number">1</span>:, fold: <span class="number">2</span> * fold] = x[:, :<span class="number">-1</span>, fold: <span class="number">2</span> * fold]  <span class="comment"># shift right</span></span><br><span class="line"><span class="comment"># 变成了 [0,1,2,3,4,5,6,7]</span></span><br><span class="line"></span><br><span class="line">out[:, :, <span class="number">2</span> * fold:] = x[:, :, <span class="number">2</span> * fold:]  <span class="comment"># not shift</span></span><br><span class="line"><span class="comment"># 其余的不发生变化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> out.view(nt, c, h, w)</span><br></pre></td></tr></table></figure><p>对通道进行分片，前<code>1/8</code>的通道左移，再<code>1/8</code>的通道右移，剩余的保持不变。</p><h2 id="tea-temporal-excitation-and-aggregation-for-action-recognition"><a class="header-anchor" href="#tea-temporal-excitation-and-aggregation-for-action-recognition">#</a>TEA: Temporal Excitation and Aggregation for Action Recognition</h2><h3 id="motion-excitation-me"><a class="header-anchor" href="#motion-excitation-me">#</a>motion excitation(ME)</h3><p>解决的问题是：<code>short-range motion encoding</code>。</p><p>之前的工作一般都是像素级的运动表现特征，比如<code>光流</code>，论文从<code>feature</code>层面上进行了运动建模。</p><p>不同的通道可能会对不同的消息敏感，提供模型自身的运动敏感信息捕捉能力十分重要。</p><blockquote><p>The intuition of the proposed ME module is that, among all feature channels, different channels would capture distinct information.<br>For action recognition, it is beneficia to enable the model to discover and then enhance these motion-sensitive channels.</p></blockquote><p>给定输入：</p><p>$$<br>\mathbf{X} \in \mathbb{R}^{N \times T \times C \times H \times W}<br>$$</p><ol><li>首先进行通道数降低，来减少计算量：</li></ol><p>$$<br>\mathbf{X}^r = \mathrm{conv}_\mathit{red} * \mathbf{X}, \quad \mathbf{X}^r \in \mathbb{R}^{N \times T \times C/r \times H \times W}<br>$$</p><ol start="2"><li>然后根据<code>时间分片</code>进行运动特征的表征，表征就是特征层相减的差值，不过在进行转换之前先进行了卷积操作，得到的$\mathbf{M}(t)$就是$t$时刻的运动特征，然规定$\mathbf{M}(t) = 0$：</li></ol><p>$$<br>\mathbf{M}(t) = \mathrm{conv}_\mathit{trans} * \mathbf{X}^r(t+1) - \mathbf{X}^r(t), 1 \leq t \leq T-1, \mathbf{M}(t) \in \mathcal{R}^{N \times C/r \times H \times W}<br>$$</p><ol start="3"><li>全局平均池化操作，把空间信息进行总结，因为这里是要对那些<code>运动敏感</code>的通道进行激活，所以空间信息并不是很重要：</li></ol><p>$$<br>\mathbf{M}^{s} = \mathrm{Pool}(\mathbf{M}), \quad \mathbf{M}^{s} \in \mathbb{R}^{N \times T \times C/r \times 1 \times 1}<br>$$</p><ol start="4"><li>恢复通道数至初始，通过$Sigmoid$函数进行激活：</li></ol><p>$$<br>\mathbf{A} = 2\delta( \mathrm{conv}_\mathit{exp} * \mathbf{M}^s)-1, \quad \mathbf{A} \in \mathbb{R}^{N \times T \times C \times 1 \times 1}<br>$$</p><ol start="5"><li>然后把权重$\mathbf{A}$乘到输入上，就能够对动作进行表征。但是会对一些背景信息进行抑制，所以用一种残差结构，来修正影响：</li></ol><blockquote><p>such an approach will suppress the static background scene information, which is also beneficial for action recognition.<br>we propose to adopt a <em>residual</em> connection to enhance motion information meanwhile preserve scene information.</p></blockquote><p>$$<br>\mathbf{X}^{o} = \mathbf{X} + \mathbf{X} \odot \mathbf{A}, \quad \mathbf{X}^{o} \in \mathbb{R}^{N \times T \times C \times H \times W}<br>$$</p><h3 id="multiple-temporal-aggregation-mta"><a class="header-anchor" href="#multiple-temporal-aggregation-mta">#</a>Multiple Temporal Aggregation(MTA)</h3><p>这个模块的主要目的是为了增大时间维度的感受野，原理看起来很通俗易懂：</p>$$\begin{array}{lr}\mathbf{X}^o_i = \mathbf{X}_i, & i=1 \\\mathbf{X}^o_i = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * \mathbf{X}_i), & i=2 \\\mathbf{X}^o_i = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * ( \mathbf{X}_i + \mathbf{X}^o_{i-1} ) ), & i=3,4 \\\end{array}$$<p>即：</p>$$\begin{array}{lr}\mathbf{X}^o_1 = \mathbf{X}_1\\\mathbf{X}^o_2 = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * \mathbf{X}_1) \\\mathbf{X}^o_3 = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * ( \mathbf{X}_3 + \mathbf{X}^o_2 ) ) \\\mathbf{X}^o_4 = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * ( \mathbf{X}_4 + \mathbf{X}^o_3 ) ) \\\end{array}$$<p>这个操作需要对$\mathbf{X}$进行处理，从$\left[ N,T,C,H,W\right]$变换到$\left[ NHW, C, T\right]$。</p></center><h1 id="iii-plan-for-this-week"><a class="header-anchor" href="#iii-plan-for-this-week">#</a>III. Plan for this week</h1><hr><ul><li>可能需要和老师沟通一下，确定一下接下来的研究计划。</li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TEA实现细节</title>
      <link href="/blog/2020/10/13/tea-details/"/>
      <url>/blog/2020/10/13/tea-details/</url>
      
        <content type="html"><![CDATA[<h2 id="tea-temporal-excitation-and-aggregation-for-action-recognition"><a class="header-anchor" href="#tea-temporal-excitation-and-aggregation-for-action-recognition">#</a>TEA: Temporal Excitation and Aggregation for Action Recognition</h2><a id="more"></a><h3 id="motion-excitation-me"><a class="header-anchor" href="#motion-excitation-me">#</a>motion excitation(ME)</h3><p>解决的问题是：<code>short-range motion encoding</code>。</p><p>之前的工作一般都是像素级的运动表现特征，比如<code>光流</code>，论文从<code>feature</code>层面上进行了运动建模。</p><p>不同的通道可能会对不同的消息敏感，提供模型自身的运动敏感信息捕捉能力十分重要。</p><blockquote><p>The intuition of the proposed ME module is that, among all feature channels, different channels would capture distinct information.<br>For action recognition, it is beneficia to enable the model to discover and then enhance these motion-sensitive channels.</p></blockquote><p>给定输入：</p><p>$$<br>\mathbf{X} \in \mathbb{R}^{N \times T \times C \times H \times W}<br>$$</p><ol><li>首先进行通道数降低，来减少计算量：</li></ol><p>$$<br>\mathbf{X}^r = \mathrm{conv}_\mathit{red} * \mathbf{X}, \quad \mathbf{X}^r \in \mathbb{R}^{N \times T \times C/r \times H \times W}<br>$$</p><ol start="2"><li>然后根据<code>时间分片</code>进行运动特征的表征，表征就是特征层相减的差值，不过在进行转换之前先进行了卷积操作，得到的$\mathbf{M}(t)$就是$t$时刻的运动特征，然规定$\mathbf{M}(t) = 0$：</li></ol><p>$$<br>\mathbf{M}(t) = \mathrm{conv}_\mathit{trans} * \mathbf{X}^r(t+1) - \mathbf{X}^r(t), 1 \leq t \leq T-1, \mathbf{M}(t) \in \mathcal{R}^{N \times C/r \times H \times W}<br>$$</p><ol start="3"><li>全局平均池化操作，把空间信息进行总结，因为这里是要对那些<code>运动敏感</code>的通道进行激活，所以空间信息并不是很重要：</li></ol><p>$$<br>\mathbf{M}^{s} = \mathrm{Pool}(\mathbf{M}), \quad \mathbf{M}^{s} \in \mathbb{R}^{N \times T \times C/r \times 1 \times 1}<br>$$</p><ol start="4"><li>恢复通道数至初始，通过$Sigmoid$函数进行激活：</li></ol><p>$$<br>\mathbf{A} = 2\delta( \mathrm{conv}_\mathit{exp} * \mathbf{M}^s)-1, \quad \mathbf{A} \in \mathbb{R}^{N \times T \times C \times 1 \times 1}<br>$$</p><ol start="5"><li>然后把权重$\mathbf{A}$乘到输入上，就能够对动作进行表征。但是会对一些背景信息进行抑制，所以用一种残差结构，来修正影响：</li></ol><blockquote><p>such an approach will suppress the static background scene information, which is also beneficial for action recognition.<br>we propose to adopt a <em>residual</em> connection to enhance motion information meanwhile preserve scene information.</p></blockquote><p>$$<br>\mathbf{X}^{o} = \mathbf{X} + \mathbf{X} \odot \mathbf{A}, \quad \mathbf{X}^{o} \in \mathbb{R}^{N \times T \times C \times H \times W}<br>$$</p><h3 id="multiple-temporal-aggregation-mta"><a class="header-anchor" href="#multiple-temporal-aggregation-mta">#</a>Multiple Temporal Aggregation(MTA)</h3><p>这个模块的主要目的是为了增大时间维度的感受野，原理看起来很通俗易懂：</p>$$\begin{array}{lr}\mathbf{X}^o_i = \mathbf{X}_i, & i=1 \\\mathbf{X}^o_i = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * \mathbf{X}_i), & i=2 \\\mathbf{X}^o_i = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * ( \mathbf{X}_i + \mathbf{X}^o_{i-1} ) ), & i=3,4 \\\end{array}$$<p>即：</p>$$\begin{array}{lr}\mathbf{X}^o_1 = \mathbf{X}_1\\\mathbf{X}^o_2 = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * \mathbf{X}_1) \\\mathbf{X}^o_3 = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * ( \mathbf{X}_3 + \mathbf{X}^o_2 ) ) \\\mathbf{X}^o_4 = \mathrm{conv}_{\mathit{spa}}* ( \mathrm{conv}_{\mathit{temp}} * ( \mathbf{X}_4 + \mathbf{X}^o_3 ) ) \\\end{array}$$<p>这个操作需要对$\mathbf{X}$进行处理，从$\left[ N,T,C,H,W\right]$变换到$\left[ NHW, C, T\right]$。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> tea </tag>
            
            <tag> me </tag>
            
            <tag> mta </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《快乐的Linux命令行》笔记（1）</title>
      <link href="/blog/2020/10/12/the-linux-command-line-note-1/"/>
      <url>/blog/2020/10/12/the-linux-command-line-note-1/</url>
      
        <content type="html"><![CDATA[<h1 id="《快乐的-linux-命令行》"><a class="header-anchor" href="#《快乐的-linux-命令行》">#</a>《快乐的 Linux 命令行》</h1><a id="more"></a><p>如果提示符的最后一个字符是<code>#</code>, 而不是<code>$</code>, 那么这个终端会话就有超级用户权限<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。</p><p>许多<code>Linux</code>发行版默认保存最后输入的<code>500</code>个命令（就是上下键显示的那些）。</p><p>日历命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cal</span><br><span class="line">    October 2020</span><br><span class="line">Su Mo Tu We Th Fr Sa</span><br><span class="line">             1  2  3</span><br><span class="line"> 4  5  6  7  8  9 10</span><br><span class="line">11 12 13 14 15 16 17</span><br><span class="line">18 19 20 21 22 23 24</span><br><span class="line">25 26 27 28 29 30 31</span><br></pre></td></tr></table></figure><p><code>cd -</code>命令可以更改到上一个工作路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">% <span class="built_in">cd</span> Documents/common/PAN-PyTorch</span><br><span class="line">onns@liupans-MacBook-Air PAN-PyTorch % <span class="built_in">pwd</span></span><br><span class="line">/Users/onns/Documents/common/PAN-PyTorch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">onns@liupans-MacBook-Air PAN-PyTorch % <span class="built_in">cd</span> ~/Downloads/GitHub/blog</span><br><span class="line">onns@liupans-MacBook-Air blog % <span class="built_in">pwd</span></span><br><span class="line">/Users/onns/Downloads/GitHub/blog</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">onns@liupans-MacBook-Air blog % <span class="built_in">cd</span> -</span><br><span class="line">~/Documents/common/PAN-PyTorch</span><br><span class="line">onns@liupans-MacBook-Air PAN-PyTorch % <span class="built_in">pwd</span></span><br><span class="line">/Users/onns/Documents/common/PAN-PyTorch</span><br></pre></td></tr></table></figure><p>Linux 文件命名的特殊符号仅支持<code>.</code>，<code>-</code>和<code>_</code>。</p><p>不要在文件名中使用空格。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>这个以前还真没注意。。。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
            <tag> shell note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ResNet50 temporal shift</title>
      <link href="/blog/2020/10/12/resnet-50-temporal-shift/"/>
      <url>/blog/2020/10/12/resnet-50-temporal-shift/</url>
      
        <content type="html"><![CDATA[<p>模型结构：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">ResNet(</span><br><span class="line">  (conv1): Conv2d(3, 64, kernel_size&#x3D;(7, 7), stride&#x3D;(2, 2), padding&#x3D;(3, 3), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (maxpool): MaxPool2d(kernel_size&#x3D;3, stride&#x3D;2, padding&#x3D;1, dilation&#x3D;1, ceil_mode&#x3D;False)</span><br><span class="line">  (layer1): Sequential(</span><br><span class="line">(0): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(64, 64, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(64, 64, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(64, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (downsample): Sequential(</span><br><span class="line">(0): Conv2d(64, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">(1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">(1): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(256, 64, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(64, 64, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(64, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(2): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(256, 64, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(64, 64, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(64, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(64, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">  )</span><br><span class="line">  (layer2): Sequential(</span><br><span class="line">(0): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(256, 128, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(128, 128, kernel_size&#x3D;(3, 3), stride&#x3D;(2, 2), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(128, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (downsample): Sequential(</span><br><span class="line">(0): Conv2d(256, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(2, 2), bias&#x3D;False)</span><br><span class="line">(1): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">(1): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(512, 128, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(128, 128, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(128, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(2): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(512, 128, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(128, 128, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(128, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(3): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(512, 128, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(128, 128, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(128, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(128, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">  )</span><br><span class="line">  (layer3): Sequential(</span><br><span class="line">(0): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(512, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(2, 2), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (downsample): Sequential(</span><br><span class="line">(0): Conv2d(512, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(2, 2), bias&#x3D;False)</span><br><span class="line">(1): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">(1): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(2): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(3): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(4): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(5): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 256, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(256, 256, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(256, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(256, 1024, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(1024, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">  )</span><br><span class="line">  (layer4): Sequential(</span><br><span class="line">(0): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(1024, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(512, 512, kernel_size&#x3D;(3, 3), stride&#x3D;(2, 2), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(512, 2048, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(2048, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">  (downsample): Sequential(</span><br><span class="line">(0): Conv2d(1024, 2048, kernel_size&#x3D;(1, 1), stride&#x3D;(2, 2), bias&#x3D;False)</span><br><span class="line">(1): BatchNorm2d(2048, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">(1): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(2048, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(512, 512, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(512, 2048, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(2048, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">(2): Bottleneck(</span><br><span class="line">  (conv1): Conv2d(2048, 512, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn1): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv2): Conv2d(512, 512, kernel_size&#x3D;(3, 3), stride&#x3D;(1, 1), padding&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn2): BatchNorm2d(512, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (conv3): Conv2d(512, 2048, kernel_size&#x3D;(1, 1), stride&#x3D;(1, 1), bias&#x3D;False)</span><br><span class="line">  (bn3): BatchNorm2d(2048, eps&#x3D;1e-05, momentum&#x3D;0.1, affine&#x3D;True, track_running_stats&#x3D;True)</span><br><span class="line">  (relu): ReLU(inplace)</span><br><span class="line">)</span><br><span class="line">  )</span><br><span class="line">  (avgpool): AdaptiveAvgPool2d(output_size&#x3D;(1, 1))</span><br><span class="line">  (fc): Linear(in_features&#x3D;2048, out_features&#x3D;1000, bias&#x3D;True)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_temporal_shift</span><span class="params">(net, n_segment, n_div=<span class="number">8</span>, place=<span class="string">'blockres'</span>, temporal_pool=False)</span>:</span></span><br><span class="line"><span class="keyword">if</span> temporal_pool:</span><br><span class="line">n_segment_list = [n_segment, n_segment // <span class="number">2</span>, n_segment // <span class="number">2</span>, n_segment // <span class="number">2</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">n_segment_list = [n_segment] * <span class="number">4</span></span><br><span class="line"><span class="keyword">assert</span> n_segment_list[<span class="number">-1</span>] &gt; <span class="number">0</span></span><br><span class="line"><span class="comment">#print('=&gt; n_segment per stage: &#123;&#125;'.format(n_segment_list))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">if</span> isinstance(net, torchvision.models.ResNet):</span><br><span class="line"><span class="keyword">if</span> place == <span class="string">'block'</span>:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_block_temporal</span><span class="params">(stage, this_segment)</span>:</span></span><br><span class="line">blocks = list(stage.children())</span><br><span class="line"><span class="comment">#print('=&gt; Processing stage with &#123;&#125; blocks'.format(len(blocks)))</span></span><br><span class="line"><span class="keyword">for</span> i, b <span class="keyword">in</span> enumerate(blocks):</span><br><span class="line">blocks[i] = TemporalShift(b, n_segment=this_segment, n_div=n_div)</span><br><span class="line"><span class="keyword">return</span> nn.Sequential(*(blocks))</span><br><span class="line"></span><br><span class="line">net.layer1 = make_block_temporal(net.layer1, n_segment_list[<span class="number">0</span>])</span><br><span class="line">net.layer2 = make_block_temporal(net.layer2, n_segment_list[<span class="number">1</span>])</span><br><span class="line">net.layer3 = make_block_temporal(net.layer3, n_segment_list[<span class="number">2</span>])</span><br><span class="line">net.layer4 = make_block_temporal(net.layer4, n_segment_list[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="string">'blockres'</span> <span class="keyword">in</span> place:</span><br><span class="line">n_round = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> len(list(net.layer3.children())) &gt;= <span class="number">23</span>: <span class="comment"># 如果是ResNet101的话，就每两轮采一次</span></span><br><span class="line">n_round = <span class="number">2</span></span><br><span class="line"><span class="comment">#print('=&gt; Using n_round &#123;&#125; to insert temporal shift'.format(n_round))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_block_temporal</span><span class="params">(stage, this_segment)</span>:</span></span><br><span class="line">blocks = list(stage.children())</span><br><span class="line"><span class="comment">#print('=&gt; Processing stage with &#123;&#125; blocks residual'.format(len(blocks)))</span></span><br><span class="line"><span class="keyword">for</span> i, b <span class="keyword">in</span> enumerate(blocks):</span><br><span class="line"><span class="keyword">if</span> i % n_round == <span class="number">0</span>:</span><br><span class="line">blocks[i].conv1 = TemporalShift(b.conv1, n_segment=this_segment, n_div=n_div)</span><br><span class="line"><span class="keyword">return</span> nn.Sequential(*blocks)</span><br><span class="line"></span><br><span class="line">net.layer1 = make_block_temporal(net.layer1, n_segment_list[<span class="number">0</span>])</span><br><span class="line">net.layer2 = make_block_temporal(net.layer2, n_segment_list[<span class="number">1</span>])</span><br><span class="line">net.layer3 = make_block_temporal(net.layer3, n_segment_list[<span class="number">2</span>])</span><br><span class="line">net.layer4 = make_block_temporal(net.layer4, n_segment_list[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">raise</span> NotImplementedError(place)</span><br></pre></td></tr></table></figure><p>简单来说，就是对每一层的第一个卷积操作之前，进行<code>shift</code>操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shift</span><span class="params">(x, n_segment, fold_div=<span class="number">3</span>, inplace=False)</span>:</span></span><br><span class="line">nt, c, h, w = x.size()</span><br><span class="line">n_batch = nt // n_segment</span><br><span class="line">x = x.view(n_batch, n_segment, c, h, w)</span><br><span class="line"></span><br><span class="line">fold = c // fold_div <span class="comment"># fold_div 为 8，论文中说他们测试发现1/4的shift，即左1/8和右1/8效果最好</span></span><br><span class="line"><span class="keyword">if</span> inplace:</span><br><span class="line"><span class="comment"># Due to some out of order error when performing parallel computing. </span></span><br><span class="line"><span class="comment"># May need to write a CUDA kernel.</span></span><br><span class="line"><span class="keyword">raise</span> NotImplementedError  </span><br><span class="line"><span class="comment"># out = InplaceShift.apply(x, fold)</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">out = torch.zeros_like(x) <span class="comment"># 生成一个和x维度信息一样，但是全是0的数组</span></span><br><span class="line"><span class="comment"># 假设原来是 [1,2,3,4,5,6,7,8]</span></span><br><span class="line"></span><br><span class="line">out[:, :<span class="number">-1</span>, :fold] = x[:, <span class="number">1</span>:, :fold]  <span class="comment"># shift left</span></span><br><span class="line"><span class="comment"># 变成了 [2,3,4,5,6,7,8,0]</span></span><br><span class="line"></span><br><span class="line">out[:, <span class="number">1</span>:, fold: <span class="number">2</span> * fold] = x[:, :<span class="number">-1</span>, fold: <span class="number">2</span> * fold]  <span class="comment"># shift right</span></span><br><span class="line"><span class="comment"># 变成了 [0,1,2,3,4,5,6,7]</span></span><br><span class="line"></span><br><span class="line">out[:, :, <span class="number">2</span> * fold:] = x[:, :, <span class="number">2</span> * fold:]  <span class="comment"># not shift</span></span><br><span class="line"><span class="comment"># 其余的不发生变化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> out.view(nt, c, h, w)</span><br></pre></td></tr></table></figure><p>对通道进行分片，前<code>1/8</code>的通道左移，再<code>1/8</code>的通道右移，剩余的保持不变。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> resnet </tag>
            
            <tag> resnet50 </tag>
            
            <tag> tsm </tag>
            
            <tag> temporal shift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAN验证结果-20201008</title>
      <link href="/blog/2020/10/08/pan-results-20201008/"/>
      <url>/blog/2020/10/08/pan-results-20201008/</url>
      
        <content type="html"><![CDATA[<p>测试结果：</p><a id="more"></a><h2 id="pan-my"><a class="header-anchor" href="#pan-my">#</a>PAN My</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8,8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_RPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/AAA.sh</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.223 sec/video, moving Prec@1 50.000 Prec@5 81.250</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.055 sec/video, moving Prec@1 53.869 Prec@5 83.631</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.051 sec/video, moving Prec@1 54.268 Prec@5 82.165</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.049 sec/video, moving Prec@1 53.484 Prec@5 80.943</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.049 sec/video, moving Prec@1 53.627 Prec@5 81.481</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.048 sec/video, moving Prec@1 53.713 Prec@5 80.941</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.048 sec/video, moving Prec@1 52.789 Prec@5 80.527</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.048 sec/video, moving Prec@1 52.527 Prec@5 80.452</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.048 sec/video, moving Prec@1 52.446 Prec@5 80.551</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.048 sec/video, moving Prec@1 52.106 Prec@5 80.352</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.048 sec/video, moving Prec@1 51.710 Prec@5 80.379</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.047 sec/video, moving Prec@1 51.669 Prec@5 80.402</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.047 sec/video, moving Prec@1 51.504 Prec@5 80.031</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.047 sec/video, moving Prec@1 51.245 Prec@5 79.957</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.047 sec/video, moving Prec@1 51.157 Prec@5 80.004</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.047 sec/video, moving Prec@1 51.017 Prec@5 79.672</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.047 sec/video, moving Prec@1 50.818 Prec@5 79.420</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.047 sec/video, moving Prec@1 50.953 Prec@5 79.582</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.047 sec/video, moving Prec@1 50.952 Prec@5 79.415</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.047 sec/video, moving Prec@1 50.968 Prec@5 79.560</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.047 sec/video, moving Prec@1 51.044 Prec@5 79.723</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.047 sec/video, moving Prec@1 50.920 Prec@5 79.751</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.047 sec/video, moving Prec@1 51.020 Prec@5 79.691</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.047 sec/video, moving Prec@1 50.976 Prec@5 79.542</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.047 sec/video, moving Prec@1 51.130 Prec@5 79.691</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.047 sec/video, moving Prec@1 51.085 Prec@5 79.753</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.047 sec/video, moving Prec@1 51.116 Prec@5 79.762</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.047 sec/video, moving Prec@1 50.947 Prec@5 79.737</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.047 sec/video, moving Prec@1 50.925 Prec@5 79.768</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.047 sec/video, moving Prec@1 50.968 Prec@5 79.733</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.047 sec/video, moving Prec@1 51.113 Prec@5 79.773</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.047 sec/video, moving Prec@1 51.127 Prec@5 79.781</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.047 sec/video, moving Prec@1 51.268 Prec@5 79.904</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.047 sec/video, moving Prec@1 51.314 Prec@5 79.870</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.047 sec/video, moving Prec@1 51.386 Prec@5 79.947</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.047 sec/video, moving Prec@1 51.444 Prec@5 79.913</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.047 sec/video, moving Prec@1 51.311 Prec@5 79.865</span><br><span class="line">[0.88059701 0.2875     0.25714286 0.64179104 0.39473684 0.42241379</span><br><span class="line"> 0.71641791 0.41176471 0.65048544 0.70873786 0.38666667 0.44444444</span><br><span class="line"> 0.32978723 0.4516129  0.71974522 0.5        0.23493976 0.25</span><br><span class="line"> 0.44715447 0.36       0.336      0.5862069  0.48148148 0.41176471</span><br><span class="line"> 0.5483871  0.41666667 0.43478261 0.48       0.72727273 0.63492063</span><br><span class="line"> 0.59090909 0.57692308 0.83333333 0.23076923 0.32608696 0.13888889</span><br><span class="line"> 0.81609195 0.79411765 0.10526316 0.59259259 0.68595041 0.66</span><br><span class="line"> 0.73076923 0.67346939 0.71153846 0.59016393 0.41176471 0.42105263</span><br><span class="line"> 0.17977528 0.69924812 0.62264151 0.         0.36       0.4</span><br><span class="line"> 0.23809524 0.29166667 0.42424242 0.53125    0.         0.75510204</span><br><span class="line"> 0.78787879 0.16666667 0.66       0.19090909 0.1        0.44444444</span><br><span class="line"> 0.18518519 0.24242424 0.50704225 0.42307692 0.58064516 0.25</span><br><span class="line"> 0.55263158 0.52       0.78333333 0.48387097 0.35294118 0.52941176</span><br><span class="line"> 0.36363636 0.80487805 0.08571429 0.19047619 0.36666667 0.15789474</span><br><span class="line"> 0.65714286 0.39655172 0.59459459 0.63492063 0.16666667 0.08928571</span><br><span class="line"> 0.62162162 0.7804878  0.53488372 0.59259259 0.71028037 0.27419355</span><br><span class="line"> 0.03703704 0.11904762 0.56140351 0.47058824 0.32653061 0.55555556</span><br><span class="line"> 0.203125   0.59183673 0.63414634 0.65714286 0.52808989 0.72463768</span><br><span class="line"> 0.49122807 0.32967033 0.64705882 0.05882353 0.66216216 0.28571429</span><br><span class="line"> 0.61320755 0.4        0.34545455 0.76595745 0.31707317 0.58333333</span><br><span class="line"> 0.80681818 0.60784314 0.36363636 0.5        0.33333333 0.46938776</span><br><span class="line"> 0.49056604 0.57407407 0.11724138 0.625      0.28       0.25925926</span><br><span class="line"> 0.26315789 0.33333333 0.68211921 0.43103448 0.07142857 0.38333333</span><br><span class="line"> 0.15254237 0.59210526 0.66       0.37209302 0.40909091 0.48305085</span><br><span class="line"> 0.62666667 0.45774648 0.63207547 0.1641791  0.546875   0.832</span><br><span class="line"> 0.67878788 0.27419355 0.33333333 0.81481481 0.53571429 0.25490196</span><br><span class="line"> 0.27868852 0.3        0.51485149 0.34375    0.46296296 0.375</span><br><span class="line"> 0.3        0.37931034 0.7254902  0.75757576 0.9223301  0.87735849</span><br><span class="line"> 0.76851852 0.72972973 0.43809524 0.64748201 0.69343066 0.72368421]</span><br><span class="line">upper bound: 0.4892586659876352</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 47.29%</span><br><span class="line">Overall Prec@1 51.31% Prec@5 79.86%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="pan-rgb-rpa"><a class="header-anchor" href="#pan-rgb-rpa">#</a>PAN RGB&amp;RPA</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_RPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/Full.sh</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.230 sec/video, moving Prec@1 56.250 Prec@5 81.250</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.034 sec/video, moving Prec@1 55.357 Prec@5 84.226</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.029 sec/video, moving Prec@1 55.488 Prec@5 82.317</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.027 sec/video, moving Prec@1 53.689 Prec@5 80.225</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.026 sec/video, moving Prec@1 54.090 Prec@5 80.478</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.026 sec/video, moving Prec@1 54.084 Prec@5 79.950</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.025 sec/video, moving Prec@1 53.202 Prec@5 79.649</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.025 sec/video, moving Prec@1 52.660 Prec@5 79.699</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.025 sec/video, moving Prec@1 52.484 Prec@5 79.852</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.025 sec/video, moving Prec@1 52.072 Prec@5 79.593</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.025 sec/video, moving Prec@1 51.617 Prec@5 79.602</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.025 sec/video, moving Prec@1 51.499 Prec@5 79.638</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.025 sec/video, moving Prec@1 51.167 Prec@5 79.305</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.025 sec/video, moving Prec@1 50.766 Prec@5 79.239</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.025 sec/video, moving Prec@1 50.512 Prec@5 79.115</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.025 sec/video, moving Prec@1 50.353 Prec@5 78.738</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.025 sec/video, moving Prec@1 50.097 Prec@5 78.466</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.026 sec/video, moving Prec@1 50.220 Prec@5 78.666</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.026 sec/video, moving Prec@1 50.208 Prec@5 78.497</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.026 sec/video, moving Prec@1 50.213 Prec@5 78.658</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.026 sec/video, moving Prec@1 50.374 Prec@5 78.787</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.026 sec/video, moving Prec@1 50.282 Prec@5 78.741</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.026 sec/video, moving Prec@1 50.425 Prec@5 78.699</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.026 sec/video, moving Prec@1 50.298 Prec@5 78.552</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.026 sec/video, moving Prec@1 50.468 Prec@5 78.768</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.026 sec/video, moving Prec@1 50.424 Prec@5 78.780</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.026 sec/video, moving Prec@1 50.468 Prec@5 78.791</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.026 sec/video, moving Prec@1 50.347 Prec@5 78.789</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.026 sec/video, moving Prec@1 50.379 Prec@5 78.877</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.026 sec/video, moving Prec@1 50.398 Prec@5 78.873</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.026 sec/video, moving Prec@1 50.520 Prec@5 78.900</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.026 sec/video, moving Prec@1 50.533 Prec@5 78.925</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.026 sec/video, moving Prec@1 50.575 Prec@5 79.027</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.026 sec/video, moving Prec@1 50.643 Prec@5 78.971</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.026 sec/video, moving Prec@1 50.734 Prec@5 79.102</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.026 sec/video, moving Prec@1 50.785 Prec@5 79.110</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.026 sec/video, moving Prec@1 50.720 Prec@5 79.040</span><br><span class="line">[0.89552239 0.325      0.27619048 0.59701493 0.36842105 0.43103448</span><br><span class="line"> 0.68656716 0.41176471 0.67961165 0.67961165 0.36       0.45833333</span><br><span class="line"> 0.30851064 0.4516129  0.68789809 0.48       0.22891566 0.25</span><br><span class="line"> 0.45528455 0.34666667 0.328      0.53448276 0.42592593 0.39215686</span><br><span class="line"> 0.38709677 0.5        0.43478261 0.52       0.75757576 0.65079365</span><br><span class="line"> 0.59090909 0.57692308 0.7962963  0.1978022  0.30434783 0.19444444</span><br><span class="line"> 0.7816092  0.7745098  0.18421053 0.62962963 0.69421488 0.66</span><br><span class="line"> 0.71538462 0.65306122 0.73076923 0.59016393 0.39705882 0.4</span><br><span class="line"> 0.25842697 0.69924812 0.59433962 0.         0.32       0.5</span><br><span class="line"> 0.23809524 0.33333333 0.36363636 0.53125    0.08333333 0.7244898</span><br><span class="line"> 0.72727273 0.22222222 0.64       0.15454545 0.13333333 0.49074074</span><br><span class="line"> 0.11111111 0.24242424 0.56338028 0.38461538 0.51612903 0.32142857</span><br><span class="line"> 0.47368421 0.56       0.76666667 0.48387097 0.35294118 0.47058824</span><br><span class="line"> 0.40909091 0.82926829 0.11428571 0.14285714 0.43333333 0.21052632</span><br><span class="line"> 0.54285714 0.34482759 0.62162162 0.63492063 0.16666667 0.10714286</span><br><span class="line"> 0.67567568 0.7804878  0.55813953 0.62037037 0.73831776 0.25806452</span><br><span class="line"> 0.07407407 0.14285714 0.55555556 0.41176471 0.31632653 0.58333333</span><br><span class="line"> 0.234375   0.59183673 0.6097561  0.62857143 0.52808989 0.72463768</span><br><span class="line"> 0.49122807 0.34065934 0.60784314 0.05882353 0.66216216 0.42857143</span><br><span class="line"> 0.60377358 0.4        0.34545455 0.78723404 0.34146341 0.58333333</span><br><span class="line"> 0.85227273 0.58823529 0.36363636 0.475      0.30555556 0.48979592</span><br><span class="line"> 0.50943396 0.51851852 0.12413793 0.63461538 0.32       0.25925926</span><br><span class="line"> 0.26315789 0.26666667 0.66887417 0.43103448 0.07142857 0.38333333</span><br><span class="line"> 0.18644068 0.61842105 0.66       0.37209302 0.31818182 0.49152542</span><br><span class="line"> 0.57333333 0.41549296 0.58490566 0.11940299 0.546875   0.792</span><br><span class="line"> 0.67878788 0.27419355 0.28333333 0.83333333 0.51190476 0.25490196</span><br><span class="line"> 0.29508197 0.31428571 0.46534653 0.34375    0.42592593 0.35</span><br><span class="line"> 0.3        0.34482759 0.70588235 0.75757576 0.9223301  0.87735849</span><br><span class="line"> 0.76851852 0.72972973 0.37142857 0.6618705  0.68613139 0.68421053]</span><br><span class="line">upper bound: 0.48195690400802077</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 46.97%</span><br><span class="line">Overall Prec@1 50.72% Prec@5 79.04%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="pan-full"><a class="header-anchor" href="#pan-full">#</a>PAN Full</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8,8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/AAA.sh</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.237 sec/video, moving Prec@1 50.000 Prec@5 87.500</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.056 sec/video, moving Prec@1 51.488 Prec@5 83.333</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.052 sec/video, moving Prec@1 52.287 Prec@5 82.165</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.050 sec/video, moving Prec@1 51.332 Prec@5 80.840</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.049 sec/video, moving Prec@1 52.160 Prec@5 81.096</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.049 sec/video, moving Prec@1 51.795 Prec@5 80.446</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.048 sec/video, moving Prec@1 50.878 Prec@5 80.062</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.048 sec/video, moving Prec@1 50.798 Prec@5 79.920</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.048 sec/video, moving Prec@1 50.970 Prec@5 79.775</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.048 sec/video, moving Prec@1 50.760 Prec@5 79.731</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.048 sec/video, moving Prec@1 50.529 Prec@5 79.695</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.048 sec/video, moving Prec@1 50.509 Prec@5 79.638</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.048 sec/video, moving Prec@1 50.467 Prec@5 79.279</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.048 sec/video, moving Prec@1 50.359 Prec@5 79.215</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.048 sec/video, moving Prec@1 50.311 Prec@5 79.248</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.048 sec/video, moving Prec@1 50.104 Prec@5 78.987</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.048 sec/video, moving Prec@1 49.883 Prec@5 78.777</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.048 sec/video, moving Prec@1 50.202 Prec@5 78.886</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.048 sec/video, moving Prec@1 50.173 Prec@5 78.722</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.048 sec/video, moving Prec@1 50.262 Prec@5 78.888</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.047 sec/video, moving Prec@1 50.327 Prec@5 79.068</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.047 sec/video, moving Prec@1 50.238 Prec@5 79.053</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.047 sec/video, moving Prec@1 50.241 Prec@5 78.954</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.047 sec/video, moving Prec@1 50.176 Prec@5 78.823</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.047 sec/video, moving Prec@1 50.299 Prec@5 78.976</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.047 sec/video, moving Prec@1 50.274 Prec@5 79.067</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.047 sec/video, moving Prec@1 50.288 Prec@5 79.115</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.047 sec/video, moving Prec@1 50.139 Prec@5 79.136</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.047 sec/video, moving Prec@1 50.212 Prec@5 79.144</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.047 sec/video, moving Prec@1 50.237 Prec@5 79.131</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.047 sec/video, moving Prec@1 50.374 Prec@5 79.181</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.047 sec/video, moving Prec@1 50.312 Prec@5 79.177</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.047 sec/video, moving Prec@1 50.429 Prec@5 79.329</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.047 sec/video, moving Prec@1 50.454 Prec@5 79.283</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.047 sec/video, moving Prec@1 50.569 Prec@5 79.323</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.047 sec/video, moving Prec@1 50.606 Prec@5 79.271</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.047 sec/video, moving Prec@1 50.529 Prec@5 79.231</span><br><span class="line">[0.89552239 0.3125     0.26666667 0.65671642 0.36842105 0.48275862</span><br><span class="line"> 0.70895522 0.38235294 0.62135922 0.70873786 0.44       0.40277778</span><br><span class="line"> 0.30851064 0.35483871 0.77070064 0.4        0.24096386 0.2625</span><br><span class="line"> 0.45528455 0.34666667 0.352      0.60344828 0.46296296 0.45098039</span><br><span class="line"> 0.51612903 0.41666667 0.43478261 0.4        0.6969697  0.61904762</span><br><span class="line"> 0.59090909 0.53846154 0.87037037 0.25274725 0.23913043 0.13888889</span><br><span class="line"> 0.7816092  0.79411765 0.07894737 0.59259259 0.68595041 0.64</span><br><span class="line"> 0.67692308 0.67346939 0.75       0.57377049 0.47794118 0.36842105</span><br><span class="line"> 0.15730337 0.68421053 0.61320755 0.         0.36       0.45</span><br><span class="line"> 0.19047619 0.25       0.45454545 0.5        0.         0.74489796</span><br><span class="line"> 0.75757576 0.13888889 0.64       0.1        0.1        0.46296296</span><br><span class="line"> 0.18518519 0.21212121 0.43661972 0.34615385 0.5483871  0.21428571</span><br><span class="line"> 0.55263158 0.48       0.83333333 0.41935484 0.35294118 0.58823529</span><br><span class="line"> 0.27272727 0.82926829 0.11428571 0.21428571 0.33333333 0.15789474</span><br><span class="line"> 0.6        0.39655172 0.60810811 0.6984127  0.27777778 0.07142857</span><br><span class="line"> 0.59459459 0.75609756 0.58139535 0.55555556 0.62616822 0.22580645</span><br><span class="line"> 0.03703704 0.11904762 0.57894737 0.45588235 0.32653061 0.51851852</span><br><span class="line"> 0.203125   0.53061224 0.68292683 0.63809524 0.52808989 0.73913043</span><br><span class="line"> 0.49122807 0.32967033 0.58823529 0.         0.66216216 0.28571429</span><br><span class="line"> 0.60377358 0.43333333 0.27272727 0.73404255 0.29268293 0.54166667</span><br><span class="line"> 0.80681818 0.60784314 0.35454545 0.5        0.33333333 0.44897959</span><br><span class="line"> 0.47169811 0.57407407 0.14482759 0.63461538 0.22       0.22222222</span><br><span class="line"> 0.23684211 0.36666667 0.68874172 0.44827586 0.         0.31666667</span><br><span class="line"> 0.13559322 0.56578947 0.66       0.39534884 0.45454545 0.43220339</span><br><span class="line"> 0.6        0.47183099 0.63207547 0.17910448 0.546875   0.8</span><br><span class="line"> 0.66666667 0.29032258 0.38333333 0.7962963  0.55952381 0.11764706</span><br><span class="line"> 0.29508197 0.3        0.47524752 0.34375    0.42592593 0.325</span><br><span class="line"> 0.3        0.37931034 0.69607843 0.77272727 0.9223301  0.87735849</span><br><span class="line"> 0.74074074 0.75675676 0.45714286 0.62589928 0.69343066 0.69736842]</span><br><span class="line">upper bound: 0.483756929950145</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 46.26%</span><br><span class="line">Overall Prec@1 50.53% Prec@5 79.23%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="pan-myen"><a class="header-anchor" href="#pan-myen">#</a>PAN MyEn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=10 -j=4 --test_crops=1 --test_segments=8,8,8,8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar --full_res --twice_sample</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/AAA.sh</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.844 sec/video, moving Prec@1 60.000 Prec@5 80.000</span><br><span class="line">video 200 <span class="keyword">done</span>, total 200/11522, average 0.154 sec/video, moving Prec@1 58.571 Prec@5 83.810</span><br><span class="line">video 400 <span class="keyword">done</span>, total 400/11522, average 0.153 sec/video, moving Prec@1 56.829 Prec@5 83.902</span><br><span class="line">video 600 <span class="keyword">done</span>, total 600/11522, average 0.153 sec/video, moving Prec@1 57.541 Prec@5 83.279</span><br><span class="line">video 800 <span class="keyword">done</span>, total 800/11522, average 0.151 sec/video, moving Prec@1 54.815 Prec@5 81.481</span><br><span class="line">video 1000 <span class="keyword">done</span>, total 1000/11522, average 0.151 sec/video, moving Prec@1 54.950 Prec@5 80.990</span><br><span class="line">video 1200 <span class="keyword">done</span>, total 1200/11522, average 0.152 sec/video, moving Prec@1 55.207 Prec@5 81.901</span><br><span class="line">video 1400 <span class="keyword">done</span>, total 1400/11522, average 0.151 sec/video, moving Prec@1 55.390 Prec@5 81.986</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.152 sec/video, moving Prec@1 55.404 Prec@5 81.801</span><br><span class="line">video 1800 <span class="keyword">done</span>, total 1800/11522, average 0.152 sec/video, moving Prec@1 54.530 Prec@5 81.271</span><br><span class="line">video 2000 <span class="keyword">done</span>, total 2000/11522, average 0.151 sec/video, moving Prec@1 54.677 Prec@5 81.542</span><br><span class="line">video 2200 <span class="keyword">done</span>, total 2200/11522, average 0.152 sec/video, moving Prec@1 54.525 Prec@5 81.629</span><br><span class="line">video 2400 <span class="keyword">done</span>, total 2400/11522, average 0.152 sec/video, moving Prec@1 54.149 Prec@5 81.203</span><br><span class="line">video 2600 <span class="keyword">done</span>, total 2600/11522, average 0.152 sec/video, moving Prec@1 54.100 Prec@5 81.188</span><br><span class="line">video 2800 <span class="keyword">done</span>, total 2800/11522, average 0.152 sec/video, moving Prec@1 53.772 Prec@5 81.174</span><br><span class="line">video 3000 <span class="keyword">done</span>, total 3000/11522, average 0.152 sec/video, moving Prec@1 53.654 Prec@5 81.462</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.152 sec/video, moving Prec@1 53.271 Prec@5 81.277</span><br><span class="line">video 3400 <span class="keyword">done</span>, total 3400/11522, average 0.152 sec/video, moving Prec@1 53.343 Prec@5 81.525</span><br><span class="line">video 3600 <span class="keyword">done</span>, total 3600/11522, average 0.152 sec/video, moving Prec@1 53.269 Prec@5 81.191</span><br><span class="line">video 3800 <span class="keyword">done</span>, total 3800/11522, average 0.152 sec/video, moving Prec@1 53.255 Prec@5 81.050</span><br><span class="line">video 4000 <span class="keyword">done</span>, total 4000/11522, average 0.151 sec/video, moving Prec@1 53.117 Prec@5 80.848</span><br><span class="line">video 4200 <span class="keyword">done</span>, total 4200/11522, average 0.151 sec/video, moving Prec@1 53.064 Prec@5 80.879</span><br><span class="line">video 4400 <span class="keyword">done</span>, total 4400/11522, average 0.151 sec/video, moving Prec@1 52.857 Prec@5 80.816</span><br><span class="line">video 4600 <span class="keyword">done</span>, total 4600/11522, average 0.151 sec/video, moving Prec@1 52.907 Prec@5 80.781</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.151 sec/video, moving Prec@1 52.786 Prec@5 80.707</span><br><span class="line">video 5000 <span class="keyword">done</span>, total 5000/11522, average 0.151 sec/video, moving Prec@1 52.455 Prec@5 80.399</span><br><span class="line">video 5200 <span class="keyword">done</span>, total 5200/11522, average 0.151 sec/video, moving Prec@1 52.534 Prec@5 80.557</span><br><span class="line">video 5400 <span class="keyword">done</span>, total 5400/11522, average 0.151 sec/video, moving Prec@1 52.699 Prec@5 80.573</span><br><span class="line">video 5600 <span class="keyword">done</span>, total 5600/11522, average 0.151 sec/video, moving Prec@1 52.852 Prec@5 80.624</span><br><span class="line">video 5800 <span class="keyword">done</span>, total 5800/11522, average 0.151 sec/video, moving Prec@1 52.616 Prec@5 80.448</span><br><span class="line">video 6000 <span class="keyword">done</span>, total 6000/11522, average 0.151 sec/video, moving Prec@1 52.679 Prec@5 80.532</span><br><span class="line">video 6200 <span class="keyword">done</span>, total 6200/11522, average 0.151 sec/video, moving Prec@1 52.625 Prec@5 80.499</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.151 sec/video, moving Prec@1 52.746 Prec@5 80.718</span><br><span class="line">video 6600 <span class="keyword">done</span>, total 6600/11522, average 0.151 sec/video, moving Prec@1 52.617 Prec@5 80.756</span><br><span class="line">video 6800 <span class="keyword">done</span>, total 6800/11522, average 0.151 sec/video, moving Prec@1 52.555 Prec@5 80.675</span><br><span class="line">video 7000 <span class="keyword">done</span>, total 7000/11522, average 0.151 sec/video, moving Prec@1 52.511 Prec@5 80.685</span><br><span class="line">video 7200 <span class="keyword">done</span>, total 7200/11522, average 0.151 sec/video, moving Prec@1 52.413 Prec@5 80.596</span><br><span class="line">video 7400 <span class="keyword">done</span>, total 7400/11522, average 0.151 sec/video, moving Prec@1 52.470 Prec@5 80.553</span><br><span class="line">video 7600 <span class="keyword">done</span>, total 7600/11522, average 0.151 sec/video, moving Prec@1 52.549 Prec@5 80.631</span><br><span class="line">video 7800 <span class="keyword">done</span>, total 7800/11522, average 0.151 sec/video, moving Prec@1 52.510 Prec@5 80.602</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.151 sec/video, moving Prec@1 52.447 Prec@5 80.587</span><br><span class="line">video 8200 <span class="keyword">done</span>, total 8200/11522, average 0.151 sec/video, moving Prec@1 52.460 Prec@5 80.597</span><br><span class="line">video 8400 <span class="keyword">done</span>, total 8400/11522, average 0.151 sec/video, moving Prec@1 52.556 Prec@5 80.618</span><br><span class="line">video 8600 <span class="keyword">done</span>, total 8600/11522, average 0.151 sec/video, moving Prec@1 52.427 Prec@5 80.604</span><br><span class="line">video 8800 <span class="keyword">done</span>, total 8800/11522, average 0.151 sec/video, moving Prec@1 52.486 Prec@5 80.681</span><br><span class="line">video 9000 <span class="keyword">done</span>, total 9000/11522, average 0.151 sec/video, moving Prec@1 52.431 Prec@5 80.655</span><br><span class="line">video 9200 <span class="keyword">done</span>, total 9200/11522, average 0.151 sec/video, moving Prec@1 52.476 Prec@5 80.662</span><br><span class="line">video 9400 <span class="keyword">done</span>, total 9400/11522, average 0.151 sec/video, moving Prec@1 52.508 Prec@5 80.638</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.151 sec/video, moving Prec@1 52.591 Prec@5 80.666</span><br><span class="line">video 9800 <span class="keyword">done</span>, total 9800/11522, average 0.151 sec/video, moving Prec@1 52.589 Prec@5 80.693</span><br><span class="line">video 10000 <span class="keyword">done</span>, total 10000/11522, average 0.151 sec/video, moving Prec@1 52.667 Prec@5 80.689</span><br><span class="line">video 10200 <span class="keyword">done</span>, total 10200/11522, average 0.151 sec/video, moving Prec@1 52.752 Prec@5 80.695</span><br><span class="line">video 10400 <span class="keyword">done</span>, total 10400/11522, average 0.151 sec/video, moving Prec@1 52.786 Prec@5 80.663</span><br><span class="line">video 10600 <span class="keyword">done</span>, total 10600/11522, average 0.151 sec/video, moving Prec@1 52.762 Prec@5 80.669</span><br><span class="line">video 10800 <span class="keyword">done</span>, total 10800/11522, average 0.151 sec/video, moving Prec@1 52.840 Prec@5 80.712</span><br><span class="line">video 11000 <span class="keyword">done</span>, total 11000/11522, average 0.151 sec/video, moving Prec@1 52.861 Prec@5 80.708</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.151 sec/video, moving Prec@1 52.899 Prec@5 80.740</span><br><span class="line">video 11400 <span class="keyword">done</span>, total 11400/11522, average 0.151 sec/video, moving Prec@1 52.875 Prec@5 80.710</span><br><span class="line">[0.91044776 0.4        0.28571429 0.68656716 0.47368421 0.46551724</span><br><span class="line"> 0.69402985 0.44117647 0.74757282 0.7184466  0.45333333 0.5</span><br><span class="line"> 0.37234043 0.41935484 0.77070064 0.5        0.21084337 0.2875</span><br><span class="line"> 0.4796748  0.38666667 0.368      0.62068966 0.5        0.50980392</span><br><span class="line"> 0.51612903 0.5        0.43478261 0.44       0.72727273 0.6984127</span><br><span class="line"> 0.72727273 0.5        0.83333333 0.24175824 0.26086957 0.22222222</span><br><span class="line"> 0.81609195 0.81372549 0.05263158 0.66666667 0.71900826 0.62</span><br><span class="line"> 0.73846154 0.67346939 0.69230769 0.62295082 0.48529412 0.41052632</span><br><span class="line"> 0.24719101 0.7518797  0.62264151 0.         0.4        0.5</span><br><span class="line"> 0.19047619 0.16666667 0.42424242 0.4375     0.         0.75510204</span><br><span class="line"> 0.6969697  0.22222222 0.64       0.14545455 0.2        0.5</span><br><span class="line"> 0.12962963 0.25757576 0.52112676 0.38461538 0.58064516 0.32142857</span><br><span class="line"> 0.5        0.48       0.83333333 0.5483871  0.23529412 0.58823529</span><br><span class="line"> 0.40909091 0.82926829 0.08571429 0.14285714 0.4        0.26315789</span><br><span class="line"> 0.57142857 0.43103448 0.66216216 0.79365079 0.11111111 0.125</span><br><span class="line"> 0.62162162 0.73170732 0.58139535 0.68518519 0.71962617 0.32258065</span><br><span class="line"> 0.03703704 0.16666667 0.56725146 0.42647059 0.39795918 0.5462963</span><br><span class="line"> 0.21875    0.57142857 0.68292683 0.65714286 0.52808989 0.73913043</span><br><span class="line"> 0.42105263 0.34065934 0.64705882 0.11764706 0.67567568 0.33333333</span><br><span class="line"> 0.66037736 0.5        0.32727273 0.78723404 0.34146341 0.58333333</span><br><span class="line"> 0.82954545 0.58823529 0.39090909 0.475      0.30555556 0.53061224</span><br><span class="line"> 0.52830189 0.61111111 0.13793103 0.66346154 0.28       0.22222222</span><br><span class="line"> 0.28947368 0.33333333 0.72847682 0.39655172 0.         0.26666667</span><br><span class="line"> 0.13559322 0.60526316 0.67       0.44186047 0.40909091 0.45762712</span><br><span class="line"> 0.6        0.47183099 0.62264151 0.19402985 0.59375    0.76</span><br><span class="line"> 0.68484848 0.27419355 0.4        0.88888889 0.57142857 0.23529412</span><br><span class="line"> 0.26229508 0.35714286 0.5049505  0.34375    0.44444444 0.375</span><br><span class="line"> 0.32       0.37931034 0.66666667 0.75757576 0.9223301  0.88679245</span><br><span class="line"> 0.76851852 0.67567568 0.44761905 0.66906475 0.7080292  0.73684211]</span><br><span class="line">upper bound: 0.5027293241199311</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 48.55%</span><br><span class="line">Overall Prec@1 52.86% Prec@5 80.72%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="pan-rgb-pa-rpa"><a class="header-anchor" href="#pan-rgb-pa-rpa">#</a>PAN RGB&amp;PA&amp;RPA</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something \</span></span><br><span class="line"><span class="comment"># --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8 \</span></span><br><span class="line"><span class="comment"># --weights=pretrained/PAN_RPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar \</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/Three.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.267 sec/video, moving Prec@1 56.250 Prec@5 87.500</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.052 sec/video, moving Prec@1 54.167 Prec@5 83.631</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.048 sec/video, moving Prec@1 54.573 Prec@5 82.622</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.047 sec/video, moving Prec@1 53.484 Prec@5 81.557</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.046 sec/video, moving Prec@1 54.321 Prec@5 81.559</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.046 sec/video, moving Prec@1 54.022 Prec@5 80.879</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.045 sec/video, moving Prec@1 53.099 Prec@5 80.527</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.045 sec/video, moving Prec@1 52.793 Prec@5 80.496</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.045 sec/video, moving Prec@1 52.601 Prec@5 80.551</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.045 sec/video, moving Prec@1 52.279 Prec@5 80.318</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.044 sec/video, moving Prec@1 51.959 Prec@5 80.504</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.044 sec/video, moving Prec@1 51.810 Prec@5 80.317</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.044 sec/video, moving Prec@1 51.608 Prec@5 80.005</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.044 sec/video, moving Prec@1 51.389 Prec@5 79.861</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.044 sec/video, moving Prec@1 51.268 Prec@5 79.738</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.044 sec/video, moving Prec@1 50.997 Prec@5 79.527</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.044 sec/video, moving Prec@1 50.759 Prec@5 79.264</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.044 sec/video, moving Prec@1 50.898 Prec@5 79.399</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.044 sec/video, moving Prec@1 50.779 Prec@5 79.224</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.044 sec/video, moving Prec@1 50.820 Prec@5 79.331</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.043 sec/video, moving Prec@1 50.935 Prec@5 79.458</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.043 sec/video, moving Prec@1 50.861 Prec@5 79.454</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.043 sec/video, moving Prec@1 50.893 Prec@5 79.408</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.043 sec/video, moving Prec@1 50.813 Prec@5 79.284</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.043 sec/video, moving Prec@1 50.975 Prec@5 79.431</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.043 sec/video, moving Prec@1 50.948 Prec@5 79.479</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.043 sec/video, moving Prec@1 50.936 Prec@5 79.559</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.043 sec/video, moving Prec@1 50.739 Prec@5 79.552</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.043 sec/video, moving Prec@1 50.780 Prec@5 79.612</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.043 sec/video, moving Prec@1 50.818 Prec@5 79.561</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.043 sec/video, moving Prec@1 50.915 Prec@5 79.555</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.043 sec/video, moving Prec@1 50.946 Prec@5 79.569</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.043 sec/video, moving Prec@1 50.985 Prec@5 79.670</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.043 sec/video, moving Prec@1 51.059 Prec@5 79.643</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.043 sec/video, moving Prec@1 51.120 Prec@5 79.690</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.043 sec/video, moving Prec@1 51.221 Prec@5 79.654</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.043 sec/video, moving Prec@1 51.120 Prec@5 79.622</span><br><span class="line">[0.91044776 0.3625     0.3047619  0.64179104 0.39473684 0.46551724</span><br><span class="line"> 0.67164179 0.41176471 0.6407767  0.67961165 0.41333333 0.47222222</span><br><span class="line"> 0.31914894 0.4516129  0.70700637 0.44       0.25903614 0.275</span><br><span class="line"> 0.44715447 0.4        0.352      0.5862069  0.5        0.43137255</span><br><span class="line"> 0.5483871  0.41666667 0.43478261 0.52       0.72727273 0.65079365</span><br><span class="line"> 0.59090909 0.53846154 0.81481481 0.21978022 0.23913043 0.11111111</span><br><span class="line"> 0.83908046 0.78431373 0.18421053 0.62962963 0.69421488 0.7</span><br><span class="line"> 0.67692308 0.69387755 0.71153846 0.62295082 0.44852941 0.37894737</span><br><span class="line"> 0.21348315 0.69172932 0.59433962 0.         0.4        0.45</span><br><span class="line"> 0.23809524 0.29166667 0.42424242 0.5625     0.         0.7244898</span><br><span class="line"> 0.78787879 0.19444444 0.62       0.18181818 0.1        0.46296296</span><br><span class="line"> 0.18518519 0.22727273 0.47887324 0.30769231 0.5483871  0.25</span><br><span class="line"> 0.47368421 0.48       0.8        0.41935484 0.35294118 0.52941176</span><br><span class="line"> 0.40909091 0.80487805 0.11428571 0.23809524 0.43333333 0.15789474</span><br><span class="line"> 0.57142857 0.39655172 0.63513514 0.66666667 0.16666667 0.10714286</span><br><span class="line"> 0.59459459 0.7804878  0.48837209 0.61111111 0.70093458 0.25806452</span><br><span class="line"> 0.07407407 0.16666667 0.58479532 0.48529412 0.33673469 0.5462963</span><br><span class="line"> 0.1875     0.63265306 0.65853659 0.61904762 0.46067416 0.73913043</span><br><span class="line"> 0.49122807 0.34065934 0.58823529 0.         0.66216216 0.33333333</span><br><span class="line"> 0.56603774 0.36666667 0.34545455 0.79787234 0.29268293 0.5625</span><br><span class="line"> 0.79545455 0.60784314 0.36363636 0.5        0.27777778 0.42857143</span><br><span class="line"> 0.49056604 0.62962963 0.13793103 0.63461538 0.26       0.22222222</span><br><span class="line"> 0.23684211 0.4        0.65562914 0.4137931  0.07142857 0.3</span><br><span class="line"> 0.11864407 0.63157895 0.67       0.37209302 0.45454545 0.48305085</span><br><span class="line"> 0.57333333 0.47887324 0.63207547 0.13432836 0.53125    0.8</span><br><span class="line"> 0.68484848 0.29032258 0.33333333 0.83333333 0.52380952 0.23529412</span><br><span class="line"> 0.26229508 0.34285714 0.46534653 0.28125    0.48148148 0.325</span><br><span class="line"> 0.34       0.37931034 0.7254902  0.75757576 0.9223301  0.86792453</span><br><span class="line"> 0.74074074 0.7027027  0.38095238 0.64028777 0.70072993 0.71052632]</span><br><span class="line">upper bound: 0.48707027638701955</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 47.08%</span><br><span class="line">Overall Prec@1 51.12% Prec@5 79.62%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201009-rgb-pa-rpa-rgb"><a class="header-anchor" href="#20201009-rgb-pa-rpa-rgb">#</a>20201009 RGB&amp;PA&amp;RPA&amp;RGB</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8,8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/AAA.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.221 sec/video, moving Prec@1 56.250 Prec@5 87.500</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.055 sec/video, moving Prec@1 55.060 Prec@5 83.036</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.053 sec/video, moving Prec@1 55.335 Prec@5 82.012</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.052 sec/video, moving Prec@1 54.303 Prec@5 80.840</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.051 sec/video, moving Prec@1 54.552 Prec@5 81.173</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.050 sec/video, moving Prec@1 54.455 Prec@5 80.631</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.050 sec/video, moving Prec@1 53.409 Prec@5 80.217</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.050 sec/video, moving Prec@1 53.236 Prec@5 80.319</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.050 sec/video, moving Prec@1 53.106 Prec@5 80.435</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.050 sec/video, moving Prec@1 52.624 Prec@5 80.249</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.049 sec/video, moving Prec@1 52.239 Prec@5 80.224</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.049 sec/video, moving Prec@1 52.206 Prec@5 80.119</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.049 sec/video, moving Prec@1 52.127 Prec@5 79.798</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.049 sec/video, moving Prec@1 51.796 Prec@5 79.765</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.049 sec/video, moving Prec@1 51.646 Prec@5 79.760</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.049 sec/video, moving Prec@1 51.474 Prec@5 79.360</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.049 sec/video, moving Prec@1 51.188 Prec@5 79.186</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.049 sec/video, moving Prec@1 51.338 Prec@5 79.362</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.049 sec/video, moving Prec@1 51.229 Prec@5 79.190</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.049 sec/video, moving Prec@1 51.280 Prec@5 79.331</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.049 sec/video, moving Prec@1 51.372 Prec@5 79.520</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.049 sec/video, moving Prec@1 51.292 Prec@5 79.528</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.049 sec/video, moving Prec@1 51.361 Prec@5 79.478</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.049 sec/video, moving Prec@1 51.315 Prec@5 79.366</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.049 sec/video, moving Prec@1 51.494 Prec@5 79.548</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.049 sec/video, moving Prec@1 51.422 Prec@5 79.591</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.049 sec/video, moving Prec@1 51.476 Prec@5 79.667</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.049 sec/video, moving Prec@1 51.340 Prec@5 79.656</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.049 sec/video, moving Prec@1 51.326 Prec@5 79.690</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.049 sec/video, moving Prec@1 51.366 Prec@5 79.669</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.049 sec/video, moving Prec@1 51.466 Prec@5 79.732</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.049 sec/video, moving Prec@1 51.449 Prec@5 79.740</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.049 sec/video, moving Prec@1 51.511 Prec@5 79.846</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.049 sec/video, moving Prec@1 51.560 Prec@5 79.870</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.049 sec/video, moving Prec@1 51.597 Prec@5 79.956</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.049 sec/video, moving Prec@1 51.649 Prec@5 79.939</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.049 sec/video, moving Prec@1 51.536 Prec@5 79.865</span><br><span class="line">[0.89552239 0.325      0.28571429 0.64179104 0.44736842 0.46551724</span><br><span class="line"> 0.70149254 0.41176471 0.63106796 0.70873786 0.41333333 0.48611111</span><br><span class="line"> 0.30851064 0.41935484 0.75159236 0.46       0.23493976 0.275</span><br><span class="line"> 0.42276423 0.34666667 0.344      0.62068966 0.5        0.43137255</span><br><span class="line"> 0.51612903 0.41666667 0.43478261 0.48       0.72727273 0.61904762</span><br><span class="line"> 0.63636364 0.57692308 0.83333333 0.25274725 0.32608696 0.16666667</span><br><span class="line"> 0.82758621 0.79411765 0.10526316 0.59259259 0.68595041 0.66</span><br><span class="line"> 0.70769231 0.67346939 0.69230769 0.57377049 0.46323529 0.41052632</span><br><span class="line"> 0.17977528 0.69924812 0.6509434  0.         0.36       0.4</span><br><span class="line"> 0.23809524 0.25       0.42424242 0.5625     0.         0.75510204</span><br><span class="line"> 0.81818182 0.19444444 0.66       0.18181818 0.1        0.49074074</span><br><span class="line"> 0.14814815 0.22727273 0.45070423 0.34615385 0.5483871  0.21428571</span><br><span class="line"> 0.5        0.52       0.81666667 0.51612903 0.35294118 0.52941176</span><br><span class="line"> 0.36363636 0.80487805 0.08571429 0.21428571 0.4        0.15789474</span><br><span class="line"> 0.6        0.37931034 0.59459459 0.65079365 0.27777778 0.07142857</span><br><span class="line"> 0.59459459 0.75609756 0.55813953 0.58333333 0.68224299 0.25806452</span><br><span class="line"> 0.03703704 0.11904762 0.56140351 0.5        0.30612245 0.5462963</span><br><span class="line"> 0.203125   0.6122449  0.65853659 0.63809524 0.53932584 0.73913043</span><br><span class="line"> 0.47368421 0.32967033 0.60784314 0.05882353 0.67567568 0.28571429</span><br><span class="line"> 0.62264151 0.43333333 0.38181818 0.78723404 0.31707317 0.58333333</span><br><span class="line"> 0.81818182 0.60784314 0.36363636 0.5        0.30555556 0.46938776</span><br><span class="line"> 0.45283019 0.62962963 0.15862069 0.625      0.28       0.25925926</span><br><span class="line"> 0.28947368 0.3        0.67549669 0.46551724 0.07142857 0.36666667</span><br><span class="line"> 0.15254237 0.56578947 0.67       0.39534884 0.38636364 0.46610169</span><br><span class="line"> 0.58666667 0.45774648 0.63207547 0.1641791  0.5625     0.824</span><br><span class="line"> 0.68484848 0.29032258 0.36666667 0.83333333 0.54761905 0.15686275</span><br><span class="line"> 0.29508197 0.31428571 0.48514851 0.375      0.5        0.425</span><br><span class="line"> 0.32       0.4137931  0.71568627 0.77272727 0.9223301  0.87735849</span><br><span class="line"> 0.75925926 0.7027027  0.45714286 0.62589928 0.69343066 0.71052632]</span><br><span class="line">upper bound: 0.4923224364393845</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 47.49%</span><br><span class="line">Overall Prec@1 51.54% Prec@5 79.86%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201009-rgb-pa-rpa-rgb-lite-lite"><a class="header-anchor" href="#20201009-rgb-pa-rpa-rgb-lite-lite">#</a>20201009 RGB&amp;PA&amp;RPA&amp;RGB&amp;Lite&amp;Lite</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=8 -j=4 --test_crops=1 --test_segments=8,8,8,8,8,8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_Lite_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_Lite_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar --full_res --twice_sample</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/6.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     Lite</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Converting the ImageNet model to a PAN_Lite init model</span><br><span class="line">=&gt; Done. PAN_lite model ready...</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     Lite</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Converting the ImageNet model to a PAN_Lite init model</span><br><span class="line">=&gt; Done. PAN_lite model ready...</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 1.315 sec/video, moving Prec@1 50.000 Prec@5 75.000</span><br><span class="line">video 160 <span class="keyword">done</span>, total 160/11522, average 0.300 sec/video, moving Prec@1 57.738 Prec@5 86.310</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.314 sec/video, moving Prec@1 55.793 Prec@5 85.366</span><br><span class="line">video 480 <span class="keyword">done</span>, total 480/11522, average 0.318 sec/video, moving Prec@1 57.582 Prec@5 85.656</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.318 sec/video, moving Prec@1 56.636 Prec@5 83.796</span><br><span class="line">video 800 <span class="keyword">done</span>, total 800/11522, average 0.322 sec/video, moving Prec@1 55.569 Prec@5 82.673</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.322 sec/video, moving Prec@1 55.062 Prec@5 82.541</span><br><span class="line">video 1120 <span class="keyword">done</span>, total 1120/11522, average 0.321 sec/video, moving Prec@1 56.206 Prec@5 83.067</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.321 sec/video, moving Prec@1 56.522 Prec@5 83.307</span><br><span class="line">video 1440 <span class="keyword">done</span>, total 1440/11522, average 0.320 sec/video, moving Prec@1 56.354 Prec@5 82.942</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.320 sec/video, moving Prec@1 56.468 Prec@5 83.022</span><br><span class="line">video 1760 <span class="keyword">done</span>, total 1760/11522, average 0.320 sec/video, moving Prec@1 55.826 Prec@5 82.579</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.320 sec/video, moving Prec@1 55.705 Prec@5 82.573</span><br><span class="line">video 2080 <span class="keyword">done</span>, total 2080/11522, average 0.321 sec/video, moving Prec@1 55.603 Prec@5 82.375</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.321 sec/video, moving Prec@1 55.783 Prec@5 82.429</span><br><span class="line">video 2400 <span class="keyword">done</span>, total 2400/11522, average 0.321 sec/video, moving Prec@1 55.399 Prec@5 82.018</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.321 sec/video, moving Prec@1 55.335 Prec@5 82.009</span><br><span class="line">video 2720 <span class="keyword">done</span>, total 2720/11522, average 0.321 sec/video, moving Prec@1 55.389 Prec@5 82.111</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.320 sec/video, moving Prec@1 55.090 Prec@5 82.168</span><br><span class="line">video 3040 <span class="keyword">done</span>, total 3040/11522, average 0.320 sec/video, moving Prec@1 54.921 Prec@5 82.283</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.321 sec/video, moving Prec@1 54.426 Prec@5 82.170</span><br><span class="line">video 3360 <span class="keyword">done</span>, total 3360/11522, average 0.320 sec/video, moving Prec@1 54.365 Prec@5 82.452</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.321 sec/video, moving Prec@1 54.223 Prec@5 82.115</span><br><span class="line">video 3680 <span class="keyword">done</span>, total 3680/11522, average 0.321 sec/video, moving Prec@1 54.094 Prec@5 81.860</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.321 sec/video, moving Prec@1 54.314 Prec@5 81.861</span><br><span class="line">video 4000 <span class="keyword">done</span>, total 4000/11522, average 0.321 sec/video, moving Prec@1 54.167 Prec@5 81.737</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.321 sec/video, moving Prec@1 54.079 Prec@5 81.694</span><br><span class="line">video 4320 <span class="keyword">done</span>, total 4320/11522, average 0.321 sec/video, moving Prec@1 53.997 Prec@5 81.608</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.321 sec/video, moving Prec@1 53.922 Prec@5 81.640</span><br><span class="line">video 4640 <span class="keyword">done</span>, total 4640/11522, average 0.321 sec/video, moving Prec@1 53.894 Prec@5 81.497</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.321 sec/video, moving Prec@1 53.765 Prec@5 81.448</span><br><span class="line">video 4960 <span class="keyword">done</span>, total 4960/11522, average 0.321 sec/video, moving Prec@1 53.462 Prec@5 81.200</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.321 sec/video, moving Prec@1 53.432 Prec@5 81.162</span><br><span class="line">video 5280 <span class="keyword">done</span>, total 5280/11522, average 0.322 sec/video, moving Prec@1 53.423 Prec@5 81.127</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.321 sec/video, moving Prec@1 53.616 Prec@5 81.351</span><br><span class="line">video 5600 <span class="keyword">done</span>, total 5600/11522, average 0.321 sec/video, moving Prec@1 53.709 Prec@5 81.384</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.321 sec/video, moving Prec@1 53.589 Prec@5 81.224</span><br><span class="line">video 5920 <span class="keyword">done</span>, total 5920/11522, average 0.321 sec/video, moving Prec@1 53.492 Prec@5 81.275</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.322 sec/video, moving Prec@1 53.400 Prec@5 81.340</span><br><span class="line">video 6240 <span class="keyword">done</span>, total 6240/11522, average 0.322 sec/video, moving Prec@1 53.457 Prec@5 81.354</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.322 sec/video, moving Prec@1 53.480 Prec@5 81.445</span><br><span class="line">video 6560 <span class="keyword">done</span>, total 6560/11522, average 0.321 sec/video, moving Prec@1 53.426 Prec@5 81.532</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.321 sec/video, moving Prec@1 53.404 Prec@5 81.495</span><br><span class="line">video 6880 <span class="keyword">done</span>, total 6880/11522, average 0.321 sec/video, moving Prec@1 53.296 Prec@5 81.402</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.321 sec/video, moving Prec@1 53.348 Prec@5 81.413</span><br><span class="line">video 7200 <span class="keyword">done</span>, total 7200/11522, average 0.321 sec/video, moving Prec@1 53.344 Prec@5 81.396</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.321 sec/video, moving Prec@1 53.312 Prec@5 81.325</span><br><span class="line">video 7520 <span class="keyword">done</span>, total 7520/11522, average 0.321 sec/video, moving Prec@1 53.374 Prec@5 81.389</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.322 sec/video, moving Prec@1 53.356 Prec@5 81.413</span><br><span class="line">video 7840 <span class="keyword">done</span>, total 7840/11522, average 0.322 sec/video, moving Prec@1 53.313 Prec@5 81.397</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.322 sec/video, moving Prec@1 53.247 Prec@5 81.381</span><br><span class="line">video 8160 <span class="keyword">done</span>, total 8160/11522, average 0.322 sec/video, moving Prec@1 53.293 Prec@5 81.428</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.321 sec/video, moving Prec@1 53.338 Prec@5 81.460</span><br><span class="line">video 8480 <span class="keyword">done</span>, total 8480/11522, average 0.322 sec/video, moving Prec@1 53.228 Prec@5 81.374</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.322 sec/video, moving Prec@1 53.076 Prec@5 81.406</span><br><span class="line">video 8800 <span class="keyword">done</span>, total 8800/11522, average 0.322 sec/video, moving Prec@1 53.134 Prec@5 81.460</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.322 sec/video, moving Prec@1 53.066 Prec@5 81.479</span><br><span class="line">video 9120 <span class="keyword">done</span>, total 9120/11522, average 0.321 sec/video, moving Prec@1 53.024 Prec@5 81.453</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.321 sec/video, moving Prec@1 53.025 Prec@5 81.449</span><br><span class="line">video 9440 <span class="keyword">done</span>, total 9440/11522, average 0.322 sec/video, moving Prec@1 53.059 Prec@5 81.425</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.321 sec/video, moving Prec@1 53.143 Prec@5 81.495</span><br><span class="line">video 9760 <span class="keyword">done</span>, total 9760/11522, average 0.321 sec/video, moving Prec@1 53.184 Prec@5 81.511</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.322 sec/video, moving Prec@1 53.112 Prec@5 81.467</span><br><span class="line">video 10080 <span class="keyword">done</span>, total 10080/11522, average 0.322 sec/video, moving Prec@1 53.202 Prec@5 81.572</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.322 sec/video, moving Prec@1 53.230 Prec@5 81.616</span><br><span class="line">video 10400 <span class="keyword">done</span>, total 10400/11522, average 0.322 sec/video, moving Prec@1 53.324 Prec@5 81.572</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.322 sec/video, moving Prec@1 53.340 Prec@5 81.558</span><br><span class="line">video 10720 <span class="keyword">done</span>, total 10720/11522, average 0.322 sec/video, moving Prec@1 53.384 Prec@5 81.572</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.322 sec/video, moving Prec@1 53.398 Prec@5 81.585</span><br><span class="line">video 11040 <span class="keyword">done</span>, total 11040/11522, average 0.322 sec/video, moving Prec@1 53.385 Prec@5 81.598</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.322 sec/video, moving Prec@1 53.462 Prec@5 81.620</span><br><span class="line">video 11360 <span class="keyword">done</span>, total 11360/11522, average 0.322 sec/video, moving Prec@1 53.439 Prec@5 81.606</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.321 sec/video, moving Prec@1 53.524 Prec@5 81.592</span><br><span class="line">[0.89552239 0.4375     0.3047619  0.67164179 0.47368421 0.49137931</span><br><span class="line"> 0.69402985 0.5        0.73786408 0.73786408 0.52       0.52777778</span><br><span class="line"> 0.41489362 0.41935484 0.8089172  0.48       0.24698795 0.35</span><br><span class="line"> 0.49593496 0.37333333 0.416      0.63793103 0.44444444 0.41176471</span><br><span class="line"> 0.51612903 0.41666667 0.52173913 0.4        0.6969697  0.74603175</span><br><span class="line"> 0.63636364 0.53846154 0.87037037 0.25274725 0.26086957 0.16666667</span><br><span class="line"> 0.8045977  0.85294118 0.07894737 0.62962963 0.7107438  0.66</span><br><span class="line"> 0.72307692 0.69387755 0.71153846 0.67213115 0.47058824 0.43157895</span><br><span class="line"> 0.29213483 0.72932331 0.61320755 0.         0.24       0.55</span><br><span class="line"> 0.23809524 0.20833333 0.51515152 0.5        0.         0.7755102</span><br><span class="line"> 0.78787879 0.25       0.62       0.12727273 0.16666667 0.55555556</span><br><span class="line"> 0.11111111 0.24242424 0.43661972 0.42307692 0.51612903 0.25</span><br><span class="line"> 0.47368421 0.56       0.83333333 0.58064516 0.29411765 0.47058824</span><br><span class="line"> 0.40909091 0.82926829 0.11428571 0.11904762 0.43333333 0.15789474</span><br><span class="line"> 0.62857143 0.39655172 0.64864865 0.77777778 0.11111111 0.08928571</span><br><span class="line"> 0.59459459 0.75609756 0.55813953 0.61111111 0.75700935 0.25806452</span><br><span class="line"> 0.03703704 0.16666667 0.60818713 0.51470588 0.3877551  0.58333333</span><br><span class="line"> 0.234375   0.53061224 0.70731707 0.6952381  0.62921348 0.75362319</span><br><span class="line"> 0.43859649 0.36263736 0.62745098 0.11764706 0.64864865 0.38095238</span><br><span class="line"> 0.66981132 0.46666667 0.32727273 0.78723404 0.31707317 0.60416667</span><br><span class="line"> 0.81818182 0.60784314 0.41818182 0.45       0.27777778 0.51020408</span><br><span class="line"> 0.45283019 0.62962963 0.17241379 0.68269231 0.3        0.18518519</span><br><span class="line"> 0.39473684 0.26666667 0.70198675 0.46551724 0.14285714 0.2</span><br><span class="line"> 0.15254237 0.65789474 0.66       0.3255814  0.52272727 0.48305085</span><br><span class="line"> 0.54666667 0.50704225 0.64150943 0.20895522 0.53125    0.736</span><br><span class="line"> 0.67272727 0.29032258 0.35       0.88888889 0.5952381  0.19607843</span><br><span class="line"> 0.24590164 0.35714286 0.53465347 0.34375    0.48148148 0.375</span><br><span class="line"> 0.36       0.4137931  0.69607843 0.81818182 0.9223301  0.91509434</span><br><span class="line"> 0.74074074 0.7027027  0.47619048 0.61151079 0.7080292  0.71052632]</span><br><span class="line">upper bound: 0.5069670549400674</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 48.98%</span><br><span class="line">Overall Prec@1 53.52% Prec@5 81.59%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201009-rgb-pa-lite（论文结果）"><a class="header-anchor" href="#20201009-rgb-pa-lite（论文结果）">#</a>20201009 RGB&amp;PA&amp;Lite（论文结果）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8 --weights=o/PAN_Lite_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,o/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,o/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar --full_res --twice_sample</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/En.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     Lite</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Converting the ImageNet model to a PAN_Lite init model</span><br><span class="line">=&gt; Done. PAN_lite model ready...</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 1.100 sec/video, moving Prec@1 50.000 Prec@5 75.000</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.158 sec/video, moving Prec@1 58.333 Prec@5 84.226</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.152 sec/video, moving Prec@1 57.317 Prec@5 83.384</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.154 sec/video, moving Prec@1 55.738 Prec@5 81.865</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.152 sec/video, moving Prec@1 56.327 Prec@5 82.639</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.151 sec/video, moving Prec@1 56.436 Prec@5 82.364</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.150 sec/video, moving Prec@1 55.527 Prec@5 81.870</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.150 sec/video, moving Prec@1 55.230 Prec@5 81.826</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.149 sec/video, moving Prec@1 54.775 Prec@5 81.677</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.149 sec/video, moving Prec@1 54.489 Prec@5 81.802</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.149 sec/video, moving Prec@1 54.073 Prec@5 81.872</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.149 sec/video, moving Prec@1 53.761 Prec@5 81.900</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.149 sec/video, moving Prec@1 53.864 Prec@5 81.483</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.149 sec/video, moving Prec@1 53.736 Prec@5 81.418</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.149 sec/video, moving Prec@1 53.536 Prec@5 81.539</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.148 sec/video, moving Prec@1 53.447 Prec@5 81.292</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.149 sec/video, moving Prec@1 53.096 Prec@5 80.900</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.148 sec/video, moving Prec@1 53.262 Prec@5 81.067</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.148 sec/video, moving Prec@1 53.220 Prec@5 80.990</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.148 sec/video, moving Prec@1 53.199 Prec@5 81.119</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.148 sec/video, moving Prec@1 53.226 Prec@5 81.219</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.148 sec/video, moving Prec@1 53.162 Prec@5 81.191</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.148 sec/video, moving Prec@1 53.090 Prec@5 81.179</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.148 sec/video, moving Prec@1 53.050 Prec@5 81.047</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.148 sec/video, moving Prec@1 53.106 Prec@5 81.120</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.148 sec/video, moving Prec@1 53.094 Prec@5 81.025</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.148 sec/video, moving Prec@1 53.095 Prec@5 81.130</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.148 sec/video, moving Prec@1 52.934 Prec@5 81.077</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.148 sec/video, moving Prec@1 53.030 Prec@5 81.061</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.148 sec/video, moving Prec@1 52.937 Prec@5 81.003</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.148 sec/video, moving Prec@1 53.068 Prec@5 81.011</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.148 sec/video, moving Prec@1 53.110 Prec@5 80.988</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.148 sec/video, moving Prec@1 53.218 Prec@5 81.094</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.148 sec/video, moving Prec@1 53.262 Prec@5 81.014</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.147 sec/video, moving Prec@1 53.387 Prec@5 81.057</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.147 sec/video, moving Prec@1 53.424 Prec@5 81.054</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.147 sec/video, moving Prec@1 53.428 Prec@5 81.062</span><br><span class="line">[0.92537313 0.4125     0.35238095 0.68656716 0.36842105 0.52586207</span><br><span class="line"> 0.70149254 0.52941176 0.73786408 0.73786408 0.57333333 0.54166667</span><br><span class="line"> 0.40425532 0.4516129  0.79617834 0.44       0.24698795 0.2875</span><br><span class="line"> 0.42276423 0.4        0.456      0.62068966 0.55555556 0.47058824</span><br><span class="line"> 0.4516129  0.33333333 0.47826087 0.36       0.66666667 0.68253968</span><br><span class="line"> 0.68181818 0.53846154 0.85185185 0.30769231 0.2173913  0.13888889</span><br><span class="line"> 0.8045977  0.80392157 0.10526316 0.66666667 0.72727273 0.64</span><br><span class="line"> 0.7        0.69387755 0.73076923 0.63934426 0.47794118 0.41052632</span><br><span class="line"> 0.28089888 0.7443609  0.67924528 0.         0.44       0.5</span><br><span class="line"> 0.14285714 0.20833333 0.36363636 0.53125    0.         0.71428571</span><br><span class="line"> 0.81818182 0.25       0.58       0.13636364 0.16666667 0.5</span><br><span class="line"> 0.16666667 0.24242424 0.47887324 0.30769231 0.5483871  0.32142857</span><br><span class="line"> 0.5        0.56       0.81666667 0.5483871  0.23529412 0.58823529</span><br><span class="line"> 0.31818182 0.85365854 0.08571429 0.23809524 0.33333333 0.21052632</span><br><span class="line"> 0.62857143 0.43103448 0.67567568 0.79365079 0.05555556 0.14285714</span><br><span class="line"> 0.64864865 0.73170732 0.55813953 0.62962963 0.78504673 0.33870968</span><br><span class="line"> 0.03703704 0.16666667 0.59649123 0.5        0.39795918 0.5462963</span><br><span class="line"> 0.234375   0.42857143 0.70731707 0.66666667 0.52808989 0.69565217</span><br><span class="line"> 0.49122807 0.37362637 0.64705882 0.05882353 0.67567568 0.33333333</span><br><span class="line"> 0.66981132 0.46666667 0.29090909 0.78723404 0.31707317 0.625</span><br><span class="line"> 0.79545455 0.60784314 0.39090909 0.45       0.27777778 0.48979592</span><br><span class="line"> 0.52830189 0.57407407 0.15172414 0.68269231 0.26       0.22222222</span><br><span class="line"> 0.31578947 0.33333333 0.7218543  0.46551724 0.07142857 0.16666667</span><br><span class="line"> 0.11864407 0.60526316 0.69       0.34883721 0.47727273 0.42372881</span><br><span class="line"> 0.54666667 0.50704225 0.62264151 0.19402985 0.625      0.784</span><br><span class="line"> 0.6969697  0.22580645 0.36666667 0.85185185 0.64285714 0.21568627</span><br><span class="line"> 0.27868852 0.37142857 0.52475248 0.3125     0.5        0.4</span><br><span class="line"> 0.34       0.4137931  0.67647059 0.8030303  0.93203883 0.9245283</span><br><span class="line"> 0.75925926 0.72972973 0.41904762 0.6618705  0.7080292  0.72368421]</span><br><span class="line">upper bound: 0.507994552098881</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 48.71%</span><br><span class="line">Overall Prec@1 53.43% Prec@5 81.06%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201012-mypa-myrpa-rgb"><a class="header-anchor" href="#20201012-mypa-myrpa-rgb">#</a>20201012 MyPA&amp;MyRPA&amp;RGB</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar --coeff=2,1,1</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/3.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.328 sec/video, moving Prec@1 50.000 Prec@5 87.500</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.055 sec/video, moving Prec@1 56.845 Prec@5 83.036</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.051 sec/video, moving Prec@1 56.555 Prec@5 82.317</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.049 sec/video, moving Prec@1 55.225 Prec@5 80.328</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.048 sec/video, moving Prec@1 55.941 Prec@5 80.478</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.047 sec/video, moving Prec@1 55.755 Prec@5 80.012</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.047 sec/video, moving Prec@1 54.545 Prec@5 79.855</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.047 sec/video, moving Prec@1 54.388 Prec@5 79.920</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.046 sec/video, moving Prec@1 53.998 Prec@5 80.241</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.046 sec/video, moving Prec@1 53.522 Prec@5 80.180</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.046 sec/video, moving Prec@1 53.016 Prec@5 80.162</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.046 sec/video, moving Prec@1 52.771 Prec@5 80.090</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.046 sec/video, moving Prec@1 52.567 Prec@5 79.694</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.046 sec/video, moving Prec@1 52.275 Prec@5 79.717</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.046 sec/video, moving Prec@1 52.069 Prec@5 79.760</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.046 sec/video, moving Prec@1 51.973 Prec@5 79.485</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.046 sec/video, moving Prec@1 51.616 Prec@5 79.167</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.046 sec/video, moving Prec@1 51.778 Prec@5 79.362</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.046 sec/video, moving Prec@1 51.697 Prec@5 79.172</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.046 sec/video, moving Prec@1 51.657 Prec@5 79.298</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.046 sec/video, moving Prec@1 51.683 Prec@5 79.426</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.046 sec/video, moving Prec@1 51.618 Prec@5 79.424</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.046 sec/video, moving Prec@1 51.644 Prec@5 79.365</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.046 sec/video, moving Prec@1 51.518 Prec@5 79.298</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.046 sec/video, moving Prec@1 51.624 Prec@5 79.483</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.046 sec/video, moving Prec@1 51.622 Prec@5 79.516</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.045 sec/video, moving Prec@1 51.667 Prec@5 79.547</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.045 sec/video, moving Prec@1 51.502 Prec@5 79.598</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.045 sec/video, moving Prec@1 51.515 Prec@5 79.623</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.046 sec/video, moving Prec@1 51.549 Prec@5 79.636</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.046 sec/video, moving Prec@1 51.674 Prec@5 79.690</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.045 sec/video, moving Prec@1 51.671 Prec@5 79.760</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.045 sec/video, moving Prec@1 51.765 Prec@5 79.856</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.045 sec/video, moving Prec@1 51.834 Prec@5 79.803</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.045 sec/video, moving Prec@1 51.927 Prec@5 79.892</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.045 sec/video, moving Prec@1 52.015 Prec@5 79.913</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.045 sec/video, moving Prec@1 51.883 Prec@5 79.865</span><br><span class="line">[0.89552239 0.35       0.28571429 0.62686567 0.34210526 0.46551724</span><br><span class="line"> 0.68656716 0.41176471 0.69902913 0.66990291 0.36       0.54166667</span><br><span class="line"> 0.32978723 0.41935484 0.75159236 0.54       0.24096386 0.275</span><br><span class="line"> 0.45528455 0.34666667 0.344      0.5862069  0.40740741 0.45098039</span><br><span class="line"> 0.4516129  0.41666667 0.43478261 0.52       0.6969697  0.65079365</span><br><span class="line"> 0.59090909 0.57692308 0.83333333 0.24175824 0.32608696 0.16666667</span><br><span class="line"> 0.8045977  0.80392157 0.05263158 0.59259259 0.67768595 0.7</span><br><span class="line"> 0.71538462 0.65306122 0.71153846 0.60655738 0.45588235 0.44210526</span><br><span class="line"> 0.20224719 0.69924812 0.66037736 0.         0.36       0.4</span><br><span class="line"> 0.14285714 0.29166667 0.42424242 0.5625     0.08333333 0.74489796</span><br><span class="line"> 0.75757576 0.27777778 0.64       0.19090909 0.13333333 0.55555556</span><br><span class="line"> 0.14814815 0.22727273 0.42253521 0.34615385 0.5483871  0.28571429</span><br><span class="line"> 0.47368421 0.52       0.81666667 0.51612903 0.35294118 0.47058824</span><br><span class="line"> 0.36363636 0.7804878  0.08571429 0.16666667 0.4        0.21052632</span><br><span class="line"> 0.6        0.34482759 0.62162162 0.68253968 0.33333333 0.10714286</span><br><span class="line"> 0.59459459 0.80487805 0.51162791 0.62037037 0.71028037 0.30645161</span><br><span class="line"> 0.07407407 0.14285714 0.55555556 0.47058824 0.32653061 0.57407407</span><br><span class="line"> 0.21875    0.63265306 0.62195122 0.67619048 0.52808989 0.72463768</span><br><span class="line"> 0.49122807 0.34065934 0.58823529 0.05882353 0.68918919 0.38095238</span><br><span class="line"> 0.66037736 0.4        0.38181818 0.80851064 0.36585366 0.58333333</span><br><span class="line"> 0.84090909 0.58823529 0.39090909 0.5        0.33333333 0.46938776</span><br><span class="line"> 0.49056604 0.61111111 0.16551724 0.64423077 0.24       0.25925926</span><br><span class="line"> 0.31578947 0.23333333 0.69536424 0.48275862 0.07142857 0.4</span><br><span class="line"> 0.20338983 0.61842105 0.66       0.39534884 0.38636364 0.47457627</span><br><span class="line"> 0.52       0.45070423 0.61320755 0.17910448 0.546875   0.8</span><br><span class="line"> 0.64242424 0.30645161 0.38333333 0.81481481 0.54761905 0.21568627</span><br><span class="line"> 0.26229508 0.35714286 0.54455446 0.375      0.48148148 0.35</span><br><span class="line"> 0.34       0.4137931  0.73529412 0.74242424 0.9223301  0.86792453</span><br><span class="line"> 0.72222222 0.72972973 0.42857143 0.62589928 0.66423358 0.71052632]</span><br><span class="line">upper bound: 0.4917864461284819</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 47.79%</span><br><span class="line">Overall Prec@1 51.88% Prec@5 79.86%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201014-rgbo-pan"><a class="header-anchor" href="#20201014-rgbo-pan">#</a>20201014 RGBo&amp;PAn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8 --weights=</span></span><br><span class="line"><span class="comment"># pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar </span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/Full.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.249 sec/video, moving Prec@1 50.000 Prec@5 81.250</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.034 sec/video, moving Prec@1 55.655 Prec@5 83.333</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.029 sec/video, moving Prec@1 55.793 Prec@5 81.860</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.027 sec/video, moving Prec@1 54.303 Prec@5 80.328</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.026 sec/video, moving Prec@1 54.552 Prec@5 80.633</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.026 sec/video, moving Prec@1 54.270 Prec@5 80.012</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.025 sec/video, moving Prec@1 53.048 Prec@5 79.597</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.025 sec/video, moving Prec@1 53.059 Prec@5 79.654</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.025 sec/video, moving Prec@1 52.717 Prec@5 79.697</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.025 sec/video, moving Prec@1 52.314 Prec@5 79.731</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.025 sec/video, moving Prec@1 52.146 Prec@5 79.633</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.024 sec/video, moving Prec@1 51.923 Prec@5 79.525</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.024 sec/video, moving Prec@1 51.867 Prec@5 79.175</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.024 sec/video, moving Prec@1 51.700 Prec@5 79.119</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.024 sec/video, moving Prec@1 51.624 Prec@5 79.181</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.024 sec/video, moving Prec@1 51.329 Prec@5 78.841</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.024 sec/video, moving Prec@1 50.974 Prec@5 78.583</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.024 sec/video, moving Prec@1 51.228 Prec@5 78.757</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.024 sec/video, moving Prec@1 51.108 Prec@5 78.636</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.024 sec/video, moving Prec@1 51.050 Prec@5 78.773</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.024 sec/video, moving Prec@1 51.044 Prec@5 78.959</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.024 sec/video, moving Prec@1 50.920 Prec@5 78.934</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.024 sec/video, moving Prec@1 50.935 Prec@5 78.784</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.024 sec/video, moving Prec@1 50.908 Prec@5 78.783</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.024 sec/video, moving Prec@1 51.014 Prec@5 78.950</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.024 sec/video, moving Prec@1 50.998 Prec@5 79.004</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.024 sec/video, moving Prec@1 50.960 Prec@5 79.007</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.024 sec/video, moving Prec@1 50.843 Prec@5 78.963</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.024 sec/video, moving Prec@1 50.869 Prec@5 78.966</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.024 sec/video, moving Prec@1 50.925 Prec@5 78.959</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.024 sec/video, moving Prec@1 51.050 Prec@5 78.973</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.024 sec/video, moving Prec@1 51.027 Prec@5 79.006</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.024 sec/video, moving Prec@1 51.160 Prec@5 79.105</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.024 sec/video, moving Prec@1 51.248 Prec@5 79.085</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.024 sec/video, moving Prec@1 51.276 Prec@5 79.157</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.024 sec/video, moving Prec@1 51.302 Prec@5 79.173</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.024 sec/video, moving Prec@1 51.206 Prec@5 79.170</span><br><span class="line">[0.88059701 0.3375     0.26666667 0.62686567 0.31578947 0.49137931</span><br><span class="line"> 0.6641791  0.5        0.69902913 0.68932039 0.38666667 0.55555556</span><br><span class="line"> 0.31914894 0.38709677 0.75159236 0.54       0.24096386 0.2625</span><br><span class="line"> 0.44715447 0.28       0.336      0.5862069  0.40740741 0.47058824</span><br><span class="line"> 0.4516129  0.41666667 0.47826087 0.52       0.75757576 0.65079365</span><br><span class="line"> 0.63636364 0.57692308 0.85185185 0.23076923 0.34782609 0.08333333</span><br><span class="line"> 0.7816092  0.79411765 0.07894737 0.59259259 0.66942149 0.66</span><br><span class="line"> 0.73076923 0.65306122 0.75       0.62295082 0.43382353 0.43157895</span><br><span class="line"> 0.17977528 0.69924812 0.58490566 0.         0.32       0.45</span><br><span class="line"> 0.14285714 0.20833333 0.45454545 0.5        0.08333333 0.74489796</span><br><span class="line"> 0.72727273 0.22222222 0.64       0.17272727 0.13333333 0.50925926</span><br><span class="line"> 0.12962963 0.18181818 0.46478873 0.38461538 0.51612903 0.32142857</span><br><span class="line"> 0.5        0.56       0.81666667 0.51612903 0.29411765 0.52941176</span><br><span class="line"> 0.36363636 0.82926829 0.14285714 0.14285714 0.33333333 0.21052632</span><br><span class="line"> 0.65714286 0.36206897 0.62162162 0.71428571 0.33333333 0.10714286</span><br><span class="line"> 0.56756757 0.80487805 0.48837209 0.59259259 0.69158879 0.30645161</span><br><span class="line"> 0.07407407 0.11904762 0.56140351 0.5        0.32653061 0.57407407</span><br><span class="line"> 0.203125   0.65306122 0.69512195 0.65714286 0.50561798 0.72463768</span><br><span class="line"> 0.47368421 0.37362637 0.62745098 0.05882353 0.63513514 0.38095238</span><br><span class="line"> 0.6509434  0.46666667 0.30909091 0.78723404 0.29268293 0.58333333</span><br><span class="line"> 0.80681818 0.58823529 0.4        0.5        0.33333333 0.44897959</span><br><span class="line"> 0.50943396 0.57407407 0.16551724 0.60576923 0.24       0.22222222</span><br><span class="line"> 0.31578947 0.23333333 0.70198675 0.4137931  0.07142857 0.38333333</span><br><span class="line"> 0.18644068 0.57894737 0.68       0.44186047 0.40909091 0.44915254</span><br><span class="line"> 0.56       0.42253521 0.62264151 0.1641791  0.4375     0.784</span><br><span class="line"> 0.63636364 0.24193548 0.4        0.81481481 0.52380952 0.2745098</span><br><span class="line"> 0.2295082  0.42857143 0.51485149 0.34375    0.44444444 0.3</span><br><span class="line"> 0.36       0.4137931  0.69607843 0.75757576 0.9223301  0.8490566</span><br><span class="line"> 0.69444444 0.75675676 0.41904762 0.63309353 0.64233577 0.68421053]</span><br><span class="line">upper bound: 0.4885991836244713</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 47.34%</span><br><span class="line">Overall Prec@1 51.21% Prec@5 79.17%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201014-rgbo-pao-pan"><a class="header-anchor" href="#20201014-rgbo-pao-pan">#</a>20201014 RGBo&amp;PAo&amp;PAn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8 --weights=</span></span><br><span class="line"><span class="comment"># pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,</span></span><br><span class="line"><span class="comment"># o/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar --coeff=2,1,1</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/3-old-new.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.323 sec/video, moving Prec@1 50.000 Prec@5 81.250</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.056 sec/video, moving Prec@1 53.869 Prec@5 82.440</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.050 sec/video, moving Prec@1 54.116 Prec@5 82.012</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.048 sec/video, moving Prec@1 53.074 Prec@5 80.738</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.048 sec/video, moving Prec@1 53.935 Prec@5 81.019</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.047 sec/video, moving Prec@1 53.713 Prec@5 80.507</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.047 sec/video, moving Prec@1 52.841 Prec@5 80.269</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.046 sec/video, moving Prec@1 52.881 Prec@5 80.408</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.046 sec/video, moving Prec@1 52.911 Prec@5 80.551</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.046 sec/video, moving Prec@1 52.521 Prec@5 80.456</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.046 sec/video, moving Prec@1 52.208 Prec@5 80.442</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.045 sec/video, moving Prec@1 51.951 Prec@5 80.373</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.045 sec/video, moving Prec@1 51.893 Prec@5 80.031</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.045 sec/video, moving Prec@1 51.652 Prec@5 79.909</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.045 sec/video, moving Prec@1 51.624 Prec@5 79.982</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.045 sec/video, moving Prec@1 51.433 Prec@5 79.713</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.045 sec/video, moving Prec@1 51.168 Prec@5 79.459</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.045 sec/video, moving Prec@1 51.430 Prec@5 79.619</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.045 sec/video, moving Prec@1 51.333 Prec@5 79.519</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.045 sec/video, moving Prec@1 51.345 Prec@5 79.544</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.045 sec/video, moving Prec@1 51.418 Prec@5 79.723</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.045 sec/video, moving Prec@1 51.232 Prec@5 79.706</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.045 sec/video, moving Prec@1 51.247 Prec@5 79.592</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.045 sec/video, moving Prec@1 51.166 Prec@5 79.515</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.045 sec/video, moving Prec@1 51.312 Prec@5 79.652</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.045 sec/video, moving Prec@1 51.322 Prec@5 79.703</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.045 sec/video, moving Prec@1 51.308 Prec@5 79.690</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.045 sec/video, moving Prec@1 51.178 Prec@5 79.644</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.045 sec/video, moving Prec@1 51.203 Prec@5 79.635</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.045 sec/video, moving Prec@1 51.216 Prec@5 79.615</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.045 sec/video, moving Prec@1 51.373 Prec@5 79.638</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.045 sec/video, moving Prec@1 51.318 Prec@5 79.670</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.045 sec/video, moving Prec@1 51.424 Prec@5 79.797</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.045 sec/video, moving Prec@1 51.522 Prec@5 79.784</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.045 sec/video, moving Prec@1 51.597 Prec@5 79.837</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.045 sec/video, moving Prec@1 51.658 Prec@5 79.850</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.044 sec/video, moving Prec@1 51.554 Prec@5 79.847</span><br><span class="line">[0.89552239 0.3375     0.24761905 0.67164179 0.34210526 0.50862069</span><br><span class="line"> 0.70895522 0.44117647 0.66019417 0.7184466  0.4        0.48611111</span><br><span class="line"> 0.35106383 0.35483871 0.76433121 0.52       0.23493976 0.2875</span><br><span class="line"> 0.45528455 0.36       0.336      0.62068966 0.48148148 0.49019608</span><br><span class="line"> 0.51612903 0.41666667 0.47826087 0.4        0.72727273 0.65079365</span><br><span class="line"> 0.59090909 0.57692308 0.87037037 0.25274725 0.2826087  0.16666667</span><br><span class="line"> 0.82758621 0.80392157 0.05263158 0.55555556 0.66942149 0.66</span><br><span class="line"> 0.73076923 0.67346939 0.76923077 0.63934426 0.45588235 0.42105263</span><br><span class="line"> 0.16853933 0.69172932 0.63207547 0.         0.36       0.45</span><br><span class="line"> 0.14285714 0.29166667 0.42424242 0.5        0.         0.75510204</span><br><span class="line"> 0.75757576 0.13888889 0.64       0.16363636 0.1        0.49074074</span><br><span class="line"> 0.18518519 0.21212121 0.46478873 0.30769231 0.5483871  0.28571429</span><br><span class="line"> 0.5        0.56       0.83333333 0.4516129  0.35294118 0.58823529</span><br><span class="line"> 0.27272727 0.80487805 0.08571429 0.14285714 0.36666667 0.15789474</span><br><span class="line"> 0.65714286 0.37931034 0.62162162 0.68253968 0.33333333 0.07142857</span><br><span class="line"> 0.54054054 0.75609756 0.53488372 0.57407407 0.6728972  0.29032258</span><br><span class="line"> 0.07407407 0.11904762 0.55555556 0.48529412 0.34693878 0.53703704</span><br><span class="line"> 0.203125   0.55102041 0.7195122  0.64761905 0.50561798 0.73913043</span><br><span class="line"> 0.47368421 0.37362637 0.60784314 0.05882353 0.64864865 0.33333333</span><br><span class="line"> 0.62264151 0.46666667 0.34545455 0.77659574 0.34146341 0.60416667</span><br><span class="line"> 0.80681818 0.58823529 0.38181818 0.5        0.33333333 0.46938776</span><br><span class="line"> 0.47169811 0.61111111 0.15862069 0.63461538 0.24       0.22222222</span><br><span class="line"> 0.23684211 0.33333333 0.70198675 0.4137931  0.         0.4</span><br><span class="line"> 0.16949153 0.55263158 0.66       0.44186047 0.38636364 0.45762712</span><br><span class="line"> 0.56       0.45774648 0.63207547 0.17910448 0.484375   0.808</span><br><span class="line"> 0.65454545 0.30645161 0.41666667 0.7962963  0.57142857 0.2745098</span><br><span class="line"> 0.26229508 0.34285714 0.5049505  0.34375    0.42592593 0.325</span><br><span class="line"> 0.32       0.4137931  0.69607843 0.77272727 0.9223301  0.86792453</span><br><span class="line"> 0.72222222 0.75675676 0.42857143 0.64028777 0.66423358 0.73684211]</span><br><span class="line">upper bound: 0.49272722679828856</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 47.36%</span><br><span class="line">Overall Prec@1 51.55% Prec@5 79.85%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201014-rgbo-pan-lpan"><a class="header-anchor" href="#20201014-rgbo-pan-lpan">#</a>20201014 RGBo&amp;PAn&amp;LPAn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8 --weights=</span></span><br><span class="line"><span class="comment"># pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_LPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar --coeff=2,1,1</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/3-lpa-pa.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.302 sec/video, moving Prec@1 43.750 Prec@5 81.250</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.055 sec/video, moving Prec@1 54.464 Prec@5 81.845</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.050 sec/video, moving Prec@1 54.878 Prec@5 82.317</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.049 sec/video, moving Prec@1 53.074 Prec@5 80.533</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.048 sec/video, moving Prec@1 53.704 Prec@5 81.250</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.048 sec/video, moving Prec@1 53.837 Prec@5 80.817</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.048 sec/video, moving Prec@1 52.738 Prec@5 80.475</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.047 sec/video, moving Prec@1 52.793 Prec@5 80.496</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.047 sec/video, moving Prec@1 52.484 Prec@5 80.668</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.047 sec/video, moving Prec@1 52.141 Prec@5 80.594</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.047 sec/video, moving Prec@1 51.835 Prec@5 80.597</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.047 sec/video, moving Prec@1 51.753 Prec@5 80.571</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.047 sec/video, moving Prec@1 51.738 Prec@5 80.083</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.047 sec/video, moving Prec@1 51.269 Prec@5 79.981</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.047 sec/video, moving Prec@1 51.179 Prec@5 80.027</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.047 sec/video, moving Prec@1 50.976 Prec@5 79.610</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.047 sec/video, moving Prec@1 50.662 Prec@5 79.400</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.047 sec/video, moving Prec@1 50.990 Prec@5 79.619</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.047 sec/video, moving Prec@1 50.952 Prec@5 79.467</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.047 sec/video, moving Prec@1 50.984 Prec@5 79.593</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.047 sec/video, moving Prec@1 51.044 Prec@5 79.660</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.047 sec/video, moving Prec@1 50.965 Prec@5 79.572</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.047 sec/video, moving Prec@1 50.950 Prec@5 79.521</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.047 sec/video, moving Prec@1 50.935 Prec@5 79.420</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.047 sec/video, moving Prec@1 51.117 Prec@5 79.561</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.046 sec/video, moving Prec@1 51.160 Prec@5 79.591</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.046 sec/video, moving Prec@1 51.188 Prec@5 79.607</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.046 sec/video, moving Prec@1 51.051 Prec@5 79.552</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.046 sec/video, moving Prec@1 51.081 Prec@5 79.557</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.046 sec/video, moving Prec@1 51.108 Prec@5 79.518</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.046 sec/video, moving Prec@1 51.258 Prec@5 79.545</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.046 sec/video, moving Prec@1 51.178 Prec@5 79.539</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.046 sec/video, moving Prec@1 51.297 Prec@5 79.631</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.046 sec/video, moving Prec@1 51.466 Prec@5 79.605</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.046 sec/video, moving Prec@1 51.523 Prec@5 79.653</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.046 sec/video, moving Prec@1 51.632 Prec@5 79.690</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.046 sec/video, moving Prec@1 51.562 Prec@5 79.665</span><br><span class="line">[0.88059701 0.3375     0.24761905 0.65671642 0.28947368 0.46551724</span><br><span class="line"> 0.68656716 0.5        0.66990291 0.70873786 0.38666667 0.52777778</span><br><span class="line"> 0.29787234 0.35483871 0.76433121 0.52       0.21084337 0.2875</span><br><span class="line"> 0.44715447 0.32       0.352      0.62068966 0.38888889 0.49019608</span><br><span class="line"> 0.51612903 0.41666667 0.47826087 0.56       0.78787879 0.68253968</span><br><span class="line"> 0.63636364 0.57692308 0.87037037 0.21978022 0.2826087  0.19444444</span><br><span class="line"> 0.81609195 0.80392157 0.07894737 0.66666667 0.67768595 0.66</span><br><span class="line"> 0.71538462 0.69387755 0.75       0.60655738 0.41911765 0.43157895</span><br><span class="line"> 0.19101124 0.71428571 0.63207547 0.         0.4        0.45</span><br><span class="line"> 0.14285714 0.25       0.48484848 0.5        0.08333333 0.7755102</span><br><span class="line"> 0.72727273 0.16666667 0.62       0.2        0.13333333 0.51851852</span><br><span class="line"> 0.16666667 0.22727273 0.47887324 0.34615385 0.5483871  0.32142857</span><br><span class="line"> 0.5        0.52       0.81666667 0.5483871  0.35294118 0.52941176</span><br><span class="line"> 0.40909091 0.80487805 0.11428571 0.14285714 0.36666667 0.21052632</span><br><span class="line"> 0.6        0.37931034 0.62162162 0.68253968 0.16666667 0.08928571</span><br><span class="line"> 0.59459459 0.80487805 0.53488372 0.57407407 0.71028037 0.29032258</span><br><span class="line"> 0.07407407 0.16666667 0.5497076  0.47058824 0.32653061 0.55555556</span><br><span class="line"> 0.1875     0.6122449  0.68292683 0.64761905 0.53932584 0.72463768</span><br><span class="line"> 0.47368421 0.35164835 0.58823529 0.05882353 0.62162162 0.38095238</span><br><span class="line"> 0.66981132 0.5        0.32727273 0.77659574 0.34146341 0.58333333</span><br><span class="line"> 0.82954545 0.56862745 0.39090909 0.5        0.33333333 0.46938776</span><br><span class="line"> 0.47169811 0.57407407 0.15172414 0.63461538 0.26       0.25925926</span><br><span class="line"> 0.26315789 0.33333333 0.68874172 0.39655172 0.14285714 0.31666667</span><br><span class="line"> 0.18644068 0.56578947 0.66       0.44186047 0.36363636 0.47457627</span><br><span class="line"> 0.58666667 0.45070423 0.61320755 0.14925373 0.46875    0.8</span><br><span class="line"> 0.66666667 0.24193548 0.38333333 0.7962963  0.5        0.29411765</span><br><span class="line"> 0.27868852 0.42857143 0.48514851 0.34375    0.44444444 0.35</span><br><span class="line"> 0.34       0.44827586 0.70588235 0.74242424 0.9223301  0.85849057</span><br><span class="line"> 0.71296296 0.75675676 0.44761905 0.65467626 0.65693431 0.71052632]</span><br><span class="line">upper bound: 0.49360881004950025</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 47.77%</span><br><span class="line">Overall Prec@1 51.56% Prec@5 79.66%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201014-rgbo-rpan-lpan"><a class="header-anchor" href="#20201014-rgbo-rpan-lpan">#</a>20201014 RGBo&amp;RPAn&amp;LPAn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8 --weights=</span></span><br><span class="line"><span class="comment"># pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_RPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_LPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar --coeff=2,1,1</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/3-lpa-rpa.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.289 sec/video, moving Prec@1 43.750 Prec@5 87.500</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.054 sec/video, moving Prec@1 55.357 Prec@5 83.333</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.050 sec/video, moving Prec@1 56.250 Prec@5 82.774</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.048 sec/video, moving Prec@1 54.098 Prec@5 80.840</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.047 sec/video, moving Prec@1 54.707 Prec@5 81.096</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.047 sec/video, moving Prec@1 54.517 Prec@5 80.693</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.047 sec/video, moving Prec@1 53.409 Prec@5 80.269</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.047 sec/video, moving Prec@1 53.369 Prec@5 80.363</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.047 sec/video, moving Prec@1 53.028 Prec@5 80.474</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.047 sec/video, moving Prec@1 52.624 Prec@5 80.421</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.047 sec/video, moving Prec@1 52.208 Prec@5 80.410</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.047 sec/video, moving Prec@1 52.291 Prec@5 80.373</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.047 sec/video, moving Prec@1 52.127 Prec@5 79.850</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.047 sec/video, moving Prec@1 51.580 Prec@5 79.765</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.047 sec/video, moving Prec@1 51.379 Prec@5 79.782</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.047 sec/video, moving Prec@1 51.204 Prec@5 79.402</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.047 sec/video, moving Prec@1 50.896 Prec@5 79.167</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.047 sec/video, moving Prec@1 51.045 Prec@5 79.417</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.047 sec/video, moving Prec@1 50.952 Prec@5 79.259</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.047 sec/video, moving Prec@1 51.050 Prec@5 79.446</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.047 sec/video, moving Prec@1 51.122 Prec@5 79.551</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.047 sec/video, moving Prec@1 51.024 Prec@5 79.543</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.047 sec/video, moving Prec@1 51.006 Prec@5 79.493</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.047 sec/video, moving Prec@1 51.003 Prec@5 79.501</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.047 sec/video, moving Prec@1 51.156 Prec@5 79.665</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.047 sec/video, moving Prec@1 51.135 Prec@5 79.678</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.047 sec/video, moving Prec@1 51.164 Prec@5 79.750</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.047 sec/video, moving Prec@1 50.970 Prec@5 79.748</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.046 sec/video, moving Prec@1 50.925 Prec@5 79.779</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.046 sec/video, moving Prec@1 50.957 Prec@5 79.755</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.047 sec/video, moving Prec@1 51.102 Prec@5 79.815</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.047 sec/video, moving Prec@1 51.057 Prec@5 79.821</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.046 sec/video, moving Prec@1 51.180 Prec@5 79.914</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.046 sec/video, moving Prec@1 51.276 Prec@5 79.898</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.046 sec/video, moving Prec@1 51.358 Prec@5 79.965</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.046 sec/video, moving Prec@1 51.462 Prec@5 79.993</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.046 sec/video, moving Prec@1 51.380 Prec@5 79.934</span><br><span class="line">[0.89552239 0.3375     0.25714286 0.62686567 0.31578947 0.44827586</span><br><span class="line"> 0.70149254 0.44117647 0.66019417 0.69902913 0.38666667 0.51388889</span><br><span class="line"> 0.30851064 0.41935484 0.74522293 0.5        0.21084337 0.2625</span><br><span class="line"> 0.44715447 0.4        0.328      0.60344828 0.35185185 0.43137255</span><br><span class="line"> 0.4516129  0.41666667 0.47826087 0.56       0.75757576 0.66666667</span><br><span class="line"> 0.72727273 0.57692308 0.83333333 0.21978022 0.30434783 0.19444444</span><br><span class="line"> 0.8045977  0.80392157 0.07894737 0.66666667 0.66942149 0.62</span><br><span class="line"> 0.7        0.67346939 0.75       0.60655738 0.44852941 0.38947368</span><br><span class="line"> 0.15730337 0.70676692 0.6509434  0.         0.36       0.45</span><br><span class="line"> 0.14285714 0.25       0.42424242 0.53125    0.         0.78571429</span><br><span class="line"> 0.75757576 0.25       0.64       0.22727273 0.13333333 0.50925926</span><br><span class="line"> 0.16666667 0.25757576 0.45070423 0.42307692 0.5483871  0.28571429</span><br><span class="line"> 0.47368421 0.52       0.76666667 0.5483871  0.35294118 0.47058824</span><br><span class="line"> 0.36363636 0.80487805 0.08571429 0.14285714 0.4        0.15789474</span><br><span class="line"> 0.54285714 0.34482759 0.60810811 0.66666667 0.22222222 0.08928571</span><br><span class="line"> 0.56756757 0.80487805 0.58139535 0.56481481 0.68224299 0.29032258</span><br><span class="line"> 0.07407407 0.11904762 0.56140351 0.44117647 0.32653061 0.55555556</span><br><span class="line"> 0.21875    0.63265306 0.64634146 0.62857143 0.5505618  0.72463768</span><br><span class="line"> 0.47368421 0.32967033 0.58823529 0.05882353 0.64864865 0.38095238</span><br><span class="line"> 0.66037736 0.4        0.38181818 0.78723404 0.36585366 0.5625</span><br><span class="line"> 0.80681818 0.60784314 0.39090909 0.5        0.30555556 0.46938776</span><br><span class="line"> 0.47169811 0.62962963 0.14482759 0.61538462 0.3        0.25925926</span><br><span class="line"> 0.26315789 0.26666667 0.68211921 0.44827586 0.07142857 0.31666667</span><br><span class="line"> 0.16949153 0.59210526 0.65       0.41860465 0.40909091 0.46610169</span><br><span class="line"> 0.6        0.43661972 0.61320755 0.11940299 0.5625     0.792</span><br><span class="line"> 0.67272727 0.25806452 0.36666667 0.81481481 0.57142857 0.19607843</span><br><span class="line"> 0.27868852 0.38571429 0.52475248 0.375      0.5        0.4</span><br><span class="line"> 0.32       0.44827586 0.71568627 0.75757576 0.9223301  0.87735849</span><br><span class="line"> 0.73148148 0.75675676 0.46666667 0.64028777 0.64233577 0.68421053]</span><br><span class="line">upper bound: 0.49090826225102707</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 47.50%</span><br><span class="line">Overall Prec@1 51.38% Prec@5 79.93%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201014-rgbo-lpan"><a class="header-anchor" href="#20201014-rgbo-lpan">#</a>20201014 RGBo&amp;LPAn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8 --weights=</span></span><br><span class="line"><span class="comment"># pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_LPA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar </span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/2-lpa.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line">            </span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.237 sec/video, moving Prec@1 43.750 Prec@5 81.250</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.034 sec/video, moving Prec@1 51.786 Prec@5 83.036</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.029 sec/video, moving Prec@1 53.354 Prec@5 82.470</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.027 sec/video, moving Prec@1 51.742 Prec@5 79.918</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.026 sec/video, moving Prec@1 52.469 Prec@5 80.247</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.026 sec/video, moving Prec@1 52.413 Prec@5 79.950</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.025 sec/video, moving Prec@1 51.601 Prec@5 79.804</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.025 sec/video, moving Prec@1 51.817 Prec@5 79.876</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.025 sec/video, moving Prec@1 51.708 Prec@5 79.852</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.025 sec/video, moving Prec@1 51.450 Prec@5 79.869</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.025 sec/video, moving Prec@1 50.964 Prec@5 79.851</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.025 sec/video, moving Prec@1 50.962 Prec@5 79.808</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.025 sec/video, moving Prec@1 51.011 Prec@5 79.357</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.024 sec/video, moving Prec@1 50.694 Prec@5 79.119</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.024 sec/video, moving Prec@1 50.556 Prec@5 79.070</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.024 sec/video, moving Prec@1 50.374 Prec@5 78.675</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.024 sec/video, moving Prec@1 50.117 Prec@5 78.427</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.024 sec/video, moving Prec@1 50.385 Prec@5 78.666</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.024 sec/video, moving Prec@1 50.346 Prec@5 78.532</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.024 sec/video, moving Prec@1 50.476 Prec@5 78.724</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.024 sec/video, moving Prec@1 50.530 Prec@5 78.803</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.024 sec/video, moving Prec@1 50.386 Prec@5 78.711</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.024 sec/video, moving Prec@1 50.368 Prec@5 78.713</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.024 sec/video, moving Prec@1 50.325 Prec@5 78.633</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.024 sec/video, moving Prec@1 50.533 Prec@5 78.833</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.024 sec/video, moving Prec@1 50.487 Prec@5 78.855</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.024 sec/video, moving Prec@1 50.504 Prec@5 78.911</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.024 sec/video, moving Prec@1 50.335 Prec@5 78.847</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.024 sec/video, moving Prec@1 50.267 Prec@5 78.855</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.024 sec/video, moving Prec@1 50.258 Prec@5 78.840</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.024 sec/video, moving Prec@1 50.374 Prec@5 78.869</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.024 sec/video, moving Prec@1 50.312 Prec@5 78.845</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.024 sec/video, moving Prec@1 50.468 Prec@5 78.939</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.024 sec/video, moving Prec@1 50.605 Prec@5 78.896</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.024 sec/video, moving Prec@1 50.698 Prec@5 78.956</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.024 sec/video, moving Prec@1 50.811 Prec@5 79.003</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.024 sec/video, moving Prec@1 50.790 Prec@5 78.979</span><br><span class="line">[0.91044776 0.3875     0.25714286 0.62686567 0.31578947 0.4137931</span><br><span class="line"> 0.69402985 0.52941176 0.65048544 0.72815534 0.4        0.5</span><br><span class="line"> 0.28723404 0.41935484 0.75796178 0.46       0.19277108 0.275</span><br><span class="line"> 0.45528455 0.36       0.344      0.5862069  0.31481481 0.49019608</span><br><span class="line"> 0.48387097 0.41666667 0.47826087 0.52       0.75757576 0.68253968</span><br><span class="line"> 0.72727273 0.61538462 0.83333333 0.20879121 0.26086957 0.16666667</span><br><span class="line"> 0.81609195 0.80392157 0.05263158 0.66666667 0.66942149 0.64</span><br><span class="line"> 0.71538462 0.67346939 0.73076923 0.59016393 0.41176471 0.42105263</span><br><span class="line"> 0.15730337 0.69172932 0.63207547 0.         0.4        0.45</span><br><span class="line"> 0.14285714 0.20833333 0.36363636 0.46875    0.         0.81632653</span><br><span class="line"> 0.66666667 0.16666667 0.62       0.22727273 0.16666667 0.50925926</span><br><span class="line"> 0.16666667 0.21212121 0.45070423 0.46153846 0.5483871  0.35714286</span><br><span class="line"> 0.5        0.52       0.78333333 0.5483871  0.41176471 0.52941176</span><br><span class="line"> 0.36363636 0.82926829 0.11428571 0.11904762 0.36666667 0.15789474</span><br><span class="line"> 0.54285714 0.32758621 0.60810811 0.6984127  0.22222222 0.07142857</span><br><span class="line"> 0.54054054 0.70731707 0.55813953 0.5462963  0.68224299 0.24193548</span><br><span class="line"> 0.07407407 0.19047619 0.54385965 0.39705882 0.33673469 0.53703704</span><br><span class="line"> 0.203125   0.59183673 0.62195122 0.63809524 0.56179775 0.73913043</span><br><span class="line"> 0.43859649 0.32967033 0.56862745 0.05882353 0.58108108 0.42857143</span><br><span class="line"> 0.64150943 0.43333333 0.34545455 0.78723404 0.3902439  0.58333333</span><br><span class="line"> 0.81818182 0.58823529 0.39090909 0.5        0.33333333 0.44897959</span><br><span class="line"> 0.43396226 0.55555556 0.14482759 0.63461538 0.26       0.18518519</span><br><span class="line"> 0.28947368 0.3        0.66887417 0.39655172 0.07142857 0.21666667</span><br><span class="line"> 0.13559322 0.59210526 0.62       0.41860465 0.43181818 0.46610169</span><br><span class="line"> 0.6        0.42957746 0.61320755 0.11940299 0.484375   0.776</span><br><span class="line"> 0.67878788 0.22580645 0.36666667 0.83333333 0.57142857 0.2745098</span><br><span class="line"> 0.26229508 0.42857143 0.4950495  0.34375    0.44444444 0.325</span><br><span class="line"> 0.26       0.4137931  0.7254902  0.75757576 0.9223301  0.8490566</span><br><span class="line"> 0.72222222 0.72972973 0.48571429 0.65467626 0.65693431 0.69736842]</span><br><span class="line">upper bound: 0.4877900527936639</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 46.92%</span><br><span class="line">Overall Prec@1 50.79% Prec@5 78.98%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201019-pa-with-new-conv-rgb"><a class="header-anchor" href="#20201019-pa-with-new-conv-rgb">#</a>20201019 PA with new conv &amp; RGB</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/Full.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.    </span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.246 sec/video, moving Prec@1 43.750 Prec@5 87.500</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.034 sec/video, moving Prec@1 54.167 Prec@5 83.036</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.029 sec/video, moving Prec@1 54.421 Prec@5 82.317</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.028 sec/video, moving Prec@1 52.459 Prec@5 80.328</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.027 sec/video, moving Prec@1 53.472 Prec@5 80.633</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.026 sec/video, moving Prec@1 53.218 Prec@5 80.074</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.026 sec/video, moving Prec@1 52.531 Prec@5 79.907</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.026 sec/video, moving Prec@1 52.482 Prec@5 79.699</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.025 sec/video, moving Prec@1 52.019 Prec@5 79.658</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.025 sec/video, moving Prec@1 51.623 Prec@5 79.489</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.025 sec/video, moving Prec@1 51.057 Prec@5 79.509</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.025 sec/video, moving Prec@1 50.990 Prec@5 79.525</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.025 sec/video, moving Prec@1 51.011 Prec@5 79.149</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.025 sec/video, moving Prec@1 50.766 Prec@5 79.143</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.025 sec/video, moving Prec@1 50.712 Prec@5 79.248</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.025 sec/video, moving Prec@1 50.478 Prec@5 78.987</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.025 sec/video, moving Prec@1 50.253 Prec@5 78.738</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.025 sec/video, moving Prec@1 50.293 Prec@5 78.867</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.025 sec/video, moving Prec@1 50.381 Prec@5 78.722</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.025 sec/video, moving Prec@1 50.525 Prec@5 78.822</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.025 sec/video, moving Prec@1 50.592 Prec@5 79.037</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.025 sec/video, moving Prec@1 50.460 Prec@5 78.934</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.025 sec/video, moving Prec@1 50.468 Prec@5 78.883</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.025 sec/video, moving Prec@1 50.461 Prec@5 78.823</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.024 sec/video, moving Prec@1 50.572 Prec@5 79.002</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.024 sec/video, moving Prec@1 50.474 Prec@5 79.029</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.024 sec/video, moving Prec@1 50.528 Prec@5 79.031</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.024 sec/video, moving Prec@1 50.393 Prec@5 78.986</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.024 sec/video, moving Prec@1 50.390 Prec@5 79.022</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.024 sec/video, moving Prec@1 50.333 Prec@5 78.926</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.024 sec/video, moving Prec@1 50.499 Prec@5 78.952</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.024 sec/video, moving Prec@1 50.543 Prec@5 78.975</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.024 sec/video, moving Prec@1 50.644 Prec@5 79.134</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.024 sec/video, moving Prec@1 50.766 Prec@5 79.113</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.024 sec/video, moving Prec@1 50.835 Prec@5 79.176</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.024 sec/video, moving Prec@1 50.945 Prec@5 79.182</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.024 sec/video, moving Prec@1 50.920 Prec@5 79.101</span><br><span class="line">[0.89552239 0.3375     0.26666667 0.62686567 0.34210526 0.45689655</span><br><span class="line"> 0.70895522 0.52941176 0.61165049 0.69902913 0.44       0.51388889</span><br><span class="line"> 0.29787234 0.38709677 0.74522293 0.46       0.18674699 0.275</span><br><span class="line"> 0.46341463 0.38666667 0.408      0.5        0.37037037 0.49019608</span><br><span class="line"> 0.4516129  0.5        0.39130435 0.36       0.6969697  0.6984127</span><br><span class="line"> 0.63636364 0.57692308 0.90740741 0.14285714 0.2173913  0.13888889</span><br><span class="line"> 0.7816092  0.78431373 0.15789474 0.59259259 0.7107438  0.66</span><br><span class="line"> 0.71538462 0.71428571 0.75       0.60655738 0.45588235 0.41052632</span><br><span class="line"> 0.24719101 0.68421053 0.67924528 0.         0.32       0.5</span><br><span class="line"> 0.19047619 0.25       0.42424242 0.53125    0.08333333 0.71428571</span><br><span class="line"> 0.63636364 0.22222222 0.64       0.16363636 0.13333333 0.48148148</span><br><span class="line"> 0.12962963 0.1969697  0.46478873 0.38461538 0.51612903 0.28571429</span><br><span class="line"> 0.47368421 0.56       0.76666667 0.48387097 0.47058824 0.35294118</span><br><span class="line"> 0.27272727 0.82926829 0.17142857 0.19047619 0.33333333 0.10526316</span><br><span class="line"> 0.51428571 0.36206897 0.59459459 0.63492063 0.22222222 0.16071429</span><br><span class="line"> 0.48648649 0.75609756 0.48837209 0.56481481 0.69158879 0.29032258</span><br><span class="line"> 0.07407407 0.07142857 0.53216374 0.51470588 0.34693878 0.60185185</span><br><span class="line"> 0.234375   0.6122449  0.52439024 0.68571429 0.52808989 0.68115942</span><br><span class="line"> 0.49122807 0.40659341 0.64705882 0.         0.67567568 0.42857143</span><br><span class="line"> 0.63207547 0.43333333 0.36363636 0.76595745 0.36585366 0.58333333</span><br><span class="line"> 0.79545455 0.74509804 0.38181818 0.475      0.36111111 0.57142857</span><br><span class="line"> 0.49056604 0.57407407 0.14482759 0.625      0.3        0.18518519</span><br><span class="line"> 0.28947368 0.26666667 0.67549669 0.4137931  0.14285714 0.41666667</span><br><span class="line"> 0.15254237 0.53947368 0.66       0.37209302 0.38636364 0.3559322</span><br><span class="line"> 0.58666667 0.42957746 0.67924528 0.17910448 0.484375   0.784</span><br><span class="line"> 0.64848485 0.27419355 0.38333333 0.75925926 0.52380952 0.19607843</span><br><span class="line"> 0.27868852 0.35714286 0.46534653 0.5        0.46296296 0.35</span><br><span class="line"> 0.32       0.4137931  0.65686275 0.72727273 0.91262136 0.86792453</span><br><span class="line"> 0.69444444 0.64864865 0.44761905 0.6618705  0.64963504 0.73684211]</span><br><span class="line">upper bound: 0.48456300049059403</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 46.96%</span><br><span class="line">Overall Prec@1 50.92% Prec@5 79.10%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201019-pa-with-new-conv-rgb-2"><a class="header-anchor" href="#20201019-pa-with-new-conv-rgb-2">#</a>20201019 PA with new conv &amp; RGB</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/Full.sh</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.242 sec/video, moving Prec@1 43.750 Prec@5 87.500</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.034 sec/video, moving Prec@1 54.167 Prec@5 82.440</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.029 sec/video, moving Prec@1 53.963 Prec@5 82.317</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.027 sec/video, moving Prec@1 52.357 Prec@5 80.430</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.026 sec/video, moving Prec@1 53.164 Prec@5 80.710</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.026 sec/video, moving Prec@1 53.032 Prec@5 80.322</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.025 sec/video, moving Prec@1 52.428 Prec@5 80.165</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.025 sec/video, moving Prec@1 52.438 Prec@5 80.053</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.025 sec/video, moving Prec@1 52.135 Prec@5 79.852</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.025 sec/video, moving Prec@1 51.761 Prec@5 79.765</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.025 sec/video, moving Prec@1 51.182 Prec@5 79.789</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.025 sec/video, moving Prec@1 51.131 Prec@5 79.751</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.025 sec/video, moving Prec@1 51.193 Prec@5 79.357</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.024 sec/video, moving Prec@1 50.958 Prec@5 79.286</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.024 sec/video, moving Prec@1 50.845 Prec@5 79.404</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.024 sec/video, moving Prec@1 50.602 Prec@5 79.111</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.024 sec/video, moving Prec@1 50.389 Prec@5 78.894</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.024 sec/video, moving Prec@1 50.513 Prec@5 79.051</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.024 sec/video, moving Prec@1 50.623 Prec@5 78.895</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.024 sec/video, moving Prec@1 50.853 Prec@5 79.003</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.024 sec/video, moving Prec@1 50.982 Prec@5 79.193</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.024 sec/video, moving Prec@1 50.772 Prec@5 79.097</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.024 sec/video, moving Prec@1 50.779 Prec@5 79.025</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.024 sec/video, moving Prec@1 50.786 Prec@5 78.959</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.024 sec/video, moving Prec@1 50.910 Prec@5 79.158</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.024 sec/video, moving Prec@1 50.836 Prec@5 79.154</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.024 sec/video, moving Prec@1 50.852 Prec@5 79.163</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.024 sec/video, moving Prec@1 50.716 Prec@5 79.124</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.024 sec/video, moving Prec@1 50.657 Prec@5 79.133</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.024 sec/video, moving Prec@1 50.592 Prec@5 79.045</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.024 sec/video, moving Prec@1 50.759 Prec@5 79.077</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.024 sec/video, moving Prec@1 50.815 Prec@5 79.116</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.024 sec/video, moving Prec@1 50.907 Prec@5 79.280</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.024 sec/video, moving Prec@1 51.031 Prec@5 79.255</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.024 sec/video, moving Prec@1 51.101 Prec@5 79.314</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.024 sec/video, moving Prec@1 51.213 Prec@5 79.333</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.024 sec/video, moving Prec@1 51.180 Prec@5 79.283</span><br><span class="line">[0.91044776 0.3125     0.26666667 0.59701493 0.34210526 0.48275862</span><br><span class="line"> 0.73134328 0.5        0.63106796 0.70873786 0.44       0.48611111</span><br><span class="line"> 0.31914894 0.41935484 0.75159236 0.44       0.20481928 0.3125</span><br><span class="line"> 0.46341463 0.4        0.416      0.5        0.38888889 0.49019608</span><br><span class="line"> 0.4516129  0.41666667 0.39130435 0.36       0.6969697  0.68253968</span><br><span class="line"> 0.63636364 0.53846154 0.90740741 0.14285714 0.23913043 0.13888889</span><br><span class="line"> 0.8045977  0.80392157 0.13157895 0.59259259 0.7107438  0.64</span><br><span class="line"> 0.73076923 0.71428571 0.75       0.60655738 0.45588235 0.43157895</span><br><span class="line"> 0.26966292 0.70676692 0.6509434  0.         0.32       0.45</span><br><span class="line"> 0.19047619 0.25       0.45454545 0.53125    0.08333333 0.73469388</span><br><span class="line"> 0.6969697  0.22222222 0.64       0.18181818 0.13333333 0.5</span><br><span class="line"> 0.12962963 0.21212121 0.46478873 0.34615385 0.51612903 0.21428571</span><br><span class="line"> 0.47368421 0.56       0.83333333 0.4516129  0.29411765 0.41176471</span><br><span class="line"> 0.22727273 0.82926829 0.17142857 0.19047619 0.3        0.10526316</span><br><span class="line"> 0.54285714 0.34482759 0.59459459 0.63492063 0.16666667 0.16071429</span><br><span class="line"> 0.54054054 0.75609756 0.46511628 0.60185185 0.6635514  0.29032258</span><br><span class="line"> 0.07407407 0.07142857 0.52046784 0.51470588 0.32653061 0.58333333</span><br><span class="line"> 0.234375   0.59183673 0.56097561 0.6952381  0.57303371 0.68115942</span><br><span class="line"> 0.49122807 0.3956044  0.64705882 0.         0.67567568 0.38095238</span><br><span class="line"> 0.63207547 0.46666667 0.36363636 0.75531915 0.3902439  0.60416667</span><br><span class="line"> 0.78409091 0.76470588 0.39090909 0.475      0.36111111 0.53061224</span><br><span class="line"> 0.49056604 0.57407407 0.15172414 0.61538462 0.34       0.11111111</span><br><span class="line"> 0.28947368 0.26666667 0.66225166 0.43103448 0.14285714 0.4</span><br><span class="line"> 0.13559322 0.52631579 0.67       0.39534884 0.38636364 0.33050847</span><br><span class="line"> 0.57333333 0.42253521 0.68867925 0.17910448 0.53125    0.768</span><br><span class="line"> 0.64848485 0.29032258 0.38333333 0.77777778 0.51190476 0.19607843</span><br><span class="line"> 0.29508197 0.37142857 0.5049505  0.46875    0.44444444 0.325</span><br><span class="line"> 0.34       0.44827586 0.66666667 0.72727273 0.91262136 0.87735849</span><br><span class="line"> 0.72222222 0.64864865 0.43809524 0.64028777 0.65693431 0.73684211]</span><br><span class="line">upper bound: 0.4842930969956842</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 46.93%</span><br><span class="line">Overall Prec@1 51.18% Prec@5 79.28%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201021-rgbo"><a class="header-anchor" href="#20201021-rgbo">#</a>20201021 RGBo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">$ python test_models.py something --VAP --batch_size=8 -j=4 --test_crops=1 --test_segments=8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 3.718 sec/video, moving Prec@1 25.000 Prec@5 62.500</span><br><span class="line">video 160 <span class="keyword">done</span>, total 160/11522, average 0.239 sec/video, moving Prec@1 46.429 Prec@5 76.786</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.193 sec/video, moving Prec@1 47.866 Prec@5 76.220</span><br><span class="line">video 480 <span class="keyword">done</span>, total 480/11522, average 0.190 sec/video, moving Prec@1 47.951 Prec@5 78.074</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.176 sec/video, moving Prec@1 46.759 Prec@5 76.698</span><br><span class="line">video 800 <span class="keyword">done</span>, total 800/11522, average 0.168 sec/video, moving Prec@1 45.421 Prec@5 75.248</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.159 sec/video, moving Prec@1 45.971 Prec@5 74.690</span><br><span class="line">video 1120 <span class="keyword">done</span>, total 1120/11522, average 0.152 sec/video, moving Prec@1 46.099 Prec@5 74.734</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.144 sec/video, moving Prec@1 46.429 Prec@5 75.233</span><br><span class="line">video 1440 <span class="keyword">done</span>, total 1440/11522, average 0.140 sec/video, moving Prec@1 46.685 Prec@5 74.862</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.139 sec/video, moving Prec@1 46.766 Prec@5 74.876</span><br><span class="line">video 1760 <span class="keyword">done</span>, total 1760/11522, average 0.139 sec/video, moving Prec@1 45.871 Prec@5 74.321</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.135 sec/video, moving Prec@1 45.747 Prec@5 74.274</span><br><span class="line">video 2080 <span class="keyword">done</span>, total 2080/11522, average 0.133 sec/video, moving Prec@1 45.546 Prec@5 74.234</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.132 sec/video, moving Prec@1 45.418 Prec@5 74.199</span><br><span class="line">video 2400 <span class="keyword">done</span>, total 2400/11522, average 0.131 sec/video, moving Prec@1 45.307 Prec@5 74.211</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.130 sec/video, moving Prec@1 45.132 Prec@5 74.182</span><br><span class="line">video 2720 <span class="keyword">done</span>, total 2720/11522, average 0.128 sec/video, moving Prec@1 45.345 Prec@5 74.450</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.126 sec/video, moving Prec@1 44.910 Prec@5 74.100</span><br><span class="line">video 3040 <span class="keyword">done</span>, total 3040/11522, average 0.124 sec/video, moving Prec@1 44.980 Prec@5 74.180</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.124 sec/video, moving Prec@1 44.514 Prec@5 74.034</span><br><span class="line">video 3360 <span class="keyword">done</span>, total 3360/11522, average 0.122 sec/video, moving Prec@1 44.626 Prec@5 74.228</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.121 sec/video, moving Prec@1 44.586 Prec@5 74.093</span><br><span class="line">video 3680 <span class="keyword">done</span>, total 3680/11522, average 0.119 sec/video, moving Prec@1 44.306 Prec@5 73.861</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.119 sec/video, moving Prec@1 44.491 Prec@5 73.831</span><br><span class="line">video 4000 <span class="keyword">done</span>, total 4000/11522, average 0.118 sec/video, moving Prec@1 44.212 Prec@5 73.802</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.117 sec/video, moving Prec@1 44.218 Prec@5 73.800</span><br><span class="line">video 4320 <span class="keyword">done</span>, total 4320/11522, average 0.117 sec/video, moving Prec@1 44.362 Prec@5 73.706</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.116 sec/video, moving Prec@1 44.385 Prec@5 73.708</span><br><span class="line">video 4640 <span class="keyword">done</span>, total 4640/11522, average 0.115 sec/video, moving Prec@1 44.535 Prec@5 73.580</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.114 sec/video, moving Prec@1 44.468 Prec@5 73.440</span><br><span class="line">video 4960 <span class="keyword">done</span>, total 4960/11522, average 0.113 sec/video, moving Prec@1 44.304 Prec@5 73.289</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.113 sec/video, moving Prec@1 44.423 Prec@5 73.362</span><br><span class="line">video 5280 <span class="keyword">done</span>, total 5280/11522, average 0.112 sec/video, moving Prec@1 44.402 Prec@5 73.298</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.112 sec/video, moving Prec@1 44.475 Prec@5 73.477</span><br><span class="line">video 5600 <span class="keyword">done</span>, total 5600/11522, average 0.112 sec/video, moving Prec@1 44.454 Prec@5 73.520</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.113 sec/video, moving Prec@1 44.435 Prec@5 73.370</span><br><span class="line">video 5920 <span class="keyword">done</span>, total 5920/11522, average 0.116 sec/video, moving Prec@1 44.518 Prec@5 73.482</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.117 sec/video, moving Prec@1 44.514 Prec@5 73.489</span><br><span class="line">video 6240 <span class="keyword">done</span>, total 6240/11522, average 0.117 sec/video, moving Prec@1 44.542 Prec@5 73.464</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.117 sec/video, moving Prec@1 44.538 Prec@5 73.533</span><br><span class="line">video 6560 <span class="keyword">done</span>, total 6560/11522, average 0.116 sec/video, moving Prec@1 44.488 Prec@5 73.538</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.116 sec/video, moving Prec@1 44.471 Prec@5 73.484</span><br><span class="line">video 6880 <span class="keyword">done</span>, total 6880/11522, average 0.115 sec/video, moving Prec@1 44.440 Prec@5 73.432</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.115 sec/video, moving Prec@1 44.509 Prec@5 73.411</span><br><span class="line">video 7200 <span class="keyword">done</span>, total 7200/11522, average 0.114 sec/video, moving Prec@1 44.478 Prec@5 73.432</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.114 sec/video, moving Prec@1 44.435 Prec@5 73.358</span><br><span class="line">video 7520 <span class="keyword">done</span>, total 7520/11522, average 0.114 sec/video, moving Prec@1 44.474 Prec@5 73.433</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.113 sec/video, moving Prec@1 44.511 Prec@5 73.452</span><br><span class="line">video 7840 <span class="keyword">done</span>, total 7840/11522, average 0.113 sec/video, moving Prec@1 44.521 Prec@5 73.471</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.112 sec/video, moving Prec@1 44.456 Prec@5 73.489</span><br><span class="line">video 8160 <span class="keyword">done</span>, total 8160/11522, average 0.111 sec/video, moving Prec@1 44.478 Prec@5 73.470</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.111 sec/video, moving Prec@1 44.549 Prec@5 73.487</span><br><span class="line">video 8480 <span class="keyword">done</span>, total 8480/11522, average 0.111 sec/video, moving Prec@1 44.475 Prec@5 73.445</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.110 sec/video, moving Prec@1 44.438 Prec@5 73.462</span><br><span class="line">video 8800 <span class="keyword">done</span>, total 8800/11522, average 0.110 sec/video, moving Prec@1 44.550 Prec@5 73.490</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.109 sec/video, moving Prec@1 44.625 Prec@5 73.550</span><br><span class="line">video 9120 <span class="keyword">done</span>, total 9120/11522, average 0.109 sec/video, moving Prec@1 44.665 Prec@5 73.510</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.109 sec/video, moving Prec@1 44.660 Prec@5 73.482</span><br><span class="line">video 9440 <span class="keyword">done</span>, total 9440/11522, average 0.108 sec/video, moving Prec@1 44.634 Prec@5 73.455</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.108 sec/video, moving Prec@1 44.775 Prec@5 73.564</span><br><span class="line">video 9760 <span class="keyword">done</span>, total 9760/11522, average 0.107 sec/video, moving Prec@1 44.799 Prec@5 73.618</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.106 sec/video, moving Prec@1 44.722 Prec@5 73.580</span><br><span class="line">video 10080 <span class="keyword">done</span>, total 10080/11522, average 0.106 sec/video, moving Prec@1 44.826 Prec@5 73.672</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.105 sec/video, moving Prec@1 44.838 Prec@5 73.800</span><br><span class="line">video 10400 <span class="keyword">done</span>, total 10400/11522, average 0.105 sec/video, moving Prec@1 44.860 Prec@5 73.741</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.104 sec/video, moving Prec@1 44.909 Prec@5 73.723</span><br><span class="line">video 10720 <span class="keyword">done</span>, total 10720/11522, average 0.104 sec/video, moving Prec@1 44.976 Prec@5 73.723</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.104 sec/video, moving Prec@1 44.994 Prec@5 73.778</span><br><span class="line">video 11040 <span class="keyword">done</span>, total 11040/11522, average 0.104 sec/video, moving Prec@1 44.904 Prec@5 73.724</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.103 sec/video, moving Prec@1 44.995 Prec@5 73.742</span><br><span class="line">video 11360 <span class="keyword">done</span>, total 11360/11522, average 0.103 sec/video, moving Prec@1 44.986 Prec@5 73.716</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.102 sec/video, moving Prec@1 44.975 Prec@5 73.685</span><br><span class="line">[0.7761194  0.275      0.19047619 0.62686567 0.23684211 0.40517241</span><br><span class="line"> 0.62686567 0.44117647 0.45631068 0.6407767  0.37333333 0.38888889</span><br><span class="line"> 0.24468085 0.32258065 0.7133758  0.36       0.19879518 0.225</span><br><span class="line"> 0.39837398 0.28       0.32       0.48275862 0.40740741 0.43137255</span><br><span class="line"> 0.32258065 0.33333333 0.39130435 0.28       0.60606061 0.53968254</span><br><span class="line"> 0.63636364 0.57692308 0.72222222 0.10989011 0.23913043 0.16666667</span><br><span class="line"> 0.7816092  0.78431373 0.05263158 0.48148148 0.62809917 0.54</span><br><span class="line"> 0.66923077 0.63265306 0.59615385 0.52459016 0.41176471 0.34736842</span><br><span class="line"> 0.15730337 0.66165414 0.56603774 0.         0.36       0.4</span><br><span class="line"> 0.19047619 0.29166667 0.39393939 0.40625    0.         0.73469388</span><br><span class="line"> 0.60606061 0.13888889 0.6        0.11818182 0.1        0.38888889</span><br><span class="line"> 0.11111111 0.15151515 0.43661972 0.30769231 0.48387097 0.25</span><br><span class="line"> 0.5        0.44       0.7        0.41935484 0.29411765 0.29411765</span><br><span class="line"> 0.13636364 0.63414634 0.11428571 0.14285714 0.33333333 0.10526316</span><br><span class="line"> 0.62857143 0.29310345 0.52702703 0.55555556 0.16666667 0.10714286</span><br><span class="line"> 0.48648649 0.68292683 0.41860465 0.46296296 0.57009346 0.27419355</span><br><span class="line"> 0.03703704 0.11904762 0.41520468 0.41176471 0.24489796 0.51851852</span><br><span class="line"> 0.21875    0.46938776 0.42682927 0.6        0.5505618  0.75362319</span><br><span class="line"> 0.47368421 0.2967033  0.54901961 0.11764706 0.60810811 0.38095238</span><br><span class="line"> 0.66037736 0.36666667 0.21818182 0.62765957 0.2195122  0.58333333</span><br><span class="line"> 0.79545455 0.54901961 0.35454545 0.425      0.36111111 0.44897959</span><br><span class="line"> 0.49056604 0.53703704 0.15862069 0.53846154 0.22       0.18518519</span><br><span class="line"> 0.13157895 0.23333333 0.64238411 0.29310345 0.07142857 0.45</span><br><span class="line"> 0.08474576 0.51315789 0.57       0.34883721 0.25       0.38135593</span><br><span class="line"> 0.56       0.33098592 0.6509434  0.17910448 0.484375   0.752</span><br><span class="line"> 0.56363636 0.12903226 0.28333333 0.7037037  0.5        0.15686275</span><br><span class="line"> 0.18032787 0.21428571 0.43564356 0.4375     0.24074074 0.25</span><br><span class="line"> 0.26       0.31034483 0.60784314 0.66666667 0.83495146 0.75471698</span><br><span class="line"> 0.68518519 0.45945946 0.44761905 0.61870504 0.59124088 0.71052632]</span><br><span class="line">upper bound: 0.42524204990350917</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 40.94%</span><br><span class="line">Overall Prec@1 44.97% Prec@5 73.69%</span><br><span class="line">E:\Program Files\Anaconda3\envs\tsm\lib\site-packages\numpy\core\_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201021-rgbo-pan-liten"><a class="header-anchor" href="#20201021-rgbo-pan-liten">#</a>20201021 RGBo &amp; PAn &amp; Liten</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8 --weights=</span></span><br><span class="line"><span class="comment"># pretrained/PAN_Lite_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar --full_res --twice_sample</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/En.sh</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     Lite</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Converting the ImageNet model to a PAN_Lite init model</span><br><span class="line">=&gt; Done. PAN_lite model ready...</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 1.035 sec/video, moving Prec@1 50.000 Prec@5 81.250</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.156 sec/video, moving Prec@1 54.464 Prec@5 86.012</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.151 sec/video, moving Prec@1 56.707 Prec@5 84.299</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.150 sec/video, moving Prec@1 55.635 Prec@5 82.377</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.148 sec/video, moving Prec@1 56.481 Prec@5 83.102</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.148 sec/video, moving Prec@1 56.621 Prec@5 83.106</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.146 sec/video, moving Prec@1 55.682 Prec@5 82.800</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.146 sec/video, moving Prec@1 55.629 Prec@5 82.624</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.145 sec/video, moving Prec@1 55.668 Prec@5 82.026</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.145 sec/video, moving Prec@1 55.249 Prec@5 82.113</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.145 sec/video, moving Prec@1 54.851 Prec@5 82.121</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.145 sec/video, moving Prec@1 54.666 Prec@5 82.070</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.144 sec/video, moving Prec@1 54.876 Prec@5 81.743</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.144 sec/video, moving Prec@1 54.741 Prec@5 81.561</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.144 sec/video, moving Prec@1 54.560 Prec@5 81.539</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.143 sec/video, moving Prec@1 54.360 Prec@5 81.333</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.143 sec/video, moving Prec@1 53.972 Prec@5 81.055</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.143 sec/video, moving Prec@1 54.271 Prec@5 81.305</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.143 sec/video, moving Prec@1 54.276 Prec@5 81.198</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.143 sec/video, moving Prec@1 54.068 Prec@5 81.283</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.143 sec/video, moving Prec@1 54.193 Prec@5 81.390</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.143 sec/video, moving Prec@1 54.097 Prec@5 81.309</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.143 sec/video, moving Prec@1 53.997 Prec@5 81.278</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.143 sec/video, moving Prec@1 53.932 Prec@5 81.223</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.143 sec/video, moving Prec@1 53.963 Prec@5 81.302</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.143 sec/video, moving Prec@1 53.905 Prec@5 81.275</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.143 sec/video, moving Prec@1 53.839 Prec@5 81.310</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.143 sec/video, moving Prec@1 53.662 Prec@5 81.181</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.143 sec/video, moving Prec@1 53.632 Prec@5 81.205</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.143 sec/video, moving Prec@1 53.647 Prec@5 81.185</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.143 sec/video, moving Prec@1 53.744 Prec@5 81.198</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.143 sec/video, moving Prec@1 53.744 Prec@5 81.180</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.143 sec/video, moving Prec@1 53.890 Prec@5 81.318</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.142 sec/video, moving Prec@1 53.943 Prec@5 81.288</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.142 sec/video, moving Prec@1 53.992 Prec@5 81.360</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.142 sec/video, moving Prec@1 54.012 Prec@5 81.419</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.142 sec/video, moving Prec@1 54.044 Prec@5 81.427</span><br><span class="line">[0.89552239 0.3875     0.36190476 0.65671642 0.44736842 0.50862069</span><br><span class="line"> 0.69402985 0.47058824 0.74757282 0.76699029 0.44       0.63888889</span><br><span class="line"> 0.41489362 0.38709677 0.81528662 0.56       0.21084337 0.3125</span><br><span class="line"> 0.5203252  0.4        0.416      0.67241379 0.40740741 0.43137255</span><br><span class="line"> 0.51612903 0.41666667 0.47826087 0.44       0.72727273 0.6984127</span><br><span class="line"> 0.68181818 0.61538462 0.85185185 0.23076923 0.32608696 0.16666667</span><br><span class="line"> 0.82758621 0.82352941 0.13157895 0.7037037  0.70247934 0.68</span><br><span class="line"> 0.71538462 0.67346939 0.73076923 0.63934426 0.46323529 0.47368421</span><br><span class="line"> 0.30337079 0.65413534 0.6509434  0.         0.32       0.55</span><br><span class="line"> 0.14285714 0.29166667 0.48484848 0.59375    0.         0.75510204</span><br><span class="line"> 0.75757576 0.25       0.64       0.15454545 0.16666667 0.58333333</span><br><span class="line"> 0.11111111 0.21212121 0.45070423 0.38461538 0.5483871  0.28571429</span><br><span class="line"> 0.5        0.6        0.85       0.58064516 0.23529412 0.41176471</span><br><span class="line"> 0.36363636 0.80487805 0.14285714 0.0952381  0.4        0.10526316</span><br><span class="line"> 0.62857143 0.39655172 0.64864865 0.80952381 0.22222222 0.10714286</span><br><span class="line"> 0.56756757 0.7804878  0.60465116 0.65740741 0.75700935 0.30645161</span><br><span class="line"> 0.07407407 0.19047619 0.57894737 0.57352941 0.37755102 0.58333333</span><br><span class="line"> 0.25       0.69387755 0.69512195 0.72380952 0.59550562 0.72463768</span><br><span class="line"> 0.38596491 0.3956044  0.60784314 0.11764706 0.67567568 0.47619048</span><br><span class="line"> 0.66037736 0.53333333 0.29090909 0.74468085 0.36585366 0.64583333</span><br><span class="line"> 0.81818182 0.60784314 0.43636364 0.475      0.36111111 0.55102041</span><br><span class="line"> 0.43396226 0.59259259 0.13793103 0.65384615 0.3        0.25925926</span><br><span class="line"> 0.34210526 0.23333333 0.70860927 0.5        0.14285714 0.31666667</span><br><span class="line"> 0.18644068 0.60526316 0.69       0.34883721 0.54545455 0.47457627</span><br><span class="line"> 0.50666667 0.48591549 0.61320755 0.20895522 0.53125    0.76</span><br><span class="line"> 0.67878788 0.24193548 0.43333333 0.90740741 0.60714286 0.2745098</span><br><span class="line"> 0.26229508 0.41428571 0.48514851 0.34375    0.48148148 0.425</span><br><span class="line"> 0.34       0.48275862 0.73529412 0.81818182 0.9223301  0.9245283</span><br><span class="line"> 0.72222222 0.72972973 0.44761905 0.6618705  0.73722628 0.69736842]</span><br><span class="line">upper bound: 0.5131311156873893</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 49.83%</span><br><span class="line">Overall Prec@1 54.04% Prec@5 81.43%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="20201021-pa-with-conv-rgbo-liten"><a class="header-anchor" href="#20201021-pa-with-conv-rgbo-liten">#</a>20201021 PA with conv &amp; RGBo &amp; Liten</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8 --weights=</span></span><br><span class="line"><span class="comment"># pretrained/PAN_Lite_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,</span></span><br><span class="line"><span class="comment"># pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,</span></span><br><span class="line"><span class="comment"># temp/PAN_APA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar --full_res --twice_sample</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/En.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     Lite</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Converting the ImageNet model to a PAN_Lite init model</span><br><span class="line">=&gt; Done. PAN_lite model ready...</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 1.103 sec/video, moving Prec@1 50.000 Prec@5 81.250</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.156 sec/video, moving Prec@1 55.655 Prec@5 84.226</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.153 sec/video, moving Prec@1 56.707 Prec@5 83.232</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.152 sec/video, moving Prec@1 54.713 Prec@5 82.070</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.152 sec/video, moving Prec@1 55.247 Prec@5 82.793</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.150 sec/video, moving Prec@1 55.384 Prec@5 82.859</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.151 sec/video, moving Prec@1 54.700 Prec@5 82.593</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.150 sec/video, moving Prec@1 55.363 Prec@5 82.314</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.151 sec/video, moving Prec@1 55.124 Prec@5 81.910</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.150 sec/video, moving Prec@1 54.696 Prec@5 81.975</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.149 sec/video, moving Prec@1 54.353 Prec@5 81.996</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.150 sec/video, moving Prec@1 54.157 Prec@5 81.957</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.149 sec/video, moving Prec@1 54.253 Prec@5 81.613</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.149 sec/video, moving Prec@1 54.191 Prec@5 81.513</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.148 sec/video, moving Prec@1 54.070 Prec@5 81.606</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.148 sec/video, moving Prec@1 53.862 Prec@5 81.499</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.148 sec/video, moving Prec@1 53.563 Prec@5 81.211</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.148 sec/video, moving Prec@1 53.757 Prec@5 81.378</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.148 sec/video, moving Prec@1 53.826 Prec@5 81.302</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.148 sec/video, moving Prec@1 53.724 Prec@5 81.365</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.147 sec/video, moving Prec@1 53.819 Prec@5 81.468</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.147 sec/video, moving Prec@1 53.593 Prec@5 81.517</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.147 sec/video, moving Prec@1 53.543 Prec@5 81.519</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.147 sec/video, moving Prec@1 53.484 Prec@5 81.386</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.147 sec/video, moving Prec@1 53.495 Prec@5 81.510</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.147 sec/video, moving Prec@1 53.406 Prec@5 81.562</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.147 sec/video, moving Prec@1 53.491 Prec@5 81.670</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.147 sec/video, moving Prec@1 53.373 Prec@5 81.573</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.147 sec/video, moving Prec@1 53.376 Prec@5 81.584</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.146 sec/video, moving Prec@1 53.292 Prec@5 81.616</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.146 sec/video, moving Prec@1 53.380 Prec@5 81.614</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.146 sec/video, moving Prec@1 53.422 Prec@5 81.542</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.146 sec/video, moving Prec@1 53.539 Prec@5 81.699</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.146 sec/video, moving Prec@1 53.669 Prec@5 81.647</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.146 sec/video, moving Prec@1 53.744 Prec@5 81.681</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.146 sec/video, moving Prec@1 53.736 Prec@5 81.705</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.145 sec/video, moving Prec@1 53.810 Prec@5 81.739</span><br><span class="line">[0.92537313 0.4        0.31428571 0.68656716 0.39473684 0.52586207</span><br><span class="line"> 0.70895522 0.52941176 0.73786408 0.75728155 0.49333333 0.56944444</span><br><span class="line"> 0.45744681 0.35483871 0.79617834 0.46       0.22289157 0.3375</span><br><span class="line"> 0.4796748  0.4        0.432      0.55172414 0.40740741 0.43137255</span><br><span class="line"> 0.51612903 0.5        0.52173913 0.24       0.72727273 0.71428571</span><br><span class="line"> 0.68181818 0.57692308 0.88888889 0.18681319 0.26086957 0.13888889</span><br><span class="line"> 0.8045977  0.83333333 0.13157895 0.66666667 0.73553719 0.66</span><br><span class="line"> 0.71538462 0.75510204 0.71153846 0.67213115 0.54411765 0.50526316</span><br><span class="line"> 0.30337079 0.71428571 0.64150943 0.         0.36       0.55</span><br><span class="line"> 0.23809524 0.33333333 0.36363636 0.5        0.08333333 0.75510204</span><br><span class="line"> 0.72727273 0.27777778 0.62       0.11818182 0.16666667 0.55555556</span><br><span class="line"> 0.11111111 0.1969697  0.47887324 0.42307692 0.5483871  0.25</span><br><span class="line"> 0.5        0.64       0.85       0.61290323 0.29411765 0.41176471</span><br><span class="line"> 0.36363636 0.85365854 0.14285714 0.11904762 0.36666667 0.15789474</span><br><span class="line"> 0.6        0.39655172 0.68918919 0.73015873 0.11111111 0.10714286</span><br><span class="line"> 0.51351351 0.75609756 0.55813953 0.66666667 0.75700935 0.22580645</span><br><span class="line"> 0.07407407 0.16666667 0.57309942 0.55882353 0.35714286 0.58333333</span><br><span class="line"> 0.28125    0.59183673 0.67073171 0.73333333 0.61797753 0.73913043</span><br><span class="line"> 0.45614035 0.40659341 0.62745098 0.         0.64864865 0.42857143</span><br><span class="line"> 0.64150943 0.5        0.29090909 0.77659574 0.41463415 0.625</span><br><span class="line"> 0.79545455 0.68627451 0.41818182 0.5        0.25       0.59183673</span><br><span class="line"> 0.43396226 0.64814815 0.14482759 0.68269231 0.32       0.22222222</span><br><span class="line"> 0.36842105 0.23333333 0.68874172 0.51724138 0.21428571 0.3</span><br><span class="line"> 0.18644068 0.56578947 0.68       0.39534884 0.54545455 0.44915254</span><br><span class="line"> 0.54666667 0.50704225 0.66037736 0.19402985 0.5        0.76</span><br><span class="line"> 0.69090909 0.24193548 0.35       0.88888889 0.60714286 0.21568627</span><br><span class="line"> 0.26229508 0.37142857 0.43564356 0.4375     0.44444444 0.35</span><br><span class="line"> 0.36       0.51724138 0.67647059 0.81818182 0.91262136 0.9245283</span><br><span class="line"> 0.74074074 0.7027027  0.46666667 0.65467626 0.71532847 0.71052632]</span><br><span class="line">upper bound: 0.5095849479276692</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 49.46%</span><br><span class="line">Overall Prec@1 53.81% Prec@5 81.74%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> pan </tag>
            
            <tag> pan lite </tag>
            
            <tag> pan full </tag>
            
            <tag> pan en </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex书脊制作</title>
      <link href="/blog/2020/10/08/latex-spine/"/>
      <url>/blog/2020/10/08/latex-spine/</url>
      
        <content type="html"><![CDATA[<p>强迫症有时候是真的浪费时间，不过工作中应该可以解决很多实际问题。</p><a id="more"></a><h2 id="制作书脊"><a class="header-anchor" href="#制作书脊">#</a>制作书脊</h2><p><a href="https://github.com/mohuangrui/latexspine" target="_blank" rel="noopener">https://github.com/mohuangrui/latexspine</a></p><p>原版太不优雅了，花了一天时间终于找到了解决方案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">\documentclass[UTF8]&#123;ctexbook&#125;</span><br><span class="line">\usepackage[paper&#x3D;a4paper,margin&#x3D;3cm]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line">% https:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;2458125&#x2F;13182099</span><br><span class="line">\def\hyphenateWholeString #1&#123;\xHyphenate#1$\wholeString\unskip&#125;</span><br><span class="line"></span><br><span class="line">\def\xHyphenate#1#2\wholeString &#123;\if#1$</span><br><span class="line">\else\transform&#123;#1&#125;</span><br><span class="line">\takeTheRest#2\ofTheString\fi&#125;</span><br><span class="line">\def\takeTheRest#1\ofTheString\fi</span><br><span class="line">&#123;\fi \xHyphenate#1\wholeString&#125;</span><br><span class="line"></span><br><span class="line">\def\transform#1&#123;#1\par&#125;</span><br><span class="line"></span><br><span class="line">\renewcommand&#123;\title&#125;[1]&#123;\def\spinetitle&#123;\hyphenateWholeString&#123;#1&#125;&#125;&#125;</span><br><span class="line">\renewcommand&#123;\author&#125;[1]&#123;\def\spineauthor&#123;\hyphenateWholeString&#123;#1&#125;&#125;&#125;</span><br><span class="line">\newcommand&#123;\adviser&#125;[3]&#123;\def\spineadviser&#123;\hyphenateWholeString&#123;#1&#125;~\par\hyphenateWholeString&#123;#2&#125;~\par\hyphenateWholeString&#123;#3&#125;&#125;&#125;</span><br><span class="line">\newcommand&#123;\institute&#125;[1]&#123;\def\spineinst&#123;\hyphenateWholeString&#123;#1&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\newcommand&#123;\makespine&#125;&#123;</span><br><span class="line"></span><br><span class="line">    \newpage\thispagestyle&#123;empty&#125;</span><br><span class="line">    \linespread&#123;1.0&#125;</span><br><span class="line">    \songti\zihao&#123;-5&#125;\centering</span><br><span class="line">    \spinetitle\vfill\spineauthor\vfill\spineadviser\vfill\spineinst</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">% 3.论文书脊的要求（如右图）</span><br><span class="line">% （1）在论文的书脊以紧排依序打印中文：论文名称、作者姓名、</span><br><span class="line">% 指导教师、XXX、厦门大学</span><br><span class="line">% （2）字号字体：小五号宋体。</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">\title&#123;这是你的中文论文名称&#125;</span><br><span class="line">\author&#123;Onns&#125;</span><br><span class="line">\adviser&#123;指导教师&#125;&#123;XXX&#125;&#123;教授&#125;</span><br><span class="line">\institute&#123;厦门大学&#125;</span><br><span class="line">\makespine</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://github.com/mohuangrui/latexspine" target="_blank" rel="noopener">latexspine LaTeX 书脊模板</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> latex </tag>
            
            <tag> spine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报-20201008</title>
      <link href="/blog/2020/10/08/weekly-report-20201008/"/>
      <url>/blog/2020/10/08/weekly-report-20201008/</url>
      
        <content type="html"><![CDATA[<center ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();"><table><thead><tr><th style="text-align:center">2020-10-08</th><th style="text-align:center">周报#07</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h1 id="i-task-achieved-last-week"><a class="header-anchor" href="#i-task-achieved-last-week">#</a>I. Task achieved last week</h1><hr><ul><li>找到合适的 Latex 毕设模板，并且成功的编译，开始写论文的摘要部分。</li><li>《TEA: Temporal Excitation and Aggregation for Action Recognition》</li><li>修改了现有代码，等待实验结果。</li></ul><h1 id="ii-reports"><a class="header-anchor" href="#ii-reports">#</a>II. Reports</h1><hr><h2 id="latex-模板"><a class="header-anchor" href="#latex-模板">#</a>Latex 模板</h2><p>找了一个比较新的<code>厦门大学研究生学位论文 LaTeX 模板</code>模板：<a href="https://github.com/zoam/xmu-thesis-grd" target="_blank" rel="noopener">https://github.com/zoam/xmu-thesis-grd</a>，自己修改了一些特性。</p><h2 id="tea-temporal-excitation-and-aggregation-for-action-recognition"><a class="header-anchor" href="#tea-temporal-excitation-and-aggregation-for-action-recognition">#</a>TEA: Temporal Excitation and Aggregation for Action Recognition</h2><h3 id="问题提出"><a class="header-anchor" href="#问题提出">#</a>问题提出</h3><p>时序建模的两个问题：<code>short-range motion encoding</code>和<code>long-range temporal aggregation</code>。</p><p>前者基本依赖光流来解决，因为计算量很大，且无法满足实时的任务，所以作者提出<code>motion excitation</code>。</p><p>后者现有的解决方案有两个：</p><ol><li>adopt 2D CNN backbones to extract frame-wise features and then utilize a simple temporal max/average pooling to obtain the whole video representation.</li><li>adopt local 3D/(2+1)D convolutional operations to process local temporal window</li></ol><p>时空信息在网络的顶端进行融合，再反向传播回来，可能会导致优化困难。所以作者提出<code>multiple temporal aggregation</code>。</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201008-1.png" alt="结构图"></p></center><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/129282832" target="_blank" rel="noopener">[CVPR 2020 ] 南京大学/腾讯 PCG 用于时序建模的轻量级行为识别模型 TEA</a></li><li><a href="https://blog.csdn.net/qq_41214679/article/details/107975761" target="_blank" rel="noopener">TEA: Temporal Excitation and Aggregation for Action Recognition 阅读笔记</a></li><li><a href="https://zhuanlan.zhihu.com/p/130807086" target="_blank" rel="noopener">CVPR2020 南大+腾讯 TEA 轻量级视频行为识别模型</a></li><li><a href="https://arxiv.org/abs/2004.01398" target="_blank" rel="noopener">TEA: Temporal Excitation and Aggregation for Action Recognition</a></li><li><a href="https://github.com/Phoenix1327/tea-action-recognition" target="_blank" rel="noopener">Phoenix1327/tea-action-recognition</a></li><li><a href="https://blog.csdn.net/irving512/article/details/106524982/" target="_blank" rel="noopener">论文浏览(3) TEA: Temporal Excitation and Aggregation for Action Recognition</a></li></ul><h2 id="bert-相关笔记（一）"><a class="header-anchor" href="#bert-相关笔记（一）">#</a>BERT 相关笔记（一）</h2><p>BERT 是在<code>Transformer</code>的结构基础上进行更新，所以主要看了一些基础的知识。</p><p>相关链接里前两个写的很好，结合着看可以加深理解。</p><h3 id="相关链接-2"><a class="header-anchor" href="#相关链接-2">#</a>相关链接</h3><ul><li><a href="https://jalammar.github.io/illustrated-transformer/" target="_blank" rel="noopener">The Illustrated Transformer</a></li><li><a href="http://www.huaxiaozhuan.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/chapters/7_Transformer.html" target="_blank" rel="noopener">Transformer</a></li><li><a href="https://blog.csdn.net/chen_yiwei/article/details/88671959" target="_blank" rel="noopener">Transform 模型原理</a></li><li><a href="https://www.cnblogs.com/robert-dlut/p/8638283.html" target="_blank" rel="noopener">自然语言处理中的自注意力机制（Self-attention Mechanism）</a></li><li><a href="https://zhuanlan.zhihu.com/p/47063917" target="_blank" rel="noopener">Attention 机制详解（一）——Seq2Seq 中的 Attention</a></li><li><a href="https://zhuanlan.zhihu.com/p/44145288" target="_blank" rel="noopener">循环神经网络 RNN——深度学习第十章</a></li><li><a href="https://zhuanlan.zhihu.com/p/47282410" target="_blank" rel="noopener">Attention 机制详解（二）——Self-Attention 与 Transformer</a></li><li><a href="https://zhuanlan.zhihu.com/p/57155059" target="_blank" rel="noopener">简说 Seq2Seq 原理及实现</a></li><li><a href="https://www.jianshu.com/p/b2b95f945a98" target="_blank" rel="noopener">Seq2Seq 模型概述</a></li></ul><h2 id="实验结果"><a class="header-anchor" href="#实验结果">#</a>实验结果</h2><p>较现有方法提升了<code>0.8%</code>：</p><center><table><thead><tr><th style="text-align:center">Method</th><th style="text-align:center">Backbone</th><th style="text-align:center">Frame</th><th style="text-align:center">FLOPs × views</th><th style="text-align:center">Val Top1</th><th style="text-align:center">Val Top5</th></tr></thead><tbody><tr><td style="text-align:center">PAN Full</td><td style="text-align:center">ResNet-50 + TSM</td><td style="text-align:center">8+8×4</td><td style="text-align:center">67.7G × 1</td><td style="text-align:center">50.5</td><td style="text-align:center">79.2</td></tr><tr><td style="text-align:center">PAN Full with reverse</td><td style="text-align:center">ResNet-50 + TSM</td><td style="text-align:center">8+8×4×2</td><td style="text-align:center">-</td><td style="text-align:center"><strong>51.3</strong></td><td style="text-align:center"><strong>79.9</strong></td></tr></tbody></table></center><h1 id="iii-plan-for-this-week"><a class="header-anchor" href="#iii-plan-for-this-week">#</a>III. Plan for this week</h1><hr><ul><li>看论文</li><li>毕业论文摘要部分初稿</li><li>继续改进现有代码</li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BERT相关笔记（一）</title>
      <link href="/blog/2020/10/08/bert-note-1/"/>
      <url>/blog/2020/10/08/bert-note-1/</url>
      
        <content type="html"><![CDATA[<h2 id="bert-相关笔记（一）"><a class="header-anchor" href="#bert-相关笔记（一）">#</a>BERT 相关笔记（一）</h2><p>BERT 是在<code>Transformer</code>的结构基础上进行更新，所以主要看了一些基础的知识。</p><p>相关链接里前两个写的很好，结合着看可以加深理解。</p><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://jalammar.github.io/illustrated-transformer/" target="_blank" rel="noopener">The Illustrated Transformer</a></li><li><a href="http://www.huaxiaozhuan.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/chapters/7_Transformer.html" target="_blank" rel="noopener">Transformer</a></li><li><a href="https://blog.csdn.net/chen_yiwei/article/details/88671959" target="_blank" rel="noopener">Transform 模型原理</a></li><li><a href="https://www.cnblogs.com/robert-dlut/p/8638283.html" target="_blank" rel="noopener">自然语言处理中的自注意力机制（Self-attention Mechanism）</a></li><li><a href="https://zhuanlan.zhihu.com/p/47063917" target="_blank" rel="noopener">Attention 机制详解（一）——Seq2Seq 中的 Attention</a></li><li><a href="https://zhuanlan.zhihu.com/p/44145288" target="_blank" rel="noopener">循环神经网络 RNN——深度学习第十章</a></li><li><a href="https://zhuanlan.zhihu.com/p/47282410" target="_blank" rel="noopener">Attention 机制详解（二）——Self-Attention 与 Transformer</a></li><li><a href="https://zhuanlan.zhihu.com/p/57155059" target="_blank" rel="noopener">简说 Seq2Seq 原理及实现</a></li><li><a href="https://www.jianshu.com/p/b2b95f945a98" target="_blank" rel="noopener">Seq2Seq 模型概述</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> bert </tag>
            
            <tag> transformer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAN验证结果-20201006</title>
      <link href="/blog/2020/10/06/pan-results/"/>
      <url>/blog/2020/10/06/pan-results/</url>
      
        <content type="html"><![CDATA[<p>测试结果：</p><a id="more"></a><h2 id="pan-full"><a class="header-anchor" href="#pan-full">#</a>PAN Full</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=20 -j=4 --test_crops=1 --test_segments=8,8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/Full.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.229 sec/video, moving Prec@1 50.000 Prec@5 85.000</span><br><span class="line">video 400 <span class="keyword">done</span>, total 400/11522, average 0.032 sec/video, moving Prec@1 52.143 Prec@5 83.333</span><br><span class="line">video 800 <span class="keyword">done</span>, total 800/11522, average 0.028 sec/video, moving Prec@1 51.341 Prec@5 80.732</span><br><span class="line">video 1200 <span class="keyword">done</span>, total 1200/11522, average 0.026 sec/video, moving Prec@1 51.557 Prec@5 80.738</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.025 sec/video, moving Prec@1 51.728 Prec@5 80.432</span><br><span class="line">video 2000 <span class="keyword">done</span>, total 2000/11522, average 0.025 sec/video, moving Prec@1 50.792 Prec@5 79.950</span><br><span class="line">video 2400 <span class="keyword">done</span>, total 2400/11522, average 0.024 sec/video, moving Prec@1 50.744 Prec@5 79.628</span><br><span class="line">video 2800 <span class="keyword">done</span>, total 2800/11522, average 0.024 sec/video, moving Prec@1 50.887 Prec@5 79.716</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.024 sec/video, moving Prec@1 50.559 Prec@5 79.720</span><br><span class="line">video 3600 <span class="keyword">done</span>, total 3600/11522, average 0.024 sec/video, moving Prec@1 50.497 Prec@5 79.586</span><br><span class="line">video 4000 <span class="keyword">done</span>, total 4000/11522, average 0.023 sec/video, moving Prec@1 50.274 Prec@5 79.254</span><br><span class="line">video 4400 <span class="keyword">done</span>, total 4400/11522, average 0.023 sec/video, moving Prec@1 50.204 Prec@5 79.072</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.023 sec/video, moving Prec@1 50.083 Prec@5 78.963</span><br><span class="line">video 5200 <span class="keyword">done</span>, total 5200/11522, average 0.023 sec/video, moving Prec@1 50.057 Prec@5 78.812</span><br><span class="line">video 5600 <span class="keyword">done</span>, total 5600/11522, average 0.023 sec/video, moving Prec@1 50.356 Prec@5 78.968</span><br><span class="line">video 6000 <span class="keyword">done</span>, total 6000/11522, average 0.023 sec/video, moving Prec@1 50.233 Prec@5 78.887</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.023 sec/video, moving Prec@1 50.327 Prec@5 79.065</span><br><span class="line">video 6800 <span class="keyword">done</span>, total 6800/11522, average 0.023 sec/video, moving Prec@1 50.249 Prec@5 78.974</span><br><span class="line">video 7200 <span class="keyword">done</span>, total 7200/11522, average 0.023 sec/video, moving Prec@1 50.208 Prec@5 78.934</span><br><span class="line">video 7600 <span class="keyword">done</span>, total 7600/11522, average 0.023 sec/video, moving Prec@1 50.367 Prec@5 78.950</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.023 sec/video, moving Prec@1 50.274 Prec@5 79.077</span><br><span class="line">video 8400 <span class="keyword">done</span>, total 8400/11522, average 0.023 sec/video, moving Prec@1 50.226 Prec@5 79.062</span><br><span class="line">video 8800 <span class="keyword">done</span>, total 8800/11522, average 0.023 sec/video, moving Prec@1 50.227 Prec@5 79.138</span><br><span class="line">video 9200 <span class="keyword">done</span>, total 9200/11522, average 0.023 sec/video, moving Prec@1 50.195 Prec@5 79.143</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.023 sec/video, moving Prec@1 50.364 Prec@5 79.179</span><br><span class="line">video 10000 <span class="keyword">done</span>, total 10000/11522, average 0.023 sec/video, moving Prec@1 50.379 Prec@5 79.232</span><br><span class="line">video 10400 <span class="keyword">done</span>, total 10400/11522, average 0.023 sec/video, moving Prec@1 50.480 Prec@5 79.290</span><br><span class="line">video 10800 <span class="keyword">done</span>, total 10800/11522, average 0.023 sec/video, moving Prec@1 50.582 Prec@5 79.307</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.023 sec/video, moving Prec@1 50.606 Prec@5 79.269</span><br><span class="line">[0.89552239 0.3125     0.26666667 0.65671642 0.36842105 0.48275862</span><br><span class="line"> 0.70895522 0.38235294 0.62135922 0.70873786 0.44       0.40277778</span><br><span class="line"> 0.30851064 0.35483871 0.77070064 0.4        0.24096386 0.2625</span><br><span class="line"> 0.45528455 0.34666667 0.352      0.60344828 0.46296296 0.45098039</span><br><span class="line"> 0.51612903 0.41666667 0.43478261 0.4        0.6969697  0.61904762</span><br><span class="line"> 0.59090909 0.53846154 0.87037037 0.25274725 0.23913043 0.13888889</span><br><span class="line"> 0.7816092  0.79411765 0.07894737 0.59259259 0.68595041 0.64</span><br><span class="line"> 0.67692308 0.67346939 0.75       0.57377049 0.47794118 0.36842105</span><br><span class="line"> 0.15730337 0.68421053 0.61320755 0.         0.36       0.45</span><br><span class="line"> 0.19047619 0.25       0.45454545 0.5        0.         0.74489796</span><br><span class="line"> 0.75757576 0.13888889 0.64       0.1        0.1        0.46296296</span><br><span class="line"> 0.18518519 0.21212121 0.43661972 0.34615385 0.5483871  0.21428571</span><br><span class="line"> 0.55263158 0.48       0.83333333 0.41935484 0.35294118 0.58823529</span><br><span class="line"> 0.27272727 0.82926829 0.11428571 0.21428571 0.33333333 0.15789474</span><br><span class="line"> 0.6        0.39655172 0.60810811 0.6984127  0.27777778 0.07142857</span><br><span class="line"> 0.59459459 0.75609756 0.58139535 0.55555556 0.62616822 0.22580645</span><br><span class="line"> 0.03703704 0.11904762 0.57894737 0.45588235 0.32653061 0.51851852</span><br><span class="line"> 0.203125   0.53061224 0.68292683 0.63809524 0.52808989 0.73913043</span><br><span class="line"> 0.49122807 0.32967033 0.58823529 0.         0.66216216 0.28571429</span><br><span class="line"> 0.60377358 0.43333333 0.27272727 0.73404255 0.29268293 0.54166667</span><br><span class="line"> 0.80681818 0.60784314 0.35454545 0.5        0.33333333 0.44897959</span><br><span class="line"> 0.47169811 0.57407407 0.14482759 0.63461538 0.22       0.22222222</span><br><span class="line"> 0.23684211 0.36666667 0.68874172 0.44827586 0.         0.31666667</span><br><span class="line"> 0.13559322 0.56578947 0.66       0.39534884 0.45454545 0.43220339</span><br><span class="line"> 0.6        0.47183099 0.63207547 0.17910448 0.546875   0.8</span><br><span class="line"> 0.66666667 0.29032258 0.38333333 0.7962963  0.55952381 0.11764706</span><br><span class="line"> 0.29508197 0.3        0.47524752 0.34375    0.42592593 0.325</span><br><span class="line"> 0.3        0.37931034 0.69607843 0.77272727 0.9223301  0.87735849</span><br><span class="line"> 0.74074074 0.75675676 0.45714286 0.62589928 0.69343066 0.69736842]</span><br><span class="line">upper bound: 0.483756929950145</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 46.26%</span><br><span class="line">Overall Prec@1 50.53% Prec@5 79.23%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray   </span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="pan-full-2"><a class="header-anchor" href="#pan-full-2">#</a>PAN Full</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something --VAP --batch_size=20 -j=4 --test_crops=3 --test_segments=8,8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar </span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/Full.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.469 sec/video, moving Prec@1 55.000 Prec@5 85.000</span><br><span class="line">video 400 <span class="keyword">done</span>, total 400/11522, average 0.083 sec/video, moving Prec@1 54.524 Prec@5 83.810</span><br><span class="line">video 800 <span class="keyword">done</span>, total 800/11522, average 0.074 sec/video, moving Prec@1 52.317 Prec@5 80.366</span><br><span class="line">video 1200 <span class="keyword">done</span>, total 1200/11522, average 0.071 sec/video, moving Prec@1 52.377 Prec@5 80.902</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.069 sec/video, moving Prec@1 52.469 Prec@5 80.494</span><br><span class="line">video 2000 <span class="keyword">done</span>, total 2000/11522, average 0.069 sec/video, moving Prec@1 51.634 Prec@5 80.198</span><br><span class="line">video 2400 <span class="keyword">done</span>, total 2400/11522, average 0.068 sec/video, moving Prec@1 51.488 Prec@5 80.248</span><br><span class="line">video 2800 <span class="keyword">done</span>, total 2800/11522, average 0.068 sec/video, moving Prec@1 51.596 Prec@5 80.319</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.067 sec/video, moving Prec@1 51.273 Prec@5 80.217</span><br><span class="line">video 3600 <span class="keyword">done</span>, total 3600/11522, average 0.067 sec/video, moving Prec@1 51.077 Prec@5 80.193</span><br><span class="line">video 4000 <span class="keyword">done</span>, total 4000/11522, average 0.067 sec/video, moving Prec@1 50.821 Prec@5 79.801</span><br><span class="line">video 4400 <span class="keyword">done</span>, total 4400/11522, average 0.067 sec/video, moving Prec@1 50.814 Prec@5 79.570</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.067 sec/video, moving Prec@1 50.705 Prec@5 79.378</span><br><span class="line">video 5200 <span class="keyword">done</span>, total 5200/11522, average 0.067 sec/video, moving Prec@1 50.632 Prec@5 79.253</span><br><span class="line">video 5600 <span class="keyword">done</span>, total 5600/11522, average 0.067 sec/video, moving Prec@1 50.925 Prec@5 79.253</span><br><span class="line">video 6000 <span class="keyword">done</span>, total 6000/11522, average 0.066 sec/video, moving Prec@1 50.831 Prec@5 79.236</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.066 sec/video, moving Prec@1 50.857 Prec@5 79.377</span><br><span class="line">video 6800 <span class="keyword">done</span>, total 6800/11522, average 0.066 sec/video, moving Prec@1 50.850 Prec@5 79.355</span><br><span class="line">video 7200 <span class="keyword">done</span>, total 7200/11522, average 0.066 sec/video, moving Prec@1 50.748 Prec@5 79.224</span><br><span class="line">video 7600 <span class="keyword">done</span>, total 7600/11522, average 0.066 sec/video, moving Prec@1 50.853 Prec@5 79.265</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.066 sec/video, moving Prec@1 50.736 Prec@5 79.389</span><br><span class="line">video 8400 <span class="keyword">done</span>, total 8400/11522, average 0.066 sec/video, moving Prec@1 50.760 Prec@5 79.394</span><br><span class="line">video 8800 <span class="keyword">done</span>, total 8800/11522, average 0.066 sec/video, moving Prec@1 50.873 Prec@5 79.433</span><br><span class="line">video 9200 <span class="keyword">done</span>, total 9200/11522, average 0.066 sec/video, moving Prec@1 50.824 Prec@5 79.425</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.066 sec/video, moving Prec@1 50.977 Prec@5 79.407</span><br><span class="line">video 10000 <span class="keyword">done</span>, total 10000/11522, average 0.066 sec/video, moving Prec@1 50.948 Prec@5 79.451</span><br><span class="line">video 10400 <span class="keyword">done</span>, total 10400/11522, average 0.066 sec/video, moving Prec@1 51.046 Prec@5 79.472</span><br><span class="line">video 10800 <span class="keyword">done</span>, total 10800/11522, average 0.066 sec/video, moving Prec@1 51.063 Prec@5 79.547</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.066 sec/video, moving Prec@1 51.168 Prec@5 79.590</span><br><span class="line">[0.92537313 0.375      0.26666667 0.62686567 0.39473684 0.45689655</span><br><span class="line"> 0.67910448 0.44117647 0.59223301 0.70873786 0.48       0.40277778</span><br><span class="line"> 0.29787234 0.35483871 0.75159236 0.44       0.24698795 0.275</span><br><span class="line"> 0.47154472 0.37333333 0.352      0.56896552 0.57407407 0.45098039</span><br><span class="line"> 0.51612903 0.5        0.43478261 0.44       0.66666667 0.68253968</span><br><span class="line"> 0.63636364 0.53846154 0.87037037 0.18681319 0.26086957 0.13888889</span><br><span class="line"> 0.77011494 0.80392157 0.05263158 0.55555556 0.71900826 0.64</span><br><span class="line"> 0.71538462 0.69387755 0.76923077 0.60655738 0.5        0.36842105</span><br><span class="line"> 0.20224719 0.69924812 0.61320755 0.         0.4        0.45</span><br><span class="line"> 0.19047619 0.20833333 0.48484848 0.5        0.         0.81632653</span><br><span class="line"> 0.78787879 0.16666667 0.64       0.06363636 0.1        0.40740741</span><br><span class="line"> 0.16666667 0.21212121 0.46478873 0.30769231 0.5483871  0.25</span><br><span class="line"> 0.55263158 0.48       0.83333333 0.4516129  0.29411765 0.58823529</span><br><span class="line"> 0.22727273 0.80487805 0.17142857 0.26190476 0.36666667 0.15789474</span><br><span class="line"> 0.6        0.4137931  0.63513514 0.73015873 0.16666667 0.05357143</span><br><span class="line"> 0.59459459 0.73170732 0.46511628 0.55555556 0.6728972  0.29032258</span><br><span class="line"> 0.03703704 0.0952381  0.56725146 0.48529412 0.44897959 0.5462963</span><br><span class="line"> 0.25       0.53061224 0.67073171 0.67619048 0.51685393 0.72463768</span><br><span class="line"> 0.40350877 0.31868132 0.60784314 0.         0.66216216 0.28571429</span><br><span class="line"> 0.62264151 0.4        0.36363636 0.74468085 0.26829268 0.5625</span><br><span class="line"> 0.73863636 0.58823529 0.35454545 0.475      0.30555556 0.46938776</span><br><span class="line"> 0.39622642 0.62962963 0.13793103 0.64423077 0.22       0.18518519</span><br><span class="line"> 0.21052632 0.33333333 0.70198675 0.44827586 0.         0.31666667</span><br><span class="line"> 0.13559322 0.56578947 0.66       0.44186047 0.45454545 0.44915254</span><br><span class="line"> 0.65333333 0.47887324 0.59433962 0.19402985 0.578125   0.816</span><br><span class="line"> 0.64848485 0.29032258 0.38333333 0.81481481 0.51190476 0.17647059</span><br><span class="line"> 0.29508197 0.31428571 0.46534653 0.375      0.46296296 0.3</span><br><span class="line"> 0.34       0.31034483 0.69607843 0.8030303  0.9223301  0.88679245</span><br><span class="line"> 0.71296296 0.7027027  0.44761905 0.66906475 0.71532847 0.72368421]</span><br><span class="line">upper bound: 0.48772172111390605</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 46.72%</span><br><span class="line">Overall Prec@1 51.10% Prec@5 79.56%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray   </span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="pan-en"><a class="header-anchor" href="#pan-en">#</a>PAN En</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python test_models.py something \</span></span><br><span class="line"><span class="comment"># --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8,8,8 \</span></span><br><span class="line"><span class="comment"># --weights=pretrained/PAN_Lite_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar,pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar,pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar \</span></span><br><span class="line"><span class="comment"># --full_res --twice_sample</span></span><br><span class="line">$ bash scripts/<span class="built_in">test</span>/sthv1/En.sh </span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     Lite</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Converting the ImageNet model to a PAN_Lite init model</span><br><span class="line">=&gt; Done. PAN_lite model ready...</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Using twice sample <span class="keyword">for</span> the dataset...</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 0.991 sec/video, moving Prec@1 50.000 Prec@5 75.000</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/11522, average 0.151 sec/video, moving Prec@1 55.655 Prec@5 85.714</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/11522, average 0.148 sec/video, moving Prec@1 55.488 Prec@5 83.689</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/11522, average 0.146 sec/video, moving Prec@1 54.303 Prec@5 82.377</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/11522, average 0.143 sec/video, moving Prec@1 55.710 Prec@5 83.025</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.142 sec/video, moving Prec@1 55.941 Prec@5 82.735</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/11522, average 0.141 sec/video, moving Prec@1 55.269 Prec@5 82.386</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/11522, average 0.141 sec/video, moving Prec@1 55.186 Prec@5 82.225</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/11522, average 0.142 sec/video, moving Prec@1 54.891 Prec@5 81.793</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/11522, average 0.141 sec/video, moving Prec@1 54.454 Prec@5 81.872</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.141 sec/video, moving Prec@1 53.887 Prec@5 81.965</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/11522, average 0.141 sec/video, moving Prec@1 53.790 Prec@5 81.900</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/11522, average 0.141 sec/video, moving Prec@1 53.994 Prec@5 81.613</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/11522, average 0.141 sec/video, moving Prec@1 53.855 Prec@5 81.418</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/11522, average 0.140 sec/video, moving Prec@1 53.625 Prec@5 81.406</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.140 sec/video, moving Prec@1 53.488 Prec@5 81.146</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/11522, average 0.140 sec/video, moving Prec@1 53.154 Prec@5 80.880</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/11522, average 0.140 sec/video, moving Prec@1 53.372 Prec@5 81.067</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/11522, average 0.140 sec/video, moving Prec@1 53.307 Prec@5 80.956</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/11522, average 0.140 sec/video, moving Prec@1 53.264 Prec@5 81.053</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.140 sec/video, moving Prec@1 53.304 Prec@5 81.188</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/11522, average 0.140 sec/video, moving Prec@1 53.192 Prec@5 81.205</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/11522, average 0.140 sec/video, moving Prec@1 53.104 Prec@5 81.151</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/11522, average 0.140 sec/video, moving Prec@1 53.037 Prec@5 81.047</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/11522, average 0.140 sec/video, moving Prec@1 53.015 Prec@5 81.120</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.140 sec/video, moving Prec@1 53.031 Prec@5 81.125</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/11522, average 0.140 sec/video, moving Prec@1 53.071 Prec@5 81.214</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/11522, average 0.140 sec/video, moving Prec@1 52.830 Prec@5 81.134</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/11522, average 0.140 sec/video, moving Prec@1 52.852 Prec@5 81.116</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/11522, average 0.140 sec/video, moving Prec@1 52.829 Prec@5 81.142</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.140 sec/video, moving Prec@1 52.943 Prec@5 81.136</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/11522, average 0.140 sec/video, moving Prec@1 52.909 Prec@5 81.119</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/11522, average 0.140 sec/video, moving Prec@1 53.013 Prec@5 81.260</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/11522, average 0.140 sec/video, moving Prec@1 53.064 Prec@5 81.203</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/11522, average 0.140 sec/video, moving Prec@1 53.111 Prec@5 81.232</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.140 sec/video, moving Prec@1 53.174 Prec@5 81.232</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/11522, average 0.139 sec/video, moving Prec@1 53.203 Prec@5 81.236</span><br><span class="line">[0.91044776 0.4125     0.31428571 0.65671642 0.5        0.50862069</span><br><span class="line"> 0.69402985 0.47058824 0.72815534 0.75728155 0.50666667 0.54166667</span><br><span class="line"> 0.41489362 0.41935484 0.80254777 0.48       0.24096386 0.325</span><br><span class="line"> 0.4796748  0.38666667 0.408      0.63793103 0.5        0.43137255</span><br><span class="line"> 0.48387097 0.41666667 0.56521739 0.32       0.72727273 0.73015873</span><br><span class="line"> 0.63636364 0.53846154 0.85185185 0.25274725 0.26086957 0.22222222</span><br><span class="line"> 0.7816092  0.85294118 0.07894737 0.62962963 0.71900826 0.64</span><br><span class="line"> 0.70769231 0.71428571 0.71153846 0.67213115 0.47058824 0.41052632</span><br><span class="line"> 0.28089888 0.70676692 0.60377358 0.         0.36       0.55</span><br><span class="line"> 0.23809524 0.16666667 0.51515152 0.4375     0.         0.7755102</span><br><span class="line"> 0.81818182 0.25       0.6        0.1        0.16666667 0.5462963</span><br><span class="line"> 0.09259259 0.21212121 0.46478873 0.42307692 0.51612903 0.25</span><br><span class="line"> 0.52631579 0.52       0.83333333 0.58064516 0.23529412 0.58823529</span><br><span class="line"> 0.36363636 0.82926829 0.11428571 0.14285714 0.4        0.15789474</span><br><span class="line"> 0.57142857 0.4137931  0.63513514 0.79365079 0.16666667 0.08928571</span><br><span class="line"> 0.51351351 0.70731707 0.53488372 0.62037037 0.73831776 0.27419355</span><br><span class="line"> 0.03703704 0.19047619 0.59064327 0.5        0.3877551  0.58333333</span><br><span class="line"> 0.25       0.46938776 0.70731707 0.7047619  0.56179775 0.71014493</span><br><span class="line"> 0.49122807 0.36263736 0.64705882 0.         0.64864865 0.38095238</span><br><span class="line"> 0.66981132 0.46666667 0.32727273 0.75531915 0.34146341 0.625</span><br><span class="line"> 0.81818182 0.60784314 0.39090909 0.45       0.27777778 0.48979592</span><br><span class="line"> 0.47169811 0.62962963 0.16551724 0.70192308 0.3        0.22222222</span><br><span class="line"> 0.34210526 0.26666667 0.70198675 0.48275862 0.14285714 0.2</span><br><span class="line"> 0.13559322 0.64473684 0.67       0.27906977 0.54545455 0.48305085</span><br><span class="line"> 0.54666667 0.5        0.62264151 0.20895522 0.515625   0.744</span><br><span class="line"> 0.69090909 0.25806452 0.36666667 0.87037037 0.5952381  0.21568627</span><br><span class="line"> 0.24590164 0.37142857 0.5049505  0.34375    0.48148148 0.35</span><br><span class="line"> 0.34       0.34482759 0.70588235 0.81818182 0.9223301  0.93396226</span><br><span class="line"> 0.74074074 0.72972973 0.44761905 0.64028777 0.71532847 0.72368421]</span><br><span class="line">upper bound: 0.5058494457198016</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 48.66%</span><br><span class="line">Overall Prec@1 53.20% Prec@5 81.24%</span><br><span class="line">/home/hs/anaconda3/envs/dzl/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="pan-pa"><a class="header-anchor" href="#pan-pa">#</a>PAN PA</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">$ python test_models.py something --VAP --batch_size=10 -j=4 --test_crops=1 --test_segments=8 --weights=pretrained/PAN_PA_something_resnet50_shift8_blockres_avg_segment8_e80.pth.tar</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     PA</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 13.141 sec/video, moving Prec@1 50.000 Prec@5 80.000</span><br><span class="line">video 200 <span class="keyword">done</span>, total 200/11522, average 0.950 sec/video, moving Prec@1 48.095 Prec@5 82.857</span><br><span class="line">video 400 <span class="keyword">done</span>, total 400/11522, average 0.675 sec/video, moving Prec@1 47.805 Prec@5 80.244</span><br><span class="line">video 600 <span class="keyword">done</span>, total 600/11522, average 0.586 sec/video, moving Prec@1 49.836 Prec@5 80.164</span><br><span class="line">video 800 <span class="keyword">done</span>, total 800/11522, average 0.537 sec/video, moving Prec@1 47.037 Prec@5 78.148</span><br><span class="line">video 1000 <span class="keyword">done</span>, total 1000/11522, average 0.480 sec/video, moving Prec@1 46.139 Prec@5 77.624</span><br><span class="line">video 1200 <span class="keyword">done</span>, total 1200/11522, average 0.449 sec/video, moving Prec@1 47.273 Prec@5 77.686</span><br><span class="line">video 1400 <span class="keyword">done</span>, total 1400/11522, average 0.440 sec/video, moving Prec@1 47.163 Prec@5 77.021</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.420 sec/video, moving Prec@1 46.957 Prec@5 76.522</span><br><span class="line">video 1800 <span class="keyword">done</span>, total 1800/11522, average 0.406 sec/video, moving Prec@1 46.188 Prec@5 76.133</span><br><span class="line">video 2000 <span class="keyword">done</span>, total 2000/11522, average 0.387 sec/video, moving Prec@1 46.070 Prec@5 76.070</span><br><span class="line">video 2200 <span class="keyword">done</span>, total 2200/11522, average 0.368 sec/video, moving Prec@1 46.018 Prec@5 75.928</span><br><span class="line">video 2400 <span class="keyword">done</span>, total 2400/11522, average 0.358 sec/video, moving Prec@1 46.307 Prec@5 75.187</span><br><span class="line">video 2600 <span class="keyword">done</span>, total 2600/11522, average 0.350 sec/video, moving Prec@1 46.398 Prec@5 75.364</span><br><span class="line">video 2800 <span class="keyword">done</span>, total 2800/11522, average 0.336 sec/video, moving Prec@1 46.619 Prec@5 75.480</span><br><span class="line">video 3000 <span class="keyword">done</span>, total 3000/11522, average 0.330 sec/video, moving Prec@1 46.611 Prec@5 75.714</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.325 sec/video, moving Prec@1 46.386 Prec@5 75.607</span><br><span class="line">video 3400 <span class="keyword">done</span>, total 3400/11522, average 0.318 sec/video, moving Prec@1 46.305 Prec@5 75.630</span><br><span class="line">video 3600 <span class="keyword">done</span>, total 3600/11522, average 0.311 sec/video, moving Prec@1 46.260 Prec@5 75.208</span><br><span class="line">video 3800 <span class="keyword">done</span>, total 3800/11522, average 0.304 sec/video, moving Prec@1 46.194 Prec@5 75.144</span><br><span class="line">video 4000 <span class="keyword">done</span>, total 4000/11522, average 0.297 sec/video, moving Prec@1 46.010 Prec@5 74.988</span><br><span class="line">video 4200 <span class="keyword">done</span>, total 4200/11522, average 0.293 sec/video, moving Prec@1 45.914 Prec@5 74.893</span><br><span class="line">video 4400 <span class="keyword">done</span>, total 4400/11522, average 0.288 sec/video, moving Prec@1 45.782 Prec@5 74.807</span><br><span class="line">video 4600 <span class="keyword">done</span>, total 4600/11522, average 0.290 sec/video, moving Prec@1 45.792 Prec@5 74.555</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.289 sec/video, moving Prec@1 45.530 Prec@5 74.470</span><br><span class="line">video 5000 <span class="keyword">done</span>, total 5000/11522, average 0.285 sec/video, moving Prec@1 45.389 Prec@5 74.311</span><br><span class="line">video 5200 <span class="keyword">done</span>, total 5200/11522, average 0.283 sec/video, moving Prec@1 45.528 Prec@5 74.299</span><br><span class="line">video 5400 <span class="keyword">done</span>, total 5400/11522, average 0.282 sec/video, moving Prec@1 45.564 Prec@5 74.251</span><br><span class="line">video 5600 <span class="keyword">done</span>, total 5600/11522, average 0.279 sec/video, moving Prec@1 45.704 Prec@5 74.314</span><br><span class="line">video 5800 <span class="keyword">done</span>, total 5800/11522, average 0.276 sec/video, moving Prec@1 45.611 Prec@5 74.148</span><br><span class="line">video 6000 <span class="keyword">done</span>, total 6000/11522, average 0.273 sec/video, moving Prec@1 45.674 Prec@5 74.260</span><br><span class="line">video 6200 <span class="keyword">done</span>, total 6200/11522, average 0.270 sec/video, moving Prec@1 45.749 Prec@5 74.235</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.266 sec/video, moving Prec@1 45.803 Prec@5 74.368</span><br><span class="line">video 6600 <span class="keyword">done</span>, total 6600/11522, average 0.264 sec/video, moving Prec@1 45.719 Prec@5 74.433</span><br><span class="line">video 6800 <span class="keyword">done</span>, total 6800/11522, average 0.261 sec/video, moving Prec@1 45.551 Prec@5 74.347</span><br><span class="line">video 7000 <span class="keyword">done</span>, total 7000/11522, average 0.258 sec/video, moving Prec@1 45.578 Prec@5 74.508</span><br><span class="line">video 7200 <span class="keyword">done</span>, total 7200/11522, average 0.255 sec/video, moving Prec@1 45.423 Prec@5 74.452</span><br><span class="line">video 7400 <span class="keyword">done</span>, total 7400/11522, average 0.252 sec/video, moving Prec@1 45.452 Prec@5 74.345</span><br><span class="line">video 7600 <span class="keyword">done</span>, total 7600/11522, average 0.250 sec/video, moving Prec@1 45.427 Prec@5 74.428</span><br><span class="line">video 7800 <span class="keyword">done</span>, total 7800/11522, average 0.249 sec/video, moving Prec@1 45.314 Prec@5 74.507</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.246 sec/video, moving Prec@1 45.268 Prec@5 74.469</span><br><span class="line">video 8200 <span class="keyword">done</span>, total 8200/11522, average 0.243 sec/video, moving Prec@1 45.311 Prec@5 74.531</span><br><span class="line">video 8400 <span class="keyword">done</span>, total 8400/11522, average 0.241 sec/video, moving Prec@1 45.268 Prec@5 74.530</span><br><span class="line">video 8600 <span class="keyword">done</span>, total 8600/11522, average 0.239 sec/video, moving Prec@1 45.203 Prec@5 74.553</span><br><span class="line">video 8800 <span class="keyword">done</span>, total 8800/11522, average 0.237 sec/video, moving Prec@1 45.255 Prec@5 74.620</span><br><span class="line">video 9000 <span class="keyword">done</span>, total 9000/11522, average 0.236 sec/video, moving Prec@1 45.161 Prec@5 74.584</span><br><span class="line">video 9200 <span class="keyword">done</span>, total 9200/11522, average 0.234 sec/video, moving Prec@1 45.179 Prec@5 74.604</span><br><span class="line">video 9400 <span class="keyword">done</span>, total 9400/11522, average 0.232 sec/video, moving Prec@1 45.228 Prec@5 74.633</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.230 sec/video, moving Prec@1 45.265 Prec@5 74.631</span><br><span class="line">video 9800 <span class="keyword">done</span>, total 9800/11522, average 0.228 sec/video, moving Prec@1 45.301 Prec@5 74.699</span><br><span class="line">video 10000 <span class="keyword">done</span>, total 10000/11522, average 0.227 sec/video, moving Prec@1 45.305 Prec@5 74.715</span><br><span class="line">video 10200 <span class="keyword">done</span>, total 10200/11522, average 0.225 sec/video, moving Prec@1 45.260 Prec@5 74.760</span><br><span class="line">video 10400 <span class="keyword">done</span>, total 10400/11522, average 0.224 sec/video, moving Prec@1 45.312 Prec@5 74.774</span><br><span class="line">video 10600 <span class="keyword">done</span>, total 10600/11522, average 0.223 sec/video, moving Prec@1 45.297 Prec@5 74.807</span><br><span class="line">video 10800 <span class="keyword">done</span>, total 10800/11522, average 0.225 sec/video, moving Prec@1 45.412 Prec@5 74.875</span><br><span class="line">video 11000 <span class="keyword">done</span>, total 11000/11522, average 0.223 sec/video, moving Prec@1 45.441 Prec@5 74.877</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.222 sec/video, moving Prec@1 45.468 Prec@5 74.844</span><br><span class="line">video 11400 <span class="keyword">done</span>, total 11400/11522, average 0.220 sec/video, moving Prec@1 45.451 Prec@5 74.812</span><br><span class="line">[0.86567164 0.25       0.24761905 0.59701493 0.39473684 0.45689655</span><br><span class="line"> 0.62686567 0.29411765 0.52427184 0.62135922 0.4        0.41666667</span><br><span class="line"> 0.25531915 0.32258065 0.61146497 0.42       0.23493976 0.25</span><br><span class="line"> 0.34146341 0.28       0.248      0.60344828 0.5        0.35294118</span><br><span class="line"> 0.5483871  0.33333333 0.43478261 0.4        0.66666667 0.61904762</span><br><span class="line"> 0.54545455 0.5        0.75925926 0.15384615 0.26086957 0.19444444</span><br><span class="line"> 0.81609195 0.7745098  0.13157895 0.55555556 0.69421488 0.66</span><br><span class="line"> 0.60769231 0.55102041 0.71153846 0.60655738 0.45588235 0.33684211</span><br><span class="line"> 0.21348315 0.59398496 0.48113208 0.         0.28       0.45</span><br><span class="line"> 0.19047619 0.16666667 0.36363636 0.46875    0.08333333 0.70408163</span><br><span class="line"> 0.81818182 0.13888889 0.56       0.13636364 0.16666667 0.34259259</span><br><span class="line"> 0.12962963 0.10606061 0.35211268 0.34615385 0.48387097 0.17857143</span><br><span class="line"> 0.39473684 0.48       0.75       0.32258065 0.23529412 0.47058824</span><br><span class="line"> 0.40909091 0.80487805 0.08571429 0.21428571 0.36666667 0.15789474</span><br><span class="line"> 0.6        0.34482759 0.63513514 0.63492063 0.05555556 0.03571429</span><br><span class="line"> 0.56756757 0.70731707 0.48837209 0.50925926 0.61682243 0.16129032</span><br><span class="line"> 0.         0.16666667 0.58479532 0.48529412 0.41836735 0.42592593</span><br><span class="line"> 0.15625    0.57142857 0.6097561  0.54285714 0.40449438 0.56521739</span><br><span class="line"> 0.31578947 0.34065934 0.58823529 0.         0.5        0.19047619</span><br><span class="line"> 0.38679245 0.43333333 0.25454545 0.61702128 0.26829268 0.54166667</span><br><span class="line"> 0.71590909 0.58823529 0.30909091 0.425      0.19444444 0.28571429</span><br><span class="line"> 0.43396226 0.46296296 0.11034483 0.60576923 0.24       0.11111111</span><br><span class="line"> 0.26315789 0.33333333 0.52317881 0.39655172 0.         0.11666667</span><br><span class="line"> 0.10169492 0.60526316 0.61       0.23255814 0.38636364 0.33050847</span><br><span class="line"> 0.49333333 0.45070423 0.52830189 0.14925373 0.4375     0.68</span><br><span class="line"> 0.65454545 0.33870968 0.4        0.77777778 0.48809524 0.07843137</span><br><span class="line"> 0.31147541 0.35714286 0.35643564 0.1875     0.48148148 0.275</span><br><span class="line"> 0.3        0.31034483 0.64705882 0.75757576 0.90291262 0.8490566</span><br><span class="line"> 0.69444444 0.72972973 0.31428571 0.56834532 0.62773723 0.55263158]</span><br><span class="line">upper bound: 0.4377580829893891</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 41.77%</span><br><span class="line">Overall Prec@1 45.42% Prec@5 74.83%</span><br><span class="line">E:\Program Files\Anaconda3\envs\tsm\lib\site-packages\numpy\core\_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="pan-rgb"><a class="header-anchor" href="#pan-rgb">#</a>PAN RGB</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">$ python test_models.py something --VAP --batch_size=10 -j=4 --test_crops=1 --test_segments=8 --weights=pretrained/PAN_RGB_something_resnet50_shift8_blockres_avg_segment8_e50.pth.tar</span><br><span class="line">something: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line"></span><br><span class="line">    Initializing PAN with base model: resnet50.</span><br><span class="line">    PAN Configurations:</span><br><span class="line">        input_modality:     RGB</span><br><span class="line">        num_segments:       8</span><br><span class="line">        new_length:         1</span><br><span class="line">        consensus_module:   avg</span><br><span class="line">        dropout_ratio:      0.8</span><br><span class="line">        img_feature_dim:    256</span><br><span class="line"></span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">video number:11522</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/11522, average 3.020 sec/video, moving Prec@1 30.000 Prec@5 70.000</span><br><span class="line">video 200 <span class="keyword">done</span>, total 200/11522, average 0.238 sec/video, moving Prec@1 48.571 Prec@5 77.143</span><br><span class="line">video 400 <span class="keyword">done</span>, total 400/11522, average 0.174 sec/video, moving Prec@1 47.805 Prec@5 77.073</span><br><span class="line">video 600 <span class="keyword">done</span>, total 600/11522, average 0.146 sec/video, moving Prec@1 47.377 Prec@5 77.213</span><br><span class="line">video 800 <span class="keyword">done</span>, total 800/11522, average 0.134 sec/video, moving Prec@1 45.556 Prec@5 75.309</span><br><span class="line">video 1000 <span class="keyword">done</span>, total 1000/11522, average 0.136 sec/video, moving Prec@1 46.139 Prec@5 74.554</span><br><span class="line">video 1200 <span class="keyword">done</span>, total 1200/11522, average 0.132 sec/video, moving Prec@1 45.785 Prec@5 75.124</span><br><span class="line">video 1400 <span class="keyword">done</span>, total 1400/11522, average 0.126 sec/video, moving Prec@1 46.596 Prec@5 74.894</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/11522, average 0.121 sec/video, moving Prec@1 46.770 Prec@5 74.845</span><br><span class="line">video 1800 <span class="keyword">done</span>, total 1800/11522, average 0.121 sec/video, moving Prec@1 45.691 Prec@5 74.088</span><br><span class="line">video 2000 <span class="keyword">done</span>, total 2000/11522, average 0.123 sec/video, moving Prec@1 45.821 Prec@5 74.577</span><br><span class="line">video 2200 <span class="keyword">done</span>, total 2200/11522, average 0.122 sec/video, moving Prec@1 45.520 Prec@5 74.253</span><br><span class="line">video 2400 <span class="keyword">done</span>, total 2400/11522, average 0.122 sec/video, moving Prec@1 45.270 Prec@5 74.191</span><br><span class="line">video 2600 <span class="keyword">done</span>, total 2600/11522, average 0.120 sec/video, moving Prec@1 45.057 Prec@5 74.215</span><br><span class="line">video 2800 <span class="keyword">done</span>, total 2800/11522, average 0.117 sec/video, moving Prec@1 45.089 Prec@5 74.377</span><br><span class="line">video 3000 <span class="keyword">done</span>, total 3000/11522, average 0.114 sec/video, moving Prec@1 45.083 Prec@5 74.319</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/11522, average 0.112 sec/video, moving Prec@1 44.517 Prec@5 74.050</span><br><span class="line">video 3400 <span class="keyword">done</span>, total 3400/11522, average 0.110 sec/video, moving Prec@1 44.516 Prec@5 74.164</span><br><span class="line">video 3600 <span class="keyword">done</span>, total 3600/11522, average 0.109 sec/video, moving Prec@1 44.515 Prec@5 74.072</span><br><span class="line">video 3800 <span class="keyword">done</span>, total 3800/11522, average 0.107 sec/video, moving Prec@1 44.514 Prec@5 73.858</span><br><span class="line">video 4000 <span class="keyword">done</span>, total 4000/11522, average 0.106 sec/video, moving Prec@1 44.214 Prec@5 73.791</span><br><span class="line">video 4200 <span class="keyword">done</span>, total 4200/11522, average 0.106 sec/video, moving Prec@1 44.228 Prec@5 73.753</span><br><span class="line">video 4400 <span class="keyword">done</span>, total 4400/11522, average 0.103 sec/video, moving Prec@1 44.331 Prec@5 73.651</span><br><span class="line">video 4600 <span class="keyword">done</span>, total 4600/11522, average 0.104 sec/video, moving Prec@1 44.555 Prec@5 73.557</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/11522, average 0.102 sec/video, moving Prec@1 44.470 Prec@5 73.451</span><br><span class="line">video 5000 <span class="keyword">done</span>, total 5000/11522, average 0.102 sec/video, moving Prec@1 44.311 Prec@5 73.234</span><br><span class="line">video 5200 <span class="keyword">done</span>, total 5200/11522, average 0.101 sec/video, moving Prec@1 44.376 Prec@5 73.378</span><br><span class="line">video 5400 <span class="keyword">done</span>, total 5400/11522, average 0.100 sec/video, moving Prec@1 44.455 Prec@5 73.420</span><br><span class="line">video 5600 <span class="keyword">done</span>, total 5600/11522, average 0.099 sec/video, moving Prec@1 44.439 Prec@5 73.512</span><br><span class="line">video 5800 <span class="keyword">done</span>, total 5800/11522, average 0.099 sec/video, moving Prec@1 44.389 Prec@5 73.339</span><br><span class="line">video 6000 <span class="keyword">done</span>, total 6000/11522, average 0.098 sec/video, moving Prec@1 44.476 Prec@5 73.494</span><br><span class="line">video 6200 <span class="keyword">done</span>, total 6200/11522, average 0.098 sec/video, moving Prec@1 44.477 Prec@5 73.333</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/11522, average 0.098 sec/video, moving Prec@1 44.524 Prec@5 73.526</span><br><span class="line">video 6600 <span class="keyword">done</span>, total 6600/11522, average 0.097 sec/video, moving Prec@1 44.493 Prec@5 73.510</span><br><span class="line">video 6800 <span class="keyword">done</span>, total 6800/11522, average 0.097 sec/video, moving Prec@1 44.508 Prec@5 73.465</span><br><span class="line">video 7000 <span class="keyword">done</span>, total 7000/11522, average 0.096 sec/video, moving Prec@1 44.479 Prec@5 73.466</span><br><span class="line">video 7200 <span class="keyword">done</span>, total 7200/11522, average 0.096 sec/video, moving Prec@1 44.466 Prec@5 73.412</span><br><span class="line">video 7400 <span class="keyword">done</span>, total 7400/11522, average 0.096 sec/video, moving Prec@1 44.467 Prec@5 73.387</span><br><span class="line">video 7600 <span class="keyword">done</span>, total 7600/11522, average 0.096 sec/video, moving Prec@1 44.507 Prec@5 73.443</span><br><span class="line">video 7800 <span class="keyword">done</span>, total 7800/11522, average 0.096 sec/video, moving Prec@1 44.469 Prec@5 73.444</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/11522, average 0.095 sec/video, moving Prec@1 44.444 Prec@5 73.496</span><br><span class="line">video 8200 <span class="keyword">done</span>, total 8200/11522, average 0.095 sec/video, moving Prec@1 44.434 Prec@5 73.423</span><br><span class="line">video 8400 <span class="keyword">done</span>, total 8400/11522, average 0.094 sec/video, moving Prec@1 44.566 Prec@5 73.508</span><br><span class="line">video 8600 <span class="keyword">done</span>, total 8600/11522, average 0.094 sec/video, moving Prec@1 44.390 Prec@5 73.473</span><br><span class="line">video 8800 <span class="keyword">done</span>, total 8800/11522, average 0.094 sec/video, moving Prec@1 44.563 Prec@5 73.496</span><br><span class="line">video 9000 <span class="keyword">done</span>, total 9000/11522, average 0.093 sec/video, moving Prec@1 44.584 Prec@5 73.496</span><br><span class="line">video 9200 <span class="keyword">done</span>, total 9200/11522, average 0.092 sec/video, moving Prec@1 44.680 Prec@5 73.496</span><br><span class="line">video 9400 <span class="keyword">done</span>, total 9400/11522, average 0.092 sec/video, moving Prec@1 44.644 Prec@5 73.464</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/11522, average 0.092 sec/video, moving Prec@1 44.776 Prec@5 73.569</span><br><span class="line">video 9800 <span class="keyword">done</span>, total 9800/11522, average 0.092 sec/video, moving Prec@1 44.801 Prec@5 73.649</span><br><span class="line">video 10000 <span class="keyword">done</span>, total 10000/11522, average 0.091 sec/video, moving Prec@1 44.775 Prec@5 73.666</span><br><span class="line">video 10200 <span class="keyword">done</span>, total 10200/11522, average 0.091 sec/video, moving Prec@1 44.848 Prec@5 73.761</span><br><span class="line">video 10400 <span class="keyword">done</span>, total 10400/11522, average 0.091 sec/video, moving Prec@1 44.861 Prec@5 73.737</span><br><span class="line">video 10600 <span class="keyword">done</span>, total 10600/11522, average 0.091 sec/video, moving Prec@1 44.882 Prec@5 73.723</span><br><span class="line">video 10800 <span class="keyword">done</span>, total 10800/11522, average 0.091 sec/video, moving Prec@1 44.986 Prec@5 73.747</span><br><span class="line">video 11000 <span class="keyword">done</span>, total 11000/11522, average 0.090 sec/video, moving Prec@1 44.932 Prec@5 73.706</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/11522, average 0.090 sec/video, moving Prec@1 44.996 Prec@5 73.747</span><br><span class="line">video 11400 <span class="keyword">done</span>, total 11400/11522, average 0.090 sec/video, moving Prec@1 44.978 Prec@5 73.699</span><br><span class="line">[0.7761194  0.275      0.19047619 0.62686567 0.23684211 0.40517241</span><br><span class="line"> 0.62686567 0.44117647 0.45631068 0.6407767  0.37333333 0.38888889</span><br><span class="line"> 0.24468085 0.32258065 0.7133758  0.36       0.19879518 0.225</span><br><span class="line"> 0.39837398 0.28       0.32       0.48275862 0.40740741 0.43137255</span><br><span class="line"> 0.32258065 0.33333333 0.39130435 0.28       0.60606061 0.53968254</span><br><span class="line"> 0.63636364 0.57692308 0.72222222 0.10989011 0.23913043 0.16666667</span><br><span class="line"> 0.7816092  0.78431373 0.05263158 0.48148148 0.62809917 0.54</span><br><span class="line"> 0.66923077 0.63265306 0.59615385 0.52459016 0.41176471 0.34736842</span><br><span class="line"> 0.15730337 0.66165414 0.56603774 0.         0.36       0.4</span><br><span class="line"> 0.19047619 0.29166667 0.39393939 0.40625    0.         0.73469388</span><br><span class="line"> 0.60606061 0.13888889 0.6        0.11818182 0.1        0.38888889</span><br><span class="line"> 0.11111111 0.15151515 0.43661972 0.30769231 0.48387097 0.25</span><br><span class="line"> 0.5        0.44       0.7        0.41935484 0.29411765 0.29411765</span><br><span class="line"> 0.13636364 0.63414634 0.11428571 0.14285714 0.33333333 0.10526316</span><br><span class="line"> 0.62857143 0.29310345 0.52702703 0.55555556 0.16666667 0.10714286</span><br><span class="line"> 0.48648649 0.68292683 0.41860465 0.46296296 0.57009346 0.27419355</span><br><span class="line"> 0.03703704 0.11904762 0.41520468 0.41176471 0.24489796 0.51851852</span><br><span class="line"> 0.21875    0.46938776 0.42682927 0.6        0.5505618  0.75362319</span><br><span class="line"> 0.47368421 0.2967033  0.54901961 0.11764706 0.60810811 0.38095238</span><br><span class="line"> 0.66037736 0.36666667 0.21818182 0.62765957 0.2195122  0.58333333</span><br><span class="line"> 0.79545455 0.54901961 0.35454545 0.425      0.36111111 0.44897959</span><br><span class="line"> 0.49056604 0.53703704 0.15862069 0.53846154 0.22       0.18518519</span><br><span class="line"> 0.13157895 0.23333333 0.64238411 0.29310345 0.07142857 0.45</span><br><span class="line"> 0.08474576 0.51315789 0.57       0.34883721 0.25       0.38135593</span><br><span class="line"> 0.56       0.33098592 0.6509434  0.17910448 0.484375   0.752</span><br><span class="line"> 0.56363636 0.12903226 0.28333333 0.7037037  0.5        0.15686275</span><br><span class="line"> 0.18032787 0.21428571 0.43564356 0.4375     0.24074074 0.25</span><br><span class="line"> 0.26       0.31034483 0.60784314 0.66666667 0.83495146 0.75471698</span><br><span class="line"> 0.68518519 0.45945946 0.44761905 0.61870504 0.59124088 0.71052632]</span><br><span class="line">upper bound: 0.42524204990350917</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 40.94%</span><br><span class="line">Overall Prec@1 44.97% Prec@5 73.69%</span><br><span class="line">E:\Program Files\Anaconda3\envs\tsm\lib\site-packages\numpy\core\_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> pan </tag>
            
            <tag> pan lite </tag>
            
            <tag> pan full </tag>
            
            <tag> pan en </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下的Ubuntu子系统</title>
      <link href="/blog/2020/10/06/ubuntu-subsystem-in-windows/"/>
      <url>/blog/2020/10/06/ubuntu-subsystem-in-windows/</url>
      
        <content type="html"><![CDATA[<p><code>windows</code>下用<code>Linux</code>下的东西会出现各种各样的问题，装个<code>Ubuntu</code>子系统完美解决问题。</p><a id="more"></a><h2 id="安装-ubuntu-子系统"><a class="header-anchor" href="#安装-ubuntu-子系统">#</a>安装 Ubuntu 子系统</h2><p><code>设置</code> -&gt; <code>更新和安全</code> -&gt; <code>开发者选项</code> -&gt; <code>开发人员模式（从任意源(包括松散文件)安装应用。）</code> -&gt; <code>开启</code>：</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201006-1.png" alt="开发人员模式"></p></center><p><code>控制面板</code> -&gt; <code>程序</code> -&gt; <code>启用或关闭 Windows 功能</code>：</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201006-2.png" alt="启用或关闭 Windows 功能"></p></center><p>勾选 <code>适用于 Linux 的 Windows 子系统</code>：</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201006-3.png" alt="适用于 Linux 的 Windows 子系统"></p></center><p><code>Microsoft Store</code> -&gt; 搜索<code>wsl</code> -&gt; 选择<code>Ubuntu 18.04 LTS</code>：</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201006-4.png" alt="Ubuntu 18.04 LTS"></p></center><p>重启之后打开，设置用户名密码即可！</p><h2 id="开启-sshd"><a class="header-anchor" href="#开启-sshd">#</a>开启 sshd</h2><p>阉割版好像没有<code>service</code>服务，只能手动启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/ssh start</span><br></pre></td></tr></table></figure><p>但是会得到如下提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* Starting OpenBSD Secure Shell server sshd</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_rsa_key</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line">Could not load host key: /etc/ssh/ssh_host_ed25519_key</span><br><span class="line">[ OK ]</span><br></pre></td></tr></table></figure><p>手动生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key</span><br><span class="line">ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line">ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key</span><br></pre></td></tr></table></figure><p>成功！就可以用 Linux 下的一些命令了～</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201006-5.png" alt="示意图"></p></center><p>多说一句，端口啊、磁盘啊什么的都是打通的，炒鸡方便：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /mnt/</span><br><span class="line">$ ls</span><br><span class="line">c  d  e  f  g</span><br></pre></td></tr></table></figure><p>这里的<code>c d e f g</code>就是<code>Windows</code>下的分区。</p><p>完。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://www.jianshu.com/p/2bcf5eca5fbc" target="_blank" rel="noopener">Windows10 安装 Ubuntu 桌面子系统</a></li><li><a href="http://blog.chinaunix.net/uid-26168435-id-5732463.html" target="_blank" rel="noopener">启动 sshd 时，报“Could not load host key”错</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rsync </tag>
            
            <tag> windows </tag>
            
            <tag> ssh </tag>
            
            <tag> sshd </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TEA Temporal Excitation and Aggregation for Action Recognition</title>
      <link href="/blog/2020/10/04/tea-temporal-excitation-and-aggregation-for-action-recognition/"/>
      <url>/blog/2020/10/04/tea-temporal-excitation-and-aggregation-for-action-recognition/</url>
      
        <content type="html"><![CDATA[<h2 id="tea-temporal-excitation-and-aggregation-for-action-recognition"><a class="header-anchor" href="#tea-temporal-excitation-and-aggregation-for-action-recognition">#</a>TEA: Temporal Excitation and Aggregation for Action Recognition</h2><h3 id="问题提出"><a class="header-anchor" href="#问题提出">#</a>问题提出</h3><p>在行为识别网络的时序建模中存在着两个问题：<code>short-range motion encoding</code>和<code>long-range temporal aggregation</code>，即短时运动编码和长时的时间信息融合问题。</p><p>前者基本依赖光流来解决，因为计算量很大，且无法满足实时的任务，所以作者提出<code>motion excitation</code>。</p><p>后者现有的解决方案有两个：</p><ol><li>adopt 2D CNN backbones to extract frame-wise features and then utilize a simple temporal max/average pooling to obtain the whole video representation.</li><li>adopt local 3D/(2+1)D convolutional operations to process local temporal window</li></ol><p>这样所带来的问题是，时空信息在网络的顶端进行融合，再反向传播回来，可能会导致优化困难。所以作者提出<code>multiple temporal aggregation</code>。</p><center><!-- //onns.xyz/blog/image --><p><img src="//onns.xyz/blog/image/20201008-1.png" alt="结构图"></p></center><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/129282832" target="_blank" rel="noopener">[CVPR 2020 ] 南京大学/腾讯 PCG 用于时序建模的轻量级行为识别模型 TEA</a></li><li><a href="https://blog.csdn.net/qq_41214679/article/details/107975761" target="_blank" rel="noopener">TEA: Temporal Excitation and Aggregation for Action Recognition 阅读笔记</a></li><li><a href="https://zhuanlan.zhihu.com/p/130807086" target="_blank" rel="noopener">CVPR2020 南大+腾讯 TEA 轻量级视频行为识别模型</a></li><li><a href="https://arxiv.org/abs/2004.01398" target="_blank" rel="noopener">TEA: Temporal Excitation and Aggregation for Action Recognition</a></li><li><a href="https://github.com/Phoenix1327/tea-action-recognition" target="_blank" rel="noopener">Phoenix1327/tea-action-recognition</a></li><li><a href="https://blog.csdn.net/irving512/article/details/106524982/" target="_blank" rel="noopener">论文浏览(3) TEA: Temporal Excitation and Aggregation for Action Recognition</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> CVPR </tag>
            
            <tag> CVPR 2020 </tag>
            
            <tag> 2020 </tag>
            
            <tag> tea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阴历生日生成脚本</title>
      <link href="/blog/2020/10/04/lunar-birthday-generator-script/"/>
      <url>/blog/2020/10/04/lunar-birthday-generator-script/</url>
      
        <content type="html"><![CDATA[<p><code>Google Calendar</code>本身没有阴历日历的功能，只能通过生成然后导入的方式添加。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> sxtwl</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(len(sys.argv) != <span class="number">3</span> <span class="keyword">or</span> len(sys.argv[<span class="number">2</span>]) != <span class="number">8</span>):</span><br><span class="line">exit(<span class="string">'Usage: python lunar_brithday &lt;name&gt; &lt;birth day(YYYYMMDD)&gt;'</span>)</span><br><span class="line"></span><br><span class="line">lunar = sxtwl.Lunar()</span><br><span class="line"></span><br><span class="line">birth_year = int(sys.argv[<span class="number">2</span>][:<span class="number">4</span>])</span><br><span class="line">birth_month = int(sys.argv[<span class="number">2</span>][<span class="number">4</span>:<span class="number">6</span>])</span><br><span class="line">birth_day = int(sys.argv[<span class="number">2</span>][<span class="number">6</span>:<span class="number">8</span>])</span><br><span class="line"></span><br><span class="line">day = lunar.getDayBySolar(birth_year, birth_month, birth_day)</span><br><span class="line"></span><br><span class="line">lunar_birth_month = (day.Lmc + <span class="number">11</span>) % <span class="number">12</span></span><br><span class="line">lunar_birth_day = day.Ldi + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"Subject,Start Date,All Day Event"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">day = lunar.getDayByLunar(birth_year+i, lunar_birth_month, lunar_birth_day)</span><br><span class="line">print(sys.argv[<span class="number">1</span>] + <span class="string">'\'s lunar birthday,'</span> + str(day.m) + <span class="string">'/'</span> + str(day.d) + <span class="string">'/'</span> + str(day.y) + <span class="string">',TRUE'</span>)</span><br><span class="line"><span class="comment"># Subject,Start Date,All Day Event</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> lunar birthday </tag>
            
            <tag> calendar </tag>
            
            <tag> google calendar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAN Lite 训练结果</title>
      <link href="/blog/2020/10/02/pan-lite-train-log/"/>
      <url>/blog/2020/10/02/pan-lite-train-log/</url>
      
        <content type="html"><![CDATA[<h2 id="pan-lite-训练结果"><a class="header-anchor" href="#pan-lite-训练结果">#</a>PAN Lite 训练结果</h2><p>从 26 日 0 点跑到了 29 日 18 点，中间实验室停电耽误了几个小时的时间。</p><a id="more"></a><h3 id="准确度"><a class="header-anchor" href="#准确度">#</a>准确度</h3><p>测试集 TOP1 准确度：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_test_top1.svg" alt="acc_test_top1"></p></center><p>在测试集上的最高准确率为<code>48.06%</code>，第<code>42</code>个<code>epoch</code>：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_test_top1_best.svg" alt="acc_test_top1_best"></p></center><p>测试集 TOP5 准确度：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_test_top5.svg" alt="acc_test_top5"></p></center><p>训练集 TOP1 准确度：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_train_top1.svg" alt="acc_train_top1"></p></center><p>训练集 TOP5 准确度：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_train_top5.svg" alt="acc_train_top5"></p></center><h3 id="loss"><a class="header-anchor" href="#loss">#</a>Loss</h3><p>测试集<code>Loss</code>：</p><center><p><img src="//onns.xyz/blog/image/20201002-loss_test.svg" alt="loss_test"></p></center><p>训练集<code>Loss</code>：</p><center><p><img src="//onns.xyz/blog/image/20201002-loss_train.svg" alt="loss_train"></p></center><h3 id="学习率"><a class="header-anchor" href="#学习率">#</a>学习率</h3><center><p><img src="//onns.xyz/blog/image/20201002-lr.svg" alt="lr"></p></center><p>论文里的<code>batch size</code>为<code>64</code>，学习率初始为<code>0.01</code>，按比例放缩。</p><p>此次实验<code>batch size</code>为<code>16</code>，初始学习率为<code>0.0025</code>。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> pan </tag>
            
            <tag> pan lite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报-20201002</title>
      <link href="/blog/2020/10/02/weekly-report-20201002/"/>
      <url>/blog/2020/10/02/weekly-report-20201002/</url>
      
        <content type="html"><![CDATA[<center ondblclick="javascript:document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('header')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementsByTagName('footer')[0].remove();document.getElementById('comments').remove();document.getElementById('back-to-top').remove();document.getElementById('post-toc').remove();"><table><thead><tr><th style="text-align:center">2020-10-02</th><th style="text-align:center">周报#06</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h1 id="i-task-achieved-last-week"><a class="header-anchor" href="#i-task-achieved-last-week">#</a>I. Task achieved last week</h1><hr><ul><li>《Temporal Segment Networks for Action Recognition in Videos》</li><li>跑了 PAN 的实验，尝试改进时序信息的提取方法，但是准确度降了 3%。</li><li>准备开题报告和开题报告 PPT。</li></ul><h1 id="ii-reports"><a class="header-anchor" href="#ii-reports">#</a>II. Reports</h1><hr><h2 id="temporal-segment-networks-for-action-recognition-in-videos"><a class="header-anchor" href="#temporal-segment-networks-for-action-recognition-in-videos">#</a>Temporal Segment Networks for Action Recognition in Videos</h2><p>这篇是最近研究的论文的起始论文，提出了一种<code>基于分片采样</code>的策略，传统的不论是双流法还是三维卷积法，受限于 GPU 资源和网络结构的限制，都只能处理一段时间内的视频帧，没有办法做到长时间的采样。</p><blockquote><p>As discussed in Sec. 1, long-range temporal modeling is important for action understanding in videos. The existing deep architectures such as two-stream ConvNets [1] and 3D convolutional networks [16] are designed to operate on a single frame or a stack of frames (e.g., 16 frames) with limited temporal durations. Therefore, these structures lack capacity of incorporating long-range temporal information of videos into the learning of action models.</p></blockquote><p>要解决这样一个问题，有两种方向，第一种是<code>stacking more consecutive frames</code>，第二种是<code>sampling more frames at a fixed rate</code>，即要么堆叠更多的帧数，要么进行局部采样。</p><p>但是前者会造成计算复杂度急剧升高，后者会导致模型不能很好地表达完整的信息。</p><p>与此同时，作者注意到，其实连续的多帧中其实内容变换很少，所以提出了一种<code>segment based sampling</code>的采样策略。</p><blockquote><p>although the frames are densely recorded in the videos, the content changes relatively slowly.</p></blockquote><p>这个策略的思想其实还蛮简单的，看图就懂了：</p><center><p><img src="//onns.xyz/blog/image/20201002-1.png" alt="网络结构示意图"></p></center><p>本质上就是先把视频均分成等份，然后每一份里选取一个<code>RGB</code>、<code>Optical Flow</code>或<code>RGB Differences</code>之类的来代表这一个片段的信息，然后提取<code>这一片</code>的信息（CNN）进行信息融合。</p><h3 id="融合函数"><a class="header-anchor" href="#融合函数">#</a>融合函数</h3><p>所以整个网络其实就是有三段：<code>分段特征表示</code>、<code>分段信息提取</code>和<code>多段信息融合</code>。</p><p>现在往回看去，分段特征表示就是将多帧图像的信息进行转化，转化成一个可以用来计算的方法，即前面所说的<code>RGB</code>、<code>Optical Flow</code>或<code>RGB Differences</code>。</p><p>分段信息提取是属于骨干网络的事情，我们也无法进行修改。</p><p>故最重要的部分就是，如果将<code>多个分段</code>所提取到的信息进行融合，这个对于模型的表达能力来说，是十分重要的。</p><blockquote><p>As analyzed above, the consensus (aggregation) function is an important component in our temporal segment network framework.</p></blockquote><p>论文中给出了五种融合方法：<code>max pooling</code>、<code>average pooling</code>、<code>top-K pooling</code>、<code>weighted average</code>、<code>attention weighting</code>。</p><p>前两个就不解释了，第三个相当于不取最大的，而是取最大的<code>K</code>个进行平均，<code>k=1</code>即<code>max pooling</code>，<code>k=[分片数]</code>即<code>average pooling</code>。</p><p>第四个和第五个相当于在平均池化的基础上给每个分片进行了加权。</p><p>（PAN 的创新之一就是提出了一种新的加权方式）</p><h2 id="pan-lite-训练结果"><a class="header-anchor" href="#pan-lite-训练结果">#</a>PAN Lite 训练结果</h2><p>从 26 日 0 点跑到了 29 日 18 点，中间实验室停电耽误了几个小时的时间。</p><h3 id="准确度"><a class="header-anchor" href="#准确度">#</a>准确度</h3><p>测试集 TOP1 准确度：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_test_top1.svg" alt="acc_test_top1"></p></center><p>在测试集上的最高准确率为<code>48.06%</code>，第<code>42</code>个<code>epoch</code>：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_test_top1_best.svg" alt="acc_test_top1_best"></p></center><p>测试集 TOP5 准确度：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_test_top5.svg" alt="acc_test_top5"></p></center><p>训练集 TOP1 准确度：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_train_top1.svg" alt="acc_train_top1"></p></center><p>训练集 TOP5 准确度：</p><center><p><img src="//onns.xyz/blog/image/20201002-acc_train_top5.svg" alt="acc_train_top5"></p></center><h3 id="loss"><a class="header-anchor" href="#loss">#</a>Loss</h3><p>测试集<code>Loss</code>：</p><center><p><img src="//onns.xyz/blog/image/20201002-loss_test.svg" alt="loss_test"></p></center><p>训练集<code>Loss</code>：</p><center><p><img src="//onns.xyz/blog/image/20201002-loss_train.svg" alt="loss_train"></p></center><h3 id="学习率"><a class="header-anchor" href="#学习率">#</a>学习率</h3><center><p><img src="//onns.xyz/blog/image/20201002-lr.svg" alt="lr"></p></center><p>论文里的<code>batch size</code>为<code>64</code>，学习率初始为<code>0.01</code>，按比例放缩。</p><p>此次实验<code>batch size</code>为<code>16</code>，初始学习率为<code>0.0025</code>。</p><h1 id="iii-plan-for-this-week"><a class="header-anchor" href="#iii-plan-for-this-week">#</a>III. Plan for this week</h1><hr><ul><li>看论文</li><li>学习<code>BERT</code>相关的基础知识，因为 BERT 是用来整合上下文信息的，不知道能不能用到时序信息的融合上来，因为时序信息很大程度上也是上下文信息。</li><li>开始写毕业论文的综述部分</li><li>继续改进现有代码</li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>禁用Acrobat的自动更新</title>
      <link href="/blog/2020/10/02/disable-auto-update-in-acrobat/"/>
      <url>/blog/2020/10/02/disable-auto-update-in-acrobat/</url>
      
        <content type="html"><![CDATA[<p>最近其实做了很多事，只是真的没有时间来写博客记录这些了 😔 ，毕业真的好难 😭 。<br>希望以后可以周更或三日一更吧～而且更自己的东西。</p><a id="more"></a><h2 id="禁用-acrobat-的自动更新"><a class="header-anchor" href="#禁用-acrobat-的自动更新">#</a>禁用 Acrobat 的自动更新</h2><p>本来我在<code>Creative Cloud</code>里都已经禁用自动更新了，但是<code>Acrobat</code>还是自动强制更新，破解都是有一个时延的，所以必须想办法禁掉自动更新。</p><p><code>System Preferences</code> -&gt; <code>Security &amp; Privacy</code> -&gt; <code>Firewall</code>：</p><p>打开<code>防火墙</code>，然后设置<code>防火墙选项</code>，把<code>Acrobat</code>的相关内容全拉进来，然后<code>Block incoming connections</code>。</p><center><p><img src="//onns.xyz/blog/image/20201002-1.jpg" alt="示意图"></p></center><p>不过好像失效了。。。试试看吧= =</p><h2 id="新方法"><a class="header-anchor" href="#新方法">#</a>新方法</h2><p>参照《<a href="https://tieba.baidu.com/p/6852244355" target="_blank" rel="noopener">Adobe Acrobat DC 2020 for mac 自动更新点不掉</a>》，先卸载掉破解好的<code>Acrobat</code>，然后重新下一个正版的，先不破解，然后快速进到软件里把自动更新关掉，再破解，反正<code>Acrobat</code>里的自动更新已经被关了，之前都是关不掉的，且看看效果！</p><h2 id="adobe-zii-开启"><a class="header-anchor" href="#adobe-zii-开启">#</a>Adobe Zii 开启</h2><ol><li>先把<code>Adobe Zii</code>从附加磁盘中拖出来（不然只有只读权限），然后随便放在哪里。</li><li>打开命令行工具，键入：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xattr -rd com.apple.quarantine [这个是那个app的位置，可以直接从Finder里拖进来就行]</span><br></pre></td></tr></table></figure></li><li>直接打开即可。</li></ol><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://www.zhihu.com/question/270067688/answer/1127977865" target="_blank" rel="noopener">macOS Adobe Acrobat Pro DC 2018.009.20044 如何取消自动更新？</a></li><li><a href="https://www.adobezii.com/adobe-zii-cant-be-opened-catalina/" target="_blank" rel="noopener">Adobe Zii Can’t be opened Catalina 2020 Solved</a></li><li><a href="https://blog.csdn.net/ly869915532/article/details/107739591" target="_blank" rel="noopener">阻止 Mac 版 Adobe Acrobat Pro DC 的顽固的自动更新</a></li><li><a href="https://tieba.baidu.com/p/6852244355" target="_blank" rel="noopener">Adobe Acrobat DC 2020 for mac 自动更新点不掉</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adobe </tag>
            
            <tag> acrobat </tag>
            
            <tag> macos </tag>
            
            <tag> adobe zii </tag>
            
            <tag> creative cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>禁用Acrobat的自动更新</title>
      <link href="/blog/2020/10/02/update-leancloud-config/"/>
      <url>/blog/2020/10/02/update-leancloud-config/</url>
      
        <content type="html"><![CDATA[<p>最近其实做了很多事，只是真的没有时间来写博客记录这些了 😔 ，毕业真的好难 😭 。<br>希望以后可以周更或三日一更吧～而且更自己的东西。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adobe </tag>
            
            <tag> acrobat </tag>
            
            <tag> macos </tag>
            
            <tag> adobe zii </tag>
            
            <tag> creative cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Temporal Segment Networks for Action Recognition in Videos</title>
      <link href="/blog/2020/09/28/temporal-segment-networks-for-action-recognition-in-videos/"/>
      <url>/blog/2020/09/28/temporal-segment-networks-for-action-recognition-in-videos/</url>
      
        <content type="html"><![CDATA[<h2 id="temporal-segment-networks-for-action-recognition-in-videos"><a class="header-anchor" href="#temporal-segment-networks-for-action-recognition-in-videos">#</a>Temporal Segment Networks for Action Recognition in Videos</h2><p>这篇是最近研究的论文的起始论文，提出了一种<code>基于分片采样</code>的策略，传统的不论是双流法还是三维卷积法，受限于 GPU 资源和网络结构的限制，都只能处理一段时间内的视频帧，没有办法做到长时间的采样。</p><blockquote><p>As discussed in Sec. 1, long-range temporal modeling is important for action understanding in videos. The existing deep architectures such as two-stream ConvNets [1] and 3D convolutional networks [16] are designed to operate on a single frame or a stack of frames (e.g., 16 frames) with limited temporal durations. Therefore, these structures lack capacity of incorporating long-range temporal information of videos into the learning of action models.</p></blockquote><p>要解决这样一个问题，有两种方向，第一种是<code>stacking more consecutive frames</code>，第二种是<code>sampling more frames at a fixed rate</code>，即要么堆叠更多的帧数，要么进行局部采样。</p><p>但是前者会造成计算复杂度急剧升高，后者会导致模型不能很好地表达完整的信息。</p><p>与此同时，作者注意到，其实连续的多帧中其实内容变换很少，所以提出了一种<code>segment based sampling</code>的采样策略。</p><blockquote><p>although the frames are densely recorded in the videos, the content changes relatively slowly.</p></blockquote><p>这个策略的思想其实还蛮简单的，看图就懂了：</p><center><p><img src="//onns.xyz/blog/image/20201002-1.png" alt="网络结构示意图"></p></center><p>本质上就是先把视频均分成等份，然后每一份里选取一个<code>RGB</code>、<code>Optical Flow</code>或<code>RGB Differences</code>之类的来代表这一个片段的信息，然后提取<code>这一片</code>的信息（CNN）进行信息融合。</p><h3 id="融合函数"><a class="header-anchor" href="#融合函数">#</a>融合函数</h3><p>所以整个网络其实就是有三段：<code>分段特征表示</code>、<code>分段信息提取</code>和<code>多段信息融合</code>。</p><p>现在往回看去，分段特征表示就是将多帧图像的信息进行转化，转化成一个可以用来计算的方法，即前面所说的<code>RGB</code>、<code>Optical Flow</code>或<code>RGB Differences</code>。</p><p>分段信息提取是属于骨干网络的事情，我们也无法进行修改。</p><p>故最重要的部分就是，如果将<code>多个分段</code>所提取到的信息进行融合，这个对于模型的表达能力来说，是十分重要的。</p><blockquote><p>As analyzed above, the consensus (aggregation) function is an important component in our temporal segment network framework.</p></blockquote><p>论文中给出了五种融合方法：<code>max pooling</code>、<code>average pooling</code>、<code>top-K pooling</code>、<code>weighted average</code>、<code>attention weighting</code>。</p><p>前两个就不解释了，第三个相当于不取最大的，而是取最大的<code>K</code>个进行平均，<code>k=1</code>即<code>max pooling</code>，<code>k=[分片数]</code>即<code>average pooling</code>。</p><p>第四个和第五个相当于在平均池化的基础上给每个分片进行了加权。</p><p>（PAN 的创新之一就是提出了一种新的加权方式）</p><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://blog.csdn.net/u014380165/article/details/79029309" target="_blank" rel="noopener">TSN(Temporal Segment Networks)算法笔记</a></li><li><a href="https://blog.csdn.net/Hia_Hia_Hia/article/details/82979606" target="_blank" rel="noopener">Temporal Segment Networks for Action Recognition in Videos 论文阅读笔记</a></li><li><a href="https://zhuanlan.zhihu.com/p/61630950?utm_source=wechat_session" target="_blank" rel="noopener">Temporal Segment Networks(TSN)深度行为识别</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MMTM Multimodal Transfer Module for CNN Fusion</title>
      <link href="/blog/2020/09/23/mmtm-multimodal-transfer-module-for-cnn-fusion/"/>
      <url>/blog/2020/09/23/mmtm-multimodal-transfer-module-for-cnn-fusion/</url>
      
        <content type="html"><![CDATA[<blockquote><p>In general, fusion can be achieved at the input level (i.e. early fusion), decision level (i.e. late fusion), or intermediately [8]. Although studies in neuroscience [9, 10] and machine learning [1, 3] suggest that mid-level feature fusion could benefit learning, late fusion is still the predominant method utilized for mulitmodal learning [11–13]. This is mostly due to practical reasons.</p></blockquote><blockquote><p>Another reason for the popularity of late fusion is that the architecture of each unimodal stream is carefully designed over years to achieve state-of-the-art performance for each modality.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报-20200918</title>
      <link href="/blog/2020/09/18/weekly-report-20200918/"/>
      <url>/blog/2020/09/18/weekly-report-20200918/</url>
      
        <content type="html"><![CDATA[<center><table><thead><tr><th style="text-align:center">2020-09-18</th><th style="text-align:center">周报#05</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h2 id="i-task-achieved-last-week"><a class="header-anchor" href="#i-task-achieved-last-week">#</a>I. Task achieved last week</h2><hr><ul><li>《Late Temporal Modeling in 3D CNN Architectures with BERT for Action Recognition》</li><li>《GFNET A LIGHTWEIGHT GROUP FRAME NETWORK FOR EFFICIENT HUMAN ACTION RECOGNITION》</li><li>看 PAN 的源码</li></ul><h2 id="ii-reports"><a class="header-anchor" href="#ii-reports">#</a>II. Reports</h2><hr><h3 id="late-temporal-modeling-in-3d-cnn-architectures-with-bert-for-action-recognition"><a class="header-anchor" href="#late-temporal-modeling-in-3d-cnn-architectures-with-bert-for-action-recognition">#</a>Late Temporal Modeling in 3D CNN Architectures with BERT for Action Recognition</h3><p><code>HMDB51</code>和<code>UCF101</code>的<code>top-1</code>达到现阶段最好的水平，分别为<code>85.10%</code>和<code>98.69%</code>。</p><p>时序全局平均池化阻碍了时序信息的更丰富表达。虽然感受野可能分布在整个视频切片中，但是对于不同的切片，它所能提供的信息是服从高斯分布的，简单的平均可能会损失信息。</p><blockquote><p>temporal global average pooling (TGAP) layer is used at the end of all 3D CNN architectures hinders the richness of final temporal information.<br>the receptive field might cover the whole clip, the effective receptive field has a Gaussian distribution</p></blockquote><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://github.com/artest08/LateTemporalModeling3DCNN" target="_blank" rel="noopener">https://github.com/artest08/LateTemporalModeling3DCNN</a></li></ul><h3 id="gfnet-a-lightweight-group-frame-network-for-efficient-human-action-recognition"><a class="header-anchor" href="#gfnet-a-lightweight-group-frame-network-for-efficient-human-action-recognition">#</a>GFNET A LIGHTWEIGHT GROUP FRAME NETWORK FOR EFFICIENT HUMAN ACTION RECOGNITION</h3><p>为了解决现有的行为识别方法<code>计算量大</code>、<code>参数多</code>的问题，作者提出了<code>GFNet</code>。</p><blockquote><p>To handle these issues, we propose a lightweight neural network called Group Frame Network (GFNet).</p></blockquote><p>GFNet 通过帧级分解，以极小的代价提取每一帧的特征。</p><blockquote><p>GFNet adds frame-level decomposition to extract features of each frame at a minuscule cost.</p></blockquote><p>设计了两个核心组件，能够仅从<code>RGB图像</code>中提取时空信息，而不需要借助<code>光流</code>或<code>multi-scale testing</code>等。</p><blockquote><p>There are two core components: <code>Group Temporal Module</code> (GTM) and <code>Group Spatial Module</code> (GSM). These two modules enable GFNet to obtain temporal-spatial information only from RGB images.</p></blockquote><p>为了证明模型的有效性，他们没有使用预训练策略。</p><blockquote><p>To verify the validity of the model, no pre-training strategy is used in our experiments.</p></blockquote><p>网络的输入是<code>一定数量</code>的<code>视频帧</code>，对视频进行分段采样得到结果。</p><blockquote><p>The entire video with a variable number of frames is provided as the input of the network. Through an average sampling strategy, the video is divided into N equal-length segments and only one frame is selected from each segment. Due to the repeatability of adjacent frames, this sampling strategy can reduce inter-frame redundancy while preserving long-temporal information.</p></blockquote><p>K 个层同时输入网络获取时间信息。</p><blockquote><p>The first part is a feature extraction layer consisting of K separated branches. The sampled frames are simultaneously fed into the network to maintain the temporal information among these frames.</p></blockquote><p>各自的分支独立计算获得空间信息。</p><blockquote><p>In the feature extraction layer, each frame is learned independently using a network branch to get its spatial features.</p></blockquote><p>没太理解。</p><blockquote><p>all the sampled frames are stacked by channel-wise convolution.<br>It means that the input channel of GFNet is 3N when using RGB images as input.</p></blockquote><p>由于残差网络具有高度的泛化能力和性能，所以后续的块选择高度模块化残差单元。</p><blockquote><p>Owing to the impressive performance and strong generalization abil- ity of residual architecture, the block is based on the highly modularized residual unit.</p></blockquote><p>这句话没太理解。</p><blockquote><p>Considering the extraneous motion and identical texture features in sampled frames, GFNet decomposes frames and reduces the number of channels for each frame to lessen spatial redundancy. To be specific, the number of channels is equally divided among branches. It means that only a small number of channels are used per frame.</p></blockquote><h3 id="group-temporal-module"><a class="header-anchor" href="#group-temporal-module">#</a>Group Temporal Module</h3><p>因为每个分支都是单独计算的，所以势必会降低准确率（没有提取帧间的联系），所以提出了<code>GTM</code>模块。</p><blockquote><p>To leverage the inter-frame information effectively and better strengthen temporal relationships, GTM is proposed to efficiently overcome the side effects brought by the separated branch.</p></blockquote><blockquote><p>GTM consists of a translation layer and a 3D convolution layer.</p></blockquote><blockquote><p>The translation layer makes the replacement of the data dimension. It includes the channel merger and the channel separation, which achieves the conversion of the feature map from four-dimensional data to five-dimensional data.</p></blockquote><h3 id="group-spatial-module"><a class="header-anchor" href="#group-spatial-module">#</a>Group Spatial Module</h3><p>For the convolution layer of ResNet50, the computational cost is closely related to the number of channels. Motivated by this, a novel module called GSM is designed to significantly decrease the number of parameters and computational efforts.</p><p>GSM 也是通过只取纹理来最小化计算成本。</p><blockquote><p>Because of the similarity among frames, the texture information is repetitive. Meanwhile, irrelevant motion inside frames increases the intra-frame redundancy. Aiming at minimizing the interference of redundant information, GSM diminishes the number of channels to extract features per frame.</p></blockquote><h2 id="iii-plan-for-this-week"><a class="header-anchor" href="#iii-plan-for-this-week">#</a>III. Plan for this week</h2><hr><ul><li>看论文</li><li>看代码</li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java的ThreadLocal类</title>
      <link href="/blog/2020/09/16/java-threadlocal/"/>
      <url>/blog/2020/09/16/java-threadlocal/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.juc;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Onns</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/9/16 9:06 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Website</span> https://onns.xyz/blog/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadLocalTest</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;String&gt; stringThreadLocal = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Thread thread = Thread.currentThread();</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">": "</span>);</span><br><span class="line">stringThreadLocal.set(<span class="string">"This is a"</span>);</span><br><span class="line">System.out.println(stringThreadLocal.get());</span><br><span class="line">stringThreadLocal.remove();</span><br><span class="line">System.out.println(stringThreadLocal.get());</span><br><span class="line">&#125;, <span class="string">"A"</span>).start();</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">": "</span>);</span><br><span class="line">stringThreadLocal.set(<span class="string">"This is b"</span>);</span><br><span class="line">System.out.println(stringThreadLocal.get());</span><br><span class="line">stringThreadLocal.remove();</span><br><span class="line">System.out.println(stringThreadLocal.get());</span><br><span class="line">&#125;, <span class="string">"B"</span>).start();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><code>get</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets the current thread's copy of this thread-local variable</span></span><br><span class="line"><span class="comment"> * to the specified value.  Most subclasses will have no need to</span></span><br><span class="line"><span class="comment"> * override this method, relying solely on the &#123;<span class="doctag">@link</span> #initialValue&#125;</span></span><br><span class="line"><span class="comment"> * method to set the values of thread-locals.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value the value to be stored in the current thread's copy of</span></span><br><span class="line"><span class="comment"> *        this thread-local.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(T value)</span> </span>&#123;</span><br><span class="line">Thread t = Thread.currentThread();</span><br><span class="line">ThreadLocalMap map = getMap(t);</span><br><span class="line"><span class="keyword">if</span> (map != <span class="keyword">null</span>) &#123;</span><br><span class="line">map.set(<span class="keyword">this</span>, value);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">createMap(t, value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>getMap</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the map associated with a ThreadLocal. Overridden in</span></span><br><span class="line"><span class="comment"> * InheritableThreadLocal.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  t the current thread</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the map</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">ThreadLocalMap <span class="title">getMap</span><span class="params">(Thread t)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> t.threadLocals;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>createMap</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create the map associated with a ThreadLocal. Overridden in</span></span><br><span class="line"><span class="comment"> * InheritableThreadLocal.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> t the current thread</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> firstValue value for the initial entry of the map</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createMap</span><span class="params">(Thread t, T firstValue)</span> </span>&#123;</span><br><span class="line">t.threadLocals = <span class="keyword">new</span> ThreadLocalMap(<span class="keyword">this</span>, firstValue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ThreadLocalMap</code>构造函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Construct a new map initially containing (firstKey, firstValue).</span></span><br><span class="line"><span class="comment"> * ThreadLocalMaps are constructed lazily, so we only create</span></span><br><span class="line"><span class="comment"> * one when we have at least one entry to put in it.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ThreadLocalMap(ThreadLocal&lt;?&gt; firstKey, Object firstValue) &#123;</span><br><span class="line">table = <span class="keyword">new</span> Entry[INITIAL_CAPACITY];</span><br><span class="line"><span class="keyword">int</span> i = firstKey.threadLocalHashCode &amp; (INITIAL_CAPACITY - <span class="number">1</span>);</span><br><span class="line">table[i] = <span class="keyword">new</span> Entry(firstKey, firstValue);</span><br><span class="line">size = <span class="number">1</span>;</span><br><span class="line">setThreshold(INITIAL_CAPACITY);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the value associated with key.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key the thread local object</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value the value to be set</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(ThreadLocal&lt;?&gt; key, Object value)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// We don't use a fast path as with get() because it is at</span></span><br><span class="line"><span class="comment">// least as common to use set() to create new entries as</span></span><br><span class="line"><span class="comment">// it is to replace existing ones, in which case, a fast</span></span><br><span class="line"><span class="comment">// path would fail more often than not.</span></span><br><span class="line"></span><br><span class="line">Entry[] tab = table;</span><br><span class="line"><span class="keyword">int</span> len = tab.length;</span><br><span class="line"><span class="keyword">int</span> i = key.threadLocalHashCode &amp; (len-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Entry e = tab[i];</span><br><span class="line"> e != <span class="keyword">null</span>;</span><br><span class="line"> e = tab[i = nextIndex(i, len)]) &#123;</span><br><span class="line">ThreadLocal&lt;?&gt; k = e.get();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (k == key) &#123;</span><br><span class="line">e.value = value;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (k == <span class="keyword">null</span>) &#123;</span><br><span class="line">replaceStaleEntry(key, value, i);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tab[i] = <span class="keyword">new</span> Entry(key, value);</span><br><span class="line"><span class="keyword">int</span> sz = ++size;</span><br><span class="line"><span class="keyword">if</span> (!cleanSomeSlots(i, sz) &amp;&amp; sz &gt;= threshold)</span><br><span class="line">rehash();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Removes the current thread's value for this thread-local</span></span><br><span class="line"><span class="comment"> * variable.  If this thread-local variable is subsequently</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@linkplain</span> #get read&#125; by the current thread, its value will be</span></span><br><span class="line"><span class="comment"> * reinitialized by invoking its &#123;<span class="doctag">@link</span> #initialValue&#125; method,</span></span><br><span class="line"><span class="comment"> * unless its value is &#123;<span class="doctag">@linkplain</span> #set set&#125; by the current thread</span></span><br><span class="line"><span class="comment"> * in the interim.  This may result in multiple invocations of the</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> initialValue&#125; method in the current thread.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> ThreadLocalMap m = getMap(Thread.currentThread());</span><br><span class="line"> <span class="keyword">if</span> (m != <span class="keyword">null</span>) &#123;</span><br><span class="line"> m.remove(<span class="keyword">this</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> source code </tag>
            
            <tag> threadlocal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：翻转二叉树</title>
      <link href="/blog/2020/09/16/solution-of-invert-binary-tree/"/>
      <url>/blog/2020/09/16/solution-of-invert-binary-tree/</url>
      
        <content type="html"><![CDATA[<h2 id="226-翻转二叉树"><a class="header-anchor" href="#226-翻转二叉树">#</a><a href="https://leetcode-cn.com/problems/invert-binary-tree/" target="_blank" rel="noopener">226. 翻转二叉树</a></h2><p>翻转一棵二叉树。</p><p>示例：</p><p>输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">     4</span><br><span class="line">   &#x2F;   \</span><br><span class="line">  2     7</span><br><span class="line"> &#x2F; \   &#x2F; \</span><br><span class="line">1   3 6   9</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">     4</span><br><span class="line">   &#x2F;   \</span><br><span class="line">  7     2</span><br><span class="line"> &#x2F; \   &#x2F; \</span><br><span class="line">9   6 3   1</span><br></pre></td></tr></table></figure><p>备注：</p><p>这个问题是受到<a href="https://twitter.com/mxcl" target="_blank" rel="noopener">Max Howell</a>的<a href="https://twitter.com/mxcl/status/608682016205344768" target="_blank" rel="noopener">原问题</a>启发的：</p><blockquote><p>谷歌：我们 90％的工程师使用您编写的软件(Homebrew)，但是您却无法在面试时在白板上写出翻转二叉树这道题，这太糟糕了。</p></blockquote><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.leetcode;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Onns</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/9/16 9:41 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Website</span> https://onns.xyz/blog/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InvertBinaryTree</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> * int val;</span></span><br><span class="line"><span class="comment"> * TreeNode left;</span></span><br><span class="line"><span class="comment"> * TreeNode right;</span></span><br><span class="line"><span class="comment"> * TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">TreeNode left;</span><br><span class="line">TreeNode right;</span><br><span class="line"></span><br><span class="line">TreeNode(<span class="keyword">int</span> x) &#123;</span><br><span class="line">val = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">invertTree</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> root;</span><br><span class="line">exchange(root);</span><br><span class="line"><span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TreeNode t = root.left;</span><br><span class="line">root.left = root.right;</span><br><span class="line">root.right = t;</span><br><span class="line"><span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">exchange(root.left);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">exchange(root.right);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> leetcode </tag>
            
            <tag> 递归 </tag>
            
            <tag> recursion </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今日的大坑：ssh密钥失效</title>
      <link href="/blog/2020/09/16/ssh-key-can-not-work/"/>
      <url>/blog/2020/09/16/ssh-key-can-not-work/</url>
      
        <content type="html"><![CDATA[<p>像往常一样，日常备份一下服务器上的备份文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -auv -e <span class="string">"ssh -i /home/deploy/.ssh/mi"</span> --progress /home/deploy/common/ android@xm.onns.xyz:/home/android/</span><br></pre></td></tr></table></figure><p>突然间我服务器炸了，<code>ssh</code>什么的都连不上了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android@xm.onns.xyz: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).</span><br></pre></td></tr></table></figure><a id="more"></a><p>之前从没遇到过这样的问题，正因为从来没遇到过，所以我服务器上只有一个账户，这个账户没法登录，我整个服务器就连接不上了，物理机也连接不上😭。</p><p>后面重新安装了ssh之后总算可以登录了，上去排查问题。</p><p>首先第一个想到的可能是，我的<code>rsync</code>目的路径是我用户的根目录，会不会发生了<code>覆盖写</code>操作，把我的<code>根目录</code>下的<code>.ssh/</code>目录删除了，导致<code>ssh</code>找不到<code>authorized_keys</code>文件。</p><p>这个问题首先去看了下<code>rsync</code>的参数，我没有带<code>--delete</code>所以肯定不会有<code>删除</code>的问题，而且后面登录上去之后也确实<code>根目录</code>下的所有文件都在，此问题排除。</p><p>到目前为止，根据我现有的知识，没有办法确定问题发生的原因，所以我打算重新配置一下<code>ssh</code>密钥，然后<code>再次复现</code>一下之前的操作。</p><p>到这里就出现了问题，<code>ssh</code>密钥不论我怎么配置，<code>android</code>用户都无法通过<code>密钥</code>登录。</p><p>查看了一下<code>/etc/ssh/sshd_config</code>，发现相关的配置都没问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PubkeyAuthentication yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2</span></span><br><span class="line"><span class="comment"># but this is overridden so installations will only check .ssh/authorized_keys</span></span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys</span><br></pre></td></tr></table></figure><p><code>PubkeyAuthentication</code>设置了<code>yes</code>，允许密钥登录，验证文件也没问题，是<code>.ssh/authorized_keys</code>。</p><p>没办法解决，所以我又创建了一个新的用户，然后同样的<code>生成密钥</code>，测试登录，发现新用户没有任何问题，<code>可以使用密钥登录</code>。</p><p>再次回到<code>android</code>用户的登录测试，把本地的私钥权限调成<code>777</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ssh android@192.168.1.116 -i mi</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">Permissions 0777 <span class="keyword">for</span> <span class="string">'mi'</span> are too open.</span><br><span class="line">It is required that your private key files are NOT accessible by others.</span><br><span class="line">This private key will be ignored.</span><br><span class="line">Load key <span class="string">"mi"</span>: bad permissions</span><br></pre></td></tr></table></figure><p>按理来说没问题的，这已经在走密钥验证流程了，所以说，大概率还是<code>android</code>的服务器那边配置出了什么问题。</p><p>找了一些<code>ssh</code>密钥登录的配置教程，在配置<code>authorized_keys</code>的时候，教程里把<code>.ssh</code>目录的权限设置为<code>700</code>，把<code>authorized_keys</code>文件的权限设置为<code>600</code>，这是我之前从来不知道的，原来服务器端这边的<code>公钥</code>也需要相关的权限。</p><p>受此启发，同时我又去查了一下<code>rsync</code>的相关文档，其中一个教程有如下说明：</p><blockquote><p>3.源目录如果不带后缀“/”表示在目标目录下创建该目录并把源目录下文件一并同步过去，带“/”表示只是把源目录下的文件全部同步过去。</p></blockquote><p>所以我的<code>/home/android/</code>的权限极有可能是被修改了，导致<code>ssh</code>的文件夹信任路径没有办法走完。</p><p>重新修改了一下<code>/home/android/</code>目录的权限，修改成<code>700</code>，发现<code>android</code>用户的<code>ssh</code>已经可以正常地用密钥登录了。</p><p>再次复现一下问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ rsync -auv -e <span class="string">"ssh -i /home/deploy/.ssh/mi"</span> --progress /home/deploy/common/ android@xm.onns.xyz:/home/android/</span><br><span class="line">sending incremental file list</span><br><span class="line">./</span><br><span class="line"></span><br><span class="line">sent 84 bytes  received 19 bytes  41.20 bytes/sec</span><br><span class="line">total size is 2,183,563  speedup is 21,199.64</span><br></pre></td></tr></table></figure><p>回到服务器查看一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l</span><br><span class="line">total 8</span><br><span class="line">drwxrwxr-x. 6 android android    4096 Sep 15 18:37 android</span><br><span class="line">drwx------. 5 onns    aid_system 4096 Sep 15 18:37 onns</span><br></pre></td></tr></table></figure><p>果然是这个问题。</p><p>至此，花了几个小时时间，终于把问题解决了，因为同步的是数据库的备份文件，所以我当时以为服务器被黑了，赶紧把服务器从互联网上断网了，所幸，是小问题。</p><h2 id="总结"><a class="header-anchor" href="#总结">#</a>总结</h2><p>也算是，多了解了一些关于<code>ssh</code>的使用相关问题吧，如果未来没有相关的系统学习，那今天所做的，往好了说，就是在提前为以后<code>填坑</code>啦！</p><ul><li><code>ssh</code>本地的私钥权限必须保证为<code>600</code>，相关路径的权限为<code>700</code>，这个路径是从<code>/</code>开始算的所有路径，任意中间一点权限过高都不行。</li><li><code>ssh</code>服务器公钥权限必须保证为<code>600</code>，相关路径的权限为<code>700</code>，这个路径是从<code>/</code>开始算的所有路径，任意中间一点权限过高都不行。</li><li><code>rsync</code>或者说<code>Linux</code>下的文件拷贝复制，结尾带<code>/</code>或者不带<code>/</code>影响真的很大，这个要根据每个指令自己的相关实现，以<code>rsync</code>为例，源文件夹路径如下：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;</span><br><span class="line">├── home</span><br><span class="line">|├── deploy</span><br><span class="line">||├── common</span><br><span class="line">|||├── daily_backup.db</span><br><span class="line">|||├── ...</span><br><span class="line">||├── ...</span><br><span class="line">|├── ...</span><br><span class="line">├── ...</span><br></pre></td></tr></table></figure><code>daily_backup.db</code>及其相关文件是我们要备份的文件，如果我们使用如下命令：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -auv -e <span class="string">"ssh -i /home/deploy/.ssh/mi"</span> --progress /home/deploy/common/ android@xm.onns.xyz:/home/android/</span><br></pre></td></tr></table></figure>在目标文件生成的文件会如下：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;</span><br><span class="line">├── home</span><br><span class="line">|├── android</span><br><span class="line">||├── daily_backup.db</span><br><span class="line">||├── ...</span><br><span class="line">|├── ...</span><br><span class="line">├── ...</span><br></pre></td></tr></table></figure>会直接把所有文件放到根目录，所以不可避免的会修改根目录的相关权限。但假如换成如下命令：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -auv -e <span class="string">"ssh -i /home/deploy/.ssh/mi"</span> --progress /home/deploy/common android@xm.onns.xyz:/home/android/</span><br></pre></td></tr></table></figure>在目标文件生成的文件会如下：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;</span><br><span class="line">├── home</span><br><span class="line">|├── android</span><br><span class="line">||├── common</span><br><span class="line">|||├── daily_backup.db</span><br><span class="line">|||├── ...</span><br><span class="line">||├── ...</span><br><span class="line">|├── ...</span><br><span class="line">├── ...</span><br></pre></td></tr></table></figure>一个<code>/</code>真的差别好大！</li></ul><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://www.cnblogs.com/sunju/p/11073530.html" target="_blank" rel="noopener">关于ssh密钥配置还需要输入密码的终极解决办法</a></li><li><a href="https://www.cnblogs.com/fanggege/p/10631903.html" target="_blank" rel="noopener">rsync 同步</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> rsync </tag>
            
            <tag> ssh </tag>
            
            <tag> sshd </tag>
            
            <tag> chmod </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：零钱兑换</title>
      <link href="/blog/2020/09/15/solution-of-coin-change/"/>
      <url>/blog/2020/09/15/solution-of-coin-change/</url>
      
        <content type="html"><![CDATA[<h2 id="322-零钱兑换"><a class="header-anchor" href="#322-零钱兑换">#</a><a href="https://leetcode-cn.com/problems/coin-change/" target="_blank" rel="noopener">322. 零钱兑换</a></h2><p>给定不同面额的硬币<code>coins</code>和一个总金额<code>amount</code>。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任何一种硬币组合能组成总金额，返回<code>-1</code>。</p><p>示例<code>1</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: coins &#x3D; [1, 2, 5], amount &#x3D; 11</span><br><span class="line">输出: 3</span><br><span class="line">解释: 11 &#x3D; 5 + 5 + 1</span><br></pre></td></tr></table></figure><p>示例<code>2</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: coins &#x3D; [2], amount &#x3D; 3</span><br><span class="line">输出: -1</span><br></pre></td></tr></table></figure><p>说明:<br>你可以认为每种硬币的数量是<code>无限的</code>。</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.leetcode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Onns</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/9/15 12:06 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Website</span> https://onns.xyz/blog/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CoinChange</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> CoinChange().<span class="keyword">new</span> Solution().test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(<span class="keyword">int</span>[] coins, <span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n = coins.length;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[amount + <span class="number">1</span>];</span><br><span class="line">Arrays.fill(dp, amount + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// base case:</span></span><br><span class="line"><span class="comment">// dp[0] = 0</span></span><br><span class="line">dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// all conditions:</span></span><br><span class="line"><span class="comment">// amount from 1 to amount</span></span><br><span class="line"><span class="comment">// coin from 0 to coins.length - 1</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= amount; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="comment">// state transition:</span></span><br><span class="line"><span class="comment">// f(i) = f(i-coins[i]) + 1, if f(i-coins[i]) + 1 &lt; f(i)</span></span><br><span class="line"><span class="comment">// f(i) = f(i), otherwise</span></span><br><span class="line"><span class="keyword">int</span> t = i - coins[j];</span><br><span class="line"><span class="keyword">if</span> (t &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">dp[i] = Math.min(dp[t] + <span class="number">1</span>, dp[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dp[amount] == (amount + <span class="number">1</span>) ? -<span class="number">1</span> : dp[amount];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(coinChange(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>&#125;, <span class="number">5</span>));</span><br><span class="line">System.out.println(coinChange(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>&#125;, <span class="number">10</span>));</span><br><span class="line">System.out.println(coinChange(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>&#125;, <span class="number">11</span>));</span><br><span class="line">System.out.println(coinChange(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2</span>&#125;, <span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> leetcode </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> dynamic programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：斐波那契数</title>
      <link href="/blog/2020/09/15/solution-of-fibonacci-number/"/>
      <url>/blog/2020/09/15/solution-of-fibonacci-number/</url>
      
        <content type="html"><![CDATA[<h2 id="509-斐波那契数"><a class="header-anchor" href="#509-斐波那契数">#</a><a href="https://leetcode-cn.com/problems/fibonacci-number/" target="_blank" rel="noopener">509. 斐波那契数</a></h2><p>斐波那契数，通常用<code>F(n)</code>表示，形成的序列称为<strong>斐波那契数列</strong>。该数列由<code>0</code>和<code>1</code>开始，后面的每一项数字都是前面两项数字的和。也就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">F(0) &#x3D; 0,   F(1) &#x3D; 1</span><br><span class="line">F(N) &#x3D; F(N - 1) + F(N - 2), 其中 N &gt; 1.</span><br></pre></td></tr></table></figure><p>给定<code>N</code>，计算<code>F(N)</code>。</p><p>示例<code>1</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：2</span><br><span class="line">输出：1</span><br><span class="line">解释：F(2) &#x3D; F(1) + F(0) &#x3D; 1 + 0 &#x3D; 1.</span><br></pre></td></tr></table></figure><p>示例<code>2</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：3</span><br><span class="line">输出：2</span><br><span class="line">解释：F(3) &#x3D; F(2) + F(1) &#x3D; 1 + 1 &#x3D; 2.</span><br></pre></td></tr></table></figure><p>示例<code>3</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：4</span><br><span class="line">输出：3</span><br><span class="line">解释：F(4) &#x3D; F(3) + F(2) &#x3D; 2 + 1 &#x3D; 3.</span><br></pre></td></tr></table></figure><p>提示：</p><p>0 ≤<code>N</code>≤ 30</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.leetcode;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Onns</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/9/15 11:59 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Website</span> https://onns.xyz/blog/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FibonacciNumber</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> FibonacciNumber().<span class="keyword">new</span> Solution().test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line"><span class="comment">// base case:</span></span><br><span class="line"><span class="comment">// f(0) = 0, f(1) = 1</span></span><br><span class="line"><span class="keyword">int</span> pre = <span class="number">0</span>, cur = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (N == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">// all conditions:</span></span><br><span class="line"><span class="comment">// i from 2 to N</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++) &#123;</span><br><span class="line"><span class="comment">// state transition:</span></span><br><span class="line"><span class="comment">// f(i) = f(i-1) + f(i-2)</span></span><br><span class="line"><span class="keyword">int</span> t = pre + cur;</span><br><span class="line">pre = cur;</span><br><span class="line">cur = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(fib(<span class="number">2</span>));</span><br><span class="line">System.out.println(fib(<span class="number">3</span>));</span><br><span class="line">System.out.println(fib(<span class="number">4</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> leetcode </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> dynamic programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：二叉树的中序遍历</title>
      <link href="/blog/2020/09/14/solution-of-binary-tree-inorder-traversal/"/>
      <url>/blog/2020/09/14/solution-of-binary-tree-inorder-traversal/</url>
      
        <content type="html"><![CDATA[<h2 id="94-二叉树的中序遍历"><a class="header-anchor" href="#94-二叉树的中序遍历">#</a><a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal/" target="_blank" rel="noopener">94. 二叉树的中序遍历</a></h2><p>给定一个二叉树，返回它的<em>中序</em>遍历。</p><p>示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入: [1,null,2,3]</span><br><span class="line">   1</span><br><span class="line">    \</span><br><span class="line">     2</span><br><span class="line">    &#x2F;</span><br><span class="line">   3</span><br><span class="line"></span><br><span class="line">输出: [1,3,2]</span><br></pre></td></tr></table></figure><p>进阶:  递归算法很简单，你可以通过迭代算法完成吗？</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.leetcode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Onns</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/9/14 2:36 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Website</span> https://onns.xyz/blog/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinaryTreeInorderTraversal</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> BinaryTreeInorderTraversal().<span class="keyword">new</span> Solution1().test();</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">new</span> BinaryTreeInorderTraversal().<span class="keyword">new</span> Solution2().test();</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">new</span> BinaryTreeInorderTraversal().<span class="keyword">new</span> Solution().test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> * int val;</span></span><br><span class="line"><span class="comment"> * TreeNode left;</span></span><br><span class="line"><span class="comment"> * TreeNode right;</span></span><br><span class="line"><span class="comment"> * TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">TreeNode left;</span><br><span class="line">TreeNode right;</span><br><span class="line"></span><br><span class="line">TreeNode(<span class="keyword">int</span> x) &#123;</span><br><span class="line">val = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">inorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">List&lt;Integer&gt; r = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">TreeNode t = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">t = root.left;</span><br><span class="line"><span class="keyword">while</span> (t.right != <span class="keyword">null</span> &amp;&amp; t.right != root) &#123;</span><br><span class="line">t = t.right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t.right == <span class="keyword">null</span>) &#123;</span><br><span class="line">t.right = root;</span><br><span class="line">root = root.left;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">r.add(t.right.val);</span><br><span class="line">root = root.right;</span><br><span class="line">t.right = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">r.add(root.val);</span><br><span class="line">root = root.right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">TreeNode root = <span class="keyword">new</span> TreeNode(<span class="number">1</span>);</span><br><span class="line">root.left = <span class="keyword">new</span> TreeNode(<span class="number">2</span>);</span><br><span class="line">root.left.left = <span class="keyword">new</span> TreeNode(<span class="number">4</span>);</span><br><span class="line">root.left.right = <span class="keyword">new</span> TreeNode(<span class="number">5</span>);</span><br><span class="line">root.right = <span class="keyword">new</span> TreeNode(<span class="number">3</span>);</span><br><span class="line">root.right.left = <span class="keyword">new</span> TreeNode(<span class="number">6</span>);</span><br><span class="line">root.right.right = <span class="keyword">new</span> TreeNode(<span class="number">7</span>);</span><br><span class="line">List&lt;Integer&gt; r = inorderTraversal(root);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i : r) &#123;</span><br><span class="line">System.out.print(i + <span class="string">" "</span>); <span class="comment">// 4 2 5 1 6 3 7</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">inorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">List&lt;Integer&gt; r = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">Stack&lt;TreeNode&gt; s = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (root != <span class="keyword">null</span> || !s.isEmpty()) &#123;</span><br><span class="line"><span class="keyword">while</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">s.push(root);</span><br><span class="line">root = root.left;</span><br><span class="line">&#125;</span><br><span class="line">root = s.pop();</span><br><span class="line">r.add(root.val);</span><br><span class="line">root = root.right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">TreeNode root = <span class="keyword">new</span> TreeNode(<span class="number">1</span>);</span><br><span class="line">root.left = <span class="keyword">new</span> TreeNode(<span class="number">2</span>);</span><br><span class="line">root.left.left = <span class="keyword">new</span> TreeNode(<span class="number">4</span>);</span><br><span class="line">root.left.right = <span class="keyword">new</span> TreeNode(<span class="number">5</span>);</span><br><span class="line">root.right = <span class="keyword">new</span> TreeNode(<span class="number">3</span>);</span><br><span class="line">root.right.left = <span class="keyword">new</span> TreeNode(<span class="number">6</span>);</span><br><span class="line">root.right.right = <span class="keyword">new</span> TreeNode(<span class="number">7</span>);</span><br><span class="line">List&lt;Integer&gt; r = inorderTraversal(root);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i : r) &#123;</span><br><span class="line">System.out.print(i + <span class="string">" "</span>); <span class="comment">// 4 2 5 1 6 3 7</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</span><br><span class="line">List&lt;Integer&gt; r;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">inorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">r = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">visit(root);</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">visit(root.left);</span><br><span class="line">&#125;</span><br><span class="line">r.add(root.val);</span><br><span class="line"><span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">visit(root.right);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">TreeNode root = <span class="keyword">new</span> TreeNode(<span class="number">1</span>);</span><br><span class="line">root.left = <span class="keyword">new</span> TreeNode(<span class="number">2</span>);</span><br><span class="line">root.left.left = <span class="keyword">new</span> TreeNode(<span class="number">4</span>);</span><br><span class="line">root.left.right = <span class="keyword">new</span> TreeNode(<span class="number">5</span>);</span><br><span class="line">root.right = <span class="keyword">new</span> TreeNode(<span class="number">3</span>);</span><br><span class="line">root.right.left = <span class="keyword">new</span> TreeNode(<span class="number">6</span>);</span><br><span class="line">root.right.right = <span class="keyword">new</span> TreeNode(<span class="number">7</span>);</span><br><span class="line">List&lt;Integer&gt; r = inorderTraversal(root);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i : r) &#123;</span><br><span class="line">System.out.print(i + <span class="string">" "</span>); <span class="comment">// 4 2 5 1 6 3 7</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Morris 遍历算法</strong>是参照官方解做的：</p><p><a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal/solution/er-cha-shu-de-zhong-xu-bian-li-by-leetcode-solutio/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/binary-tree-inorder-traversal/solution/er-cha-shu-de-zhong-xu-bian-li-by-leetcode-solutio/</a></p><p><strong>Morris 遍历算法</strong>是另一种遍历二叉树的方法，它能将非递归的中序遍历空间复杂度降为 <em>O(1)</em>。</p><p><strong>Morris 遍历算法</strong>整体步骤如下（假设当前遍历到的节点为 <em>x</em>）：</p><ol><li>如果 <em>x</em> 无左孩子，先将 <em>x</em> 的值加入答案数组，再访问 <em>x</em> 的右孩子，即 $x=x.\textit{right}$ 。</li><li>如果 <em>x</em> 有左孩子，则找到 <em>x</em> 左子树上最右的节点（<strong>即左子树中序遍历的最后一个节点，<em>x</em> 在中序遍历中的前驱节点</strong>），我们记为 $\textit{predecessor}$ 。根据 $\textit{predecessor}$ 的右孩子是否为空，进行如下操作。<ul><li>如果 $\textit{predecessor}$ 的右孩子为空，则将其右孩子指向 <em>x</em>，然后访问 <em>x</em> 的左孩子，即 $x=x.\textit{left}$ 。</li><li>如果 $\textit{predecessor}$ 的右孩子不为空，则此时其右孩子指向 <em>x</em>，说明我们已经遍历完 <em>x</em> 的左子树，我们将 $\textit{predecessor}$ 的右孩子置空，将 <em>x</em> 的值加入答案数组，然后访问 <em>x</em> 的右孩子，即 $x=x.\textit{right}$ 。</li></ul></li><li>重复上述操作，直至访问完整棵树。</li></ol>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> leetcode </tag>
            
            <tag> inorder </tag>
            
            <tag> binary tree </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用MacOS自带的Quicktime Player录制系统声音</title>
      <link href="/blog/2020/09/13/screen-record-with-internal-audio-on-quicktime-player/"/>
      <url>/blog/2020/09/13/screen-record-with-internal-audio-on-quicktime-player/</url>
      
        <content type="html"><![CDATA[<p>之前舍友直播求婚，可惜录屏的时候没把声音录进去，研究一番，记录之。</p><a id="more"></a><h2 id="soundflower-blackhole"><a class="header-anchor" href="#soundflower-blackhole">#</a>Soundflower / BlackHole</h2><p>第一步是安装一个虚拟的驱动，这个虚拟的驱动就通过软件的方法把输入转成输出，把输出转成输入。</p><p>有两种解决方案：</p><ul><li><a href="https://soundflower.en.softonic.com/mac" target="_blank" rel="noopener">Soundflower</a></li><li><a href="https://github.com/ExistentialAudio/BlackHole" target="_blank" rel="noopener">BlackHole</a></li></ul><p>效果应该是一样的，前者估计很久没更新了，但是依然可以用，后者是还在有人维护并有相关的赞助和文档，我因为先知道的第一个，就用第一个做例子了。如果都没装过，建议装第二个<code>BlackHole</code>。</p><h3 id="soundflower-安装失败"><a class="header-anchor" href="#soundflower-安装失败">#</a>Soundflower 安装失败</h3><p>新系统下会有相关权限问题，如果失败了，就参考这个<a href="https://tieba.baidu.com/p/5765573933" target="_blank" rel="noopener">https://tieba.baidu.com/p/5765573933</a>的<code>14楼</code>，如果还不行，直接百度，肯定可以解决的，我<code>MacOS 10.15</code>都是可以安装的。</p><h2 id="设置"><a class="header-anchor" href="#设置">#</a>设置</h2><p>在应用里找一个叫<code>Audio MIDI Setup</code>的应用：</p><center><p><img src="//onns.xyz/blog/image/20200913-4.png" alt="Audio MIDI Setup"></p></center><p>右下角选择<code>Create Aggregate Device</code>：</p><center><p><img src="//onns.xyz/blog/image/20200913-5.png" alt="Create Aggregate Device"></p></center><p>改个名字叫<code>Quicktime Player Input</code>，不改也没关系，改了<code>方便找</code>。然后把<code>Built-in Microphone</code>和<code>Soundflower (2ch)</code>勾上，如果安装的是<code>BlackHole</code>，应该也是个类似的名字：</p><center><p><img src="//onns.xyz/blog/image/20200913-6.jpg" alt="Quicktime Player Input"></p></center><p>再来，右下角选择<code>Create Multi-Output Device</code>：</p><center><p><img src="//onns.xyz/blog/image/20200913-7.png" alt="Create Multi-Output Device"></p></center><p>把<code>Built-in Output</code>和<code>Soundflower (2ch)</code>勾上，<code>Drift Correction</code>随意：</p><center><p><img src="//onns.xyz/blog/image/20200913-8.jpg" alt="Multi-Output Device"></p></center><h2 id="使用"><a class="header-anchor" href="#使用">#</a>使用</h2><p><code>System Preferences</code> -&gt; <code>Sound</code> -&gt; <code>Output</code> -&gt; <code>Multi-Output Device</code>：</p><center><p><img src="//onns.xyz/blog/image/20200913-9.jpg" alt="Output"></p></center><p>注意！<br>不是之前改名的那个<code>Quicktime Player Input</code>！<br>要先调整好系统音量，改到这个模式下是不能修改音量的！</p><p>然后打开<code>QuickTime Player</code> -&gt; <code>File</code> -&gt; <code>New Screen Recording</code>：</p><center><p><img src="//onns.xyz/blog/image/20200913-10.png" alt="QuickTime Player"></p></center><p><code>Options</code>里选<code>Quicktime Player Input</code>：</p><center><p><img src="//onns.xyz/blog/image/20200913-11.jpg" alt="Options"></p></center><p>开始录制！</p><p>完。</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://tieba.baidu.com/p/5765573933" target="_blank" rel="noopener">求助！soundflower 一直安装失败怎么办？</a></li><li><a href="https://soundflower.en.softonic.com/mac" target="_blank" rel="noopener">Soundflower</a></li><li><a href="https://github.com/ExistentialAudio/BlackHole" target="_blank" rel="noopener">BlackHole</a></li><li><a href="https://www.youtube.com/watch?v=K7UE8fZjox4" target="_blank" rel="noopener">How to Screen Record with Internal Audio on QuickTime Player | BlackHole Tutorial on Mac</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macos </tag>
            
            <tag> quicktime player </tag>
            
            <tag> internal audio </tag>
            
            <tag> screen record </tag>
            
            <tag> blackhole </tag>
            
            <tag> soundflower </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：单词搜索</title>
      <link href="/blog/2020/09/13/solution-of-word-search/"/>
      <url>/blog/2020/09/13/solution-of-word-search/</url>
      
        <content type="html"><![CDATA[<h2 id="79-单词搜索"><a class="header-anchor" href="#79-单词搜索">#</a><a href="https://leetcode-cn.com/problems/word-search/" target="_blank" rel="noopener">79. 单词搜索</a></h2><p>给定一个二维网格和一个单词，找出该单词是否存在于网格中。</p><p>单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</p><p></p><p>示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">board &#x3D;</span><br><span class="line">[</span><br><span class="line">  [&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;E&#39;],</span><br><span class="line">  [&#39;S&#39;,&#39;F&#39;,&#39;C&#39;,&#39;S&#39;],</span><br><span class="line">  [&#39;A&#39;,&#39;D&#39;,&#39;E&#39;,&#39;E&#39;]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">给定 word &#x3D; &quot;ABCCED&quot;, 返回 true</span><br><span class="line">给定 word &#x3D; &quot;SEE&quot;, 返回 true</span><br><span class="line">给定 word &#x3D; &quot;ABCB&quot;, 返回 false</span><br></pre></td></tr></table></figure><p>提示：</p><p><code>board</code>和<code>word</code>中只包含大写和小写英文字母。<br>1 &lt;= <code>board.length</code> &lt;= 200<br>1 &lt;= <code>board[i].length</code> &lt;= 200<br>1 &lt;= <code>word.length</code> &lt;= 10^3</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.leetcode;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Onns</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/9/13 2:57 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Website</span> https://onns.xyz/blog/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordSearch</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> WordSearch().<span class="keyword">new</span> Solution().test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">exist</span><span class="params">(<span class="keyword">char</span>[][] board, String word)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = board.length;</span><br><span class="line"><span class="keyword">int</span> m = board[<span class="number">0</span>].length;</span><br><span class="line"><span class="keyword">boolean</span>[][] use = <span class="keyword">new</span> <span class="keyword">boolean</span>[n][m];</span><br><span class="line"><span class="keyword">char</span> first = word.charAt(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] == first) &#123;</span><br><span class="line">use[i][j] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span> (dfs(board, word.toCharArray(), use, <span class="number">1</span>, n, m, i, j)) &#123;</span><br><span class="line">use[i][j] = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">use[i][j] = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span>[][] board, <span class="keyword">char</span>[] word, <span class="keyword">boolean</span>[][] use, <span class="keyword">int</span> index, <span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (index == word.length) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[] opx = &#123;-<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span>[] opy = &#123;<span class="number">0</span>, -<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; opx.length; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = a + opx[i];</span><br><span class="line"><span class="keyword">int</span> y = b + opy[i];</span><br><span class="line"><span class="keyword">if</span> (legal(x, y, n, m) &amp;&amp; board[x][y] == word[index] &amp;&amp; !use[x][y]) &#123;</span><br><span class="line">use[x][y] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span> (dfs(board, word, use, index + <span class="number">1</span>, n, m, x, y)) &#123;</span><br><span class="line">use[x][y] = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">use[x][y] = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">legal</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> i &gt;= <span class="number">0</span> &amp;&amp; i &lt; n &amp;&amp; j &gt;= <span class="number">0</span> &amp;&amp; j &lt; m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(exist(<span class="keyword">new</span> <span class="keyword">char</span>[][]&#123;&#123;<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'E'</span>&#125;, &#123;<span class="string">'S'</span>, <span class="string">'F'</span>, <span class="string">'C'</span>, <span class="string">'S'</span>&#125;, &#123;<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'E'</span>&#125;&#125;, <span class="string">"ABCCED"</span>));</span><br><span class="line">System.out.println(exist(<span class="keyword">new</span> <span class="keyword">char</span>[][]&#123;&#123;<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'E'</span>&#125;, &#123;<span class="string">'S'</span>, <span class="string">'F'</span>, <span class="string">'C'</span>, <span class="string">'S'</span>&#125;, &#123;<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'E'</span>&#125;&#125;, <span class="string">"SEE"</span>));</span><br><span class="line">System.out.println(exist(<span class="keyword">new</span> <span class="keyword">char</span>[][]&#123;&#123;<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'E'</span>&#125;, &#123;<span class="string">'S'</span>, <span class="string">'F'</span>, <span class="string">'C'</span>, <span class="string">'S'</span>&#125;, &#123;<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'E'</span>&#125;&#125;, <span class="string">"ABCB"</span>));</span><br><span class="line">System.out.println(exist(<span class="keyword">new</span> <span class="keyword">char</span>[][]&#123;&#123;<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'E'</span>&#125;, &#123;<span class="string">'S'</span>, <span class="string">'F'</span>, <span class="string">'E'</span>, <span class="string">'S'</span>&#125;, &#123;<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'E'</span>&#125;&#125;, <span class="string">"ABCESEEEFS"</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> leetcode </tag>
            
            <tag> dfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：无重复字符的最长子串</title>
      <link href="/blog/2020/09/13/solution-of-longest-substring-without-repeating-characters/"/>
      <url>/blog/2020/09/13/solution-of-longest-substring-without-repeating-characters/</url>
      
        <content type="html"><![CDATA[<h2 id="3-无重复字符的最长子串"><a class="header-anchor" href="#3-无重复字符的最长子串">#</a><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/" target="_blank" rel="noopener">3. 无重复字符的最长子串</a></h2><p>给定一个字符串，请你找出其中不含有重复字符的<code>最长子串</code>的长度。</p><p>示例<code>1</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;abcabcbb&quot;</span><br><span class="line">输出: 3</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span><br></pre></td></tr></table></figure><p>示例<code>2</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;bbbbb&quot;</span><br><span class="line">输出: 1</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</span><br></pre></td></tr></table></figure><p>示例<code>3</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;pwwkew&quot;</span><br><span class="line">输出: 3</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span><br><span class="line">     请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span><br></pre></td></tr></table></figure><a id="more"></a><p>百度一面。🙃</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.leetcode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Onns</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/9/13 2:31 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Website</span> https://onns.xyz/blog/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongestSubstringWithoutRepeatingCharacters</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> LongestSubstringWithoutRepeatingCharacters().<span class="keyword">new</span> Solution().test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span>[] c = s.toCharArray();</span><br><span class="line"><span class="keyword">int</span> n = c.length;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>, max = <span class="number">0</span>;</span><br><span class="line">Set&lt;Character&gt; hashSet = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (r &lt; n) &#123;</span><br><span class="line"><span class="keyword">while</span> (hashSet.contains(c[r])) &#123;</span><br><span class="line">hashSet.remove(c[l++]);</span><br><span class="line">&#125;</span><br><span class="line">hashSet.add(c[r++]);</span><br><span class="line">max = Math.max(max, r - l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(lengthOfLongestSubstring(<span class="string">"bbbbbbbbb"</span>));</span><br><span class="line">System.out.println(lengthOfLongestSubstring(<span class="string">"abcabcbb"</span>));</span><br><span class="line">System.out.println(lengthOfLongestSubstring(<span class="string">"pwwkew"</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jobs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> interview </tag>
            
            <tag> leetcode </tag>
            
            <tag> double pointer </tag>
            
            <tag> 双指针 </tag>
            
            <tag> baidu </tag>
            
            <tag> 百度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在IntelliJ IDEA中添加自动注释</title>
      <link href="/blog/2020/09/13/add-file-header-in-idea/"/>
      <url>/blog/2020/09/13/add-file-header-in-idea/</url>
      
        <content type="html"><![CDATA[<p>每次都要给文档添加日期等注释太繁琐，设置个自动添加注释。</p><a id="more"></a><p><code>IntelliJ IDEA</code> -&gt; <code>Preferences</code>：</p><center><p><img src="//onns.xyz/blog/image/20200913-1.png" alt="Preferences"></p></center><p><code>Editor</code> -&gt; <code>File and Code Templates</code> -&gt; <code>Includes</code> -&gt; <code>File Header</code>：</p><center><p><img src="//onns.xyz/blog/image/20200913-2.png" alt="File Header"></p></center><p>以下两种仅供参考：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by $&#123;USER&#125; on $&#123;DATE&#125; $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Onns</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> $&#123;DATE&#125; $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Website</span> https://onns.xyz/blog/</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>然后下次新建<code>class</code>的时候，就会出现自动注释了：</p><center><p><img src="//onns.xyz/blog/image/20200913-3.png" alt="效果图"></p></center><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://www.cnblogs.com/miracle-luna/p/10638510.html" target="_blank" rel="noopener">IntelliJ IDEA 如何设置新建类时，自动注释作者信息和日期时间</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> jetbrain </tag>
            
            <tag> java </tag>
            
            <tag> auto annotation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：最大子序和</title>
      <link href="/blog/2020/09/13/solution-of-maximum-subarray/"/>
      <url>/blog/2020/09/13/solution-of-maximum-subarray/</url>
      
        <content type="html"><![CDATA[<h2 id="53-最大子序和"><a class="header-anchor" href="#53-最大子序和">#</a><a href="https://leetcode-cn.com/problems/maximum-subarray/" target="_blank" rel="noopener">53. 最大子序和</a></h2><p>给定一个整数数组<code>nums</code>，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p><p>示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: [-2,1,-3,4,-1,2,1,-5,4]</span><br><span class="line">输出: 6</span><br><span class="line">解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。</span><br><span class="line">进阶:</span><br></pre></td></tr></table></figure><p>如果你已经实现复杂度为<code>O(n)</code>的解法，尝试使用更为精妙的分治法求解。</p><a id="more"></a><h2 id="写在前面"><a class="header-anchor" href="#写在前面">#</a>写在前面</h2><p>美团二面的笔试题，自己当时真的一点思路都没有，没做出来，主要是<code>O(n)</code>时间复杂度的限制，再加上我脑子里的动态规划一直都是，从<code>i</code>到<code>j</code>的最大和，结果就把自己绕在那里出不来了。</p><p>但其实，如果当时知道了思路，真的就是一道，如力扣所说的，一道<code>简单难度</code>的题 😭</p><h2 id="动态规划"><a class="header-anchor" href="#动态规划">#</a>动态规划</h2><p>思路是用二维数组来存局部的和，这样不必每次都算一次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = nums.length;</span><br><span class="line"><span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line"><span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">dp[i][i] = nums[i];</span><br><span class="line"><span class="keyword">if</span> (max &lt; nums[i]) &#123;</span><br><span class="line">max = nums[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">dp[i][j] = dp[i][j - <span class="number">1</span>] + nums[j];</span><br><span class="line"><span class="keyword">if</span> (dp[i][j] &gt; max) &#123;</span><br><span class="line">max = dp[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这个代码，连测试用例都跑不过，<strong>超出内存限制</strong>。</p><h2 id="降低空间复杂度"><a class="header-anchor" href="#降低空间复杂度">#</a>降低空间复杂度</h2><p>首先观察代码，其实<code>d[i][j]</code>只与<code>d[i][j-1]</code>有关，所以只需使用一个一维数组，即可满足存储任务。</p><p>进而，<code>d[i][j]</code>本质上只与前一个数有关，那么其实只需用一个值去存前一个值即可。。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = nums.length;</span><br><span class="line"><span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">t += nums[j];</span><br><span class="line"><span class="keyword">if</span> (t &gt; max) max = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>&#125;));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Success:</span><br><span class="line">Runtime:137 ms, faster than 5.09% of Java online submissions.</span><br><span class="line">Memory Usage:40.1 MB, less than 5.10% of Java online submissions.</span><br></pre></td></tr></table></figure><p>通过了是通过了，但是这题本质上是需要<code>O(n)</code>时间复杂度求解的，很明显，没有达到要求。</p><h2 id="降低时间复杂度"><a class="header-anchor" href="#降低时间复杂度">#</a>降低时间复杂度</h2><p>如果前面的数贡献为<code>正的</code>，那么我们的最大值就是前面的数加上当前的数，如果前面的数是<code>负的</code>，那么如果当前的值比前面的数还大，那证明前面的“工作”还不如当前一个人的工作来得多，那前面所有人的工作都可以被当前的人所替代。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = nums.length;</span><br><span class="line"><span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line"><span class="keyword">int</span> pre = Integer.MIN_VALUE;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (pre &lt; <span class="number">0</span> &amp;&amp; pre &lt; nums[i]) &#123;</span><br><span class="line">pre = nums[i];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">pre += nums[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pre &gt; max) &#123;</span><br><span class="line">max = pre;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>&#125;));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>&#125;));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Success:</span><br><span class="line">Runtime:1 ms, faster than 95.99% of Java online submissions.</span><br><span class="line">Memory Usage:40 MB, less than 17.17% of Java online submissions.</span><br></pre></td></tr></table></figure><h2 id="官方解答"><a class="header-anchor" href="#官方解答">#</a>官方解答</h2><p>假设 <code>nums</code> 数组的长度是 <em>n</em>，下标从 <em>0</em> 到 <em>n - 1</em>。</p><p>我们用 <em>a<sub>i</sub></em> 代表 <code>nums[i]</code>，用 <em>f(i)</em> 代表以第 <em>i</em> 个数结尾的「连续子数组的最大和」，那么很显然我们要求的答案就是：</p>$$\begin{aligned}\max\_{0 \leq i \leq n-1}\{f(i)\}\end{aligned}$$<p>因此我们只需要求出每个位置的 <em>f(i)</em>，然后返回 <code>f</code> 数组中的最大值即可。那么我们如何求 <em>f(i)</em> 呢？我们可以考虑 <em>a_i</em> 单独成为一段还是加入 <em>f(i - 1)</em> 对应的那一段，这取决于 <em>a_i</em> 和 <em>f(i - 1) + a_i</em> 的大小，我们希望获得一个比较大的，于是可以写出这样的动态规划转移方程：</p>$$\begin{aligned}f(i)=\max\{f(i-1)+a_i,a_i\}\end{aligned}$$<p>不难给出一个时间复杂度 <em>O(n)</em>、空间复杂度 <em>O(n)</em> 的实现，即用一个 <code>f</code> 数组来保存 <em>f(i)</em> 的值，用一个循环求出所有 <em>f(i)</em>。考虑到 <em>f(i)</em> 只和 <em>f(i - 1)</em> 相关，于是我们可以只用一个变量 <code>pre</code> 来维护对于当前 <em>f(i)</em> 的 <em>f(i - 1)</em> 的值是多少，从而让空间复杂度降低到 <em>O(1)</em>，这有点类似「滚动数组」的思想。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> max = nums[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> pre = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> n:nums)&#123;</span><br><span class="line">pre = Math.max(pre+n,n);</span><br><span class="line">max = Math.max(pre,max);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>&#125;));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>&#125;));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Success:</span><br><span class="line">Runtime:1 ms, faster than 95.99% of Java online submissions.</span><br><span class="line">Memory Usage:39.6 MB, less than 85.18% of Java online submissions.</span><br></pre></td></tr></table></figure><h2 id="分治"><a class="header-anchor" href="#分治">#</a>分治</h2><p>我们定义一个操作 <code>get(a, l, r)</code> 表示查询 <em>a</em> 序列 <em>[l, r]</em> 区间内的最大子段和，那么最终我们要求的答案就是 <code>get(nums, 0, nums.size() - 1)</code>。如何分治实现这个操作呢？对于一个区间 <em>[l, r]</em>，我们取$$m=\lfloor\frac{l+r}{2}\rfloor$$，对区间 <em>[l, m]</em> 和 <em>[m + 1, r]</em> 分治求解。当递归逐层深入直到区间长度缩小为 <em>1</em> 的时候，递归「开始回升」。这个时候我们考虑如何通过 <em>[l, m]</em> 区间的信息和 <em>[m + 1, r]</em> 区间的信息合并成区间 <em>[l, r]</em> 的信息。最关键的两个问题是：</p><ul><li>我们要维护区间的哪些信息呢？</li><li>我们如何合并这些信息呢？</li></ul><p>对于一个区间 <em>[l, r]</em>，我们可以维护四个量：</p><ul><li><code>lSum</code> 表示 <em>[l, r]</em> 内以 <em>l</em> 为左端点的最大子段和</li><li><code>rSum</code> 表示 <em>[l, r]</em> 内以 <em>r</em> 为右端点的最大子段和</li><li><code>mSum</code> 表示 <em>[l, r]</em> 内的最大子段和</li><li><code>iSum</code> 表示 <em>[l, r]</em> 的区间和</li></ul><p>以下简称 <em>[l, m]</em> 为 <em>[l, r]</em> 的「左子区间」，<em>[m + 1, r]</em> 为 <em>[l, r]</em> 的「右子区间」。我们考虑如何维护这些量呢（如何通过左右子区间的信息合并得到 <em>[l, r]</em> 的信息）？对于长度为 <em>1</em> 的区间 <em>[i, i]</em>，四个量的值都和 <em>a<sub>i</sub></em> 相等。对于长度大于 <em>1</em> 的区间：</p><ul><li>首先最好维护的是 <code>iSum</code>，区间 <em>[l, r]</em> 的 <code>iSum</code> 就等于「左子区间」的 <code>iSum</code> 加上「右子区间」的 <code>iSum</code>。</li><li>对于 <em>[l, r]</em> 的 <code>lSum</code>，存在两种可能，它要么等于「左子区间」的 <code>lSum</code>，要么等于「左子区间」的 <code>iSum</code> 加上「右子区间」的 <code>lSum</code>，二者取大。</li><li>对于 <em>[l, r]</em> 的 <code>rSum</code>，同理，它要么等于「右子区间」的 <code>rSum</code>，要么等于「右子区间」的 <code>iSum</code> 加上「左子区间」的 <code>rSum</code>，二者取大。</li><li>当计算好上面的三个量之后，就很好计算 <em>[l, r]</em> 的 <code>mSum</code> 了。我们可以考虑 <em>[l, r]</em> 的 <code>mSum</code> 对应的区间是否跨越 <em>m</em>——它可能不跨越 <em>m</em>，也就是说 <em>[l, r]</em> 的 <code>mSum</code> 可能是「左子区间」的 <code>mSum</code> 和 「右子区间」的 <code>mSum</code> 中的一个；它也可能跨越 <em>m</em>，可能是「左子区间」的 <code>rSum</code> 和 「右子区间」的 <code>lSum</code> 求和。三者取大。</li></ul><p>这样问题就得到了解决。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> get(nums, <span class="number">0</span>, nums.length - <span class="number">1</span>).mSum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">get</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l == r) <span class="keyword">return</span> <span class="keyword">new</span> Status(nums[l], nums[l], nums[l], nums[l]);</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">Status lSub = get(nums, l, mid);</span><br><span class="line">Status rSub = get(nums, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="keyword">int</span> iSum = lSub.iSum + rSub.iSum;</span><br><span class="line"><span class="keyword">int</span> lSum = Math.max(lSub.iSum + rSub.lSum, lSub.lSum);</span><br><span class="line"><span class="keyword">int</span> rSum = Math.max(rSub.iSum + lSub.rSum, rSub.rSum);</span><br><span class="line"><span class="keyword">int</span> mSum = Math.max(Math.max(lSub.mSum, rSub.mSum), lSub.rSum + rSub.lSum);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Status(lSum, rSum, mSum, iSum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>&#125;));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>&#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Status</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> lSum, rSum, mSum, iSum;</span><br><span class="line"></span><br><span class="line">Status(<span class="keyword">int</span> lSum, <span class="keyword">int</span> rSum, <span class="keyword">int</span> mSum, <span class="keyword">int</span> iSum) &#123;</span><br><span class="line"><span class="keyword">this</span>.lSum = lSum;</span><br><span class="line"><span class="keyword">this</span>.rSum = rSum;</span><br><span class="line"><span class="keyword">this</span>.mSum = mSum;</span><br><span class="line"><span class="keyword">this</span>.iSum = iSum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Success:</span><br><span class="line">Runtime:1 ms, faster than 95.99% of Java online submissions.</span><br><span class="line">Memory Usage:39.9 MB, less than 30.01% of Java online submissions.</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a class="header-anchor" href="#完整代码">#</a>完整代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.leetcode;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Onns</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/9/13 11:10 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Website</span> https://onns.xyz/blog/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaximumSubarray</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> MaximumSubarray().<span class="keyword">new</span> Solution().test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> get(nums, <span class="number">0</span>, nums.length - <span class="number">1</span>).mSum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">get</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l == r) <span class="keyword">return</span> <span class="keyword">new</span> Status(nums[l], nums[l], nums[l], nums[l]);</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">Status lSub = get(nums, l, mid);</span><br><span class="line">Status rSub = get(nums, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="keyword">int</span> iSum = lSub.iSum + rSub.iSum;</span><br><span class="line"><span class="keyword">int</span> lSum = Math.max(lSub.iSum + rSub.lSum, lSub.lSum);</span><br><span class="line"><span class="keyword">int</span> rSum = Math.max(rSub.iSum + lSub.rSum, rSub.rSum);</span><br><span class="line"><span class="keyword">int</span> mSum = Math.max(Math.max(lSub.mSum, rSub.mSum), lSub.rSum + rSub.lSum);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Status(lSum, rSum, mSum, iSum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>&#125;));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>&#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Status</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> lSum, rSum, mSum, iSum;</span><br><span class="line"></span><br><span class="line">Status(<span class="keyword">int</span> lSum, <span class="keyword">int</span> rSum, <span class="keyword">int</span> mSum, <span class="keyword">int</span> iSum) &#123;</span><br><span class="line"><span class="keyword">this</span>.lSum = lSum;</span><br><span class="line"><span class="keyword">this</span>.rSum = rSum;</span><br><span class="line"><span class="keyword">this</span>.mSum = mSum;</span><br><span class="line"><span class="keyword">this</span>.iSum = iSum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution4</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> max = nums[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> pre = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n : nums) &#123;</span><br><span class="line">pre = Math.max(pre + n, n);</span><br><span class="line">max = Math.max(pre, max);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>&#125;));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>&#125;));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution3</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = nums.length;</span><br><span class="line"><span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line"><span class="keyword">int</span> pre = Integer.MIN_VALUE;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (pre &lt; <span class="number">0</span> &amp;&amp; pre &lt; nums[i]) &#123;</span><br><span class="line">pre = nums[i];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">pre += nums[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pre &gt; max) &#123;</span><br><span class="line">max = pre;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>&#125;));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>&#125;));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = nums.length;</span><br><span class="line"><span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">t += nums[j];</span><br><span class="line"><span class="keyword">if</span> (t &gt; max) max = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">System.out.println(maxSubArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>&#125;));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = nums.length;</span><br><span class="line"><span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line"><span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">dp[i][i] = nums[i];</span><br><span class="line"><span class="keyword">if</span> (max &lt; nums[i]) &#123;</span><br><span class="line">max = nums[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">dp[i][j] = dp[i][j - <span class="number">1</span>] + nums[j];</span><br><span class="line"><span class="keyword">if</span> (dp[i][j] &gt; max) &#123;</span><br><span class="line">max = dp[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] nums = &#123;-<span class="number">2</span>, <span class="number">1</span>, -<span class="number">3</span>, <span class="number">4</span>, -<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, -<span class="number">5</span>, <span class="number">4</span>&#125;;</span><br><span class="line">System.out.println(maxSubArray(nums));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.csdn.net/wilson_m/article/details/81840214" target="_blank" rel="noopener">【Java】如何求最大子数组之和</a></li><li><a href="https://leetcode-cn.com/problems/maximum-subarray/solution/zui-da-zi-xu-he-by-leetcode-solution/" target="_blank" rel="noopener">最大子序和</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> jobs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> interview </tag>
            
            <tag> leetcode </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> dynamic programming </tag>
            
            <tag> segment tree </tag>
            
            <tag> 线段树 </tag>
            
            <tag> 美团 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>concurrent工具类</title>
      <link href="/blog/2020/09/12/concurrent-utility-class/"/>
      <url>/blog/2020/09/12/concurrent-utility-class/</url>
      
        <content type="html"><![CDATA[<p>concurrent 工具类</p><a id="more"></a><h2 id="countdownlatch"><a class="header-anchor" href="#countdownlatch">#</a>CountDownLatch</h2><p><strong>阻塞直到数完为止</strong></p><p>比如说下班锁门，必须要等屋子里所有人都走了之后，才能锁门。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.juc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountDownLatchTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">CountDownLatch countDownLatch = <span class="keyword">new</span> CountDownLatch(<span class="number">9</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">" count down!"</span>);</span><br><span class="line">countDownLatch.countDown();</span><br><span class="line">&#125;, String.valueOf(i + <span class="number">1</span>)).start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">countDownLatch.await();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"Done"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57648:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/onns/Documents/code/java/jvm/out/production/jvm xyz.onns.juc.CountDownLatchTest</span><br><span class="line">1 count down!</span><br><span class="line">2 count down!</span><br><span class="line">3 count down!</span><br><span class="line">4 count down!</span><br><span class="line">5 count down!</span><br><span class="line">6 count down!</span><br><span class="line">7 count down!</span><br><span class="line">8 count down!</span><br><span class="line">9 count down!</span><br><span class="line">Done</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><p>假如上面的<code>i</code>变成<code>10</code>，第十个人是否会“被锁在里面”是不固定的。</p><h2 id="cyclicbarrier"><a class="header-anchor" href="#cyclicbarrier">#</a>CyclicBarrier</h2><p><strong>等待前置条件全部满足之后，才会执行后面的操作</strong></p><p>必须要集齐<code>七颗龙珠</code>，才能召唤神龙 🐲。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.juc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.BrokenBarrierException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CyclicBarrier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CyclicBarrierTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">CyclicBarrier cyclicBarrier = <span class="keyword">new</span> CyclicBarrier(<span class="number">7</span>, () -&gt; &#123;</span><br><span class="line">System.out.println(<span class="string">"召唤神龙！"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">"收集第"</span> + (i + <span class="number">1</span>) + <span class="string">"个龙珠"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">cyclicBarrier.await();</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (BrokenBarrierException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;, <span class="string">"线程"</span> + String.valueOf(i + <span class="number">1</span>)).start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样写，第十三行会报错：</p><blockquote><p>Variable used in lambda expression should be final or effectively final</p></blockquote><p>查了一下，首先，这样做的原因是，因为 Java 是这样规定的：<a href="https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.27.2" target="_blank" rel="noopener">Lambda Expressions</a></p><blockquote><p>Any local variable, formal parameter, or exception parameter used but not declared in a lambda expression must either be declared final or be effectively final (§4.12.4), or a compile-time error occurs where the use is attempted.</p></blockquote><p>至于为什么会这样规定，参照这里：<a href="https://stackoverflow.com/a/4732617/13182099" target="_blank" rel="noopener">Why are only final variables accessible in anonymous class?</a></p><blockquote><p>When you create an instance of an anonymous inner class, any variables which are used within that class have their values copied in via the autogenerated constructor. This avoids the compiler having to autogenerate various extra types to hold the logical state of the “local variables”, as for example the C# compiler does… (When C# captures a variable in an anonymous function, it really captures the variable - the closure can update the variable in a way which is seen by the main body of the method, and vice versa.)<br>As the value has been copied into the instance of the anonymous inner class, it would look odd if the variable could be modified by the rest of the method - you could have code which appeared to be working with an out-of-date variable (because that’s effectively what would be happening… you’d be working with a copy taken at a different time). Likewise if you could make changes within the anonymous inner class, developers might expect those changes to be visible within the body of the enclosing method.<br>Making the variable final removes all these possibilities - as the value can’t be changed at all, you don’t need to worry about whether such changes will be visible. The only ways to allow the method and the anonymous inner class see each other’s changes is to use a mutable type of some description. This could be the enclosing class itself, an array, a mutable wrapper type… anything like that. Basically it’s a bit like communicating between one method and another: changes made to the parameters of one method aren’t seen by its caller, but changes made to the objects referred to by the parameters are seen.</p></blockquote><p>简单来说，实现可修改的变量功能所带来便利，没有随之而来的问题多。</p><p>解决办法就是，加一个<code>final</code>变量，其实从<code>Java 1.8</code>之后，你不加<code>final</code>关键字，只要这个值没被修改，也会默认视作<code>final</code>的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.juc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.BrokenBarrierException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CyclicBarrier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CyclicBarrierTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">CyclicBarrier cyclicBarrier = <span class="keyword">new</span> CyclicBarrier(<span class="number">7</span>, () -&gt; &#123;</span><br><span class="line">System.out.println(<span class="string">"召唤神龙！"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> finalI = i;</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">"收集第"</span> + (finalI + <span class="number">1</span>) + <span class="string">"个龙珠"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">cyclicBarrier.await();</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (BrokenBarrierException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;, <span class="string">"线程"</span> + String.valueOf(i + <span class="number">1</span>)).start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57758:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/onns/Documents/code/java/jvm/out/production/jvm xyz.onns.juc.CyclicBarrierTest</span><br><span class="line">线程4收集第4个龙珠</span><br><span class="line">线程5收集第5个龙珠</span><br><span class="line">线程7收集第7个龙珠</span><br><span class="line">线程6收集第6个龙珠</span><br><span class="line">线程2收集第2个龙珠</span><br><span class="line">线程3收集第3个龙珠</span><br><span class="line">线程1收集第1个龙珠</span><br><span class="line">召唤神龙！</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://blog.csdn.net/qq_36221788/article/details/100584500" target="_blank" rel="noopener">Variable used in lambda expression should be final or effectively final</a></li><li><a href="https://www.jianshu.com/p/e7a51617c568" target="_blank" rel="noopener">编译器说 Lambda 表达式中的变量必须是 final 的，我偏不信</a></li><li><a href="https://stackoverflow.com/questions/50456920/why-does-variables-in-lambdas-have-to-be-final-or-effectively-final/50457016" target="_blank" rel="noopener">Why does variables in lambdas have to be final or effectively final? [duplicate]</a></li><li><a href="https://stackoverflow.com/questions/25055392/lambdas-local-variables-need-final-instance-variables-dont" target="_blank" rel="noopener">Lambdas: local variables need final, instance variables don’t</a></li><li><a href="https://stackoverflow.com/a/4732617/13182099" target="_blank" rel="noopener">Why are only final variables accessible in anonymous class?</a></li></ul><h2 id="semaphore"><a class="header-anchor" href="#semaphore">#</a>Semaphore</h2><p><strong>信号量</strong></p><p>抢车位，有空车位才能停车</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.juc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Semaphore;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SemaphoreTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Semaphore semaphore = <span class="keyword">new</span> Semaphore(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> finalI = i % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">semaphore.acquire(finalI);</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">"获得了"</span> + finalI + <span class="string">"个车位"</span>);</span><br><span class="line">TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; finalI; j++) &#123;</span><br><span class="line">semaphore.release();</span><br><span class="line">System.out.println(Thread.currentThread().getName() + <span class="string">"释放了第"</span> + (j + <span class="number">1</span>) + <span class="string">"个车位"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;, String.valueOf(i + <span class="number">1</span>)).start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=58074:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/onns/Documents/code/java/jvm/out/production/jvm xyz.onns.juc.SemaphoreTest</span><br><span class="line">1获得了1个车位</span><br><span class="line">2获得了2个车位</span><br><span class="line">1释放了第1个车位</span><br><span class="line">2释放了第1个车位</span><br><span class="line">2释放了第2个车位</span><br><span class="line">3获得了3个车位</span><br><span class="line">4获得了1个车位</span><br><span class="line">3释放了第1个车位</span><br><span class="line">3释放了第2个车位</span><br><span class="line">3释放了第3个车位</span><br><span class="line">5获得了2个车位</span><br><span class="line">5释放了第1个车位</span><br><span class="line">4释放了第1个车位</span><br><span class="line">6获得了3个车位</span><br><span class="line">5释放了第2个车位</span><br><span class="line">6释放了第1个车位</span><br><span class="line">6释放了第2个车位</span><br><span class="line">7获得了1个车位</span><br><span class="line">6释放了第3个车位</span><br><span class="line">8获得了2个车位</span><br><span class="line">8释放了第1个车位</span><br><span class="line">8释放了第2个车位</span><br><span class="line">7释放了第1个车位</span><br><span class="line">9获得了3个车位</span><br><span class="line">9释放了第1个车位</span><br><span class="line">9释放了第2个车位</span><br><span class="line">9释放了第3个车位</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><p>在教程的基础上改变了些，发现出 bug 了= =</p><center><p><img src="//onns.xyz/blog/image/20200912-14.jpg" alt="出现问题"></p></center><p>找了半个多小时，解决了！</p><p>释放车位输出到控制台，不应该在在释放之后，这样可能会，释放了但是来不及打印，那边线程就已经拿到车位了。</p><p><code>释放车位</code> -&gt; <code>获得车位</code> -&gt; <code>打印输出</code></p><p><code>释放车位</code> -&gt; <code>打印输出</code> -&gt; <code>获得车位</code></p><p>第一步之后，另外的两步是没有办法保证顺序的！所以改为：</p><p><code>打印输出</code> -&gt; <code>释放车位</code> -&gt; <code>获得车位</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.juc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Semaphore;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SemaphoreTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Semaphore semaphore = <span class="keyword">new</span> Semaphore(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> finalI = i % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">semaphore.acquire(finalI);</span><br><span class="line">System.out.println(<span class="string">"线程"</span> + Thread.currentThread().getName() + <span class="string">"获得了"</span> + finalI + <span class="string">"个车位"</span>);</span><br><span class="line">TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; finalI; j++) &#123;</span><br><span class="line">System.out.println(<span class="string">"线程"</span> + Thread.currentThread().getName() + <span class="string">"释放第"</span> + (j + <span class="number">1</span>) + <span class="string">"个车位"</span>);</span><br><span class="line">semaphore.release();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;, String.valueOf(i + <span class="number">1</span>)).start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=58503:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/onns/Documents/code/java/jvm/out/production/jvm xyz.onns.juc.SemaphoreTest</span><br><span class="line">线程1获得了1个车位</span><br><span class="line">线程2获得了2个车位</span><br><span class="line">线程1释放第1个车位</span><br><span class="line">线程2释放第1个车位</span><br><span class="line">线程2释放第2个车位</span><br><span class="line">线程3获得了3个车位</span><br><span class="line">线程3释放第1个车位</span><br><span class="line">线程3释放第2个车位</span><br><span class="line">线程4获得了1个车位</span><br><span class="line">线程3释放第3个车位</span><br><span class="line">线程5获得了2个车位</span><br><span class="line">线程4释放第1个车位</span><br><span class="line">线程5释放第1个车位</span><br><span class="line">线程5释放第2个车位</span><br><span class="line">线程6获得了3个车位</span><br><span class="line">线程6释放第1个车位</span><br><span class="line">线程6释放第2个车位</span><br><span class="line">线程7获得了1个车位</span><br><span class="line">线程6释放第3个车位</span><br><span class="line">线程8获得了2个车位</span><br><span class="line">线程8释放第1个车位</span><br><span class="line">线程7释放第1个车位</span><br><span class="line">线程8释放第2个车位</span><br><span class="line">线程9获得了3个车位</span><br><span class="line">线程9释放第1个车位</span><br><span class="line">线程9释放第2个车位</span><br><span class="line">线程9释放第3个车位</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><p>完。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> juc </tag>
            
            <tag> concurrent </tag>
            
            <tag> countdownlatch </tag>
            
            <tag> cyclicbarrier </tag>
            
            <tag> semaphore </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Excel中使用宏</title>
      <link href="/blog/2020/09/12/use-vba-in-excel/"/>
      <url>/blog/2020/09/12/use-vba-in-excel/</url>
      
        <content type="html"><![CDATA[<p>工作交接～</p><a id="more"></a><h2 id="xls-转-xlsx"><a class="header-anchor" href="#xls-转-xlsx">#</a>xls 转 xlsx</h2><p>一般拿到的课程<code>excel</code>文件都是<code>xls</code>的老版后缀，所以第一步是另存为一个新版的<code>xlsx</code>后缀的文件：<code>new.xlsx</code>。</p><center><p><img src="//onns.xyz/blog/image/20200912-1.png" alt="另存为"></p></center><h2 id="去掉课程编号"><a class="header-anchor" href="#去掉课程编号">#</a>去掉课程编号</h2><p>正常一个课程的名字是<code>课程代号-课程名</code>这种格式，比如：<code>0410303-中共重要会议述评及专题研究</code>，需要先把前面的<code>课程代号</code>和<code>-</code>去掉。</p><center><p><img src="//onns.xyz/blog/image/20200912-2.png" alt="课程名"></p></center><p>选中课程的列，<code>右键</code>-&gt;<code>插入</code>：</p><center><p><img src="//onns.xyz/blog/image/20200912-3.png" alt="插入"></p></center><h2 id="键入公式"><a class="header-anchor" href="#键入公式">#</a>键入公式</h2><p>去除的公式如下：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">MID</span>(<span class="symbol">F2</span>,<span class="built_in">SEARCH</span>(<span class="string">"-"</span>,<span class="symbol">F2</span>)+<span class="number">1</span>,<span class="built_in">LEN</span>(<span class="symbol">F2</span>))</span><br></pre></td></tr></table></figure><center><p><img src="//onns.xyz/blog/image/20200912-4.png" alt="公式"></p></center><p>这里面的<code>F2</code>是同行的课程编号所在的表格位置，到时候你看着改。</p><center><p><img src="//onns.xyz/blog/image/20200912-5.png" alt="拖动"></p></center><p>然后<code>左键</code>放到<code>单元格</code>的<code>右下角</code>，拉动到最后一行，就可以完成所有的替换：</p><center><p><img src="//onns.xyz/blog/image/20200912-6.png" alt="效果图"></p></center><p>对了，记得把<code>标题栏</code>那行填一点东西，不然待会会报错，随便填什么都行：</p><center><p><img src="//onns.xyz/blog/image/20200912-13.png" alt="标题栏"></p></center><h2 id="开启宏"><a class="header-anchor" href="#开启宏">#</a>开启宏</h2><p><code>视图</code> -&gt; <code>宏</code> -&gt; <code>录制宏</code>：</p><center><p><img src="//onns.xyz/blog/image/20200912-7.png" alt="录制宏"></p></center><p><code>确定</code>：</p><center><p><img src="//onns.xyz/blog/image/20200912-8.png" alt="确定"></p></center><p>然后什么都不用点，<code>视图</code> -&gt; <code>宏</code> -&gt; <code>停止录制</code>：</p><center><p><img src="//onns.xyz/blog/image/20200912-9.png" alt="停止录制"></p></center><p><code>视图</code> -&gt; <code>宏</code> -&gt; <code>查看宏</code>：</p><center><p><img src="//onns.xyz/blog/image/20200912-10.png" alt="查看宏"></p></center><p><code>编辑</code>：</p><center><p><img src="//onns.xyz/blog/image/20200912-11.png" alt="编辑"></p></center><p>然后会有一个如下的页面：</p><center><p><img src="//onns.xyz/blog/image/20200912-12.png" alt="vba界面"></p></center><h2 id="键入宏"><a class="header-anchor" href="#键入宏">#</a>键入宏</h2><p>参考<a href="https://onns.xyz/blog/2020/02/19/find-string-in-excel/#%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81">完整代码</a>，把<code>1-64</code>行的代码，<code>ctrl c</code>复制一下，回到上一个界面，<code>ctrl a</code>选择当前所有内容，<code>ctrl v</code>替换。</p><p>注意的是<code>nameRow</code>这个变量是每次都变的，这次我们是<code>E</code>列，所以是<code>5</code>：</p><center><p><img src="//onns.xyz/blog/image/20200912-14.png" alt="E列"></p></center><center><p><img src="//onns.xyz/blog/image/20200912-15.png" alt="5"></p></center><p><code>保存</code>按钮：</p><center><p><img src="//onns.xyz/blog/image/20200912-16.png" alt="保存"></p></center><p><code>是</code>：</p><center><p><img src="//onns.xyz/blog/image/20200912-17.png" alt="是"></p></center><p><code>视图</code> -&gt; <code>宏</code> -&gt; <code>查看宏</code> -&gt; <code>FindAndMark</code> -&gt; <code>执行</code>：</p><center><p><img src="//onns.xyz/blog/image/20200912-18.png" alt="执行"></p></center><p>收工</p><h2 id="后续"><a class="header-anchor" href="#后续">#</a>后续</h2><p>注意事项都在这边：<a href="https://onns.xyz/blog/2020/02/19/find-string-in-excel/">https://onns.xyz/blog/2020/02/19/find-string-in-excel/</a>，也去看下。</p><p>完。</p>]]></content>
      
      
      <categories>
          
          <category> xmu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> excel </tag>
            
            <tag> windows </tag>
            
            <tag> vba </tag>
            
            <tag> liberal </tag>
            
            <tag> xls </tag>
            
            <tag> xlsx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSP</title>
      <link href="/blog/2020/09/10/jsp-1/"/>
      <url>/blog/2020/09/10/jsp-1/</url>
      
        <content type="html"><![CDATA[<h2 id="jsp-热更新"><a class="header-anchor" href="#jsp-热更新">#</a>JSP 热更新</h2><p>之前写 Java Servlet 的时候，每写一个就要重新启动一次<code>tomcat</code>，麻烦死，终于到<code>jsp</code>这里可以热更新了。</p><p>在<code>Deployment</code>的界面里选带<strong>exploded</strong>后缀的。</p><center><p><img src="//onns.xyz/blog/image/20200910-9.png" alt="Deployment界面"></p></center><p>然后在<code>Server</code>界面，把<code>On 'Update' action:</code>和<code>On frame deactivation:</code>改掉，重启就可以了。</p><center><p><img src="//onns.xyz/blog/image/20200910-10.png" alt="Server界面"></p></center><p>我这样配了之后不生效，找了半天原因，发现重启就可以了，唉 ╮(╯▽╰)╭</p><a id="more"></a><h2 id="jsp-语法"><a class="header-anchor" href="#jsp-语法">#</a>JSP 语法</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%----%&gt;</span><br><span class="line">&lt;%%&gt;</span><br><span class="line">&lt;%=%&gt;</span><br><span class="line">&lt;%!%&gt;</span><br></pre></td></tr></table></figure><h2 id="jsp-指令"><a class="header-anchor" href="#jsp-指令">#</a>JSP 指令</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: onns</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">9</span>/<span class="number">10</span></span><br><span class="line">  Time: <span class="number">12</span>:<span class="number">11</span> AM</span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">"common/header.jsp"</span>%&gt;</span><br><span class="line">&lt;h1&gt;Main!&lt;/h1&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">"common/footer.jsp"</span>%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="相关错误页"><a class="header-anchor" href="#相关错误页">#</a>相关错误页</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/404.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jsp-本质"><a class="header-anchor" href="#jsp-本质">#</a>JSP 本质</h2><p><code>JSP</code>的本质是，在访问某一个比如<code>hello.jsp</code>页面的时候，<code>tomcat</code>将<code>hello.jsp</code>文件生成了<code>hello.java</code>文件，并编译成<code>hello.class</code>文件，最终被<code>tomcat</code>所解析，然后返回给浏览器。</p><h2 id="jsp-内置对象"><a class="header-anchor" href="#jsp-内置对象">#</a>JSP 内置对象</h2><ul><li>PageContext 存东西</li><li>Request 存东西</li><li>Response</li><li>Session 存东西</li><li>Application (ServletContext) 存东西</li><li>Config (ServletConfig)</li><li>Out</li><li>Page</li><li>Exception</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pageContext.setAttribute(<span class="string">"nameCon"</span>,<span class="string">"Con"</span>); <span class="comment">// 保存的数据只会在一个页面中有效</span></span><br><span class="line">request.setAttribute(<span class="string">"nameReq"</span>,<span class="string">"Req"</span>); <span class="comment">// 保存的数据只会在一次请求中有效，请求转发会携带这个数据</span></span><br><span class="line">session.setAttribute(<span class="string">"nameSes"</span>,<span class="string">"Ses"</span>); <span class="comment">// 保存的数据只会在一次会话中有效，从打开浏览器到关闭浏览器</span></span><br><span class="line">application.setAttribute(<span class="string">"nameApp"</span>,<span class="string">"App"</span>); <span class="comment">// 保存的数据会在服务器运行时一直有效，从打开服务器到关闭服务器</span></span><br></pre></td></tr></table></figure><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://www.bilibili.com/video/BV12J411M7Sj?p=19" target="_blank" rel="noopener">教程地址</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> java </tag>
            
            <tag> macos </tag>
            
            <tag> servlet </tag>
            
            <tag> maven </tag>
            
            <tag> jsp </tag>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报-20200910</title>
      <link href="/blog/2020/09/10/weekly-report-20200910/"/>
      <url>/blog/2020/09/10/weekly-report-20200910/</url>
      
        <content type="html"><![CDATA[<center><table><thead><tr><th style="text-align:center">2020-09-10</th><th style="text-align:center">周报#04</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h2 id="i-task-achieved-last-week"><a class="header-anchor" href="#i-task-achieved-last-week">#</a>I. Task achieved last week</h2><hr><ul><li>《Gate-Shift Networks for Video Action Recognition》</li><li>《TSM Temporal Shift Module for Efficient Video Understanding》</li><li>《PAN: Towards Fast Action Recognition via Learning Persistence of Appearance》这篇是今年八月新发的，在something-something-v1数据集是目前的top1。</li><li>TSM和PAN跑了实验测试了一下。</li></ul><h2 id="ii-reports"><a class="header-anchor" href="#ii-reports">#</a>II. Reports</h2><hr><h3 id="gate-shift-networks-for-video-action-recognition"><a class="header-anchor" href="#gate-shift-networks-for-video-action-recognition">#</a>Gate-Shift Networks for Video Action Recognition</h3><p>用于行为识别的<code>Gate-Shift</code>网络</p><p>在实践中，由于涉及大量的参数和计算，在缺乏足够大的数据集进行大规模训练的情况下，<code>C3D</code>可能表现不佳。</p><center><p><img src="//onns.xyz/blog/image/20200910-5.png" alt="GSM"></p></center><p>提出了一种<code>Gate-Shift Module(GSM)</code>，将<code>2D-CNN</code>转换为高效的时空特征抽取器。</p><p>通过<code>GSM</code>插件，一个<code>2D-CNN</code>可以适应性地学习时间路由特性并将它们结合起来，并且几乎没有额外的附加参数和计算开销。</p><center><p><img src="//onns.xyz/blog/image/20200910-4.png" alt="思路对比"></p></center><p>传统的方法演变：<code>C3D</code> -&gt; <code>2D spatial + 1D temporal</code> -&gt; <code>CSN</code> -&gt; <code>GST</code>（与分离信道组上的二维和三维卷积并行空间和时空交互建模） -&gt; <code>TSM</code>（时域卷积可以被限制为硬编码的时移，使一些信道在时间上向前或向后移动）</p><p>所有这些现有的方法都学习具有硬连线连接和跨网络传播模式的结构化内核。<br>在网络中的任何一点上都没有数据依赖的决策来选择地通过不同的分支来路由特性，分组和随机的模式是在设计之初就固定的，并且学习如何随机是具有组合复杂性的。</p><center><p><img src="//onns.xyz/blog/image/20200910-6.png" alt="实验"></p></center><blockquote><p>From the experiments we conclude that adding GSM to the branch with the least number of convolution layers performs the best.</p></blockquote><p>在卷积层最少的分支上添加<code>GSM</code>模块表现最好。</p><h3 id="tsm-temporal-shift-module-for-efficient-video-understanding"><a class="header-anchor" href="#tsm-temporal-shift-module-for-efficient-video-understanding">#</a>TSM Temporal Shift Module for Efficient Video Understanding</h3><center><p><img src="//onns.xyz/blog/image/20200910-1.png" alt="核心思想"></p></center><p>实现在 2D 模型上达到 3D 模型的精度，极大的降低了计算。</p><p>并不是所有的<code>shift</code>操作都可以达到效果的，虽然<code>shift</code>操作不需要额外的运算但是仍然需要数据的移动，太多的移动会带来延迟。</p><p><code>shift</code>是增加时间特征的提取，太多的<code>shift</code>操作也会导致空间特征的提取受到影响。</p><center><p><img src="//onns.xyz/blog/image/20200910-2.png" alt="作者思路"></p></center><p>改进的<code>shift</code>策略：并不是<code>shift</code>所有的<code>channels</code>，而是只选择性的<code>shift</code>其中的一部分，该策略能够有效的减少数据移动所带来的时间复杂度。</p><p>TSM 并不是直接被插入到从前往后的干道中的，而是以旁路的形式进行，因此在获得了时序信息的同时不会对二维卷积的空间信息进行损害。</p><p>同时作者对于一些实时的在线检测提出了相应的模型策略，不同于将第一层下移第二层上移这种：</p><center><p><img src="//onns.xyz/blog/image/20200910-3.png" alt="在线模型"></p></center><p>可以有相应的借鉴思路，并且这篇也是上一篇的基准之一。</p><h4 id="实验结果"><a class="header-anchor" href="#实验结果">#</a>实验结果</h4><center><p><img src="//onns.xyz/blog/image/20200910-7.png" alt="过程"></p></center><center><p><img src="//onns.xyz/blog/image/20200910-8.png" alt="结果"></p></center><h4 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h4><ul><li><a href="https://github.com/mit-han-lab/temporal-shift-module" target="_blank" rel="noopener">https://github.com/mit-han-lab/temporal-shift-module</a></li><li><a href="https://blog.csdn.net/justsolow/article/details/105127296" target="_blank" rel="noopener">《TSM: Temporal Shift Module for Efficient Video Understanding》学习小记</a></li><li><a href="https://zhuanlan.zhihu.com/p/66251207" target="_blank" rel="noopener">Temporal Shift Module</a></li><li><a href="https://zhuanlan.zhihu.com/p/64525610" target="_blank" rel="noopener">TSM：Temporal Shift Module for 视频理解</a></li><li><a href="https://blog.csdn.net/Amazingren/article/details/100715768" target="_blank" rel="noopener">【视频理解论文】——TSM：Temporal Shift Module for Efficient Video Understanding</a></li><li><a href="https://zhuanlan.zhihu.com/p/64525610" target="_blank" rel="noopener">TSM：Temporal Shift Module for 视频理解</a></li><li><a href="https://blog.csdn.net/strawqqhat/article/details/105292687" target="_blank" rel="noopener">Temporal Shift Module for Efficient Video Understanding</a></li></ul><h3 id="pan-towards-fast-action-recognition-via-learning-persistence-of-appearance"><a class="header-anchor" href="#pan-towards-fast-action-recognition-via-learning-persistence-of-appearance">#</a>PAN: Towards Fast Action Recognition via Learning Persistence of Appearance</h3><p>比光流网络快了1000倍</p><blockquote><p>Our PA is over 1000× faster (8196fps vs. 8fps) than conventional optical flow in terms of motion modeling speed</p></blockquote><p>运动边界的微小位移在动作识别中起重要作用的角色。</p><blockquote><p>According to the aforementioned anal- ysis, we can conclude that small displacements of motion boundaries play a vital role in action recognition.</p></blockquote><p>低层的<code>feature map</code>之间的差异能更多地关注边界的变化。</p><blockquote><p>the differences among low-level feature maps will pay more attention to the variations at boundaries.<br>In summary, differences in low-level feature maps can reflect small displacements of motion boundaries due to convolutional operations.</p></blockquote><p>在<code>UCF101</code>上做实验表明在第一层效果最好。</p><blockquote><p>We define the basic conv-layer as eight 7×7 convolutions with stride=1 and padding=3, so that the spatial resolutions of the obtained feature maps are not reduced.</p></blockquote><p>两种编码策略：</p><p><strong>PA as motion modality</strong></p><p><strong>PA as attention</strong></p><p>第一种无论是从计算量上还是从准确率上都要更好。</p><p>可能原因是第二种融合方法导致图像的不平衡。</p><blockquote><p>However, for e2, attending appearance feature maps with PA will highlight the motion boundaries, leading to the imbalanced appearance responses both inside and at the boundaries of the moving objects.</p></blockquote><p><strong>Various-timescale Aggregation Pooling</strong></p><h4 id="实验结果-2"><a class="header-anchor" href="#实验结果-2">#</a>实验结果</h4><h5 id="lite"><a class="header-anchor" href="#lite">#</a>Lite</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">somethingv2: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Downloading: <span class="string">"https://download.pytorch.org/models/resnet50-19c8e357.pth"</span> to /home/xiangyi/.cache/torch/hub/checkpoints/resnet50-19c8e357.pth</span><br><span class="line">100%|██████████████████████████████████████| 97.8M/97.8M [00:06&lt;00:00, 14.8MB/s]</span><br><span class="line">=&gt; Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Converting the ImageNet model to a PAN_Lite init model</span><br><span class="line">=&gt; Done. PAN_lite model ready...</span><br><span class="line">video number:24777</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/24777, average 0.879 sec/video, moving Prec@1 65.625 Prec@5 87.500</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/24777, average 0.239 sec/video, moving Prec@1 60.491 Prec@5 85.640</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/24777, average 0.230 sec/video, moving Prec@1 60.518 Prec@5 85.671</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/24777, average 0.227 sec/video, moving Prec@1 60.015 Prec@5 85.374</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/24777, average 0.225 sec/video, moving Prec@1 60.031 Prec@5 85.475</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/24777, average 0.226 sec/video, moving Prec@1 59.855 Prec@5 85.334</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/24777, average 0.224 sec/video, moving Prec@1 59.775 Prec@5 85.292</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/24777, average 0.223 sec/video, moving Prec@1 59.519 Prec@5 85.284</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/24777, average 0.224 sec/video, moving Prec@1 59.530 Prec@5 85.423</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/24777, average 0.224 sec/video, moving Prec@1 59.686 Prec@5 85.497</span><br><span class="line">video 12800 <span class="keyword">done</span>, total 12800/24777, average 0.224 sec/video, moving Prec@1 59.678 Prec@5 85.487</span><br><span class="line">video 14080 <span class="keyword">done</span>, total 14080/24777, average 0.225 sec/video, moving Prec@1 59.637 Prec@5 85.464</span><br><span class="line">video 15360 <span class="keyword">done</span>, total 15360/24777, average 0.225 sec/video, moving Prec@1 59.349 Prec@5 85.315</span><br><span class="line">video 16640 <span class="keyword">done</span>, total 16640/24777, average 0.225 sec/video, moving Prec@1 59.327 Prec@5 85.327</span><br><span class="line">video 17920 <span class="keyword">done</span>, total 17920/24777, average 0.226 sec/video, moving Prec@1 59.058 Prec@5 85.204</span><br><span class="line">video 19200 <span class="keyword">done</span>, total 19200/24777, average 0.226 sec/video, moving Prec@1 59.121 Prec@5 85.206</span><br><span class="line">video 20480 <span class="keyword">done</span>, total 20480/24777, average 0.226 sec/video, moving Prec@1 59.200 Prec@5 85.295</span><br><span class="line">video 21760 <span class="keyword">done</span>, total 21760/24777, average 0.227 sec/video, moving Prec@1 59.283 Prec@5 85.337</span><br><span class="line">video 23040 <span class="keyword">done</span>, total 23040/24777, average 0.227 sec/video, moving Prec@1 59.254 Prec@5 85.422</span><br><span class="line">video 24320 <span class="keyword">done</span>, total 24320/24777, average 0.227 sec/video, moving Prec@1 59.277 Prec@5 85.421</span><br><span class="line">[0.84482759 0.38815789 0.51633987 0.58252427 0.58974359 0.54385965</span><br><span class="line"> 0.76738609 0.63636364 0.67716535 0.60264901 0.53932584 0.68613139</span><br><span class="line"> 0.26923077 0.425      0.7122807  0.51914894 0.42639594 0.38157895</span><br><span class="line"> 0.46025105 0.57345972 0.51574803 0.62280702 0.55232558 0.56382979</span><br><span class="line"> 0.56818182 0.52631579 0.6        0.48514851 0.71818182 0.77394636</span><br><span class="line"> 0.78378378 0.77477477 0.82954545 0.11650485 0.36144578 0.203125</span><br><span class="line"> 0.84331797 0.82129278 0.22222222 0.79411765 0.71584699 0.73214286</span><br><span class="line"> 0.59624413 0.62057878 0.72972973 0.51253482 0.5873494  0.40703518</span><br><span class="line"> 0.42857143 0.80430108 0.7257384  0.06666667 0.40625    0.68571429</span><br><span class="line"> 0.25       0.42       0.4109589  0.60377358 0.17647059 0.81654676</span><br><span class="line"> 0.92       0.21568627 0.73417722 0.30841121 0.21621622 0.53301887</span><br><span class="line"> 0.30188679 0.40298507 0.6754386  0.43       0.64285714 0.47826087</span><br><span class="line"> 0.54411765 0.61538462 0.66981132 0.36842105 0.5        0.30769231</span><br><span class="line"> 0.2962963  0.77586207 0.296875   0.168      0.36170213 0.44680851</span><br><span class="line"> 0.64       0.44444444 0.85882353 0.792      0.25       0.19277108</span><br><span class="line"> 0.56521739 0.85       0.57894737 0.764      0.76694915 0.13888889</span><br><span class="line"> 0.14705882 0.2892562  0.51020408 0.67765568 0.46792453 0.62637363</span><br><span class="line"> 0.29310345 0.8125     0.7480315  0.73333333 0.52054795 0.66502463</span><br><span class="line"> 0.39189189 0.48       0.6056338  0.05555556 0.49640288 0.27777778</span><br><span class="line"> 0.69097222 0.54347826 0.25925926 0.77777778 0.40677966 0.64356436</span><br><span class="line"> 0.80314961 0.80681818 0.34975369 0.69230769 0.36538462 0.63761468</span><br><span class="line"> 0.55339806 0.42608696 0.1302682  0.70955882 0.32142857 0.35616438</span><br><span class="line"> 0.44827586 0.24561404 0.79619565 0.62269939 0.23529412 0.45</span><br><span class="line"> 0.24770642 0.72727273 0.6627907  0.359375   0.59375    0.63311688</span><br><span class="line"> 0.56050955 0.44680851 0.74166667 0.0859375  0.55230126 0.90754717</span><br><span class="line"> 0.76902174 0.33152174 0.3877551  0.75229358 0.51181102 0.29268293</span><br><span class="line"> 0.5        0.58695652 0.55045872 0.34545455 0.41284404 0.46052632</span><br><span class="line"> 0.43925234 0.45       0.84398977 0.88709677 0.96428571 0.94444444</span><br><span class="line"> 0.81666667 0.70666667 0.45098039 0.72115385 0.74418605 0.65693431]</span><br><span class="line">upper bound: 0.548518228331384</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 53.84%</span><br><span class="line">Overall Prec@1 59.26% Prec@5 85.45%</span><br><span class="line">/home/xiangyi/miniconda3/envs/pan/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h4 id="相关链接-2"><a class="header-anchor" href="#相关链接-2">#</a>相关链接</h4><ul><li><a href="https://arxiv.org/pdf/2008.03462v1.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/2008.03462v1.pdf</a></li><li><a href="https://github.com/zhang-can/PAN-PyTorch" target="_blank" rel="noopener">https://github.com/zhang-can/PAN-PyTorch</a></li></ul><h2 id="iii-plan-for-this-week"><a class="header-anchor" href="#iii-plan-for-this-week">#</a>III. Plan for this week</h2><hr><ul><li>看一下相关代码，了解一下他们改进的思路。</li><li>继续读论文。</li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新的静态博客托管商</title>
      <link href="/blog/2020/09/09/new-site-host/"/>
      <url>/blog/2020/09/09/new-site-host/</url>
      
        <content type="html"><![CDATA[<p>今天终于下定决心要换博客托管了，之前一直在<code>GitHub Page</code>，国内访问简直龟速，其实自己有服务器的，但是纯静态放上去感觉有点浪费，搜索了一下，这个真的可以的！传送门：<a href="https://vercel.com/dashboard" target="_blank" rel="noopener">https://vercel.com/dashboard</a>。</p><a id="more"></a><center><p><img src="//onns.xyz/blog/image/20200909-1.png" alt="访问测速"></p></center><p>Happy Using!</p><p>和 GitHub 是相连的，自动部署，不用多次操作，往 GitHub<code>push</code>即可！</p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> github </tag>
            
            <tag> onns.xyz </tag>
            
            <tag> host </tag>
            
            <tag> static </tag>
            
            <tag> vercel </tag>
            
            <tag> github page </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx代理websocket</title>
      <link href="/blog/2020/09/09/nginx-proxy-websocket/"/>
      <url>/blog/2020/09/09/nginx-proxy-websocket/</url>
      
        <content type="html"><![CDATA[<p>之前做的那个<code>chrome插件</code>的项目<code>Sync Sofa</code>，其实业务量很小但是必须要走<code>443</code>的端口，强行占了一台服务器！不能忍，无奈好几次<code>Nginx</code>反向代理都失败了，前两次累计花了<strong>七八个小时</strong>都没成功，在朋友的帮助下<code>3小时</code>手工！</p><p>感谢！<a href="https://her-cat.com/" target="_blank" rel="noopener">她和她的猫</a></p><a id="more"></a><h2 id="配置-websocket"><a class="header-anchor" href="#配置-websocket">#</a>配置 websocket</h2><p>首先确保有<code>golang</code>的环境，如果没有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install golang -y</span><br></pre></td></tr></table></figure><p>安装客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 国内访问炒鸡慢，挂个代理</span></span><br><span class="line"><span class="built_in">export</span> GOPROXY=https://goproxy.io</span><br><span class="line"></span><br><span class="line">go get github.com/LouisYLWang/Sync-Sofa/server</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/LouisYLWang/Sync-Sofa/server</span><br><span class="line">go install</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/bin</span><br></pre></td></tr></table></figure><p>创建一个<code>config.json</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi config.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"addr"</span>: <span class="string">":81"</span>,</span><br><span class="line">  <span class="attr">"runmode"</span>: <span class="string">"dev"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置-nginx"><a class="header-anchor" href="#配置-nginx">#</a>配置 nginx</h2><p>把<code>SSL</code>的相关证书拷贝到 nginx 相关目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv sync.pem /etc/nginx/cert/</span><br><span class="line">mv sync.key /etc/nginx/cert/</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">...</span><br><span class="line"><span class="attribute">map</span> <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line"><span class="attribute">default</span> upgrade;</span><br><span class="line">'' close;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">upstream</span> websocket &#123;</span><br><span class="line"><span class="attribute">server</span> <span class="number">127.0.0.1:81</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">upstream</span> web&#123;</span><br><span class="line"><span class="attribute">server</span> <span class="number">127.0.0.1:81</span>;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">443</span>  default ssl;</span><br><span class="line"><span class="attribute">server_name</span> sync-cn.onns.xyz;</span><br><span class="line"><span class="attribute">ssl_certificate</span> /etc/nginx/cert/sync.pem;</span><br><span class="line"><span class="attribute">ssl_certificate_key</span> /etc/nginx/cert/sync.key;</span><br><span class="line"><span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line"><span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line"><span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line"><span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Host  <span class="variable">$http_host</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Nginx-Proxy <span class="literal">true</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Connection <span class="string">""</span>;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://web;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> /ws &#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://websocket;</span><br><span class="line"><span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要可以参考一下 Nginx 的官方博客：<a href="https://www.nginx.com/blog/websocket-nginx/" target="_blank" rel="noopener">NGINX as a WebSocket Proxy</a>，但是也只是能参考。。里面给的命令都过期了，尤其是，<code>node</code>不要用<code>yum</code>装，各种旧版本。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://www.nginx.com/blog/websocket-nginx/" target="_blank" rel="noopener">NGINX as a WebSocket Proxy</a></li><li><a href="https://blog.csdn.net/nfq6612/article/details/88555092" target="_blank" rel="noopener">nginx 配置 ws wss 和 http https 和访问实例</a></li><li><a href="https://help.aliyun.com/document_detail/98728.html" target="_blank" rel="noopener">在 Nginx 或 Tengine 服务器上安装证书</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
            <tag> socket </tag>
            
            <tag> websocket </tag>
            
            <tag> ws </tag>
            
            <tag> golang </tag>
            
            <tag> wss </tag>
            
            <tag> ssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsync实现文件同步</title>
      <link href="/blog/2020/09/08/rsync-usage/"/>
      <url>/blog/2020/09/08/rsync-usage/</url>
      
        <content type="html"><![CDATA[<p>Linux 下的文件同步，<code>rsync</code>真的好用！</p><a id="more"></a><p>因为我的<code>Mac</code>和<code>Ubuntu</code>都自带这个<code>rsync</code>了，不必自己装，想装的可以去官网，开源软件：<a href="http://rsync.samba.org/" target="_blank" rel="noopener">开源地址</a>，也有<code>Windows</code>下的实现。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">$ rsync -h</span><br><span class="line">rsync  version 2.6.9  protocol version 29</span><br><span class="line">Copyright (C) 1996-2006 by Andrew Tridgell, Wayne Davison, and others.</span><br><span class="line">&lt;http://rsync.samba.org/&gt;</span><br><span class="line">Capabilities: 64-bit files, socketpairs, hard links, symlinks, batchfiles,</span><br><span class="line">              inplace, IPv6, 64-bit system inums, 64-bit internal inums</span><br><span class="line"></span><br><span class="line">rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you</span><br><span class="line">are welcome to redistribute it under certain conditions.  See the GNU</span><br><span class="line">General Public Licence <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">rsync is a file transfer program capable of efficient remote update</span><br><span class="line">via a fast differencing algorithm.</span><br><span class="line"></span><br><span class="line">Usage: rsync [OPTION]... SRC [SRC]... DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST:SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST::SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]</span><br><span class="line">The <span class="string">':'</span> usages connect via remote shell, <span class="keyword">while</span> <span class="string">'::'</span> &amp; <span class="string">'rsync://'</span> usages connect</span><br><span class="line">to an rsync daemon, and require SRC or DEST to start with a module name.</span><br><span class="line"></span><br><span class="line">Options</span><br><span class="line"> -v, --verbose               increase verbosity</span><br><span class="line"> -q, --quiet                 suppress non-error messages</span><br><span class="line">     --no-motd               suppress daemon-mode MOTD (see manpage caveat)</span><br><span class="line"> -c, --checksum              skip based on checksum, not mod-time &amp; size</span><br><span class="line"> -a, --archive               archive mode; same as -rlptgoD (no -H)</span><br><span class="line">     --no-OPTION             turn off an implied OPTION (e.g. --no-D)</span><br><span class="line"> -r, --recursive             recurse into directories</span><br><span class="line"> -R, --relative              use relative path names</span><br><span class="line">     --no-implied-dirs       don<span class="string">'t send implied dirs with --relative</span></span><br><span class="line"><span class="string"> -b, --backup                make backups (see --suffix &amp; --backup-dir)</span></span><br><span class="line"><span class="string">     --backup-dir=DIR        make backups into hierarchy based in DIR</span></span><br><span class="line"><span class="string">     --suffix=SUFFIX         set backup suffix (default ~ w/o --backup-dir)</span></span><br><span class="line"><span class="string"> -u, --update                skip files that are newer on the receiver</span></span><br><span class="line"><span class="string">     --inplace               update destination files in-place (SEE MAN PAGE)</span></span><br><span class="line"><span class="string">     --append                append data onto shorter files</span></span><br><span class="line"><span class="string"> -d, --dirs                  transfer directories without recursing</span></span><br><span class="line"><span class="string"> -l, --links                 copy symlinks as symlinks</span></span><br><span class="line"><span class="string"> -L, --copy-links            transform symlink into referent file/dir</span></span><br><span class="line"><span class="string">     --copy-unsafe-links     only "unsafe" symlinks are transformed</span></span><br><span class="line"><span class="string">     --safe-links            ignore symlinks that point outside the source tree</span></span><br><span class="line"><span class="string"> -k, --copy-dirlinks         transform symlink to a dir into referent dir</span></span><br><span class="line"><span class="string"> -K, --keep-dirlinks         treat symlinked dir on receiver as dir</span></span><br><span class="line"><span class="string"> -H, --hard-links            preserve hard links</span></span><br><span class="line"><span class="string"> -p, --perms                 preserve permissions</span></span><br><span class="line"><span class="string">     --executability         preserve the file'</span>s executability</span><br><span class="line">     --chmod=CHMOD           affect file and/or directory permissions</span><br><span class="line"> -o, --owner                 preserve owner (super-user only)</span><br><span class="line"> -g, --group                 preserve group</span><br><span class="line">     --devices               preserve device files (super-user only)</span><br><span class="line">     --specials              preserve special files</span><br><span class="line"> -D                          same as --devices --specials</span><br><span class="line"> -t, --<span class="built_in">times</span>                 preserve <span class="built_in">times</span></span><br><span class="line"> -O, --omit-dir-times        omit directories when preserving <span class="built_in">times</span></span><br><span class="line">     --super                 receiver attempts super-user activities</span><br><span class="line"> -S, --sparse                handle sparse files efficiently</span><br><span class="line"> -n, --dry-run               show what would have been transferred</span><br><span class="line"> -W, --whole-file            copy files whole (without rsync algorithm)</span><br><span class="line"> -x, --one-file-system       don<span class="string">'t cross filesystem boundaries</span></span><br><span class="line"><span class="string"> -B, --block-size=SIZE       force a fixed checksum block-size</span></span><br><span class="line"><span class="string"> -e, --rsh=COMMAND           specify the remote shell to use</span></span><br><span class="line"><span class="string">     --rsync-path=PROGRAM    specify the rsync to run on the remote machine</span></span><br><span class="line"><span class="string">     --existing              skip creating new files on receiver</span></span><br><span class="line"><span class="string">     --ignore-existing       skip updating files that already exist on receiver</span></span><br><span class="line"><span class="string">     --remove-source-files   sender removes synchronized files (non-dirs)</span></span><br><span class="line"><span class="string">     --del                   an alias for --delete-during</span></span><br><span class="line"><span class="string">     --delete                delete extraneous files from destination dirs</span></span><br><span class="line"><span class="string">     --delete-before         receiver deletes before transfer (default)</span></span><br><span class="line"><span class="string">     --delete-during         receiver deletes during transfer, not before</span></span><br><span class="line"><span class="string">     --delete-after          receiver deletes after transfer, not before</span></span><br><span class="line"><span class="string">     --delete-excluded       also delete excluded files from destination dirs</span></span><br><span class="line"><span class="string">     --ignore-errors         delete even if there are I/O errors</span></span><br><span class="line"><span class="string">     --force                 force deletion of directories even if not empty</span></span><br><span class="line"><span class="string">     --max-delete=NUM        don'</span>t delete more than NUM files</span><br><span class="line">     --max-size=SIZE         don<span class="string">'t transfer any file larger than SIZE</span></span><br><span class="line"><span class="string">     --min-size=SIZE         don'</span>t transfer any file smaller than SIZE</span><br><span class="line">     --partial               keep partially transferred files</span><br><span class="line">     --partial-dir=DIR       put a partially transferred file into DIR</span><br><span class="line">     --delay-updates         put all updated files into place at transfer<span class="string">'s end</span></span><br><span class="line"><span class="string"> -m, --prune-empty-dirs      prune empty directory chains from the file-list</span></span><br><span class="line"><span class="string">     --numeric-ids           don'</span>t map uid/gid values by user/group name</span><br><span class="line">     --timeout=TIME          <span class="built_in">set</span> I/O timeout <span class="keyword">in</span> seconds</span><br><span class="line"> -I, --ignore-times          don<span class="string">'t skip files that match in size and mod-time</span></span><br><span class="line"><span class="string">     --size-only             skip files that match in size</span></span><br><span class="line"><span class="string">     --modify-window=NUM     compare mod-times with reduced accuracy</span></span><br><span class="line"><span class="string"> -T, --temp-dir=DIR          create temporary files in directory DIR</span></span><br><span class="line"><span class="string"> -y, --fuzzy                 find similar file for basis if no dest file</span></span><br><span class="line"><span class="string">     --compare-dest=DIR      also compare destination files relative to DIR</span></span><br><span class="line"><span class="string">     --copy-dest=DIR         ... and include copies of unchanged files</span></span><br><span class="line"><span class="string">     --link-dest=DIR         hardlink to files in DIR when unchanged</span></span><br><span class="line"><span class="string"> -z, --compress              compress file data during the transfer</span></span><br><span class="line"><span class="string">     --compress-level=NUM    explicitly set compression level</span></span><br><span class="line"><span class="string"> -C, --cvs-exclude           auto-ignore files the same way CVS does</span></span><br><span class="line"><span class="string"> -f, --filter=RULE           add a file-filtering RULE</span></span><br><span class="line"><span class="string"> -F                          same as --filter='</span>dir-merge /.rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">                             repeated: --filter='</span>- .rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">     --exclude=PATTERN       exclude files matching PATTERN</span></span><br><span class="line"><span class="string">     --exclude-from=FILE     read exclude patterns from FILE</span></span><br><span class="line"><span class="string">     --include=PATTERN       don'</span>t exclude files matching PATTERN</span><br><span class="line">     --include-from=FILE     <span class="built_in">read</span> include patterns from FILE</span><br><span class="line">     --files-from=FILE       <span class="built_in">read</span> list of <span class="built_in">source</span>-file names from FILE</span><br><span class="line"> -0, --from0                 all *-from/filter files are delimited by 0s</span><br><span class="line">     --address=ADDRESS       <span class="built_in">bind</span> address <span class="keyword">for</span> outgoing socket to daemon</span><br><span class="line">     --port=PORT             specify double-colon alternate port number</span><br><span class="line">     --sockopts=OPTIONS      specify custom TCP options</span><br><span class="line">     --blocking-io           use blocking I/O <span class="keyword">for</span> the remote shell</span><br><span class="line">     --stats                 give some file-transfer stats</span><br><span class="line"> -8, --8-bit-output          leave high-bit chars unescaped <span class="keyword">in</span> output</span><br><span class="line"> -h, --human-readable        output numbers <span class="keyword">in</span> a human-readable format</span><br><span class="line">     --progress              show progress during transfer</span><br><span class="line"> -P                          same as --partial --progress</span><br><span class="line"> -i, --itemize-changes       output a change-summary <span class="keyword">for</span> all updates</span><br><span class="line">     --out-format=FORMAT     output updates using the specified FORMAT</span><br><span class="line">     --<span class="built_in">log</span>-file=FILE         <span class="built_in">log</span> what we<span class="string">'re doing to the specified FILE</span></span><br><span class="line"><span class="string">     --log-file-format=FMT   log updates using the specified FMT</span></span><br><span class="line"><span class="string">     --password-file=FILE    read password from FILE</span></span><br><span class="line"><span class="string">     --list-only             list the files instead of copying them</span></span><br><span class="line"><span class="string">     --bwlimit=KBPS          limit I/O bandwidth; KBytes per second</span></span><br><span class="line"><span class="string">     --write-batch=FILE      write a batched update to FILE</span></span><br><span class="line"><span class="string">     --only-write-batch=FILE like --write-batch but w/o updating destination</span></span><br><span class="line"><span class="string">     --read-batch=FILE       read a batched update from FILE</span></span><br><span class="line"><span class="string">     --protocol=NUM          force an older protocol version to be used</span></span><br><span class="line"><span class="string"> -E, --extended-attributes   copy extended attributes</span></span><br><span class="line"><span class="string">     --cache                 disable fcntl(F_NOCACHE)</span></span><br><span class="line"><span class="string"> -4, --ipv4                  prefer IPv4</span></span><br><span class="line"><span class="string"> -6, --ipv6                  prefer IPv6</span></span><br><span class="line"><span class="string">     --version               print version number</span></span><br><span class="line"><span class="string">(-h) --help                  show this help (-h works with no other options)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Use "rsync --daemon --help" to see the daemon-mode command-line options.</span></span><br><span class="line"><span class="string">Please see the rsync(1) and rsyncd.conf(5) man pages for full documentation.</span></span><br><span class="line"><span class="string">See http://rsync.samba.org/ for updates, bug reports, and answers</span></span><br></pre></td></tr></table></figure><p>服务端和客户端的模式要配置大量的信息，下次用到再说吧，这次就用简单的 ssh 模式。</p><p>把自己的电脑暴露在公网不太好，找自己的小米手机做了个中转，因为我的登录密码实在太简单了可是我又<code>不想改</code>。</p><p>首先需要把自己的文件同步到中转端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -auv -e <span class="string">"ssh -i ~/Documents/common/key/mi"</span> --progress /Users/onns/Documents/common android@xm.onns.xyz:/home/android/</span><br></pre></td></tr></table></figure><p>为了方便能在任何位置使用命令，建议所有的文件/文件夹都是绝对路径。</p><p>注意一下<code>-e</code>参数，因为服务器设置了<code>密钥体系</code>，所以这个<code>-e</code>的参数其实是在告诉<code>rsync</code>怎么连服务器，等价于：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh android@xm.onns.xyz -i /Users/onns/mi</span><br></pre></td></tr></table></figure><p>平时<code>ssh</code>加密钥的时候都是<code>-i</code>参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ rsync -auv -e <span class="string">"ssh -i ~/Documents/common/key/mi"</span> --progress /Users/onns/Documents/common android@xm.onns.xyz:/home/android/</span><br><span class="line">building file list ...</span><br><span class="line">196 files to consider</span><br><span class="line"></span><br><span class="line">sent 4488 bytes  received 20 bytes  3005.33 bytes/sec</span><br><span class="line">total size is 719894  speedup is 159.69</span><br></pre></td></tr></table></figure><p>同样地，远程再拉取一下中转端的数据就好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -auv -e <span class="string">"ssh -i ~/Documents/common/key/mi"</span> --progress android@xm.onns.xyz:/home/android/common ~/Documents/</span><br></pre></td></tr></table></figure><p>还有一个需要注意的事情是，类似<code>cp</code>和<code>mv</code>一样，<code>from</code>端是要指明当前目录的，但是<code>to</code>目录只需要指明你想要放的目录的上一级目录即可。看不懂，拷贝一次就理解了！</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.csdn.net/super_YC/article/details/83543088" target="_blank" rel="noopener">rsync 远程资源同步</a></li><li><a href="https://www.91linux.org/archives/77.html" target="_blank" rel="noopener">rsync 使用 ssh 密钥同步文件</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
            <tag> rsync </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下分卷压缩包解压</title>
      <link href="/blog/2020/09/07/multi-part-archive-extract-in-windows/"/>
      <url>/blog/2020/09/07/multi-part-archive-extract-in-windows/</url>
      
        <content type="html"><![CDATA[<blockquote><p>The video data is provided as one large TGZ archive, split into parts of 1 GB max. The total download size is 19.4 GB. The archive contains webm-files using the VP9 codec. Files are numbered from 1 to 220847.</p></blockquote><p>20bn-something-something-v2-00<br>20bn-something-something-v2-01<br>20bn-something-something-v2-02<br>20bn-something-something-v2-03<br>20bn-something-something-v2-04<br>20bn-something-something-v2-05<br>20bn-something-something-v2-06<br>20bn-something-something-v2-07<br>20bn-something-something-v2-08<br>20bn-something-something-v2-09<br>20bn-something-something-v2-10<br>20bn-something-something-v2-11<br>20bn-something-something-v2-12<br>20bn-something-something-v2-13<br>20bn-something-something-v2-14<br>20bn-something-something-v2-15<br>20bn-something-something-v2-16<br>20bn-something-something-v2-17<br>20bn-something-something-v2-18<br>20bn-something-something-v2-19</p><p><code>Linux</code>下很好解压：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 20bn-something-something-v2-?? | tar zx</span><br></pre></td></tr></table></figure><p><code>Windows</code>下需要将所有的分卷先合并：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy /b 20bn* temp.tar.gz</span><br></pre></td></tr></table></figure><p>然后用解压软件打开即可。</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://blog.csdn.net/XX_123_1_RJ/article/details/95237636" target="_blank" rel="noopener">Windows 中解压 Linux 中产生的 tar.gz 分卷压缩包</a></li><li><a href="https://20bn.com/datasets/something-something/v2#download" target="_blank" rel="noopener">The 20BN-something-something Dataset V2</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> tar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下密钥登录</title>
      <link href="/blog/2020/09/07/ssh-key-in-linux/"/>
      <url>/blog/2020/09/07/ssh-key-in-linux/</url>
      
        <content type="html"><![CDATA[<p>每次都教一遍，记录一下，下次直接甩链接吧。</p><a id="more"></a><h2 id="生成密钥对"><a class="header-anchor" href="#生成密钥对">#</a>生成密钥对</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -m PEM</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):</span><br><span class="line"><span class="comment"># 回车</span></span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line"><span class="comment"># 回车</span></span><br><span class="line">Enter same passphrase again:</span><br><span class="line"><span class="comment"># 回车</span></span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="拷贝生效"><a class="header-anchor" href="#拷贝生效">#</a>拷贝生效</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> .ssh/</span><br><span class="line">$ ls</span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub</span><br><span class="line">$ cp id_rsa.pub authorized_keys</span><br><span class="line">cp: overwrite ‘authorized_keys’? y</span><br><span class="line"><span class="comment"># 覆盖之前确认一下确实是可以覆盖的</span></span><br><span class="line"><span class="comment"># 当然如果不能覆盖那就追加</span></span><br><span class="line">$ cat id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure><h2 id="保存私钥"><a class="header-anchor" href="#保存私钥">#</a>保存私钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat id_rsa</span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">...</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>打开记事本，随便命名一个空后缀文件：比如我命名为：<code>node</code>，把从<code>-----BEGIN RSA PRIVATE KEY-----</code>到<code>-----END RSA PRIVATE KEY-----</code>粘贴进去，保存。</p><h2 id="修改私钥权限"><a class="header-anchor" href="#修改私钥权限">#</a>修改私钥权限</h2><p><code>Linux</code>和<code>MacOS</code>就很简单了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 node</span><br></pre></td></tr></table></figure><p><code>Windows</code>比较麻烦，参照这篇：<a href="https://onns.xyz/blog/2020/08/10/log-write-test/#%E4%BF%AE%E6%94%B9%E7%A7%81%E9%92%A5%E6%9D%83%E9%99%90">Linux 追加日志测试</a>。</p><h2 id="修改-sshd-config"><a class="header-anchor" href="#修改-sshd-config">#</a>修改 sshd_config</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>找到如下一行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PubkeyAuthentication yes</span></span><br><span class="line"><span class="comment"># 把"#"去掉</span></span><br><span class="line">PubkeyAuthentication yes</span><br></pre></td></tr></table></figure><p>保存。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh root@node.onns.xyz -i node</span><br><span class="line">Last login: Mon Sep  7 13:27:19 2020 from 120.35.73.25</span><br><span class="line"></span><br><span class="line">Welcome to Alibaba Cloud Elastic Compute Service !</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Late Temporal Modeling in 3D CNN Architectures with BERT for Action Recognition</title>
      <link href="/blog/2020/09/07/late-temporal-modeling-in-3d-cnn-architectures-with-bert-for-action-recognition/"/>
      <url>/blog/2020/09/07/late-temporal-modeling-in-3d-cnn-architectures-with-bert-for-action-recognition/</url>
      
        <content type="html"><![CDATA[<h2 id="late-temporal-modeling-in-3d-cnn-architectures-with-bert-for-action-recognition"><a class="header-anchor" href="#late-temporal-modeling-in-3d-cnn-architectures-with-bert-for-action-recognition">#</a>Late Temporal Modeling in 3D CNN Architectures with BERT for Action Recognition</h2><p><code>HMDB51</code>和<code>UCF101</code>的<code>top-1</code>达到现阶段最好的水平，分别为<code>85.10%</code>和<code>98.69%</code>。</p><p>时序全局平均池化阻碍了时序信息的更丰富表达。虽然感受野可能分布在整个视频切片中，但是对于不同的切片，它所能提供的信息是服从高斯分布的，简单的平均可能会损失信息。</p><blockquote><p>temporal global average pooling (TGAP) layer is used at the end of all 3D CNN architectures hinders the richness of final temporal information.<br>the receptive field might cover the whole clip, the effective receptive field has a Gaussian distribution</p></blockquote><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://github.com/artest08/LateTemporalModeling3DCNN" target="_blank" rel="noopener">https://github.com/artest08/LateTemporalModeling3DCNN</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> bert </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光流法</title>
      <link href="/blog/2020/09/07/optical-flow/"/>
      <url>/blog/2020/09/07/optical-flow/</url>
      
        <content type="html"><![CDATA[<center><p><img src="//onns.xyz/blog/image/20200907-1.png" alt="计算公式"></p></center><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.csdn.net/qq_41368247/article/details/82562165" target="_blank" rel="noopener">计算机视觉–光流法(optical flow)简介</a></li><li><a href="https://zhuanlan.zhihu.com/p/42942198" target="_blank" rel="noopener">运动目标检测(3)—光流法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> optical flow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从流中获取 properties</title>
      <link href="/blog/2020/09/06/servlet-in-java-1/"/>
      <url>/blog/2020/09/06/servlet-in-java-1/</url>
      
        <content type="html"><![CDATA[<h2 id="idea-小技巧"><a class="header-anchor" href="#idea-小技巧">#</a>IDEA 小技巧</h2><ul><li><code>alt</code>按住移动鼠标可以多行编辑。</li><li><code>cmd + n</code>可以快速创建构造器（自行选择参数）或者重写继承方法。</li></ul><a id="more"></a><h2 id="从流中获取-properties"><a class="header-anchor" href="#从流中获取-properties">#</a>从流中获取 properties</h2><p>新建了一个<code>Maven Module</code>，从<code>archetype</code>中创建的。</p><center><p><img src="//onns.xyz/blog/image/20200906-1.png" alt="Maven Module截图"></p></center><h3 id="创建-properties-文件"><a class="header-anchor" href="#创建-properties-文件">#</a>创建 properties 文件</h3><p>文件路径为：<code>servlet-02/src/main/resources/</code></p><p>文件名：<code>db.properties</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;root</span><br><span class="line">password&#x3D;123456</span><br></pre></td></tr></table></figure><h3 id="创建-class"><a class="header-anchor" href="#创建-class">#</a>创建 class</h3><p>文件路径为：<code>servlet-02/src/main/java/</code></p><p>包名为：<code>xyz.onns.servlet</code></p><p>文件名：<code>TestResourceStream.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestResourceStream</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">InputStream resourceAsStream = <span class="keyword">this</span>.getServletContext().getResourceAsStream(<span class="string">"/WEB-INF/classes/db.properties"</span>);</span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">properties.load(resourceAsStream);</span><br><span class="line">String username = properties.getProperty(<span class="string">"username"</span>);</span><br><span class="line">String password = properties.getProperty(<span class="string">"password"</span>);</span><br><span class="line">String maybenull = properties.getProperty(<span class="string">"maybenull"</span>);</span><br><span class="line">System.out.println(<span class="string">"TestResourceStream"</span>);</span><br><span class="line">resp.setHeader(<span class="string">"Content-Type"</span>, <span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">PrintWriter writer = resp.getWriter();</span><br><span class="line">writer.print(<span class="string">"Success!成功了！"</span>);</span><br><span class="line">writer.print(<span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line">writer.print(username);</span><br><span class="line">writer.print(password);</span><br><span class="line">writer.print(maybenull);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(req, resp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建路由"><a class="header-anchor" href="#创建路由">#</a>创建路由</h3><p>文件路径为：<code>servlet-02/src/main/webapp/WEB-INF/</code></p><p>文件名：<code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">metadata-complete</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestResourceStream<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>xyz.onns.servlet.TestResourceStream<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestResourceStream<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/testr<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="小结"><a class="header-anchor" href="#小结">#</a>小结</h2><p>如果先写这句话：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PrintWriter writer = resp.getWriter();</span><br></pre></td></tr></table></figure><p>再写这句话：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.setHeader(<span class="string">"Content-Type"</span>, <span class="string">"text/html;charset=utf-8"</span>);</span><br></pre></td></tr></table></figure><p>在处理中文的时候也还是会乱码，大概在创建<code>PrintWriter</code>对象的时候就已经把相关参数传过去了吧。</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://www.bilibili.com/video/BV12J411M7Sj?p=11" target="_blank" rel="noopener">教程地址</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> macos </tag>
            
            <tag> servlet </tag>
            
            <tag> maven </tag>
            
            <tag> idea tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GFNET A LIGHTWEIGHT GROUP FRAME NETWORK FOR EFFICIENT HUMAN ACTION RECOGNITION</title>
      <link href="/blog/2020/09/05/gfnet-a-lightweight-group-frame-network-for-efficient-human-action-recognition/"/>
      <url>/blog/2020/09/05/gfnet-a-lightweight-group-frame-network-for-efficient-human-action-recognition/</url>
      
        <content type="html"><![CDATA[<h2 id="gfnet-a-lightweight-group-frame-network-for-efficient-human-action-recognition"><a class="header-anchor" href="#gfnet-a-lightweight-group-frame-network-for-efficient-human-action-recognition">#</a>GFNET: A LIGHTWEIGHT GROUP FRAME NETWORK FOR EFFICIENT HUMAN ACTION RECOGNITION</h2><p>为了解决现有的行为识别方法<code>计算量大</code>、<code>参数多</code>的问题，作者提出了<code>GFNet</code>。</p><blockquote><p>To handle these issues, we propose a lightweight neural network called Group Frame Network (GFNet).</p></blockquote><p>GFNet 通过帧级分解，以极小的代价提取每一帧的特征。</p><blockquote><p>GFNet adds frame-level decomposition to extract features of each frame at a minuscule cost.</p></blockquote><p>设计了两个核心组件，能够仅从<code>RGB图像</code>中提取时空信息，而不需要借助<code>光流</code>或<code>multi-scale testing</code>等。</p><blockquote><p>There are two core components: <code>Group Temporal Module</code> (GTM) and <code>Group Spatial Module</code> (GSM). These two modules enable GFNet to obtain temporal-spatial information only from RGB images.</p></blockquote><p>为了证明模型的有效性，他们没有使用预训练策略。</p><blockquote><p>To verify the validity of the model, no pre-training strategy is used in our experiments.</p></blockquote><p>网络的输入是<code>一定数量</code>的<code>视频帧</code>，对视频进行分段采样得到结果。</p><blockquote><p>The entire video with a variable number of frames is provided as the input of the network. Through an average sampling strategy, the video is divided into N equal-length segments and only one frame is selected from each segment. Due to the repeatability of adjacent frames, this sampling strategy can reduce inter-frame redundancy while preserving long-temporal information.</p></blockquote><p>K 个层同时输入网络获取时间信息。</p><blockquote><p>The first part is a feature extraction layer consisting of K separated branches. The sampled frames are simultaneously fed into the network to maintain the temporal information among these frames.</p></blockquote><p>各自的分支独立计算获得空间信息。</p><blockquote><p>In the feature extraction layer, each frame is learned independently using a network branch to get its spatial features.</p></blockquote><p>没太理解。</p><blockquote><p>all the sampled frames are stacked by channel-wise convolution.<br>It means that the input channel of GFNet is 3N when using RGB images as input.</p></blockquote><p>由于残差网络具有高度的泛化能力和性能，所以后续的块选择高度模块化残差单元。</p><blockquote><p>Owing to the impressive performance and strong generalization abil- ity of residual architecture, the block is based on the highly modularized residual unit.</p></blockquote><p>这句话没太理解。</p><blockquote><p>Considering the extraneous motion and identical texture features in sampled frames, GFNet decomposes frames and reduces the number of channels for each frame to lessen spatial redundancy. To be specific, the number of channels is equally divided among branches. It means that only a small number of channels are used per frame.</p></blockquote><h2 id="group-temporal-module"><a class="header-anchor" href="#group-temporal-module">#</a>Group Temporal Module</h2><p>因为每个分支都是单独计算的，所以势必会降低准确率（没有提取帧间的联系），所以提出了<code>GTM</code>模块。</p><blockquote><p>To leverage the inter-frame information effectively and better strengthen temporal relationships, GTM is proposed to efficiently overcome the side effects brought by the separated branch.</p></blockquote><blockquote><p>GTM consists of a translation layer and a 3D convolution layer.</p></blockquote><blockquote><p>The translation layer makes the replacement of the data dimension. It includes the channel merger and the channel separation, which achieves the conversion of the feature map from four-dimensional data to five-dimensional data.</p></blockquote><h2 id="group-spatial-module"><a class="header-anchor" href="#group-spatial-module">#</a>Group Spatial Module</h2><p>For the convolution layer of ResNet50, the computational cost is closely related to the number of channels. Motivated by this, a novel module called GSM is designed to significantly decrease the number of parameters and computational efforts.</p><p>GSM 也是通过只取纹理来最小化计算成本。</p><blockquote><p>Because of the similarity among frames, the texture information is repetitive. Meanwhile, irrelevant motion inside frames increases the intra-frame redundancy. Aiming at minimizing the interference of redundant information, GSM diminishes the number of channels to extract features per frame.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> gfnet </tag>
            
            <tag> group frame network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS下配置maven</title>
      <link href="/blog/2020/09/02/maven-in-mac/"/>
      <url>/blog/2020/09/02/maven-in-mac/</url>
      
        <content type="html"><![CDATA[<p>官方下载地址：<a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">http://maven.apache.org/download.cgi</a></p><p>下载：<a href="https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz</a></p><p>解压之后，复制目录：<code>/Users/onns/Downloads/java/apache-maven-3.6.3</code></p><p>因为系统更新后，命令行从<code>bash</code>换成了<code>zsh</code>所以环境变量文件也改了：<code>.zshrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export M2_HOME=/Users/onns/Downloads/java/apache-maven-3.6.3/bin'</span> &gt;&gt; .zshrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export MAVEN_HOME=/Users/onns/Downloads/java/apache-maven-3.6.3'</span> &gt;&gt; .zshrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=$MAVEN_HOME/bin:$PATH'</span> &gt;&gt; .zshrc</span><br></pre></td></tr></table></figure><p>让环境变量生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> .zshrc</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mvn --version</span><br><span class="line">Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span><br><span class="line">Maven home: &#x2F;Users&#x2F;onns&#x2F;Downloads&#x2F;java&#x2F;apache-maven-3.6.3</span><br><span class="line">Java version: 13.0.2, vendor: Oracle Corporation, runtime: &#x2F;Library&#x2F;Java&#x2F;JavaVirtualMachines&#x2F;jdk-13.0.2.jdk&#x2F;Contents&#x2F;Home</span><br><span class="line">Default locale: en_CN, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;mac os x&quot;, version: &quot;10.15.5&quot;, arch: &quot;x86_64&quot;, family: &quot;mac&quot;</span><br></pre></td></tr></table></figure><h2 id="修改镜像源"><a class="header-anchor" href="#修改镜像源">#</a>修改镜像源</h2><p>参照阿里云的使用指南：<a href="https://maven.aliyun.com/mvn/guide" target="_blank" rel="noopener">https://maven.aliyun.com/mvn/guide</a></p><p>打开<code>$MAVEN_HOME/conf/settings.xml</code></p><p>在<code>&lt;mirrors&gt;&lt;/mirrors&gt;</code>标签中添加<code>mirror</code>子节点：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置本地仓库"><a class="header-anchor" href="#配置本地仓库">#</a>配置本地仓库</h2><p>打开<code>$MAVEN_HOME/conf/settings.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment"> | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">&lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/Users/onns/Downloads/java/apache-maven-3.6.3/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><p>完</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://www.bilibili.com/video/BV12J411M7Sj?p=5" target="_blank" rel="noopener">教程地址</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> zsh </tag>
            
            <tag> macos </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAN Towards Fast Action Recognition via Learning Persistence of Appearance</title>
      <link href="/blog/2020/09/01/pan-towards-fast-action-recognition-via-learning-persistence-of-appearance/"/>
      <url>/blog/2020/09/01/pan-towards-fast-action-recognition-via-learning-persistence-of-appearance/</url>
      
        <content type="html"><![CDATA[<h2 id="pan-towards-fast-action-recognition-via-learning-persistence-of-appearance"><a class="header-anchor" href="#pan-towards-fast-action-recognition-via-learning-persistence-of-appearance">#</a>PAN: Towards Fast Action Recognition via Learning Persistence of Appearance</h2><p>比光流网络快了1000倍</p><blockquote><p>Our PA is over 1000× faster (8196fps vs. 8fps) than conventional optical flow in terms of motion modeling speed</p></blockquote><p>运动边界的微小位移在动作识别中起重要作用的角色。</p><blockquote><p>According to the aforementioned anal- ysis, we can conclude that small displacements of motion boundaries play a vital role in action recognition.</p></blockquote><p>低层的<code>feature map</code>之间的差异能更多地关注边界的变化。</p><blockquote><p>the differences among low-level feature maps will pay more attention to the variations at boundaries.<br>In summary, differences in low-level feature maps can reflect small displacements of motion boundaries due to convolutional operations.</p></blockquote><p>在<code>UCF101</code>上做实验表明在第一层效果最好。</p><blockquote><p>We define the basic conv-layer as eight 7×7 convolutions with stride=1 and padding=3, so that the spatial resolutions of the obtained feature maps are not reduced.</p></blockquote><p>两种编码策略：</p><p><strong>PA as motion modality</strong></p><p><strong>PA as attention</strong></p><p>第一种无论是从计算量上还是从准确率上都要更好。</p><p>可能原因是第二种融合方法导致图像的不平衡。</p><blockquote><p>However, for e2, attending appearance feature maps with PA will highlight the motion boundaries, leading to the imbalanced appearance responses both inside and at the boundaries of the moving objects.</p></blockquote><p><strong>Various-timescale Aggregation Pooling</strong></p><h2 id="安装测试"><a class="header-anchor" href="#安装测试">#</a>安装测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install torch torchvision</span><br><span class="line">pip install tensorboardX</span><br><span class="line">pip install tqdm</span><br><span class="line">pip install scikit-learn</span><br><span class="line">pip install lmdb</span><br></pre></td></tr></table></figure><h2 id="实验结果"><a class="header-anchor" href="#实验结果">#</a>实验结果</h2><h3 id="lite"><a class="header-anchor" href="#lite">#</a>Lite</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">somethingv2: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">Downloading: <span class="string">"https://download.pytorch.org/models/resnet50-19c8e357.pth"</span> to /home/xiangyi/.cache/torch/hub/checkpoints/resnet50-19c8e357.pth</span><br><span class="line">100%|██████████████████████████████████████| 97.8M/97.8M [00:06&lt;00:00, 14.8MB/s]</span><br><span class="line">=&gt; Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Converting the ImageNet model to a PAN_Lite init model</span><br><span class="line">=&gt; Done. PAN_lite model ready...</span><br><span class="line">video number:24777</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/24777, average 0.879 sec/video, moving Prec@1 65.625 Prec@5 87.500</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/24777, average 0.239 sec/video, moving Prec@1 60.491 Prec@5 85.640</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/24777, average 0.230 sec/video, moving Prec@1 60.518 Prec@5 85.671</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/24777, average 0.227 sec/video, moving Prec@1 60.015 Prec@5 85.374</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/24777, average 0.225 sec/video, moving Prec@1 60.031 Prec@5 85.475</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/24777, average 0.226 sec/video, moving Prec@1 59.855 Prec@5 85.334</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/24777, average 0.224 sec/video, moving Prec@1 59.775 Prec@5 85.292</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/24777, average 0.223 sec/video, moving Prec@1 59.519 Prec@5 85.284</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/24777, average 0.224 sec/video, moving Prec@1 59.530 Prec@5 85.423</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/24777, average 0.224 sec/video, moving Prec@1 59.686 Prec@5 85.497</span><br><span class="line">video 12800 <span class="keyword">done</span>, total 12800/24777, average 0.224 sec/video, moving Prec@1 59.678 Prec@5 85.487</span><br><span class="line">video 14080 <span class="keyword">done</span>, total 14080/24777, average 0.225 sec/video, moving Prec@1 59.637 Prec@5 85.464</span><br><span class="line">video 15360 <span class="keyword">done</span>, total 15360/24777, average 0.225 sec/video, moving Prec@1 59.349 Prec@5 85.315</span><br><span class="line">video 16640 <span class="keyword">done</span>, total 16640/24777, average 0.225 sec/video, moving Prec@1 59.327 Prec@5 85.327</span><br><span class="line">video 17920 <span class="keyword">done</span>, total 17920/24777, average 0.226 sec/video, moving Prec@1 59.058 Prec@5 85.204</span><br><span class="line">video 19200 <span class="keyword">done</span>, total 19200/24777, average 0.226 sec/video, moving Prec@1 59.121 Prec@5 85.206</span><br><span class="line">video 20480 <span class="keyword">done</span>, total 20480/24777, average 0.226 sec/video, moving Prec@1 59.200 Prec@5 85.295</span><br><span class="line">video 21760 <span class="keyword">done</span>, total 21760/24777, average 0.227 sec/video, moving Prec@1 59.283 Prec@5 85.337</span><br><span class="line">video 23040 <span class="keyword">done</span>, total 23040/24777, average 0.227 sec/video, moving Prec@1 59.254 Prec@5 85.422</span><br><span class="line">video 24320 <span class="keyword">done</span>, total 24320/24777, average 0.227 sec/video, moving Prec@1 59.277 Prec@5 85.421</span><br><span class="line">[0.84482759 0.38815789 0.51633987 0.58252427 0.58974359 0.54385965</span><br><span class="line"> 0.76738609 0.63636364 0.67716535 0.60264901 0.53932584 0.68613139</span><br><span class="line"> 0.26923077 0.425      0.7122807  0.51914894 0.42639594 0.38157895</span><br><span class="line"> 0.46025105 0.57345972 0.51574803 0.62280702 0.55232558 0.56382979</span><br><span class="line"> 0.56818182 0.52631579 0.6        0.48514851 0.71818182 0.77394636</span><br><span class="line"> 0.78378378 0.77477477 0.82954545 0.11650485 0.36144578 0.203125</span><br><span class="line"> 0.84331797 0.82129278 0.22222222 0.79411765 0.71584699 0.73214286</span><br><span class="line"> 0.59624413 0.62057878 0.72972973 0.51253482 0.5873494  0.40703518</span><br><span class="line"> 0.42857143 0.80430108 0.7257384  0.06666667 0.40625    0.68571429</span><br><span class="line"> 0.25       0.42       0.4109589  0.60377358 0.17647059 0.81654676</span><br><span class="line"> 0.92       0.21568627 0.73417722 0.30841121 0.21621622 0.53301887</span><br><span class="line"> 0.30188679 0.40298507 0.6754386  0.43       0.64285714 0.47826087</span><br><span class="line"> 0.54411765 0.61538462 0.66981132 0.36842105 0.5        0.30769231</span><br><span class="line"> 0.2962963  0.77586207 0.296875   0.168      0.36170213 0.44680851</span><br><span class="line"> 0.64       0.44444444 0.85882353 0.792      0.25       0.19277108</span><br><span class="line"> 0.56521739 0.85       0.57894737 0.764      0.76694915 0.13888889</span><br><span class="line"> 0.14705882 0.2892562  0.51020408 0.67765568 0.46792453 0.62637363</span><br><span class="line"> 0.29310345 0.8125     0.7480315  0.73333333 0.52054795 0.66502463</span><br><span class="line"> 0.39189189 0.48       0.6056338  0.05555556 0.49640288 0.27777778</span><br><span class="line"> 0.69097222 0.54347826 0.25925926 0.77777778 0.40677966 0.64356436</span><br><span class="line"> 0.80314961 0.80681818 0.34975369 0.69230769 0.36538462 0.63761468</span><br><span class="line"> 0.55339806 0.42608696 0.1302682  0.70955882 0.32142857 0.35616438</span><br><span class="line"> 0.44827586 0.24561404 0.79619565 0.62269939 0.23529412 0.45</span><br><span class="line"> 0.24770642 0.72727273 0.6627907  0.359375   0.59375    0.63311688</span><br><span class="line"> 0.56050955 0.44680851 0.74166667 0.0859375  0.55230126 0.90754717</span><br><span class="line"> 0.76902174 0.33152174 0.3877551  0.75229358 0.51181102 0.29268293</span><br><span class="line"> 0.5        0.58695652 0.55045872 0.34545455 0.41284404 0.46052632</span><br><span class="line"> 0.43925234 0.45       0.84398977 0.88709677 0.96428571 0.94444444</span><br><span class="line"> 0.81666667 0.70666667 0.45098039 0.72115385 0.74418605 0.65693431]</span><br><span class="line">upper bound: 0.548518228331384</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 53.84%</span><br><span class="line">Overall Prec@1 59.26% Prec@5 85.45%</span><br><span class="line">/home/xiangyi/miniconda3/envs/pan/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">$ python test_models.py somethingv2 --VAP --batch_size=16 -j=4 --test_crops=1 --test_segments=8 --weights=pretrained/PAN_Lite_somethingv2_resnet50_shift8_blockres_avg_segment8_e80.pth.tar</span><br><span class="line">somethingv2: 174 classes</span><br><span class="line">=&gt; <span class="built_in">shift</span>: True, shift_div: 8, shift_place: blockres</span><br><span class="line">=&gt; base model: resnet50</span><br><span class="line">=&gt; Adding temporal <span class="built_in">shift</span>...</span><br><span class="line">=&gt; Using 3-level VAP</span><br><span class="line">=&gt; Converting the ImageNet model to a PAN_Lite init model</span><br><span class="line">=&gt; Done. PAN_lite model ready...</span><br><span class="line">video number:24777</span><br><span class="line">video 0 <span class="keyword">done</span>, total 0/24777, average 4.263 sec/video, moving Prec@1 56.250 Prec@5 81.250</span><br><span class="line">video 320 <span class="keyword">done</span>, total 320/24777, average 0.481 sec/video, moving Prec@1 65.476 Prec@5 86.310</span><br><span class="line">video 640 <span class="keyword">done</span>, total 640/24777, average 0.399 sec/video, moving Prec@1 60.976 Prec@5 85.213</span><br><span class="line">video 960 <span class="keyword">done</span>, total 960/24777, average 0.452 sec/video, moving Prec@1 60.246 Prec@5 85.348</span><br><span class="line">video 1280 <span class="keyword">done</span>, total 1280/24777, average 0.424 sec/video, moving Prec@1 60.880 Prec@5 85.802</span><br><span class="line">video 1600 <span class="keyword">done</span>, total 1600/24777, average 0.400 sec/video, moving Prec@1 60.458 Prec@5 85.334</span><br><span class="line">video 1920 <span class="keyword">done</span>, total 1920/24777, average 0.397 sec/video, moving Prec@1 60.227 Prec@5 85.537</span><br><span class="line">video 2240 <span class="keyword">done</span>, total 2240/24777, average 0.398 sec/video, moving Prec@1 60.151 Prec@5 85.594</span><br><span class="line">video 2560 <span class="keyword">done</span>, total 2560/24777, average 0.390 sec/video, moving Prec@1 60.404 Prec@5 85.637</span><br><span class="line">video 2880 <span class="keyword">done</span>, total 2880/24777, average 0.388 sec/video, moving Prec@1 60.290 Prec@5 85.463</span><br><span class="line">video 3200 <span class="keyword">done</span>, total 3200/24777, average 0.386 sec/video, moving Prec@1 60.261 Prec@5 85.572</span><br><span class="line">video 3520 <span class="keyword">done</span>, total 3520/24777, average 0.380 sec/video, moving Prec@1 60.436 Prec@5 85.605</span><br><span class="line">video 3840 <span class="keyword">done</span>, total 3840/24777, average 0.372 sec/video, moving Prec@1 60.062 Prec@5 85.425</span><br><span class="line">video 4160 <span class="keyword">done</span>, total 4160/24777, average 0.368 sec/video, moving Prec@1 59.962 Prec@5 85.321</span><br><span class="line">video 4480 <span class="keyword">done</span>, total 4480/24777, average 0.367 sec/video, moving Prec@1 59.831 Prec@5 85.343</span><br><span class="line">video 4800 <span class="keyword">done</span>, total 4800/24777, average 0.365 sec/video, moving Prec@1 59.884 Prec@5 85.507</span><br><span class="line">video 5120 <span class="keyword">done</span>, total 5120/24777, average 0.362 sec/video, moving Prec@1 60.008 Prec@5 85.533</span><br><span class="line">video 5440 <span class="keyword">done</span>, total 5440/24777, average 0.358 sec/video, moving Prec@1 60.392 Prec@5 85.521</span><br><span class="line">video 5760 <span class="keyword">done</span>, total 5760/24777, average 0.355 sec/video, moving Prec@1 60.336 Prec@5 85.457</span><br><span class="line">video 6080 <span class="keyword">done</span>, total 6080/24777, average 0.352 sec/video, moving Prec@1 60.285 Prec@5 85.400</span><br><span class="line">video 6400 <span class="keyword">done</span>, total 6400/24777, average 0.351 sec/video, moving Prec@1 59.804 Prec@5 85.318</span><br><span class="line">video 6720 <span class="keyword">done</span>, total 6720/24777, average 0.348 sec/video, moving Prec@1 59.650 Prec@5 85.125</span><br><span class="line">video 7040 <span class="keyword">done</span>, total 7040/24777, average 0.347 sec/video, moving Prec@1 59.736 Prec@5 85.204</span><br><span class="line">video 7360 <span class="keyword">done</span>, total 7360/24777, average 0.344 sec/video, moving Prec@1 59.585 Prec@5 85.182</span><br><span class="line">video 7680 <span class="keyword">done</span>, total 7680/24777, average 0.342 sec/video, moving Prec@1 59.771 Prec@5 85.265</span><br><span class="line">video 8000 <span class="keyword">done</span>, total 8000/24777, average 0.341 sec/video, moving Prec@1 59.681 Prec@5 85.292</span><br><span class="line">video 8320 <span class="keyword">done</span>, total 8320/24777, average 0.339 sec/video, moving Prec@1 59.633 Prec@5 85.281</span><br><span class="line">video 8640 <span class="keyword">done</span>, total 8640/24777, average 0.337 sec/video, moving Prec@1 59.635 Prec@5 85.386</span><br><span class="line">video 8960 <span class="keyword">done</span>, total 8960/24777, average 0.336 sec/video, moving Prec@1 59.548 Prec@5 85.316</span><br><span class="line">video 9280 <span class="keyword">done</span>, total 9280/24777, average 0.334 sec/video, moving Prec@1 59.477 Prec@5 85.273</span><br><span class="line">video 9600 <span class="keyword">done</span>, total 9600/24777, average 0.333 sec/video, moving Prec@1 59.536 Prec@5 85.358</span><br><span class="line">video 9920 <span class="keyword">done</span>, total 9920/24777, average 0.331 sec/video, moving Prec@1 59.652 Prec@5 85.397</span><br><span class="line">video 10240 <span class="keyword">done</span>, total 10240/24777, average 0.331 sec/video, moving Prec@1 59.565 Prec@5 85.413</span><br><span class="line">video 10560 <span class="keyword">done</span>, total 10560/24777, average 0.330 sec/video, moving Prec@1 59.503 Prec@5 85.354</span><br><span class="line">video 10880 <span class="keyword">done</span>, total 10880/24777, average 0.329 sec/video, moving Prec@1 59.554 Prec@5 85.380</span><br><span class="line">video 11200 <span class="keyword">done</span>, total 11200/24777, average 0.330 sec/video, moving Prec@1 59.576 Prec@5 85.396</span><br><span class="line">video 11520 <span class="keyword">done</span>, total 11520/24777, average 0.329 sec/video, moving Prec@1 59.639 Prec@5 85.480</span><br><span class="line">video 11840 <span class="keyword">done</span>, total 11840/24777, average 0.327 sec/video, moving Prec@1 59.691 Prec@5 85.417</span><br><span class="line">video 12160 <span class="keyword">done</span>, total 12160/24777, average 0.326 sec/video, moving Prec@1 59.675 Prec@5 85.422</span><br><span class="line">video 12480 <span class="keyword">done</span>, total 12480/24777, average 0.325 sec/video, moving Prec@1 59.675 Prec@5 85.451</span><br><span class="line">video 12800 <span class="keyword">done</span>, total 12800/24777, average 0.325 sec/video, moving Prec@1 59.691 Prec@5 85.471</span><br><span class="line">video 13120 <span class="keyword">done</span>, total 13120/24777, average 0.324 sec/video, moving Prec@1 59.645 Prec@5 85.490</span><br><span class="line">video 13440 <span class="keyword">done</span>, total 13440/24777, average 0.323 sec/video, moving Prec@1 59.617 Prec@5 85.486</span><br><span class="line">video 13760 <span class="keyword">done</span>, total 13760/24777, average 0.322 sec/video, moving Prec@1 59.640 Prec@5 85.475</span><br><span class="line">video 14080 <span class="keyword">done</span>, total 14080/24777, average 0.321 sec/video, moving Prec@1 59.641 Prec@5 85.464</span><br><span class="line">video 14400 <span class="keyword">done</span>, total 14400/24777, average 0.322 sec/video, moving Prec@1 59.600 Prec@5 85.502</span><br><span class="line">video 14720 <span class="keyword">done</span>, total 14720/24777, average 0.323 sec/video, moving Prec@1 59.521 Prec@5 85.437</span><br><span class="line">video 15040 <span class="keyword">done</span>, total 15040/24777, average 0.323 sec/video, moving Prec@1 59.358 Prec@5 85.355</span><br><span class="line">video 15360 <span class="keyword">done</span>, total 15360/24777, average 0.323 sec/video, moving Prec@1 59.365 Prec@5 85.341</span><br><span class="line">video 15680 <span class="keyword">done</span>, total 15680/24777, average 0.322 sec/video, moving Prec@1 59.353 Prec@5 85.302</span><br><span class="line">video 16000 <span class="keyword">done</span>, total 16000/24777, average 0.321 sec/video, moving Prec@1 59.328 Prec@5 85.340</span><br><span class="line">video 16320 <span class="keyword">done</span>, total 16320/24777, average 0.322 sec/video, moving Prec@1 59.341 Prec@5 85.327</span><br><span class="line">video 16640 <span class="keyword">done</span>, total 16640/24777, average 0.320 sec/video, moving Prec@1 59.312 Prec@5 85.315</span><br><span class="line">video 16960 <span class="keyword">done</span>, total 16960/24777, average 0.320 sec/video, moving Prec@1 59.295 Prec@5 85.315</span><br><span class="line">video 17280 <span class="keyword">done</span>, total 17280/24777, average 0.320 sec/video, moving Prec@1 59.256 Prec@5 85.291</span><br><span class="line">video 17600 <span class="keyword">done</span>, total 17600/24777, average 0.321 sec/video, moving Prec@1 59.191 Prec@5 85.280</span><br><span class="line">video 17920 <span class="keyword">done</span>, total 17920/24777, average 0.321 sec/video, moving Prec@1 59.066 Prec@5 85.220</span><br><span class="line">video 18240 <span class="keyword">done</span>, total 18240/24777, average 0.321 sec/video, moving Prec@1 59.109 Prec@5 85.232</span><br><span class="line">video 18560 <span class="keyword">done</span>, total 18560/24777, average 0.321 sec/video, moving Prec@1 59.189 Prec@5 85.255</span><br><span class="line">video 18880 <span class="keyword">done</span>, total 18880/24777, average 0.320 sec/video, moving Prec@1 59.113 Prec@5 85.198</span><br><span class="line">video 19200 <span class="keyword">done</span>, total 19200/24777, average 0.319 sec/video, moving Prec@1 59.128 Prec@5 85.205</span><br><span class="line">video 19520 <span class="keyword">done</span>, total 19520/24777, average 0.319 sec/video, moving Prec@1 59.142 Prec@5 85.227</span><br><span class="line">video 19840 <span class="keyword">done</span>, total 19840/24777, average 0.319 sec/video, moving Prec@1 59.136 Prec@5 85.244</span><br><span class="line">video 20160 <span class="keyword">done</span>, total 20160/24777, average 0.320 sec/video, moving Prec@1 59.199 Prec@5 85.255</span><br><span class="line">video 20480 <span class="keyword">done</span>, total 20480/24777, average 0.320 sec/video, moving Prec@1 59.202 Prec@5 85.290</span><br><span class="line">video 20800 <span class="keyword">done</span>, total 20800/24777, average 0.319 sec/video, moving Prec@1 59.204 Prec@5 85.295</span><br><span class="line">video 21120 <span class="keyword">done</span>, total 21120/24777, average 0.319 sec/video, moving Prec@1 59.226 Prec@5 85.328</span><br><span class="line">video 21440 <span class="keyword">done</span>, total 21440/24777, average 0.318 sec/video, moving Prec@1 59.270 Prec@5 85.314</span><br><span class="line">video 21760 <span class="keyword">done</span>, total 21760/24777, average 0.318 sec/video, moving Prec@1 59.285 Prec@5 85.342</span><br><span class="line">video 22080 <span class="keyword">done</span>, total 22080/24777, average 0.318 sec/video, moving Prec@1 59.314 Prec@5 85.355</span><br><span class="line">video 22400 <span class="keyword">done</span>, total 22400/24777, average 0.318 sec/video, moving Prec@1 59.284 Prec@5 85.377</span><br><span class="line">video 22720 <span class="keyword">done</span>, total 22720/24777, average 0.318 sec/video, moving Prec@1 59.236 Prec@5 85.340</span><br><span class="line">video 23040 <span class="keyword">done</span>, total 23040/24777, average 0.317 sec/video, moving Prec@1 59.256 Prec@5 85.414</span><br><span class="line">video 23360 <span class="keyword">done</span>, total 23360/24777, average 0.317 sec/video, moving Prec@1 59.274 Prec@5 85.417</span><br><span class="line">video 23680 <span class="keyword">done</span>, total 23680/24777, average 0.317 sec/video, moving Prec@1 59.246 Prec@5 85.403</span><br><span class="line">video 24000 <span class="keyword">done</span>, total 24000/24777, average 0.318 sec/video, moving Prec@1 59.231 Prec@5 85.389</span><br><span class="line">video 24320 <span class="keyword">done</span>, total 24320/24777, average 0.317 sec/video, moving Prec@1 59.291 Prec@5 85.413</span><br><span class="line">video 24640 <span class="keyword">done</span>, total 24640/24777, average 0.317 sec/video, moving Prec@1 59.259 Prec@5 85.436</span><br><span class="line">[0.84482759 0.38815789 0.51633987 0.58252427 0.58974359 0.54385965</span><br><span class="line"> 0.76738609 0.63636364 0.67716535 0.60264901 0.53932584 0.68613139</span><br><span class="line"> 0.26923077 0.425      0.7122807  0.51914894 0.42639594 0.38157895</span><br><span class="line"> 0.46025105 0.57345972 0.51574803 0.62280702 0.55232558 0.56382979</span><br><span class="line"> 0.56818182 0.52631579 0.6        0.48514851 0.71818182 0.77394636</span><br><span class="line"> 0.78378378 0.77477477 0.82954545 0.11650485 0.36144578 0.203125</span><br><span class="line"> 0.84331797 0.82129278 0.22222222 0.79411765 0.71584699 0.73214286</span><br><span class="line"> 0.59624413 0.62057878 0.72972973 0.51253482 0.5873494  0.40703518</span><br><span class="line"> 0.42857143 0.80430108 0.7257384  0.06666667 0.40625    0.68571429</span><br><span class="line"> 0.25       0.42       0.4109589  0.60377358 0.17647059 0.81654676</span><br><span class="line"> 0.92       0.21568627 0.73417722 0.30841121 0.21621622 0.53301887</span><br><span class="line"> 0.30188679 0.40298507 0.6754386  0.43       0.64285714 0.47826087</span><br><span class="line"> 0.54411765 0.61538462 0.66981132 0.36842105 0.5        0.30769231</span><br><span class="line"> 0.2962963  0.77586207 0.296875   0.168      0.36170213 0.44680851</span><br><span class="line"> 0.64       0.44444444 0.85882353 0.792      0.25       0.19277108</span><br><span class="line"> 0.56521739 0.85       0.57894737 0.764      0.76694915 0.13888889</span><br><span class="line"> 0.14705882 0.2892562  0.51020408 0.67765568 0.46792453 0.62637363</span><br><span class="line"> 0.29310345 0.8125     0.7480315  0.73333333 0.52054795 0.66502463</span><br><span class="line"> 0.39189189 0.48       0.6056338  0.05555556 0.49640288 0.27777778</span><br><span class="line"> 0.69097222 0.54347826 0.25925926 0.77777778 0.40677966 0.64356436</span><br><span class="line"> 0.80314961 0.80681818 0.34975369 0.69230769 0.36538462 0.63761468</span><br><span class="line"> 0.55339806 0.42608696 0.1302682  0.70955882 0.32142857 0.35616438</span><br><span class="line"> 0.44827586 0.24561404 0.79619565 0.62269939 0.23529412 0.45</span><br><span class="line"> 0.24770642 0.72727273 0.6627907  0.359375   0.59375    0.63311688</span><br><span class="line"> 0.56050955 0.44680851 0.74166667 0.0859375  0.55230126 0.90754717</span><br><span class="line"> 0.76902174 0.33152174 0.3877551  0.75229358 0.51181102 0.29268293</span><br><span class="line"> 0.5        0.58695652 0.55045872 0.34545455 0.41284404 0.46052632</span><br><span class="line"> 0.43925234 0.45       0.84398977 0.88709677 0.96428571 0.94444444</span><br><span class="line"> 0.81666667 0.70666667 0.45098039 0.72115385 0.74418605 0.65693431]</span><br><span class="line">upper bound: 0.548518228331384</span><br><span class="line">-----Evaluation is finished------</span><br><span class="line">Class Accuracy 53.84%</span><br><span class="line">Overall Prec@1 59.26% Prec@5 85.45%</span><br><span class="line">E:\Program Files\Anaconda3\envs\tsm\lib\site-packages\numpy\core\_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (<span class="built_in">which</span> is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to <span class="keyword">do</span> this, you must specify <span class="string">'dtype=object'</span> when creating the ndarray</span><br><span class="line">  <span class="built_in">return</span> array(a, dtype, copy=False, order=order, subok=True)</span><br></pre></td></tr></table></figure><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://arxiv.org/pdf/2008.03462v1.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/2008.03462v1.pdf</a></li><li><a href="https://github.com/zhang-can/PAN-PyTorch" target="_blank" rel="noopener">https://github.com/zhang-can/PAN-PyTorch</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> pan </tag>
            
            <tag> persistent appearance network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TSM Temporal Shift Module for Efficient Video Understanding</title>
      <link href="/blog/2020/08/30/tsm-temporal-shift-module-for-efficient-video-understanding/"/>
      <url>/blog/2020/08/30/tsm-temporal-shift-module-for-efficient-video-understanding/</url>
      
        <content type="html"><![CDATA[<h1 id="tsm-temporal-shift-module-for-efficient-video-understanding"><a class="header-anchor" href="#tsm-temporal-shift-module-for-efficient-video-understanding">#</a>TSM: Temporal Shift Module for Efficient Video Understanding</h1><center><p><img src="//onns.xyz/blog/image/20200910-1.png" alt="核心思想"></p></center><p>文章实现了在 2D 模型上达到 3D 模型的精度，极大的降低了计算。其核心思想是通过一种<code>shift</code>操作，将时间纬度上的不同帧之间的通道进行偏移，以达到共享时间特征的目的。</p><p>然而并不是所有的<code>shift</code>操作都可以达到效果的，虽然<code>shift</code>操作不需要额外的运算但是仍然需要数据的移动，太多的移动会带来延迟。</p><p>除此之外，<code>shift</code>是增加时间特征的提取，太多的<code>shift</code>操作也会导致空间特征的提取受到影响。</p><center><p><img src="//onns.xyz/blog/image/20200910-2.png" alt="作者思路"></p></center><p>故文章中所提出的是一种改进的<code>shift</code>策略：并不是<code>shift</code>所有的<code>channels</code>，而是只选择性的<code>shift</code>其中的一部分，该策略能够有效的减少数据移动所带来的时间复杂度。</p><p>另外<code>TSM</code>并不是直接被插入到从前往后的干道中的，而是以旁路的形式进行，因此在获得了时序信息的同时不会对二维卷积的空间信息进行损害。</p><p>同时作者对于一些实时的在线检测提出了相应的模型策略，不同于将第一层下移第二层上移这种：</p><center><p><img src="//onns.xyz/blog/image/20200910-3.png" alt="在线模型"></p></center><p>可以有相应的借鉴思路，并且这篇也是上一篇的基准之一。</p><h2 id="实验结果"><a class="header-anchor" href="#实验结果">#</a>实验结果</h2><center><p><img src="//onns.xyz/blog/image/20200910-7.png" alt="过程"></p></center><center><p><img src="//onns.xyz/blog/image/20200910-8.png" alt="结果"></p></center><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://github.com/mit-han-lab/temporal-shift-module" target="_blank" rel="noopener">https://github.com/mit-han-lab/temporal-shift-module</a></li><li><a href="https://blog.csdn.net/justsolow/article/details/105127296" target="_blank" rel="noopener">《TSM: Temporal Shift Module for Efficient Video Understanding》学习小记</a></li><li><a href="https://zhuanlan.zhihu.com/p/66251207" target="_blank" rel="noopener">Temporal Shift Module</a></li><li><a href="https://zhuanlan.zhihu.com/p/64525610" target="_blank" rel="noopener">TSM：Temporal Shift Module for 视频理解</a></li><li><a href="https://blog.csdn.net/Amazingren/article/details/100715768" target="_blank" rel="noopener">【视频理解论文】——TSM：Temporal Shift Module for Efficient Video Understanding</a></li><li><a href="https://zhuanlan.zhihu.com/p/64525610" target="_blank" rel="noopener">TSM：Temporal Shift Module for 视频理解</a></li><li><a href="https://blog.csdn.net/strawqqhat/article/details/105292687" target="_blank" rel="noopener">Temporal Shift Module for Efficient Video Understanding</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> tsm </tag>
            
            <tag> temporal shift module </tag>
            
            <tag> shift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gate-Shift Networks for Video Action Recognition</title>
      <link href="/blog/2020/08/30/gate-shift-networks-for-video-action-recognition/"/>
      <url>/blog/2020/08/30/gate-shift-networks-for-video-action-recognition/</url>
      
        <content type="html"><![CDATA[<h2 id="gate-shift-networks-for-video-action-recognition"><a class="header-anchor" href="#gate-shift-networks-for-video-action-recognition">#</a>Gate-Shift Networks for Video Action Recognition</h2><p>用于行为识别的<code>Gate-Shift</code>网络</p><p>在实践中，由于涉及大量的参数和计算，在缺乏足够大的数据集进行大规模训练的情况下，<code>C3D</code>可能表现不佳。</p><center><p><img src="//onns.xyz/blog/image/20200910-5.png" alt="GSM"></p></center><p>文章提出了一种<code>Gate-Shift Module(GSM)</code>，将<code>2D-CNN</code>转换为高效的时空特征抽取器。</p><p>通过<code>GSM</code>插件，一个<code>2D-CNN</code>可以适应性地学习时间路由特性并将它们结合起来，并且几乎没有额外的附加参数和计算开销。</p><center><p><img src="//onns.xyz/blog/image/20200910-4.png" alt="思路对比"></p></center><p>传统的方法演变：<code>C3D</code> -&gt; <code>2D spatial + 1D temporal</code> -&gt; <code>CSN</code> -&gt; <code>GST</code>（与分离信道组上的二维和三维卷积并行空间和时空交互建模） -&gt; <code>TSM</code>（时域卷积可以被限制为硬编码的时移，使一些信道在时间上向前或向后移动）</p><p>所有这些现有的方法都学习具有硬连线连接和跨网络传播模式的结构化内核。<br>在网络中的任何一点上都没有数据依赖的决策来选择地通过不同的分支来路由特性，分组和随机的模式是在设计之初就固定的，并且学习如何随机是具有组合复杂性的。</p><center><p><img src="//onns.xyz/blog/image/20200910-6.png" alt="实验"></p></center><blockquote><p>From the experiments we conclude that adding GSM to the branch with the least number of convolution layers performs the best.</p></blockquote><p><code>GSM</code>通过一种门移模块，来让网络自己学习<code>TSM</code>中的<code>shift</code>操作，并通过实验证明在卷积层最少的分支上添加<code>GSM</code>模块表现最好。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
            <tag> CVPR </tag>
            
            <tag> gsm </tag>
            
            <tag> CVPR 2020 </tag>
            
            <tag> 2020 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报-20200830</title>
      <link href="/blog/2020/08/30/weekly-report-20200830/"/>
      <url>/blog/2020/08/30/weekly-report-20200830/</url>
      
        <content type="html"><![CDATA[<center><table><thead><tr><th style="text-align:center">2020-08-30</th><th style="text-align:center">周报#03</th><th style="text-align:center">刘潘</th></tr></thead><tbody></tbody></table></center><a id="more"></a><h2 id="i-task-achieved-last-week"><a class="header-anchor" href="#i-task-achieved-last-week">#</a>I. Task achieved last week</h2><hr><ul><li>阅读 CVPR2020 论文《Disentangling and Unifying Graph Convolutionsfor Skeleton-Based Action Recognition》。</li><li>阅读《一种基于 2D 时空信息提取的行为识别算法》。</li></ul><h2 id="ii-reports"><a class="header-anchor" href="#ii-reports">#</a>II. Reports</h2><hr><h3 id="disentangling-and-unifying-graph-convolutionsfor-skeleton-based-action-recognition"><a class="header-anchor" href="#disentangling-and-unifying-graph-convolutionsfor-skeleton-based-action-recognition">#</a>Disentangling and Unifying Graph Convolutionsfor Skeleton-Based Action Recognition</h3><p>基于骨架的动作识别的分离统一图卷积</p><p>创新点：</p><ol><li>在多尺度算子下无偏的远程联合关系建模</li><li>在信息流中无障碍的跨时空捕获复杂的时空依赖性</li></ol><p>首先介绍了一下基于人体骨架的行为识别的高效性和广阔前景。</p><p>对于骨架图的鲁棒动作识别，一个理想的算法应该不仅仅局限于局部关节连通性，提取多尺度结构特征和长距离依赖关系，因为结构上分离的关节也具有很强的相关性。</p><p>现有的方法是通过图卷积的骨架邻接矩阵的高阶多项式，邻接多项式通过使远邻可到达而增加了图卷积的感受野。</p><p>但因此就会出现<code>biased weighting problem</code>，即<code>偏加权问题</code>。更高的多项式阶在从远端关节获取信息方面仅具有一点点的效果，因为聚集的特征将由来自局部身体部位的关节控制。这是限制现有多尺度聚合器可扩展性的一个关键缺点。</p><p>鲁棒算法的另一个可取特征是能够利用复杂的跨时空联合关系进行动作识别。然而，为了达到这一目的，大多数现有的方法都是使用交错的空间独立（spatial-only）和时间独立（temporal-only）模型，类似于分解的三维卷积。一种典型的方法是首先使用图卷积提取每个时间片的空间关系，然后使用循环的或一维卷积层来模拟时间动态。这种<code>因式分解</code>允许高效的远程建模，它支持跨时空的直接信息流，但是它无法捕获复杂的区域时空联合依赖关系。例如，“站起来”的动作常常同时发生上下身体跨越时空的运动，上半身的运动（前倾）与下半身的运动（站起来）有着强烈的关联。<code>因式分解</code>建模可能无法有效地捕捉到做出预测的有力线索。</p><ol><li>我们提出了一个分离的多尺度聚合方案，该方案消除了来自不同邻域的节点特征之间的冗余依赖关系，从而使强大的多尺度聚合器能够有效地捕获人类骨骼上的图形范围的关节关系。</li><li>我们提出了一个<code>G3D</code>操作单元。它促进了信息在时空中的直接流动，从而有效地进行特征学习。</li><li>将分离的聚集方案与 G3D 集成，提供了一个强大的特征抽取器（MS-G3D），具有跨空间和时间维度的多尺度感受野。时空特性的直接多尺度聚合进一步提高了模型性能。</li></ol><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://www.pianshen.com/article/75261564402/" target="_blank" rel="noopener">别人的笔记 1</a></li><li><a href="https://blog.csdn.net/qq_36852840/article/details/106374430" target="_blank" rel="noopener">别人的笔记 2</a></li><li><a href="https://blog.csdn.net/m0_37852937/article/details/106565861" target="_blank" rel="noopener">别人的笔记 3</a></li><li><a href="https://github.com/kenziyuliu/ms-g3d" target="_blank" rel="noopener">github 源码</a></li></ul><h3 id="spatiotemporal-fusion-in-3d-cnns-a-probabilistic-view"><a class="header-anchor" href="#spatiotemporal-fusion-in-3d-cnns-a-probabilistic-view">#</a>Spatiotemporal Fusion in 3D CNNs A Probabilistic View</h3><p>感觉是纯理论性质的研究…不是很能参考。</p><p>时间空间的融合方法有很多种，以往的探究方法是假设一种融合方法，然后进行假设验证。这样做的缺点是：因为训练需要很久的时间，所以验证要花费很长时间。</p><p>所以文章通过将融合方法映射到概率空间，通过理论模拟来提高验证效率。</p><h3 id="相关链接-2"><a class="header-anchor" href="#相关链接-2">#</a>相关链接</h3><ul><li><a href="https://mp.weixin.qq.com/s/qZOCUuLt98fTpstGpC1ilg" target="_blank" rel="noopener">CVPR 2020 丨 Variational DropPath：提高 3D CNN 时空融合分析效率的秘诀</a></li><li><a href="https://github.com/scenarios/Probabilistic3DCNN" target="_blank" rel="noopener">https://github.com/scenarios/Probabilistic3DCNN</a></li></ul><h3 id="一种基于-2d-时空信息提取的行为识别算法"><a class="header-anchor" href="#一种基于-2d-时空信息提取的行为识别算法">#</a>一种基于 2D 时空信息提取的行为识别算法</h3><p>在<code>UCF101</code>数据集上准确率<code>94.46%</code>。</p><p>采用<code>DenseNet</code>做为网络的架构。</p><p>从一个视频片段提取出 <code>16</code> 帧的 <code>64 × 64 × 3</code> 的有时序顺序的图像，组织成 <code>4 × 4</code> 的图像。</p><center><p><img src="//onns.xyz/blog/image/20200829-1.png" alt="图像翻转设计"></p></center><center><p><img src="//onns.xyz/blog/image/20200829-2.png" alt="实验结果"></p></center><p>文章没有具体说明执行速度，但是我觉得应该比基于视频的快很多，也相对来讲更有实践性。</p><h2 id="iii-plan-for-this-week"><a class="header-anchor" href="#iii-plan-for-this-week">#</a>III. Plan for this week</h2><hr><ul><li>申请了 UCF101 的数据集，看看先跑一个别人的 demo 试一下。</li><li>继续读论文。</li><li>2D 时空信息提取的方法，说不定可以从图像的摆放和帧选取等方面进行创新。</li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown格式的周报模板</title>
      <link href="/blog/2020/08/30/weekly-report-template/"/>
      <url>/blog/2020/08/30/weekly-report-template/</url>
      
        <content type="html"><![CDATA[<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">| date | report#ID | name |</span><br><span class="line">| :--: | :-------: | :--: |</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="section">## I. Task achieved last week</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## II. Reports</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## III. Plan for this week</span></span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lab406 </tag>
            
            <tag> weekly report </tag>
            
            <tag> template </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一种基于 2D 时空信息提取的行为识别算法</title>
      <link href="/blog/2020/08/29/a-behavioral-recognition-algorithm-based-on-2d-spatiotemporal-information-extraction/"/>
      <url>/blog/2020/08/29/a-behavioral-recognition-algorithm-based-on-2d-spatiotemporal-information-extraction/</url>
      
        <content type="html"><![CDATA[<h2 id="一种基于-2d-时空信息提取的行为识别算法"><a class="header-anchor" href="#一种基于-2d-时空信息提取的行为识别算法">#</a>一种基于 2D 时空信息提取的行为识别算法</h2><p>在<code>UCF101</code>数据集上准确率<code>94.46%</code>。</p><p>采用<code>DenseNet</code>做为网络的架构。</p><p>从一个视频片段提取出 <code>16</code> 帧的 <code>64 × 64 × 3</code> 的有时序顺序的图像，组织成 <code>4 × 4</code> 的图像。</p><center><p><img src="//onns.xyz/blog/image/20200829-1.png" alt="图像翻转设计"></p></center><center><p><img src="//onns.xyz/blog/image/20200829-2.png" alt="实验结果"></p></center><p>文章没有具体说明执行速度，但是我觉得应该比基于视频的快很多，也相对来讲更有实践性。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Disentangling and Unifying Graph Convolutionsfor Skeleton-Based Action Recognition</title>
      <link href="/blog/2020/08/28/disentangling-and-unifying-graph-convolutionsfor-skeleton-based-action-recognition/"/>
      <url>/blog/2020/08/28/disentangling-and-unifying-graph-convolutionsfor-skeleton-based-action-recognition/</url>
      
        <content type="html"><![CDATA[<h2 id="disentangling-and-unifying-graph-convolutionsfor-skeleton-based-action-recognition"><a class="header-anchor" href="#disentangling-and-unifying-graph-convolutionsfor-skeleton-based-action-recognition">#</a>Disentangling and Unifying Graph Convolutionsfor Skeleton-Based Action Recognition</h2><p>基于骨架的动作识别的分离统一图卷积</p><p>在多尺度算子下无偏的远程联合关系建模<br>在信息流中无障碍的跨时空捕获复杂的时空依赖性</p><h2 id="introduction"><a class="header-anchor" href="#introduction">#</a>Introduction</h2><p>首先介绍了一下基于人体骨架的行为识别的高效性和广阔前景。</p><p>对于骨架图的鲁棒动作识别，一个理想的算法应该不仅仅局限于局部关节连通性，提取多尺度结构特征和长距离依赖关系，因为结构上分离的关节也具有很强的相关性。</p><p>现有的方法是通过图卷积的骨架邻接矩阵的高阶多项式，邻接多项式通过使远邻可到达而增加了图卷积的感受野。</p><p>但因此就会出现<code>biased weighting problem</code>，即<code>偏加权问题</code>。更高的多项式阶在从远端关节获取信息方面仅具有一点点的效果，因为聚集的特征将由来自局部身体部位的关节控制。这是限制现有多尺度聚合器可扩展性的一个关键缺点。</p><p>鲁棒算法的另一个可取特征是能够利用复杂的跨时空联合关系进行动作识别。然而，为了达到这一目的，大多数现有的方法都是使用交错的空间独立（spatial-only）和时间独立（temporal-only）模型，类似于分解的三维卷积。一种典型的方法是首先使用图卷积提取每个时间片的空间关系，然后使用循环的或一维卷积层来模拟时间动态。这种<code>因式分解</code>允许高效的远程建模，它支持跨时空的直接信息流，但是它无法捕获复杂的区域时空联合依赖关系。例如，“站起来”的动作常常同时发生上下身体跨越时空的运动，上半身的运动（前倾）与下半身的运动（站起来）有着强烈的关联。<code>因式分解</code>建模可能无法有效地捕捉到做出预测的有力线索。</p><ol><li>我们提出了一个分离的多尺度聚合方案，该方案消除了来自不同邻域的节点特征之间的冗余依赖关系，从而使强大的多尺度聚合器能够有效地捕获人类骨骼上的图形范围的关节关系。</li><li>我们提出了一个<code>G3D</code>操作单元。它促进了信息在时空中的直接流动，从而有效地进行特征学习。</li><li>将分离的聚集方案与 G3D 集成，提供了一个强大的特征抽取器（MS-G3D），具有跨空间和时间维度的多尺度感受野。时空特性的直接多尺度聚合进一步提高了模型性能。</li></ol><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://www.pianshen.com/article/75261564402/" target="_blank" rel="noopener">别人的笔记 1</a></li><li><a href="https://blog.csdn.net/qq_36852840/article/details/106374430" target="_blank" rel="noopener">别人的笔记 2</a></li><li><a href="https://blog.csdn.net/m0_37852937/article/details/106565861" target="_blank" rel="noopener">别人的笔记 3</a></li><li><a href="https://github.com/kenziyuliu/ms-g3d" target="_blank" rel="noopener">github 源码</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spatiotemporal Fusion in 3D CNNs A Probabilistic View</title>
      <link href="/blog/2020/08/28/spatiotemporal-fusion-in-3d-cnns-a-probabilistic-view/"/>
      <url>/blog/2020/08/28/spatiotemporal-fusion-in-3d-cnns-a-probabilistic-view/</url>
      
        <content type="html"><![CDATA[<h2 id="spatiotemporal-fusion-in-3d-cnns-a-probabilistic-view"><a class="header-anchor" href="#spatiotemporal-fusion-in-3d-cnns-a-probabilistic-view">#</a>Spatiotemporal Fusion in 3D CNNs A Probabilistic View</h2><p>感觉是纯理论性质的研究…不是很能参考。</p><p>时间空间的融合方法有很多种，以往的探究方法是假设一种融合方法，然后进行假设验证。这样做的缺点是：因为训练需要很久的时间，所以验证要花费很长时间。</p><p>所以文章通过将融合方法映射到概率空间，通过理论模拟来提高验证效率。</p><h2 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h2><ul><li><a href="https://mp.weixin.qq.com/s/qZOCUuLt98fTpstGpC1ilg" target="_blank" rel="noopener">CVPR 2020 丨 Variational DropPath：提高 3D CNN 时空融合分析效率的秘诀</a></li><li><a href="https://github.com/scenarios/Probabilistic3DCNN" target="_blank" rel="noopener">https://github.com/scenarios/Probabilistic3DCNN</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行为识别 </tag>
            
            <tag> action recognition </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入分析Java Web技术内幕（一）</title>
      <link href="/blog/2020/08/27/jvm-web-1/"/>
      <url>/blog/2020/08/27/jvm-web-1/</url>
      
        <content type="html"><![CDATA[<p>深入分析 Java Web 技术内幕</p><h2 id="深入分析-java-i-o-的工作机制"><a class="header-anchor" href="#深入分析-java-i-o-的工作机制">#</a>深入分析 Java I/O 的工作机制</h2><a id="more"></a><p>Java 的 I/O 操作类在包 <a href="http://java.io" target="_blank" rel="noopener">java.io</a> 下，大概分为四类：</p><ul><li>基于字节操作的 I/O 接口：<code>InputStream</code> 和 <code>OutputStream</code>。</li><li>基于字符操作的 I/O 接口：<code>Writer</code> 和 <code>Reader</code>。</li><li>基于磁盘操作的 I/O 接口：<code>File</code>。</li><li>基于网络操作的 I/O 接口：<code>Socket</code>。</li></ul><h3 id="java-序列化技术"><a class="header-anchor" href="#java-序列化技术">#</a>Java 序列化技术</h3>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> java web </tag>
            
            <tag> java web note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入理解Java虚拟机（四）</title>
      <link href="/blog/2020/08/25/jvm-note-4/"/>
      <url>/blog/2020/08/25/jvm-note-4/</url>
      
        <content type="html"><![CDATA[<p>深入理解 Java 虚拟机：JVM 高级特性与最佳实践（第 3 版）</p><h1 id="自动内存管理"><a class="header-anchor" href="#自动内存管理">#</a>自动内存管理</h1><h2 id="垃圾收集器与内存分配策略"><a class="header-anchor" href="#垃圾收集器与内存分配策略">#</a>垃圾收集器与内存分配策略</h2><a id="more"></a><h3 id="可达性分析算法"><a class="header-anchor" href="#可达性分析算法">#</a>可达性分析算法</h3><p>在 Java 技术体系里面，固定可作为<code>GC Roots</code>的对象包括以下几种：</p><ul><li>在虚拟机栈(栈帧中的本地变量表)中引用的对象，譬如各个线程被调用的方法堆栈中使用到的 参数、局部变量、临时变量等。</li><li>在方法区中类静态属性引用的对象，譬如 Java 类的引用类型静态变量。</li><li>在方法区中常量引用的对象，譬如字符串常量池(String Table)里的引用。</li><li>在本地方法栈中 JNI(即通常所说的 Native 方法)引用的对象。</li><li>Java 虚拟机内部的引用，如基本数据类型对应的 Class 对象，一些常驻的异常对象(比如 NullPointExcepiton、OutOfMemoryError)等，还有系统类加载器。</li><li>所有被同步锁(synchronized 关键字)持有的对象。</li><li>反映 Java 虚拟机内部情况的 JM XBean、JVM TI 中注册的回调、本地代码缓存等。</li></ul><p>除了这些固定的<code>GC Roots</code>集合以外，根据用户所选用的垃圾收集器以及当前回收的内存区域不同，还可以有其他对象“临时性”地加入，共同构成完整<code>GC Roots</code>集合。</p><h3 id="引用"><a class="header-anchor" href="#引用">#</a>引用</h3><p>在<code>JDK 1.2</code>版之后，Java 对引用的概念进行了扩充，将引用分为<code>强引用</code>(Strongly Reference)、<code>软引用</code>(Soft Reference)、<code>弱引用</code>(Weak Reference)和<code>虚引用</code>(Phantom Reference)4 种，这 4 种引用强度依次逐渐减弱。</p><ul><li><code>强引用</code>是最传统的“引用”的定义，是指在程序代码之中普遍存在的引用赋值，即类似“Object obj=new Object()”这种引用关系。无论任何情况下，只要强引用关系还存在，垃圾收集器就永远不会回收掉被引用的对象。</li><li><code>软引用</code>是用来描述一些还有用，但非必须的对象。只被软引用关联着的对象，在系统将要发生内存溢出异常前，会把这些对象列进回收范围之中进行第二次回收，如果这次回收还没有足够的内存，才会抛出内存溢出异常。在 JDK 1.2 版之后提供了 SoftReference 类来实现软引用。</li><li><code>弱引用</code>也是用来描述那些非必须对象，但是它的强度比软引用更弱一些，被弱引用关联的对象只能生存到下一次垃圾收集发生为止。当垃圾收集器开始工作，无论当前内存是否足够，都会回收掉只被弱引用关联的对象。在 JDK 1.2 版之后提供了 WeakReference 类来实现弱引用。</li><li><code>虚引用</code>也称为“幽灵引用”或者“幻影引用”，它是最弱的一种引用关系。一个对象是否有虚引用的存在，完全不会对其生存时间构成影响，也无法通过虚引用来取得一个对象实例。为一个对象设置虚引用关联的唯一目的只是为了能在这个对象被收集器回收时收到一个系统通知。在 JDK 1.2 版之后提供 了 Phant omReference 类来实现虚引用。</li></ul><h3 id="finalize-方法"><a class="header-anchor" href="#finalize-方法">#</a>finalize()方法</h3><p>要真正宣告一个对象死亡，至少要经历两次标记过程:如果对象在进行可达性分析后发现没有与<code>GC Roots</code>相连接的引用链，那它将会被第一次标记，随后进行一次筛选，筛选的条件是此对象是否有必要执行<code>finalize()</code>方法。假如对象没有覆盖<code>finalize()</code>方法，或者<code>finalize()</code>方法已经被虚拟机调用过，那么虚拟机将这两种情况都视为“没有必要执行”。</p><p>如果这个对象被判定为确有必要执行<code>finalize()</code>方法，那么该对象将会被放置在一个名为<code>F-Queue</code>的队列之中，并在稍后由一条由虚拟机自动建立的、低调度优先级的<code>Finalizer</code>线程去执行它们的<code>finalize()</code>方法。这里所说的“执行”是指虚拟机会触发这个方法开始运行，但<code>并不承诺一定会等待它运行结束</code>。</p><p>任何一个对象的<code>finalize()</code>方法都只会被系统自动调用一次，如果对象面临下一次回收，它的<code>finalize()</code>方法不会被再次执行。</p><p><code>finalize()</code>方法运行代价高昂，不确定性大，无法保证各个对象的调用顺序，如今已被官方明确声明为<code>不推荐使用</code>的语法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.jvm;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 此代码演示了两点:</span></span><br><span class="line"><span class="comment"> * 1.对象可以在被GC时自我拯救。</span></span><br><span class="line"><span class="comment"> * 2.这种自救的机会只有一次，因为一个对象的finalize()方法最多只会被系统自动调用一次 * <span class="doctag">@author</span> zzm</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FinalizeEscapeGC</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> FinalizeEscapeGC SAVE_HOOK = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">SAVE_HOOK = <span class="keyword">new</span> FinalizeEscapeGC();</span><br><span class="line"><span class="comment">// 对象第一次成功拯救自己</span></span><br><span class="line">SAVE_HOOK = <span class="keyword">null</span>;</span><br><span class="line">System.gc();</span><br><span class="line"><span class="comment">// 因为Finalizer方法优先级很低，暂停0.5秒，以等待它</span></span><br><span class="line">Thread.sleep(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">if</span> (SAVE_HOOK != <span class="keyword">null</span>) &#123;</span><br><span class="line">SAVE_HOOK.isAlive();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"no, i am dead :("</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 下面这段代码与上面的完全相同，但是这次自救却失败了</span></span><br><span class="line"></span><br><span class="line">SAVE_HOOK = <span class="keyword">null</span>;</span><br><span class="line">System.gc();</span><br><span class="line"><span class="comment">// 因为Finalizer方法优先级很低，暂停0.5秒，以等待它</span></span><br><span class="line">Thread.sleep(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">if</span> (SAVE_HOOK != <span class="keyword">null</span>) &#123;</span><br><span class="line">SAVE_HOOK.isAlive();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"no, i am dead :("</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">isAlive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"yes, i am still alive :)"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">finalize</span><span class="params">()</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.finalize();</span><br><span class="line">System.out.println(<span class="string">"finalize method executed!"</span>);</span><br><span class="line">FinalizeEscapeGC.SAVE_HOOK = <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=63179:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/onns/Documents/code/java/jvm/out/production/jvm xyz.onns.jvm.FinalizeEscapeGC</span><br><span class="line">finalize method executed!</span><br><span class="line">yes, i am still alive :)</span><br><span class="line">no, i am dead :(</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h3 id="回收方法区"><a class="header-anchor" href="#回收方法区">#</a>回收方法区</h3><p>方法区的垃圾收集主要回收两部分内容:<code>废弃的常量</code>和<code>不再使用的类型</code>。</p><p>判定一个类型是否属于“不再被使用的类”：</p><ul><li>该类所有的实例都已经被回收，也就是 Java 堆中不存在该类及其任何派生子类的实例。</li><li>加载该类的类加载器已经被回收，这个条件除非是经过精心设计的可替换类加载器的场景，如 OSGi、JSP 的重加载等，否则通常是很难达成的。</li><li>该类对应的<code>java.lang.Class</code>对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。</li></ul><p>在大量使用反射、动态代理、CGLib 等字节码框架，动态生成 JSP 以及 OSGi 这类频繁自定义类加载器的场景中，通常都需要 Java 虚拟机具备类型卸载的能力，以保证不会对方法区造成过大的内存压 力。</p><h3 id="分代收集理论"><a class="header-anchor" href="#分代收集理论">#</a>分代收集理论</h3><ol><li><code>弱分代假说</code>(Weak Generational Hypothesis):绝大多数对象都是朝生夕灭的。</li><li><code>强分代假说</code>(Strong Generational Hypothesis):熬过越多次垃圾收集过程的对象就越难以消亡。</li><li><code>跨代引用假说</code>(Intergenerational Reference Hypothesis):跨代引用相对于同代引用来说仅占极少数。</li></ol><p>在新生代上建立一个全局的数据结构(该结构被称为“<code>记忆集</code>”，<code>Remembered Set</code>)，这个结构把老年代划分成若干小块，标识出老年代的哪一块内存会存在跨代引用。此后当发生<code>Minor GC</code>时，只有包含了跨代引用的小块内存里的对象才会被加入到<code>GC Roots</code>进行扫描。</p><p><code>部分收集</code>(<code>Partial GC</code>):指目标不是完整收集整个 Java 堆的垃圾收集，其中又分为:</p><ul><li><code>新生代收集</code>(<code>Minor GC</code>/<code>Young GC</code>):指目标只是新生代的垃圾收集。</li><li><code>老年代收集</code>(<code>Major GC</code>/<code>Old GC</code>):指目标只是老年代的垃圾收集。目前只有 CMS 收集器会有单独收集老年代的行为。</li><li><code>混合收集</code>(<code>Mixed GC</code>):指目标是收集整个新生代以及部分老年代的垃圾收集。目前只有 G1 收集器会有这种行为。</li></ul><p><code>整堆收集</code>(<code>Full GC</code>):收集整个 Java 堆和方法区的垃圾收集。</p><h3 id="“标记-清除”-mark-sweep-算法"><a class="header-anchor" href="#“标记-清除”-mark-sweep-算法">#</a>“标记-清除”(Mark-Sweep)算法</h3><p>“<code>标记-清除</code>”(<code>Mark-Sweep</code>)算法：首先标记出所有需要回收的对象，在标记完成后，统一回收掉所有被标记的对象，也可以反过来，标记存活的对象，统一回收所有未被标记的对象。</p><p>主要缺点有两个:</p><ul><li>第一个是执行效率不稳定，如果 Java 堆中包含大量对象，而且其中大部分是需要被回收的，这时必须进行大量标记和清除的动作，导致标记和清除两个过程的执行效率都随对象数量增长而降低;</li><li>第二个是内存空间的碎片化问题，标记、清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致当以后在程序运行过程中需要分配较大对象时无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。</li></ul><h3 id="标记-复制算法"><a class="header-anchor" href="#标记-复制算法">#</a>标记-复制算法</h3><p>将可用内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块的内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。</p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jvm </tag>
            
            <tag> jvm note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java静态加载顺序</title>
      <link href="/blog/2020/08/24/static-test/"/>
      <url>/blog/2020/08/24/static-test/</url>
      
        <content type="html"><![CDATA[<style type="text/css">.question-right:hover { color:#1CDDB1; } .question-wrong:hover { color:#FE4C40; } </style><p>以下代码的输出结果是？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> StaticTest t1 = <span class="keyword">new</span> StaticTest();</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> StaticTest t2 = <span class="keyword">new</span> StaticTest();</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"静态块"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"构造块"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">StaticTest t = <span class="keyword">new</span> StaticTest();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><span class="question-wrong">A. 静态块 构造块 构造块 构造块</span><br><span class="question-wrong">B. 构造块 静态块 构造块 构造块</span><br><span class="question-right">C. 构造块 构造块 静态块 构造块</span><br><span class="question-wrong">D. 构造块 构造块 构造块 静态块</span></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=51677:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/onns/Documents/code/java/jvm/out/production/jvm xyz.onns.nowcoder.StaticTest</span><br><span class="line">构造块</span><br><span class="line">构造块</span><br><span class="line">静态块</span><br><span class="line">构造块</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><ol><li>开始时 JVM 加载 StaticTest.class，对所有的静态成员进行声明，t1、t2 被初始化为默认值<code>null</code>。</li><li>又因为 t1、t2 需要被显式初始化，所以对 t1 进行显式初始化，初始化代码块 → 构造函数（没有就是调用默认的构造函数）。</li><li>因为在开始时已经对 static 部分进行了初始化，虽然只对 static 变量进行了初始化，但在初始化 t1 时也不会再执行 static 块了，因为 JVM 认为这是第二次加载类 B 了，</li><li>所以 static 会在 t1 初始化时被忽略掉，所以直接初始化非 static 部分，也就是构造块部分（输出’构造块’）接着构造函数（无输出）。</li><li>接着对 t2 进行初始化过程同 t1 相同（输出’构造块’）。</li><li>此时就对所有的 static 变量都完成了初始化，接着就执行 static 块部分（输出’静态块’）。</li><li>接着执行，main 方法，同样也，new 了对象，调用构造函数输出（‘构造块’）。</li></ol><h2 id="进阶"><a class="header-anchor" href="#进阶">#</a>进阶</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> B t1 = <span class="keyword">new</span> B();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> B t2 = <span class="keyword">new</span> B();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">B</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>();</span><br><span class="line">        System.out.println(<span class="string">"B类构造块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"B类静态块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">extends</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> A t1 = <span class="keyword">new</span> A();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> A t2 = <span class="keyword">new</span> A();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">A</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>();</span><br><span class="line">        System.out.println(<span class="string">"A类构造块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"A类静态块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        A t = <span class="keyword">new</span> A();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://www.nowcoder.com/questionTerminal/ab6eb06face84c4e81ab5bc6f0f7f258" target="_blank" rel="noopener">以下代码的输出结果是？</a></li><li><a href="https://www.cnblogs.com/leiqiannian/p/7922824.html" target="_blank" rel="noopener">JAVA 中静态块、静态变量加载顺序详解</a></li><li><a href="https://blog.csdn.net/niufeihu/article/details/89216243" target="_blank" rel="noopener">Java 静态代码块和静态属性加载顺序</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> static </tag>
            
            <tag> nowcoder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入理解Java虚拟机（三）</title>
      <link href="/blog/2020/08/24/jvm-note-3/"/>
      <url>/blog/2020/08/24/jvm-note-3/</url>
      
        <content type="html"><![CDATA[<p>深入理解 Java 虚拟机：JVM 高级特性与最佳实践（第 3 版）</p><h1 id="自动内存管理"><a class="header-anchor" href="#自动内存管理">#</a>自动内存管理</h1><h2 id="java-内存区域与内存溢出异常"><a class="header-anchor" href="#java-内存区域与内存溢出异常">#</a>Java 内存区域与内存溢出异常</h2><center><p><img src="//onns.xyz/blog/image/20200822-1.jpg" alt="Java虚拟机运行时数据区"></p><p>Java 虚拟机运行时数据区</p></center><a id="more"></a><h3 id="虚拟机栈和本地方法栈溢出"><a class="header-anchor" href="#虚拟机栈和本地方法栈溢出">#</a>虚拟机栈和本地方法栈溢出</h3><p>由于 HotSpot 虚拟机中并不区分虚拟机栈和本地方法栈，因此对于 HotSpot 来说，<code>-Xoss</code>参数（设置本地方法栈大小）虽然存在，但实际上是没有任何效果的，栈容量只能由<code>-Xss</code>参数来设定。</p><p>关于虚拟机栈和本地方法栈，在《Java 虚拟机规范》中描述了两种异常：</p><ol><li>如果线程请求的栈深度大于虚拟机所允许的最大深度，将抛出<code>StackOverflowError</code>异常。</li><li>如果虚拟机的栈内存允许动态扩展，当扩展栈容量无法申请到足够的内存时，将抛出<code>OutOfMemoryError</code>异常。</li></ol><p>Java 虚拟机规范》明确允许 Java 虚拟机实现自行选择是否支持栈的动态扩展，而 HotSpot 虚拟机的选择是不支持扩展，所以除非在创建线程申请内存时就因无法获得足够内存而出现<code>OutOfMemoryError</code>异常，否则在线程运行时是不会因为扩展而导致内存溢出的，只会因为栈容量无法容纳新的栈帧而导致<code>StackOverflowError</code>异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.jvm;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * VM Args： -Xss128k</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zzm</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JavaVMStackSOF</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> stackLength = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">JavaVMStackSOF oom = <span class="keyword">new</span> JavaVMStackSOF();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">oom.stackLeak();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">System.out.println(<span class="string">"stack length:"</span> + oom.stackLength);</span><br><span class="line"><span class="keyword">throw</span> e;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stackLeak</span><span class="params">()</span> </span>&#123;</span><br><span class="line">stackLength++;</span><br><span class="line">stackLeak();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"D:\Program Files\java\jdk-13.0.1\bin\java.exe"</span> -Xss128k <span class="string">"-javaagent:D:\Program Files\JetBrains\IntelliJ IDEA 2020.2\lib\idea_rt.jar=57372:D:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin"</span> -Dfile.encoding=UTF-8 -classpath D:\weiyun\Code\java\jvm\out\production\jvm xyz.onns.jvm.JavaVMStackSOF</span><br><span class="line">Error: Could not create the Java Virtual Machine.</span><br><span class="line">Error: A fatal exception has occurred. Program will <span class="built_in">exit</span>.</span><br><span class="line"></span><br><span class="line">The Java thread stack size specified is too small. Specify at least 180k</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 1</span><br></pre></td></tr></table></figure><p>修改参数为<code>-Xss180k</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"D:\Program Files\java\jdk-13.0.1\bin\java.exe"</span> -Xss180k <span class="string">"-javaagent:D:\Program Files\JetBrains\IntelliJ IDEA 2020.2\lib\idea_rt.jar=57575:D:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin"</span> -Dfile.encoding=UTF-8 -classpath D:\weiyun\Code\java\jvm\out\production\jvm xyz.onns.jvm.JavaVMStackSOF</span><br><span class="line">stack length:1854</span><br><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java.lang.StackOverflowError</span><br><span class="line">at xyz.onns.jvm.JavaVMStackSOF.stackLeak(JavaVMStackSOF.java:23)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 1</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.jvm;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zzm</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JavaVMStackSOF2</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> stackLength = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span> unused1, unused2, unused3, unused4, unused5,</span><br><span class="line">unused6, unused7, unused8, unused9, unused10,</span><br><span class="line">unused11, unused12, unused13, unused14, unused15,</span><br><span class="line">unused16, unused17, unused18, unused19, unused20,</span><br><span class="line">unused21, unused22, unused23, unused24, unused25,</span><br><span class="line">unused26, unused27, unused28, unused29, unused30,</span><br><span class="line">unused31, unused32, unused33, unused34, unused35,</span><br><span class="line">unused36, unused37, unused38, unused39, unused40,</span><br><span class="line">unused41, unused42, unused43, unused44, unused45,</span><br><span class="line">unused46, unused47, unused48, unused49, unused50,</span><br><span class="line">unused51, unused52, unused53, unused54, unused55,</span><br><span class="line">unused56, unused57, unused58, unused59, unused60,</span><br><span class="line">unused61, unused62, unused63, unused64, unused65,</span><br><span class="line">unused66, unused67, unused68, unused69, unused70,</span><br><span class="line">unused71, unused72, unused73, unused74, unused75,</span><br><span class="line">unused76, unused77, unused78, unused79, unused80,</span><br><span class="line">unused81, unused82, unused83, unused84, unused85,</span><br><span class="line">unused86, unused87, unused88, unused89, unused90,</span><br><span class="line">unused91, unused92, unused93, unused94, unused95,</span><br><span class="line">unused96, unused97, unused98, unused99, unused100;</span><br><span class="line">stackLength++;</span><br><span class="line">test();</span><br><span class="line">unused1 = unused2 = unused3 = unused4 = unused5 = unused6 = unused7 = unused8 = unused9 = unused10 = unused11 = unused12 = unused13 = unused14 = unused15 = unused16 = unused17 = unused18 = unused19 = unused20 = unused21 = unused22 = unused23 = unused24 = unused25 = unused26 = unused27 = unused28 = unused29 = unused30 = unused31 = unused32 = unused33 = unused34 = unused35 = unused36 = unused37 = unused38 = unused39 = unused40 = unused41 = unused42 = unused43 = unused44 = unused45 = unused46 = unused47 = unused48 = unused49 = unused50 = unused51 = unused52 = unused53 = unused54 = unused55 = unused56 = unused57 = unused58 = unused59 = unused60 = unused61 = unused62 = unused63 = unused64 = unused65 = unused66 = unused67 = unused68 = unused69 = unused70 = unused71 = unused72 = unused73 = unused74 = unused75 = unused76 = unused77 = unused78 = unused79 = unused80 = unused81 = unused82 = unused83 = unused84 = unused85 = unused86 = unused87 = unused88 = unused89 = unused90 = unused91 = unused92 = unused93 = unused94 = unused95 = unused96 = unused97 = unused98 = unused99 = unused100 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">test();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Error e) &#123;</span><br><span class="line">System.out.println(<span class="string">"stack length:"</span> + stackLength);</span><br><span class="line"><span class="keyword">throw</span> e;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"D:\Program Files\java\jdk-13.0.1\bin\java.exe"</span> -Xss180k <span class="string">"-javaagent:D:\Program Files\JetBrains\IntelliJ IDEA 2020.2\lib\idea_rt.jar=58065:D:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin"</span> -Dfile.encoding=UTF-8 -classpath D:\weiyun\Code\java\jvm\out\production\jvm xyz.onns.jvm.JavaVMStackSOF2</span><br><span class="line">stack length:87</span><br><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java.lang.StackOverflowError</span><br><span class="line">at xyz.onns.jvm.JavaVMStackSOF2.test(JavaVMStackSOF2.java:30)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 1</span><br></pre></td></tr></table></figure><p>无论是由于栈帧太大还是虚拟机栈容量太小，当新的栈帧内存无法分配的时候，<br>HotSpot 虚拟机抛出的都是<code>StackOverflowError</code>异常。</p><h3 id="方法区和运行时常量池溢出"><a class="header-anchor" href="#方法区和运行时常量池溢出">#</a>方法区和运行时常量池溢出</h3><p><code>String::intern()</code>是一个本地方法，它的作用是如果字符串常量池中已经包含一个等于此 String 对象的字符串，则返回代表池中这个字符串的 String 对象的引用;否则，会将此 String 对象包含的字符串添加到常量池中，并且返回此 String 对象的引用。</p><p>在 JDK 6 或更早之前的 HotSpot 虚拟机中，常量池都是分配在永久代中，我们可以通过<code>-XX:PermSize</code>和<code>-XX:MaxPermSize</code>限制永久代的大小，即可间接限制其中常量池的容量。</p><p>自 JDK 7 起，原本存放在永久代的字符串常量池被移至 Java 堆之中。</p><p>为了让使用者有预防实际应用里出现类似于“迫使虚拟机产生方法区的溢出异常”的破坏性的操作，HotSpot 还是提供了一些参数作为元空间的防御措施，主要包括：</p><ul><li><code>-XX:MaxMetaspaceSize</code>:设置元空间最大值，默认是-1，即不限制，或者说只受限于本地内存大小。</li><li><code>-XX:MetaspaceSize</code>:指定元空间的初始空间大小，以字节为单位，达到该值就会触发垃圾收集进行类型卸载，同时收集器会对该值进行调整:如果释放了大量的空间，就适当降低该值;如果释放了很少的空间，那么在不超过<code>-XX:MaxMetaspaceSize</code>(如果设置了的话)的情况下，适当提高该值。</li><li><code>-XX:MinMetaspaceFreeRatio</code>:作用是在垃圾收集之后控制最小的元空间剩余容量的百分比，可减少因为元空间不足导致的垃圾收集的频率。类似的还有<code>-XX:Max-MetaspaceFreeRatio</code>，用于控制最大的元空间剩余容量的百分比。</li></ul><h3 id="本机直接内存溢出"><a class="header-anchor" href="#本机直接内存溢出">#</a>本机直接内存溢出</h3><p><code>直接内存</code>(Direct Memory)的容量大小可通过<code>-XX:MaxDirectMemorySize</code>参数来指定，如果不去指定，则默认与 Java 堆最大值(由<code>-Xmx</code>指定)一致。</p><p>由直接内存导致的内存溢出，一个明显的特征是在<code>Heap Dump</code>文件中不会看见有什么明显的异常情况，如果读者发现内存溢出之后产生的 Dump 文件很小，而程序中又直接或间接使用了 DirectMemory(典型的间接使用就是 NIO)，那就可以考虑重点检查一下直接内存方面的原因了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.jvm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sun.misc.Unsafe;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * VM Args:-Xmx20M -XX:MaxDirectMemorySize=10M</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zzm</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DirectMemoryOOM</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> _1MB = <span class="number">1024</span> * <span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">Field unsafeField = Unsafe.class.getDeclaredFields()[0];</span><br><span class="line">unsafeField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">Unsafe unsafe = (Unsafe) unsafeField.get(<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">System.out.println(i++);</span><br><span class="line">unsafe.allocateMemory(_1MB);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很奇怪，在 IDEA 运行这段代码的时候我不会有异常抛出…我的 Java 版本是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ java --version</span><br><span class="line">java 13.0.2 2020-01-14</span><br><span class="line">Java(TM) SE Runtime Environment (build 13.0.2+8)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 13.0.2+8, mixed mode, sharing)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jvm </tag>
            
            <tag> jvm note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入理解Java虚拟机（二）</title>
      <link href="/blog/2020/08/23/jvm-note-2/"/>
      <url>/blog/2020/08/23/jvm-note-2/</url>
      
        <content type="html"><![CDATA[<p>深入理解 Java 虚拟机：JVM 高级特性与最佳实践（第 3 版）</p><h1 id="自动内存管理"><a class="header-anchor" href="#自动内存管理">#</a>自动内存管理</h1><h2 id="java-内存区域与内存溢出异常"><a class="header-anchor" href="#java-内存区域与内存溢出异常">#</a>Java 内存区域与内存溢出异常</h2><center><p><img src="//onns.xyz/blog/image/20200822-1.jpg" alt="Java虚拟机运行时数据区"></p><p>Java 虚拟机运行时数据区</p></center><a id="more"></a><h3 id="java-堆"><a class="header-anchor" href="#java-堆">#</a>Java 堆</h3><p>对于 Java 应用程序来说，<code>Java堆</code>(Java Heap)是虚拟机所管理的内存中最大的一块。</p><p>Java 堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，Java 里“几乎”所有的对象实例都在这里分配内存。</p><p>如果从分配内存的角度看，所有线程共享的 Java 堆中可以划分出多个<code>线程私有</code>的<code>分配缓冲区</code>(Thread Local Allocation Buffer，TLAB)，以提升对象分配时的效率。</p><p>Java 堆可以处于物理上不连续的内存空间中，但在逻辑上它应该被视为连续的，这点就像我们用磁盘空间去存储文件一样，并不要求每个文件都连续存放。但对于大对象(典型的如数组对象)，多数虚拟机实现出于实现简单、存储高效的考虑，很可能会要求连续的内存空间。</p><p>Java 堆既可以被实现成固定大小的，也可以是可扩展的，不过当前主流的 Java 虚拟机都是按照可扩展来实现的(通过参数-Xmx 和-Xms 设定)。如果在 Java 堆中没有内存完成实例分配，并且堆也无法再扩展时，Java 虚拟机将会抛出 OutOfMemoryError 异常。</p><h3 id="方法区"><a class="header-anchor" href="#方法区">#</a>方法区</h3><p><code>方法区</code>(Method Area)与 Java 堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类型信息、常量、静态变量、即时编译器编译后的代码缓存等数据。虽然《Java 虚拟机规范》中把方法区描述为堆的一个逻辑部分，但是它却有一个别名叫作“<code>非堆</code>”(Non-Heap)，目的是与 Java 堆区分开来。</p><p>“<code>永久代</code>”(Permanent Generation)：考虑到 HotSpot 未来的发展，在 JDK 6 的时候 HotSpot 开发团队就有放弃永久代，逐步改为采用<code>本地内存</code>(Native Memory)来实现方法区的计划了，到了 JDK 7 的 HotSpot，已经把原本放在永久代的字符串常量池、静态变量等移出。而到了 JDK 8，终于完全废弃了永久代的概念，改用与 JRockit、J9 一样在本地内存中实现的<code>元空间</code>(Meta-space)来代替，把 JDK 7 中永久代还剩余的内容(主要是类型信息)全部移到元空间中。</p><p>Java 虚拟机规范》对方法区的约束是非常宽松的，除了和 Java 堆一样不需要连续的内存和可以选择固定大小或者可扩展外，甚至还可以选择不实现垃圾收集。这区域的内存回收目标主要是<code>针对常量池的回收</code>和<code>对类型的卸载</code>，一般来说这个区域的回收效果比较难令人满意，尤其是类型的卸载，条件相当苛刻，但是这部分区域的回收有时又确实是必要的。</p><p>根据《Java 虚拟机规范》的规定，如果方法区无法满足新的内存分配需求时，将抛出 OutOfMemoryError 异常。</p><h3 id="运行时常量池"><a class="header-anchor" href="#运行时常量池">#</a>运行时常量池</h3><p><code>运行时常量池</code>(Runtime Constant Pool)是方法区的一部分。Class 文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池表(Constant Pool Table)，用于存放编译期生成的各种字面量与符号引用，这部分内容将在类加载后存放到方法区的运行时常量池中。</p><p>一般来说，除了保存 Class 文件中描述的符号引用外，还会把由符号引用翻译出来的直接引用也存储在运行时常量池中。</p><p>运行时常量池相对于 Class 文件常量池的另外一个重要特征是具备动态性，Java 语言并不要求常量一定只有编译期才能产生，也就是说，并非预置入 Class 文件中常量池的内容才能进入方法区运行时常量池，运行期间也可以将新的常量放入池中，这种特性被开发人员利用得比较多的便是 String 类的 intern()方法。</p><p>运行时常量池是方法区的一部分，受到方法区内存的限制，当常量池无法再申请到内存时会抛出 OutOfMemoryError 异常。</p><h3 id="直接内存"><a class="header-anchor" href="#直接内存">#</a>直接内存</h3><p>在 JDK 1.4 中新加入了 NIO(New Input/Output)类，引入了一种基于通道(Channel)与缓冲区(Buffer)的 I/O 方式，它可以使用 Native 函数库直接分配堆外内存，然后通过一个存储在 Java 堆里面的 DirectByteBuffer 对象作为这块内存的引用进行操作。这样能在一些场景中显著提高性能，因为避免了在 Java 堆和 Native 堆中来回复制数据。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><h3 id="对象的创建"><a class="header-anchor" href="#对象的创建">#</a>对象的创建</h3><p>当 Java 虚拟机遇到一条字节码 new 指令时，首先将去检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有，那必须先执行相应的类加载过程。</p><p>在类加载检查通过后，接下来虚拟机将为新生对象分配内存。对象所需内存的大小在类加载完成后便可完全确定，为对象分配空间的任务实际上便等同于把一块确定大小的内存块从 Java 堆中划分出来。</p><p>假设 Java 堆中内存是绝对规整的，所有被使用过的内存都被放在一边，空闲的内存被放在另一边，中间放着一个指针作为分界点的指示器，那所分配内存就仅仅是把那个指针向空闲空间方向挪动一段与对象大小相等的距离，这种分配方式称为“<code>指针碰撞</code>”(Bump The Pointer)。</p><p>但如果 Java 堆中的内存并不是规整的，已被使用的内存和空闲的内存相互交错在一起，那就没有办法简单地进行指针碰撞了，虚拟机就必须维护一个列表，记录上哪些内存块是可用的，在分配的时候从列表中找到一块足够大的空间划分给对象实例，并更新列表上的记录，这种分配方式称为“<code>空闲列表</code>”(Free List)。</p><p>选择哪种分配方式由 Java 堆是否规整决定，而 Java 堆是否规整又由所采用的垃圾收集器是否带有空间压缩整理(Compact)的能力决定。因此，当使用 Serial、ParNew 等带压缩整理过程的收集器时，系统采用的分配算法是指针碰撞，既简单又高效；而当使用 CMS 这种基于清除(Sweep)算法的收集器时，理论上就只能采用较为复杂的空闲列表来分配内存。</p><p>一个需要考虑的问题：对象创建在虚拟机中是非常频繁的行为，即使仅仅修改一个指针所指向的位置，在并发情况下也并不是线程安全的，可能出现正在给对象 A 分配内存，指针还没来得及修改，对象 B 又同时使用了原来的指针来分配内存的情况。</p><p>两种解决方案：一种是对分配内存空间的动作进行同步处理——实际上虚拟机是采用 CAS 配上失败重试的方式保证更新操作的原子性；另外一种是把内存分配的动作按照线程划分在不同的空间之中进行，即每个线程在 Java 堆中预先分配一小块内存，称为<code>本地线程分配缓冲</code>(Thread Local Allocation Buffer，TLAB)，哪个线程要分配内存，就在哪个线程的本地缓冲区中分配，只有本地缓冲区用完了，分配新的缓存区时才需要同步锁定。虚拟机是否使用 TLAB，可以通过<code>-XX:+/-UseTLAB</code>参数来设定。</p><p>内存分配完成之后，虚拟机必须将分配到的内存空间(但不包括对象头)都初始化为零值，如果使用了 TLAB 的话，这一项工作也可以提前至 TLAB 分配时顺便进行。这步操作保证了对象的实例字段在 Java 代码中可以不赋初始值就直接使用，使程序能访问到这些字段的数据类型所对应的零值。</p><p>接下来，Java 虚拟机还要对对象进行必要的设置，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码(实际上对象的哈希码会延后到真正调用<code>Object::hashCode()</code>方法时才计算)、对象的 GC 分代年龄等信息。这些信息存放在对象的<code>对象头</code>(Object Header)之中。根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。</p><p>在上面工作都完成之后，从虚拟机的视角来看，一个新的对象已经产生了。但是从 Java 程序的视角看来，对象创建才刚刚开始——构造函数，即 Class 文件中的<code>&lt;init&gt;()</code>方法还没有执行，所有的字段都为默认的零值，对象需要的其他资源和状态信息也还没有按照预定的意图构造好。一般来说(由字节码流中 new 指令后面是否跟随<code>invokespecial指令</code>所决定，Java 编译器会在遇到 new 关键字的地方同时生成这两条字节码指令，但如果直接通过其他方式产生的则不一定如此)，new 指令之后会接着执行<code>&lt;init&gt;()</code>方法，按照程序员的意愿对对象进行初始化，这样一个真正可用的对象才算完全被构造出来。</p><h3 id="对象的内存布局"><a class="header-anchor" href="#对象的内存布局">#</a>对象的内存布局</h3><p>在 HotSpot 虚拟机里，对象在堆内存中的存储布局可以划分为三个部分:<code>对象头</code>(Header)、<code>实例数据</code>(Instance Data)和<code>对齐填充</code>(Padding)。</p><p>HotSpot 虚拟机对象的对象头部分包括两类信息。第一类是用于存储对象自身的运行时数据，如哈希码(HashCode)、GC 分代年龄、锁状态标志、线程持有的锁、偏向线程 ID、偏向时间戳等，这部分数据的长度在 32 位和 64 位的虚拟机(未开启压缩指针)中分别为 32 个比特和 64 个比特，官方称它为“<code>Mark Word</code>”。</p><p>考虑到虚拟机的空间效率，<code>Mark Word</code>被设计成一个有着动态定义的数据结构，以便在极小的空间内存储尽量多的数据，根据对象的状态复用自己的存储空间。例如在 32 位的 HotSpot 虚拟机中，如对象未被同步锁锁定的状态下，<code>Mark Word</code>的 32 个比特存储空间中的 25 个比特用于存储对象哈希码，4 个比特用于存储对象分代年龄，2 个比特用于存储锁标志位，1 个比特固定为 0，在其他状态(轻量级锁定、重量级锁定、GC 标记、可偏向)下对象的存储内容如下表所示。</p><center><table><thead><tr><th style="text-align:center">存储内容</th><th style="text-align:center">标志位</th><th style="text-align:center">状态</th></tr></thead><tbody><tr><td style="text-align:center">对象哈希码、对象分代年龄</td><td style="text-align:center">01</td><td style="text-align:center">未锁定</td></tr><tr><td style="text-align:center">指向锁记录的指针</td><td style="text-align:center">00</td><td style="text-align:center">轻量级锁定</td></tr><tr><td style="text-align:center">指向重量级锁的指针</td><td style="text-align:center">10</td><td style="text-align:center">膨胀（重量级锁定）</td></tr><tr><td style="text-align:center">空，不需要记录信息</td><td style="text-align:center">11</td><td style="text-align:center">GC 标记</td></tr><tr><td style="text-align:center">偏向线程 ID、偏向时间戳、对象分代年龄</td><td style="text-align:center">01</td><td style="text-align:center">可偏向</td></tr></tbody></table></center><p>对象头的另外一部分是类型指针，即对象指向它的类型元数据的指针，Java 虚拟机通过这个指针来确定该对象是哪个类的实例。并不是所有的虚拟机实现都必须在对象数据上保留类型指针，换句话说，查找对象的元数据信息并不一定要经过对象本身。</p><p>如果对象是一个 Java 数组，那在对象头中还必须有一块用于记录数组长度的数据，因为虚拟机可以通过普通 Java 对象的元数据信息确定 Java 对象的大小，但是如果数组的长度是不确定的，将无法通过元数据中的信息推断出数组的大小。</p><p>我们在程序代码里面所定义的各种类型的字段内容，无论是从父类继承下来的，还是在子类中定义的字段都必须记录起来。这部分的存储顺序会受到虚拟机分配策略参数(<code>-XX:FieldsAllocationStyle</code>参数)和字段在 Java 源码中定义顺序的影响。HotSpot 虚拟机默认的分配顺序为 longs/doubles、ints、shorts/chars、bytes/booleans、oops(Ordinary Object Pointers，OOPs)，从以上默认的分配策略中可以看到，相同宽度的字段总是被分配到一起存放，在满足这个前提条件的情况下，在父类中定义的变量会出现在子类之前。如果 HotSpot 虚拟机的<code>+XX:CompactFields</code>参数值为 true(默认就为 true)，那子类之中较窄的变量也允许插入父类变量的空隙之中，以节省出一点点空间。</p><p>对象的第三部分是对齐填充，这并不是必然存在的，也没有特别的含义，它仅仅起着占位符的作用。由于 HotSpot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是任何对象的大小都必须是 8 字节的整数倍。对象头部分已经被精心设计成正好是 8 字节的倍数(1 倍或者 2 倍)，因此，如果对象实例数据部分没有对齐的话，就需要通过对齐填充来补全。</p><h3 id="对象的访问定位"><a class="header-anchor" href="#对象的访问定位">#</a>对象的访问定位</h3><p>Java 程序会通过栈上的 reference 数据来操作堆上的具体对象。主流的访问方式主要有使用句柄和直接指针两种：</p><ol><li>如果使用句柄访问的话，Java 堆中将可能会划分出一块内存来作为句柄池，reference 中存储的就是对象的句柄地址，而句柄中包含了对象实例数据与类型数据各自具体的地址信息。</li></ol><center><p><img src="//onns.xyz/blog/image/20200823-1.jpg" alt="通过句柄访问对象"></p><p>通过句柄访问对象</p></center><ol start="2"><li>如果使用直接指针访问的话，Java 堆中对象的内存布局就必须考虑如何放置访问类型数据的相关信息，reference 中存储的直接就是对象地址，如果只是访问对象本身的话，就不需要多一次间接访问的开销，</li></ol><center><p><img src="//onns.xyz/blog/image/20200823-2.jpg" alt="通过直接指针访问对象"></p><p>通过直接指针访问对象</p></center><p>这两种对象访问方式各有优势，使用句柄来访问的最大好处就是 reference 中存储的是稳定句柄地址，在对象被移动(垃圾收集时移动对象是非常普遍的行为)时只会改变句柄中的实例数据指针，而 reference 本身不需要被修改。</p><p>使用直接指针来访问最大的好处就是速度更快，它节省了一次指针定位的时间开销，由于对象访问在 Java 中非常频繁，因此这类开销积少成多也是一项极为可观的执行成本，就本书讨论的主要虚拟机 HotSpot 而言，它主要使用第二种方式进行对象访问，但从整个软件开发的范围来看，在各种语言、框架中使用句柄来访问的情况也十分常见。</p><h3 id="java-堆溢出"><a class="header-anchor" href="#java-堆溢出">#</a>Java 堆溢出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.jvm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OOMTest</span> </span>&#123;</span><br><span class="line">    Byte[] bytes = <span class="keyword">new</span> Byte[<span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;OOMTest&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                list.add(<span class="keyword">new</span> OOMTest());</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">"count"</span> + count);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/bin/java -Xms1m -Xmx8m -XX:+HeapDumpOnOutOfMemoryError -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=58766:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/onns/Documents/code/java/study/out/production/study xyz.onns.jvm.OOMTest</span><br><span class="line">java.lang.OutOfMemoryError: Java heap space</span><br><span class="line">Dumping heap to java_pid86774.hprof ...</span><br><span class="line">Heap dump file created [11811120 bytes <span class="keyword">in</span> 0.171 secs]</span><br><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"Monitor Ctrl-Break"</span> Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java.lang.OutOfMemoryError: Java heap space</span><br><span class="line">at java.base/java.lang.invoke.MethodHandles<span class="variable">$Lookup</span>.resolveOrFail(MethodHandles.java:2046)</span><br><span class="line">at java.base/java.lang.invoke.MethodHandles<span class="variable">$Lookup</span>.findVarHandle(MethodHandles.java:1526)</span><br><span class="line">at java.base/java.util.concurrent.ConcurrentSkipListMap.&lt;clinit&gt;(ConcurrentSkipListMap.java:3405)</span><br><span class="line">at java.base/java.util.concurrent.ConcurrentSkipListSet.&lt;init&gt;(ConcurrentSkipListSet.java:113)</span><br><span class="line">at java.base/java.net.InetAddress.&lt;clinit&gt;(InetAddress.java:773)</span><br><span class="line">at java.base/java.net.InetSocketAddress.&lt;init&gt;(InetSocketAddress.java:220)</span><br><span class="line">at java.base/java.net.Socket.&lt;init&gt;(Socket.java:249)</span><br><span class="line">at com.intellij.rt.execution.application.AppMainV2<span class="variable">$1</span>.run(AppMainV2.java:56)</span><br><span class="line">java.lang.OutOfMemoryError: Java heap space</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 1</span><br></pre></td></tr></table></figure><p>IDE 是<code>IntelliJ IDEA</code>。</p><p>相关参数：</p><center><p><img src="//onns.xyz/blog/image/20200823-3.jpg" alt="IDEA参数"></p><p>IDEA 参数</p></center><p><code>-Xms1m</code>：JVM 初始分配的内存由<code>-Xms</code>指定，默认是物理内存的<code>1/64</code>。<br><code>-Xmx8m</code>：JVM 最大分配的内存由<code>-Xmx</code>指定，默认是物理内存的<code>1/4</code>。<br><code>-XX:+HeapDumpOnOutOfMemoryError</code>：让虚拟机在出现内存溢出异常的时候 Dump 出当前的内存堆转储快照以便进行事后分析。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>显然，本机直接内存的分配不会受到 Java 堆大小的限制，但是，既然是内存，则肯定还是会受到本机总内存(包括物理内存、SWAP 分区或者分页文件)大小以及处理器寻址空间的限制，一般服务器管理员配置虚拟机参数时，会根据实际内存去设置<code>-Xmx</code>等参数信息，但经常忽略掉直接内存，使得各个内存区域总和大于物理内存限制(包括物理的和操作系统级的限制)，从而导致动态扩展时出现 OutOfMemoryError 异常。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jvm </tag>
            
            <tag> jvm note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装Nodejs</title>
      <link href="/blog/2020/08/22/nodejs-in-linux/"/>
      <url>/blog/2020/08/22/nodejs-in-linux/</url>
      
        <content type="html"><![CDATA[<p><code>MacOS</code>新版本连接 SSH 后会报如下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-bash: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory</span><br></pre></td></tr></table></figure><p>虽然每次百度都百度得到，但是已经第二次遇见了，后面无数次配置服务器可能还会遇见，记录下叭。</p><a id="more"></a><h2 id="解决-“-bash-warning”"><a class="header-anchor" href="#解决-“-bash-warning”">#</a>解决 “-bash: warning”</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/locale.conf</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">$ vi /etc/locale.conf</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LC_ALL=en_US.UTF-8</span><br><span class="line">LC_CTYPE=en_US.UTF-8</span><br><span class="line">LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure><p>收工。</p><h2 id="安装-nodejs"><a class="header-anchor" href="#安装-nodejs">#</a>安装 Nodejs</h2><ol><li>查看系统架构，最后一行显示是<code>x86-64</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ hostnamectl</span><br><span class="line">   Static hostname: iZbp1hm7xn587qhxan003bZ</span><br><span class="line">         Icon name: computer-vm</span><br><span class="line">           Chassis: vm</span><br><span class="line">        Machine ID: 20190711105006363114529432776998</span><br><span class="line">           Boot ID: c753a670761d4b6e9c3557a03056de8e</span><br><span class="line">    Virtualization: kvm</span><br><span class="line">  Operating System: CentOS Linux 7 (Core)</span><br><span class="line">       CPE OS Name: cpe:/o:centos:centos:7</span><br><span class="line">            Kernel: Linux 3.10.0-957.21.3.el7.x86_64</span><br><span class="line">      Architecture: x86-64</span><br></pre></td></tr></table></figure></li><li>打开官网：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></li><li>选择延长支持版本 LTS，选择版本<code>Linux Binaries (x64)</code>，复制下载地址：<a href="https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xz" target="_blank" rel="noopener">https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xz</a></li><li>回到服务器，下载代码<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xz</span><br></pre></td></tr></table></figure></li><li>解压<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xz -d node-v12.18.3-linux-x64.tar.xz</span><br><span class="line">tar -xvf node-v12.18.3-linux-x64.tar</span><br></pre></td></tr></table></figure></li><li>软链接到执行目录中<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">node-v12.18.3-linux-x64  node-v12.18.3-linux-x64.tar</span><br><span class="line">$ ln -s ~/node-v12.18.3-linux-x64/bin/node /usr/bin/node</span><br><span class="line">$ ln -s ~/node-v12.18.3-linux-x64/bin/npm /usr/bin/npm</span><br><span class="line">$ ln -s ~/node-v12.18.3-linux-x64/bin/npx /usr/bin/npx</span><br></pre></td></tr></table></figure></li></ol><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.csdn.net/maxmao1024/article/details/84401372" target="_blank" rel="noopener">-bash: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory</a></li><li><a href="https://www.jianshu.com/p/657d58a149d0" target="_blank" rel="noopener">CentOS7 安装 NodeJS</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> centos </tag>
            
            <tag> mac </tag>
            
            <tag> ssh </tag>
            
            <tag> nodejs </tag>
            
            <tag> xz </tag>
            
            <tag> hostnamectl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入理解Java虚拟机（一）</title>
      <link href="/blog/2020/08/22/jvm-note-1/"/>
      <url>/blog/2020/08/22/jvm-note-1/</url>
      
        <content type="html"><![CDATA[<p>深入理解 Java 虚拟机：JVM 高级特性与最佳实践（第 3 版）</p><h1 id="自动内存管理"><a class="header-anchor" href="#自动内存管理">#</a>自动内存管理</h1><h2 id="java内存区域与内存溢出异常"><a class="header-anchor" href="#java内存区域与内存溢出异常">#</a>Java内存区域与内存溢出异常</h2><center><p><img src="//onns.xyz/blog/image/20200822-1.jpg" alt="Java虚拟机运行时数据区"></p><p>Java 虚拟机运行时数据区</p></center><a id="more"></a><h3 id="程序计数器"><a class="header-anchor" href="#程序计数器">#</a>程序计数器</h3><p><code>程序计数器</code>(Program Counter Register)是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。</p><p>字节码解释器工作时就是通过改变这个<code>计数器</code>的值来选取下一条需要执行的字节码指令，它是程序控制流的指示器，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。</p><p>为了线程切换后能恢复到正确的执行位置，每条线程都需要有一个独立的程序计数器，各条线程之间计数器互不影响，独立存储，我们称这类内存区域为“线程私有”的内存。</p><p>如果线程正在执行的是一个 Java 方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是本地(Native)方法，这个计数器值则应为空(Undefined)。此内存区域是唯一一个在《Java 虚拟机规范》中没有规定任何<code>OutOfMemoryError</code>情况的区域。</p><h3 id="java-虚拟机栈"><a class="header-anchor" href="#java-虚拟机栈">#</a>Java 虚拟机栈</h3><p><code>Java虚拟机栈</code>(Java Virtual Machine Stack)也是线程私有的，它的生命周期与线程相同。</p><p>虚拟机栈描述的是 Java 方法执行的线程内存模型:每个方法被执行的时候，Java 虚拟机都会同步创建一个<code>栈帧</code>(Stack Frame)用于存储局部变量表、操作数栈、动态连接、方法出口等信息。每一个方法被调用直至执行完毕的过程，就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程。</p><center><table><thead><tr><th style="text-align:center">栈帧</th></tr></thead><tbody><tr><td style="text-align:center">局部变量表</td></tr><tr><td style="text-align:center">操作数栈</td></tr><tr><td style="text-align:center">动态连接</td></tr><tr><td style="text-align:center">方法出口</td></tr></tbody></table></center><p>局部变量表存放了编译期可知的各种 Java 虚拟机基本数据类型(boolean、byte、char、short、int、float、long、double)、对象引用(reference 类型，它并不等同于对象本身，可能是一个指向对象起始地址的引用指针，也可能是指向一个代表对象的句柄或者其他与此对象相关的位置)和 returnAddress 类型(指向了一条字节码指令的地址)。</p><p>这些数据类型在局部变量表中的存储空间以局部<code>变量槽</code>(Slot)来表示，其中 64 位长度的 long 和 double 类型的数据会占用两个变量槽，其余的数据类型只占用一个。</p><p>局部变量表所需的内存空间<code>在编译期间</code>完成分配，当进入一个方法时，这个方法需要在栈帧中分配多大的局部变量空间是<code>完全确定的</code>，在方法运行期间不会改变局部变量表的大小。</p><p>如果线程请求的栈深度大于虚拟机所允许的深度，将抛出<code>StackOverflowError</code>异常；如果 Java 虚拟机栈容量可以动态扩展<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，当栈扩展时无法申请到足够的内存会抛出<code>OutOfMemoryError</code>异常。</p><h3 id="本地方法栈"><a class="header-anchor" href="#本地方法栈">#</a>本地方法栈</h3><p><code>本地方法栈</code>(Native Method Stacks)与虚拟机栈所发挥的作用是非常相似的，其区别只是虚拟机栈为虚拟机执行Java方法(也就是字节码)服务，而本地方法栈则是为虚拟机使用到的本地(Native)方法服务。</p><p>本地方法栈会在栈深度溢出或者栈扩展失败时分别抛 StackOverflowError 和 OutOfMemoryError 异常。</p><ul><li><a href="//onns.xyz/blog/files/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%9AJVM%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89.pdf">传送门</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>HotSpot 虚拟机的栈容量是不可以动态扩展的，所以在 HotSpot 虚拟机上是不会由于虚拟机栈无法扩展而导致 OutOfMemoryError 异常——只要线程申请栈空间成功了就不会有 OOM，但是如果申请时就失败，仍然是会出现 OOM 异常的。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jvm </tag>
            
            <tag> jvm note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ip访问记录查询top3</title>
      <link href="/blog/2020/08/21/ip-records-top-3/"/>
      <url>/blog/2020/08/21/ip-records-top-3/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>昨晚 4399 笔试：</p><blockquote><p>有一个文件 ip.txt，每行一条 ip 记录，共若干行，如何统计出现次数最多的前 3 个 ip 及其次数？</p></blockquote><p>被问懵了，记录下，学习之。</p><a id="more"></a><h2 id="生成测试数据"><a class="header-anchor" href="#生成测试数据">#</a>生成测试数据</h2><p>首先用 Python 来生成一下测试数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000</span>):</span><br><span class="line">n = <span class="number">4</span></span><br><span class="line"><span class="keyword">if</span> i % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">n = <span class="number">20</span></span><br><span class="line">a = random.randint(<span class="number">1</span>, <span class="number">255</span>)</span><br><span class="line">b = random.randint(<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">c = random.randint(<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">d = random.randint(<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(random.randint(<span class="number">1</span>, n)):</span><br><span class="line">print(str(a)+<span class="string">"."</span>+str(b)+<span class="string">"."</span>+str(c)+<span class="string">"."</span>+str(d))</span><br></pre></td></tr></table></figure><p>然后把数据保存进<code>ip.txt</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python generate_ip.py &gt;&gt; ip.txt</span><br></pre></td></tr></table></figure><h2 id="查看基本信息"><a class="header-anchor" href="#查看基本信息">#</a>查看基本信息</h2><p>获取前五行的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ head ip.txt -n 5</span><br><span class="line">34.150.120.118</span><br><span class="line">34.150.120.118</span><br><span class="line">34.150.120.118</span><br><span class="line">34.150.120.118</span><br><span class="line">34.150.120.118</span><br></pre></td></tr></table></figure><p>获取最后五行的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ tail ip.txt -n 5</span><br><span class="line">145.250.127.90</span><br><span class="line">145.250.127.90</span><br><span class="line">145.250.127.90</span><br><span class="line">47.14.104.50</span><br><span class="line">10.100.11.223</span><br></pre></td></tr></table></figure><p>一共有多少行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wc -l ip.txt</span><br><span class="line">25282 ip.txt</span><br></pre></td></tr></table></figure><h2 id="ip-记录-top3"><a class="header-anchor" href="#ip-记录-top3">#</a>ip 记录 top3</h2><h3 id="排序"><a class="header-anchor" href="#排序">#</a>排序</h3><p>统计方法<code>uniq</code>只能对连续的相同行生效，一般使用之前都需要先排序，用<code>sort</code>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort ip.txt</span><br></pre></td></tr></table></figure><p>会全都打印到标准输出流里，看看最后 10 行就好啦：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ sort ip.txt | tail -n 10</span><br><span class="line">99.91.60.161</span><br><span class="line">99.91.60.161</span><br><span class="line">99.91.60.161</span><br><span class="line">99.91.60.161</span><br><span class="line">99.93.105.24</span><br><span class="line">99.96.209.20</span><br><span class="line">99.96.209.20</span><br><span class="line">99.96.209.20</span><br><span class="line">99.96.209.20</span><br><span class="line">99.98.96.57</span><br></pre></td></tr></table></figure><p>排序没问题。</p><h3 id="统计个数"><a class="header-anchor" href="#统计个数">#</a>统计个数</h3><p>把排序的输出作为<code>uniq</code>的输入，<code>uniq</code>的用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ uniq --<span class="built_in">help</span></span><br><span class="line">Usage: uniq [OPTION]... [INPUT [OUTPUT]]</span><br><span class="line">Filter adjacent matching lines from INPUT (or standard input),</span><br><span class="line">writing to OUTPUT (or standard output).</span><br><span class="line"></span><br><span class="line">With no options, matching lines are merged to the first occurrence.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">  -c, --count           prefix lines by the number of occurrences</span><br><span class="line">  -d, --repeated        only <span class="built_in">print</span> duplicate lines, one <span class="keyword">for</span> each group</span><br><span class="line">  -D, --all-repeated[=METHOD]  <span class="built_in">print</span> all duplicate lines</span><br><span class="line">                          groups can be delimited with an empty line</span><br><span class="line">                          METHOD=&#123;none(default),prepend,separate&#125;</span><br><span class="line">  -f, --skip-fields=N   avoid comparing the first N fields</span><br><span class="line">      --group[=METHOD]  show all items, separating groups with an empty line</span><br><span class="line">                          METHOD=&#123;separate(default),prepend,append,both&#125;</span><br><span class="line">  -i, --ignore-case     ignore differences <span class="keyword">in</span> <span class="keyword">case</span> when comparing</span><br><span class="line">  -s, --skip-chars=N    avoid comparing the first N characters</span><br><span class="line">  -u, --unique          only <span class="built_in">print</span> unique lines</span><br><span class="line">  -z, --zero-terminated  end lines with 0 byte, not newline</span><br><span class="line">  -w, --check-chars=N   compare no more than N characters <span class="keyword">in</span> lines</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">A field is a run of blanks (usually spaces and/or TABs), <span class="keyword">then</span> non-blank</span><br><span class="line">characters.  Fields are skipped before chars.</span><br><span class="line"></span><br><span class="line">Note: <span class="string">'uniq'</span> does not detect repeated lines unless they are adjacent.</span><br><span class="line">You may want to sort the input first, or use <span class="string">'sort -u'</span> without <span class="string">'uniq'</span>.</span><br><span class="line">Also, comparisons honor the rules specified by <span class="string">'LC_COLLATE'</span>.</span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">For complete documentation, run: info coreutils <span class="string">'uniq invocation'</span></span><br></pre></td></tr></table></figure><p>我们用<code>-c</code>参数即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort ip.txt | uniq -c</span><br></pre></td></tr></table></figure><p>然后我们就得到了每个 ip 及其出现次数。</p><h3 id="再排序"><a class="header-anchor" href="#再排序">#</a>再排序</h3><p>这次需要按照次数排序而不是字典序排序了，先看<code>sort</code>的参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">$ sort --<span class="built_in">help</span></span><br><span class="line">Usage: sort [OPTION]... [FILE]...</span><br><span class="line">  or:  sort [OPTION]... --files0-from=F</span><br><span class="line">Write sorted concatenation of all FILE(s) to standard output.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">Ordering options:</span><br><span class="line"></span><br><span class="line">  -b, --ignore-leading-blanks  ignore leading blanks</span><br><span class="line">  -d, --dictionary-order      consider only blanks and alphanumeric characters</span><br><span class="line">  -f, --ignore-case           fold lower <span class="keyword">case</span> to upper <span class="keyword">case</span> characters</span><br><span class="line">  -g, --general-numeric-sort  compare according to general numerical value</span><br><span class="line">  -i, --ignore-nonprinting    consider only printable characters</span><br><span class="line">  -M, --month-sort            compare (unknown) &lt; <span class="string">'JAN'</span> &lt; ... &lt; <span class="string">'DEC'</span></span><br><span class="line">  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)</span><br><span class="line">  -n, --numeric-sort          compare according to string numerical value</span><br><span class="line">  -R, --random-sort           sort by random <span class="built_in">hash</span> of keys</span><br><span class="line">      --random-source=FILE    get random bytes from FILE</span><br><span class="line">  -r, --reverse               reverse the result of comparisons</span><br><span class="line">      --sort=WORD             sort according to WORD:</span><br><span class="line">                                general-numeric -g, human-numeric -h, month -M,</span><br><span class="line">                                numeric -n, random -R, version -V</span><br><span class="line">  -V, --version-sort          natural sort of (version) numbers within text</span><br><span class="line"></span><br><span class="line">Other options:</span><br><span class="line"></span><br><span class="line">      --batch-size=NMERGE   merge at most NMERGE inputs at once;</span><br><span class="line">                            <span class="keyword">for</span> more use temp files</span><br><span class="line">  -c, --check, --check=diagnose-first  check <span class="keyword">for</span> sorted input; <span class="keyword">do</span> not sort</span><br><span class="line">  -C, --check=quiet, --check=silent  like -c, but <span class="keyword">do</span> not report first bad line</span><br><span class="line">      --compress-program=PROG  compress temporaries with PROG;</span><br><span class="line">                              decompress them with PROG -d</span><br><span class="line">      --debug               annotate the part of the line used to sort,</span><br><span class="line">                              and warn about questionable usage to stderr</span><br><span class="line">      --files0-from=F       <span class="built_in">read</span> input from the files specified by</span><br><span class="line">                            NUL-terminated names <span class="keyword">in</span> file F;</span><br><span class="line">                            If F is - <span class="keyword">then</span> <span class="built_in">read</span> names from standard input</span><br><span class="line">  -k, --key=KEYDEF          sort via a key; KEYDEF gives location and <span class="built_in">type</span></span><br><span class="line">  -m, --merge               merge already sorted files; <span class="keyword">do</span> not sort</span><br><span class="line">  -o, --output=FILE         write result to FILE instead of standard output</span><br><span class="line">  -s, --stable              stabilize sort by disabling last-resort comparison</span><br><span class="line">  -S, --buffer-size=SIZE    use SIZE <span class="keyword">for</span> main memory buffer</span><br><span class="line">  -t, --field-separator=SEP  use SEP instead of non-blank to blank transition</span><br><span class="line">  -T, --temporary-directory=DIR  use DIR <span class="keyword">for</span> temporaries, not <span class="variable">$TMPDIR</span> or /tmp;</span><br><span class="line">                              multiple options specify multiple directories</span><br><span class="line">      --parallel=N          change the number of sorts run concurrently to N</span><br><span class="line">  -u, --unique              with -c, check <span class="keyword">for</span> strict ordering;</span><br><span class="line">                              without -c, output only the first of an equal run</span><br><span class="line">  -z, --zero-terminated     end lines with 0 byte, not newline</span><br><span class="line">      --<span class="built_in">help</span>     display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line">      --version  output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">KEYDEF is F[.C][OPTS][,F[.C][OPTS]] <span class="keyword">for</span> start and stop position, <span class="built_in">where</span> F is a</span><br><span class="line">field number and C a character position <span class="keyword">in</span> the field; both are origin 1, and</span><br><span class="line">the stop position defaults to the line<span class="string">'s end.  If neither -t nor -b is in</span></span><br><span class="line"><span class="string">effect, characters in a field are counted from the beginning of the preceding</span></span><br><span class="line"><span class="string">whitespace.  OPTS is one or more single-letter ordering options [bdfgiMhnRrV],</span></span><br><span class="line"><span class="string">which override global ordering options for that key.  If no key is given, use</span></span><br><span class="line"><span class="string">the entire line as the key.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SIZE may be followed by the following multiplicative suffixes:</span></span><br><span class="line"><span class="string">% 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">With no FILE, or when FILE is -, read standard input.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">*** WARNING ***</span></span><br><span class="line"><span class="string">The locale specified by the environment affects sort order.</span></span><br><span class="line"><span class="string">Set LC_ALL=C to get the traditional sort order that uses</span></span><br><span class="line"><span class="string">native byte values.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GNU coreutils online help: &lt;http://www.gnu.org/software/coreutils/&gt;</span></span><br><span class="line"><span class="string">For complete documentation, run: info coreutils '</span>sort invocation<span class="string">'</span></span><br></pre></td></tr></table></figure><p>我们需要用到的是<code>-n</code>参数，根据数字大小排序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort ip.txt | uniq -c | sort -n</span><br></pre></td></tr></table></figure><p>最后我们需要的是最大的三个，先降序排：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort ip.txt | uniq -c | sort -rn</span><br></pre></td></tr></table></figure><p>然后取<code>top3</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sort ip.txt | uniq -c | sort -rn | head -n 3</span><br><span class="line">     20 79.137.86.84</span><br><span class="line">     18 178.40.3.117</span><br><span class="line">     17 224.64.206.181</span><br></pre></td></tr></table></figure><p>收工！</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.csdn.net/chengonghao/article/details/52160694" target="_blank" rel="noopener">有一个文件 ip.txt，每行一条 ip 记录，共若干行，下面哪个命令可以实现“统计出现次数最多的前 3 个 ip 及其次数”？</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> linux </tag>
            
            <tag> sort </tag>
            
            <tag> uniq </tag>
            
            <tag> ip </tag>
            
            <tag> interview </tag>
            
            <tag> 4399 </tag>
            
            <tag> wc </tag>
            
            <tag> head </tag>
            
            <tag> tail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Java实现UDP通信</title>
      <link href="/blog/2020/08/19/udp-in-java/"/>
      <url>/blog/2020/08/19/udp-in-java/</url>
      
        <content type="html"><![CDATA[<h2 id="idea-小技巧"><a class="header-anchor" href="#idea-小技巧">#</a>IDEA 小技巧</h2><ul><li><code>cmd + shift + enter</code>代码自动补全。</li><li><code>cmd + p</code>参数提示。</li><li><code>psvm</code>等价于<code>public static void main(String[] args) {}</code>。</li><li><code>sout</code>等价于<code>System.out.println();</code>。</li><li><code>cmd + alt + t</code>可以在代码块外面添加：<ol><li>if</li><li>if / else</li><li>while</li><li>do / while</li><li>for</li><li>try / catch</li></ol></li><li><code>alt + enter</code> 在 <code>new MyClass();</code>后会自动填充为<code>MyClass myclass = new MyClass();</code>。</li><li><code>cmd + alt + shift + l</code>格式化代码。</li></ul><a id="more"></a><h2 id="udp-发送端"><a class="header-anchor" href="#udp-发送端">#</a>UDP 发送端</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySender</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    DatagramSocket socket = <span class="keyword">null</span>;</span><br><span class="line">    BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> String toIP;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> fromPort;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> toPort;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MySender</span><span class="params">(String toIP, <span class="keyword">int</span> fromPort, <span class="keyword">int</span> toPort)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.toIP = toIP;</span><br><span class="line">        <span class="keyword">this</span>.fromPort = fromPort;</span><br><span class="line">        <span class="keyword">this</span>.toPort = toPort;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket = <span class="keyword">new</span> DatagramSocket(fromPort);</span><br><span class="line">            reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                String data = reader.readLine();</span><br><span class="line">                <span class="keyword">byte</span>[] buffer = data.getBytes();</span><br><span class="line">                DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(buffer, <span class="number">0</span>, buffer.length, <span class="keyword">new</span> InetSocketAddress(toIP, toPort));</span><br><span class="line">                socket.send(packet);</span><br><span class="line">                <span class="keyword">if</span> (data.trim().equals(<span class="string">"bye"</span>)) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="udp-接收端"><a class="header-anchor" href="#udp-接收端">#</a>UDP 接收端</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyReceiver</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    DatagramSocket socket = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;</span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyReceiver</span><span class="params">(<span class="keyword">int</span> port, String from)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.port = port;</span><br><span class="line">        <span class="keyword">this</span>.from = from;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket = <span class="keyword">new</span> DatagramSocket(port);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(buffer, buffer.length);</span><br><span class="line">                socket.receive(packet);</span><br><span class="line">                <span class="keyword">byte</span>[] data = packet.getData();</span><br><span class="line">                String message = <span class="keyword">new</span> String(data, <span class="number">0</span>, data.length);</span><br><span class="line">                System.out.println(from + <span class="string">" : "</span> + message);</span><br><span class="line">                <span class="keyword">if</span> (message.trim().equals(<span class="string">"bye"</span>)) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试类"><a class="header-anchor" href="#测试类">#</a>测试类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TalkStudent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> MySender(<span class="string">"localhost"</span>,<span class="number">7777</span>,<span class="number">9999</span>)).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyReceiver(<span class="number">8888</span>,<span class="string">"teacher"</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.onns.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TalkTeacher</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> MySender(<span class="string">"localhost"</span>,<span class="number">5555</span>,<span class="number">8888</span>)).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> TalkReceiver(<span class="number">9999</span>,<span class="string">"student"</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> macos </tag>
            
            <tag> udp </tag>
            
            <tag> idea tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改文件格式</title>
      <link href="/blog/2020/08/17/change-file-format/"/>
      <url>/blog/2020/08/17/change-file-format/</url>
      
        <content type="html"><![CDATA[<p>MacOS、Linux 和 Windows 下使用不同的生成工具可能会有不同的文件格式：<code>LF</code>或者<code>CRLF</code>等，导致每次 github 在同步的时候，都会出现其实内容没更新，但是文件却更新了的<code>伪更新情况</code>。</p><a id="more"></a><h2 id="新的文件"><a class="header-anchor" href="#新的文件">#</a>新的文件</h2><p>对于之后的文件，可以参考 <a href="https://docs.github.com/en/github/using-git/configuring-git-to-handle-line-endings" target="_blank" rel="noopener">Configuring Git to handle line endings</a>，通过配置<code>git</code>来实现自动兼容，就不用我们自己考虑了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.autocrlf <span class="literal">true</span></span><br><span class="line"><span class="comment"># Configure Git to ensure line endings in files you checkout are correct for Windows.</span></span><br><span class="line"><span class="comment"># For compatibility, line endings are converted to Unix style when you commit files.</span></span><br></pre></td></tr></table></figure><h2 id="旧的文件"><a class="header-anchor" href="#旧的文件">#</a>旧的文件</h2><p>可以通过<code>unix2dos</code>工具来批量进行转换，官网：<a href="http://dos2unix.sourceforge.net/" target="_blank" rel="noopener">Dos2Unix / Unix2Dos - Text file format converters</a>，下载地址：<a href="https://sourceforge.net/projects/dos2unix/" target="_blank" rel="noopener">dos2unix</a>。</p><p>下载解压之后的 bin 文件夹里有我们需要的可执行文件，我的是<code>D:\Download\dos2unix-7.4.1-win64\bin\unix2dos.exe</code>。</p><ol><li>打开命令行<code>win+R</code>，输入<code>cmd</code>，回车。</li><li><code>cd</code>定位到所需要的批量处理的根目录。</li><li>输入下列命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /R %G <span class="keyword">in</span> (*.md *.html) <span class="keyword">do</span> D:\Download\dos2unix-7.4.1-win64\bin\unix2dos.exe <span class="string">"%G"</span></span><br><span class="line"><span class="comment"># *.md 代表以所有md结尾的文件</span></span><br></pre></td></tr></table></figure></li><li>完成。</li></ol><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="http://dos2unix.sourceforge.net/" target="_blank" rel="noopener">Dos2Unix / Unix2Dos - Text file format converters</a></li><li><a href="https://blog.csdn.net/panda1234lee/article/details/89289097" target="_blank" rel="noopener">批量转换 LF 和 CRLF 的小技巧【详细步骤】</a></li><li><a href="https://docs.github.com/en/github/using-git/configuring-git-to-handle-line-endings" target="_blank" rel="noopener">Configuring Git to handle line endings</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crlf </tag>
            
            <tag> lf </tag>
            
            <tag> file format </tag>
            
            <tag> 文件格式 </tag>
            
            <tag> github </tag>
            
            <tag> line endings </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用ngrok进行内网穿透</title>
      <link href="/blog/2020/08/17/intranet-penetration-use-ngrok/"/>
      <url>/blog/2020/08/17/intranet-penetration-use-ngrok/</url>
      
        <content type="html"><![CDATA[<p>第三方登录厦大账号的时候，需要用到内网穿透。以下为相关文档。</p><a id="more"></a><h2 id="安装-ngrok"><a class="header-anchor" href="#安装-ngrok">#</a>安装 ngrok</h2><p>安装依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc git mercurial git bzr subversion golang golang-pkg-windows-amd64 golang-pkg-windows-386 -y</span><br></pre></td></tr></table></figure><p>下载 ngrok 源码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/inconshreveable/ngrok.git ngrok</span><br></pre></td></tr></table></figure><p>生成证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ngrok</span><br><span class="line"></span><br><span class="line">mkdir cert</span><br><span class="line"><span class="built_in">cd</span> cert</span><br><span class="line"><span class="comment"># NGROK_DOMAIN 根据自己的配置修改</span></span><br><span class="line"><span class="built_in">export</span> NGROK_DOMAIN=<span class="string">"onns.xyz"</span></span><br><span class="line">openssl genrsa -out rootCA.key 2048</span><br><span class="line">openssl req -x509 -new -nodes -key rootCA.key -subj <span class="string">"/CN=<span class="variable">$NGROK_DOMAIN</span>"</span> -days 5000 -out rootCA.pem</span><br><span class="line">openssl genrsa -out device.key 2048</span><br><span class="line">openssl req -new -key device.key -subj <span class="string">"/CN=<span class="variable">$NGROK_DOMAIN</span>"</span> -out device.csr</span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000</span><br><span class="line"></span><br><span class="line">cp rootCA.pem ../assets/client/tls/ngrokroot.crt</span><br><span class="line">cp device.crt ../assets/server/tls/snakeoil.crt</span><br><span class="line">cp device.key ../assets/server/tls/snakeoil.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回上层目录</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure><p><code>NGROK_DOMAIN</code>域名换成 ngrok 服务器域名，建议用一个二级域名，比如：<code>ngrok.onns.xyz</code>，因为如果用一个一级域名比如<code>onns.xyz</code>，那整个一级域名都没办法用了，因为一级域名必须要指向 ngrok 服务器。</p><p>编译服务器和客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Linux服务端</span></span><br><span class="line">GOOS=linux GOARCH=amd64 make release-server</span><br><span class="line"><span class="comment"># Windows客户端</span></span><br><span class="line">GOOS=windows GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure><p>其它参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Linux服务端/客户端</span></span><br><span class="line"><span class="comment"># 32位</span></span><br><span class="line">GOOS=linux GOARCH=386 make release-server</span><br><span class="line">GOOS=linux GOARCH=386 make release-client</span><br><span class="line"><span class="comment"># 64位</span></span><br><span class="line">GOOS=linux GOARCH=amd64 make release-server</span><br><span class="line">GOOS=linux GOARCH=amd64 make release-client</span><br><span class="line"></span><br><span class="line"><span class="comment"># MacOS服务端/客户端</span></span><br><span class="line">GOOS=darwin GOARCH=386 make release-server</span><br><span class="line">GOOS=darwin GOARCH=386 make release-client</span><br><span class="line"></span><br><span class="line">GOOS=darwin GOARCH=amd64 make release-server</span><br><span class="line">GOOS=darwin GOARCH=amd64 make release-client</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows服务端/客户端</span></span><br><span class="line">GOOS=windows GOARCH=386 make release-server</span><br><span class="line">GOOS=windows GOARCH=386 make release-client</span><br><span class="line"></span><br><span class="line">GOOS=windows GOARCH=amd64 make release-server</span><br><span class="line">GOOS=windows GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure><h2 id="服务器端"><a class="header-anchor" href="#服务器端">#</a>服务器端</h2><p>测试一下能否运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">./bin/ngrokd -domain=<span class="string">"onns.xyz"</span> -httpAddr=<span class="string">":82"</span> -httpsAddr=<span class="string">":83"</span></span><br></pre></td></tr></table></figure><p>ngrok 默认会占<code>80</code>和<code>443</code>端口，服务器只用来做 ngrok 服务器太可惜了，所以用别的端口来代替。</p><p>如果后续测试不通过，可以检查一下是不是端口问题，把服务器和云服务器商的端口访问打开：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -I INPUT -p tcp --dport 82 -j ACCEPT</span><br><span class="line">sudo iptables -I INPUT -p tcp --dport 83 -j ACCEPT</span><br></pre></td></tr></table></figure><p>然后可以设置常驻后台任务了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">nohup ./bin/ngrokd -domain=<span class="string">"onns.xyz"</span> -httpAddr=<span class="string">":82"</span> -httpsAddr=<span class="string">":83"</span> &gt;&gt; /home/deploy/ngrok/a.txt 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h2 id="客户端"><a class="header-anchor" href="#客户端">#</a>客户端</h2><p>创建一个<code>ngrok.cfg</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server_addr: <span class="string">"onns.xyz:4443"</span></span><br><span class="line">trust_host_root_certs: <span class="literal">false</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngrok -config=ngrok.cfg -subdomain x 81</span><br></pre></td></tr></table></figure><p>需要把<code>onns.xyz</code>和<code>x.onns.xyz</code>都指向 ngrok 的服务器。</p><h2 id="结尾"><a class="header-anchor" href="#结尾">#</a>结尾</h2><p>还是比较推荐用二级域名做 ngrok 服务器，再用三级域名做内网穿透。这样不会浪费一个域名。因为一级域名和二级域名都要指向 ngrok 服务器。ngrok 服务需要<code>n级</code>和<code>n+1级</code>域名。</p><p>画个图帮助理解一下：</p><center><p><img src="//onns.xyz/blog/image/20200817-1.png" alt="ngork工作流程图"></p></center><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="https://www.jianshu.com/p/f5c2a55e77bd" target="_blank" rel="noopener">最接地气的 Ngrok 服务器搭建教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> doc </tag>
            
            <tag> intranet penetration </tag>
            
            <tag> ngrok </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：部门工资前三高的所有员工</title>
      <link href="/blog/2020/08/14/solution-of-department-top-three-salaries/"/>
      <url>/blog/2020/08/14/solution-of-department-top-three-salaries/</url>
      
        <content type="html"><![CDATA[<h2 id="185-部门工资前三高的所有员工"><a class="header-anchor" href="#185-部门工资前三高的所有员工">#</a><a href="https://leetcode-cn.com/problems/department-top-three-salaries/" target="_blank" rel="noopener">185. 部门工资前三高的所有员工</a></h2><p><code>Employee</code> 表包含所有员工信息，每个员工有其对应的工号 <code>Id</code>，姓名 <code>Name</code>，工资 <code>Salary</code> 和部门编号 <code>DepartmentId</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+----+-------+--------+--------------+</span><br><span class="line">| Id | Name  | Salary | DepartmentId |</span><br><span class="line">+----+-------+--------+--------------+</span><br><span class="line">| 1  | Joe   | 85000  | 1            |</span><br><span class="line">| 2  | Henry | 80000  | 2            |</span><br><span class="line">| 3  | Sam   | 60000  | 2            |</span><br><span class="line">| 4  | Max   | 90000  | 1            |</span><br><span class="line">| 5  | Janet | 69000  | 1            |</span><br><span class="line">| 6  | Randy | 85000  | 1            |</span><br><span class="line">| 7  | Will  | 70000  | 1            |</span><br><span class="line">+----+-------+--------+--------------+</span><br></pre></td></tr></table></figure><p><code>Department</code> 表包含公司所有部门的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+----+----------+</span><br><span class="line">| Id | Name     |</span><br><span class="line">+----+----------+</span><br><span class="line">| 1  | IT       |</span><br><span class="line">| 2  | Sales    |</span><br><span class="line">+----+----------+</span><br></pre></td></tr></table></figure><p>编写一个 SQL 查询，找出每个部门获得前三高工资的所有员工。例如，根据上述给定的表，查询结果应返回：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+------------+----------+--------+</span><br><span class="line">| Department | Employee | Salary |</span><br><span class="line">+------------+----------+--------+</span><br><span class="line">| IT         | Max      | 90000  |</span><br><span class="line">| IT         | Randy    | 85000  |</span><br><span class="line">| IT         | Joe      | 85000  |</span><br><span class="line">| IT         | Will     | 70000  |</span><br><span class="line">| Sales      | Henry    | 80000  |</span><br><span class="line">| Sales      | Sam      | 60000  |</span><br><span class="line">+------------+----------+--------+</span><br></pre></td></tr></table></figure><p>解释：</p><p>IT 部门中，Max 获得了最高的工资，Randy 和 Joe 都拿到了第二高的工资，Will 的工资排第三。销售部门（Sales）只有两名员工，Henry 的工资最高，Sam 的工资排第二。</p><a id="more"></a><h2 id="安装-mysql"><a class="header-anchor" href="#安装-mysql">#</a>安装 Mysql</h2><h3 id="安装-yum-源"><a class="header-anchor" href="#安装-yum-源">#</a>安装 yum 源</h3><p>去官网下<code>RPM包</code>：<a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">MySQL Community Downloads</a>。</p><p>按照自己的 Linux 版本安装，我的是<code>CentOS7</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ hostnamectl</span><br><span class="line">   Static hostname: izbp1j6rl141pt0isn2vusz</span><br><span class="line">   Pretty hostname: iZbp1j6rl141pt0isn2vusZ</span><br><span class="line">         Icon name: computer-vm</span><br><span class="line">           Chassis: vm</span><br><span class="line">        Machine ID: 963c2c41b08343f7b063dddac6b2e486</span><br><span class="line">           Boot ID: 9da023d194834a8aa4c95d07edd77b93</span><br><span class="line">    Virtualization: kvm</span><br><span class="line">  Operating System: CentOS Linux 7 (Core)</span><br><span class="line">       CPE OS Name: cpe:/o:centos:centos:7</span><br><span class="line">            Kernel: Linux 3.10.0-1127.13.1.el7.x86_64</span><br><span class="line">      Architecture: x86-64</span><br><span class="line">$ uname -srm</span><br><span class="line">Linux 3.10.0-1127.13.1.el7.x86_64 x86_64</span><br><span class="line">$ cat /proc/version</span><br><span class="line">Linux version 3.10.0-1127.13.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) ) <span class="comment">#1 SMP Tue Jun 23 15:46:38 UTC 2020</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">yum -y install mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="安装-mysql-2"><a class="header-anchor" href="#安装-mysql-2">#</a>安装 mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-community-server -y</span><br></pre></td></tr></table></figure><h3 id="启动"><a class="header-anchor" href="#启动">#</a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld start</span><br></pre></td></tr></table></figure><h3 id="获取初始密码"><a class="header-anchor" href="#获取初始密码">#</a>获取初始密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ grep <span class="string">"password"</span> /var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line">2020-08-14T10:35:15.878806Z 6 [Note] [MY-010454] [Server] A temporary password is generated <span class="keyword">for</span> root@localhost: o%HZ6*EoVuDy</span><br></pre></td></tr></table></figure><h3 id="登录"><a class="header-anchor" href="#登录">#</a>登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p</span><br><span class="line"><span class="comment"># 修改新密码</span></span><br><span class="line">&gt; ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'new_password'</span>;</span><br></pre></td></tr></table></figure><h3 id="创建数据库"><a class="header-anchor" href="#创建数据库">#</a>创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> onns;</span><br><span class="line"><span class="comment"># 切换数据库</span></span><br><span class="line"><span class="keyword">use</span> onns;</span><br></pre></td></tr></table></figure><h2 id="sql-架构"><a class="header-anchor" href="#sql-架构">#</a>SQL 架构</h2><p>啊啊啊啊啊啊啊这个字居然是灰色的我没看见，结果自己手打了一遍，我真是醉了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> Employee (</span><br><span class="line"><span class="keyword">Id</span> <span class="built_in">int</span>,</span><br><span class="line"><span class="keyword">Name</span> <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Salary <span class="built_in">int</span>,</span><br><span class="line">DepartmentId <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> Department (</span><br><span class="line"><span class="keyword">Id</span> <span class="built_in">int</span>,</span><br><span class="line"><span class="keyword">Name</span> <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> Employee;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Employee (<span class="keyword">Id</span>, <span class="keyword">Name</span>, Salary, DepartmentId)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'Joe'</span>, <span class="string">'85000'</span>, <span class="string">'1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Employee (<span class="keyword">Id</span>, <span class="keyword">Name</span>, Salary, DepartmentId)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'Henry'</span>, <span class="string">'80000'</span>, <span class="string">'2'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Employee (<span class="keyword">Id</span>, <span class="keyword">Name</span>, Salary, DepartmentId)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'Sam'</span>, <span class="string">'60000'</span>, <span class="string">'2'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Employee (<span class="keyword">Id</span>, <span class="keyword">Name</span>, Salary, DepartmentId)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'Max'</span>, <span class="string">'90000'</span>, <span class="string">'1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Employee (<span class="keyword">Id</span>, <span class="keyword">Name</span>, Salary, DepartmentId)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'Janet'</span>, <span class="string">'69000'</span>, <span class="string">'1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Employee (<span class="keyword">Id</span>, <span class="keyword">Name</span>, Salary, DepartmentId)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'6'</span>, <span class="string">'Randy'</span>, <span class="string">'85000'</span>, <span class="string">'1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Employee (<span class="keyword">Id</span>, <span class="keyword">Name</span>, Salary, DepartmentId)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'7'</span>, <span class="string">'Will'</span>, <span class="string">'70000'</span>, <span class="string">'1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> Department;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Department (<span class="keyword">Id</span>, <span class="keyword">Name</span>)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'IT'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Department (<span class="keyword">Id</span>, <span class="keyword">Name</span>)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'Sales'</span>);</span><br></pre></td></tr></table></figure><h2 id="结果"><a class="header-anchor" href="#结果">#</a>结果</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Employee e1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">3</span> &gt; (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="string">`Salary`</span>)</span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`Employee`</span> e2</span><br><span class="line"><span class="keyword">WHERE</span> e2.Salary &gt; e1.Salary</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> d.Name <span class="keyword">AS</span> Department, e1.Name <span class="keyword">AS</span> Employee, e1.Salary <span class="keyword">AS</span> Salary</span><br><span class="line"><span class="keyword">FROM</span> Employee e1</span><br><span class="line"><span class="keyword">JOIN</span> Department d <span class="keyword">ON</span> e1.DepartmentId = d.Id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">3</span> &gt; (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="string">`Salary`</span>)</span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`Employee`</span> e2</span><br><span class="line"><span class="keyword">WHERE</span> e2.Salary &gt; e1.Salary</span><br><span class="line"><span class="keyword">AND</span> e1.DepartmentId = e2.DepartmentId</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.csdn.net/xiaolong_4_2/article/details/81664582" target="_blank" rel="noopener">centos7 上快速安装 mysql</a></li><li><a href="https://tool.oschina.net/codeformat/sql" target="_blank" rel="noopener">在线代码格式化</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> mysql </tag>
            
            <tag> leetcode </tag>
            
            <tag> centos7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记-20200813</title>
      <link href="/blog/2020/08/13/note-20200813/"/>
      <url>/blog/2020/08/13/note-20200813/</url>
      
        <content type="html"><![CDATA[<h2 id="制定深入的专注分数预测提高学生参与度"><a class="header-anchor" href="#制定深入的专注分数预测提高学生参与度">#</a>制定深入的专注分数预测提高学生参与度</h2><p>Prescribing Deep Attentive Score Prediction AttractsImproved Student Engagement</p><a id="more"></a><ul><li>将深度学习模型引入智能辅导系统</li><li>之前的研究都在关注提高预测模型的性能上，缺乏对其实际应用所产生效益的关注。在本文中，我们通过提供经验证据来证明，在现实环境中部署的分数预测模型的准确性显著影响用户的测量。</li></ul><h2 id="预测视频讲座的参与度"><a class="header-anchor" href="#预测视频讲座的参与度">#</a>预测视频讲座的参与度</h2><p>Predicting Engagement in Video Lectures</p><h3 id="摘要"><a class="header-anchor" href="#摘要">#</a>摘要</h3><p>近年来开放式教育资源（Open Educational Resources）的激增，产生了对可扩展、自动化的开放式教育资源处理和评估的需求，最终目标是为学习者确定和推荐最合适的教育材料。我们专注于构建模型，以发现上下文不可知的参与（即基于人口的参与）所涉及的特征和特征，与其他更注重个体学习的上下文化和个性化方法相比，这是一个很少被重新搜索的主题。学习者参与度，可以说是比受欢迎程度/观点数量更可靠的衡量标准，比用户评分更丰富，也被证明是实现学习成果的关键组成部分。在这项工作中，我们探讨了建立一个以人口为基础的教育参与预测模型的想法。我们介绍了一个新颖的，大的视频讲座数据集，用于预测上下文无关参与，并提出了两个跨模态模态模态特定的功能集，以实现这一任务。我们进一步测试了量化学习者测量信号的不同策略。我们演示了我们的方法在数据稀缺情况下的应用。此外，我们还对表现最佳的模型进行了敏感度分析，该模型显示出良好的性能，并且可以很容易地集成到面向开放式教育资源的教育推荐系统中。</p><h3 id="备注"><a class="header-anchor" href="#备注">#</a>备注</h3><ul><li>源码&amp;数据集：<a href="https://github.com/sahanbull/context-agnostic-engagement" target="_blank" rel="noopener">https://github.com/sahanbull/context-agnostic-engagement</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> engagement </tag>
            
            <tag> 参与度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客修复超长目录的显示</title>
      <link href="/blog/2020/08/12/blog-toc-fix/"/>
      <url>/blog/2020/08/12/blog-toc-fix/</url>
      
        <content type="html"><![CDATA[<p>我发现我总是需要解决一个问题之前，先解决若干个前置问题，差不多花了八个小时左右…解决了超长 toc 的滚动问题。</p><a id="more"></a><h2 id="写在前面"><a class="header-anchor" href="#写在前面">#</a>写在前面</h2><p>不愿意往下看的可以直接在<code>/source/js/src/even.js</code>里的<code>Even.prototype.scrollToc</code>替换如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Even.prototype.scrollToc = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> SPACING = <span class="number">20</span>;</span><br><span class="line">  <span class="keyword">var</span> $toc = $(<span class="string">".post-toc"</span>);</span><br><span class="line">  <span class="keyword">var</span> $footer = $(<span class="string">".post-footer"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ($toc.length) &#123;</span><br><span class="line">    <span class="keyword">var</span> minScrollTop = $toc.offset().top - SPACING;</span><br><span class="line">    $(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> tocState = &#123;</span><br><span class="line">        start: &#123;</span><br><span class="line">          position: <span class="string">"absolute"</span>,</span><br><span class="line">          top: minScrollTop,</span><br><span class="line">        &#125;,</span><br><span class="line">        process: &#123;</span><br><span class="line">          position: <span class="string">"fixed"</span>,</span><br><span class="line">          top: SPACING,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">var</span> scrollTop = $(<span class="built_in">window</span>).scrollTop();</span><br><span class="line">      <span class="keyword">if</span> (scrollTop &lt; minScrollTop) &#123;</span><br><span class="line">        $toc.css(tocState.start);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $toc.css(tocState.process);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">          $(<span class="string">".toc-link.active"</span>).offset() != <span class="literal">undefined</span> &amp;&amp;</span><br><span class="line">          $(<span class="string">".toc-link.active"</span>).offset().top -</span><br><span class="line">            <span class="built_in">document</span>.documentElement.scrollTop &gt;</span><br><span class="line">            (<span class="built_in">window</span>.innerHeight * <span class="number">1</span>) / <span class="number">2</span></span><br><span class="line">        ) &#123;</span><br><span class="line">          $(<span class="string">".post-toc"</span>).offset(&#123;</span><br><span class="line">            top: <span class="built_in">Math</span>.min(</span><br><span class="line">              $footer.offset().top - $toc.height() - SPACING,</span><br><span class="line">              (<span class="built_in">window</span>.innerHeight * <span class="number">1</span>) / <span class="number">2</span> +</span><br><span class="line">                <span class="built_in">document</span>.documentElement.scrollTop -</span><br><span class="line">                ($(<span class="string">".toc-link.active"</span>).offset().top -</span><br><span class="line">                  $(<span class="string">".post-toc"</span>).offset().top)</span><br><span class="line">            ),</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">          $footer.offset().top &lt;</span><br><span class="line">          $(<span class="string">".post-toc"</span>).offset().top + $toc.height() + SPACING</span><br><span class="line">        ) &#123;</span><br><span class="line">          $(<span class="string">".post-toc"</span>).offset(&#123;</span><br><span class="line">            top: $footer.offset().top - $toc.height() - SPACING,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>具体效果可以去<a href="https://onns.xyz/blog/2020/08/12/sync-sofa-doc/">Sync Sofa</a>里看，个人认为是最优解决方案。</p><h2 id="问题"><a class="header-anchor" href="#问题">#</a>问题</h2><p>在这个主题的<code>toc</code>超出浏览器页面高度之后，会没办法显示所有的目录信息，导致阅读障碍。</p><p>个人认为比较可行的方案有三个：</p><ol><li>折叠子标题</li><li>目录支持滚轮</li><li>目录跟随文档一起滚动</li></ol><p>先说第一个方法，也是我看这个主题的<a href="https://github.com/ahonn/hexo-theme-even/issues/248" target="_blank" rel="noopener">issue</a>时里面提到的，效果可以去看<a href="https://hugo-theme-even.netlify.app/post/even-preview/" target="_blank" rel="noopener">Theme preview</a>，我个人认为不是一个很好的解决方案，因为如果极端情况下，所有的标题都是同一级的，那势必没办法进行子标题折叠，此方案 pass。（亏我还花了 1 个小时时间来研究怎么迁移过来。）</p><p>第二个方法，我个人觉得有点蠢，且不说目录本身就是浮动的，不好滚，就算是滚起来了，翻一会页的时候还要再翻目录页。。。想想就有点不合适，留给有缘人尝试吧。</p><h2 id="怎么滚"><a class="header-anchor" href="#怎么滚">#</a>怎么滚</h2><p>六七个小时断断续续的解决方案我也不在这瞎 BB 了，直接上核心代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">  $(<span class="string">".toc-link.active"</span>).offset() != <span class="literal">undefined</span> &amp;&amp;</span><br><span class="line">  $(<span class="string">".toc-link.active"</span>).offset().top - <span class="built_in">document</span>.documentElement.scrollTop &gt;</span><br><span class="line">    (<span class="built_in">window</span>.innerHeight * <span class="number">1</span>) / <span class="number">2</span></span><br><span class="line">) &#123;</span><br><span class="line">  $(<span class="string">".post-toc"</span>).offset(&#123;</span><br><span class="line">    top: <span class="built_in">Math</span>.min(</span><br><span class="line">      $footer.offset().top - $toc.height() - SPACING,</span><br><span class="line">      (<span class="built_in">window</span>.innerHeight * <span class="number">1</span>) / <span class="number">2</span> +</span><br><span class="line">        <span class="built_in">document</span>.documentElement.scrollTop -</span><br><span class="line">        ($(<span class="string">".toc-link.active"</span>).offset().top - $(<span class="string">".post-toc"</span>).offset().top)</span><br><span class="line">    ),</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>逻辑就是，如果当前正在访问的目录在屏幕的 1/2 处往下了，那么我么就往上滑目录，使得当前正在访问的标题始终处于文档的正中心。</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo-theme-even </tag>
            
            <tag> blog </tag>
            
            <tag> toc </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记-20200812</title>
      <link href="/blog/2020/08/12/note-20200812/"/>
      <url>/blog/2020/08/12/note-20200812/</url>
      
        <content type="html"><![CDATA[<h2 id="分析学生在慕课中的拖延：多变量霍克斯方法"><a class="header-anchor" href="#分析学生在慕课中的拖延：多变量霍克斯方法">#</a>分析学生在慕课中的拖延：多变量霍克斯方法</h2><p>过去的研究主要通过静态时间相关的测量（例如每个学生所有作业的平均开始时间）或时间模型的参数来描述学生的拖延，假设学生的活动以恒定的速率发生（例如齐次泊松模型）。</p><a id="more"></a><p>学生与一种学习材料的互动独立于与另一种材料的互动</p><p>在这项工作中，我们建议考虑学生的时间活动之间的相互依赖性，同时在一个连续的时间尺度上模拟他们的序列。</p><p>为此，我们建议将每个学生和每个课程模块，即每个模块学生对之间的交互序列建模为多维霍克斯过程，它不仅捕捉到学生的学习活动与其外生刺激（如作业截止日期）之间的关系，同时也能捕捉到学习材料类型内部和之间的内源性反应。我们的实验表明，当涉及不同类型的学习材料时，不仅学生的历史活动与未来活动之间存在依赖关系，而且这种依赖性也对学生的拖延行为提供了有意义的解释。此外，我们的研究结果显示，除了与延迟相关外，多维 Hawkes 过程学习的参数提供了更多与拖延相关的信息，并且可以改善我们对学生成绩的解释。</p><p>以往的历史多基于学生的自我调查报告或者与学生拖延行为相关的时间相关特征。</p><p>考虑到自我报告数据的噪音，在最近的研究中，更多的关注集中在拖延的行为方面，提出了与时间相关的测量方法，并将其作为学生拖延的表征。</p><p>这些指标缺乏描述学生在一段时间内持续行为的能力。与这种方法类似的是，在不完全了解分布的情况下，使用样本平均值来描述整个分布。为了解决这一局限性，最近，重点是通过随机模型从学生的学习轨迹数据中提取学生活动的时间点（例如，学生历史行为的日志或点击流）。</p><p>然而，据我们所知，过去的研究没有考虑到学生与不同学习材料类型的互动之间可能存在的时间依赖性。</p><p>例如，在作业的第一次尝试之前更集中地观看视频讲课，可能表明学生更喜欢在尝试作业之前先学习材料。另一方面，在作业的第一次尝试之后，主要观看课堂视频，这可能意味着学生更喜欢先尝试作业，然后在遇到任何问题时再看视频讲座。</p><p>过去的研究试图用静态的时间度量来描述拖延，或者从更复杂的时间模型中总结出来的度量，基于学生与一个或多个学习材料的交互作用。然而，学生行为的两个重要因素及其与拖延的关系还没有得到充分的研究：（1）在每种学习材料类型中，学生过去和将来的互动之间的依赖性（例如，知道一个学生在某个时间看过幻灯片，他们将如何以及何时进行下一项活动？）以及（2）学生与不同类型学习材料的互动之间的依赖性（例如，观看视频讲座后通常会提交作业吗？）在这项工作中，我们的目标是通过回答以下问题来解决这两个因素：在每个学习模块中，即提供学习材料的课程单元，（Q1）过去的活动是否独立于未来的活动？或者某些活动可以触发其他活动在短时间内到达（即活动之间的时间依赖性）？以及（问题 2），学生与一种类型的学习材料（如视频讲座）的互动是否独立于另一种类型（如论坛）？此外，（问题 3）如果这种依赖性存在，它们与学生拖延症有什么关系？（即学生过去和未来活动之间的依赖关系，以及学生与一种学习材料与另一种学习材料之间的相互依赖关系。）</p><p>因此，我们的目标是在不同类型的在线学习材料中找到学生拖延和学生活动之间的缺失环节。为了达到这一目标，我们建议使用多维 Hawkes 过程作为一个强有力的工具来解决学生拖延分析中的上述问题。特别地，我们将一类学习材料上的所有活动表示为多维 Hawkes 模型中的一维。我们表明，与基准时间过程相比，该模型更适合我们的数据。同时，为了回答问题 1 和问题 2，我们证明了它既能捕捉到学生对截止日期的反应，作为来自外部的行动触发因素（即外生刺激），也能捕捉到学生对之前与不同类型学习材料（如视频讲座、作业）互动的反应，和讨论（即自我兴奋）。这样，我们可以从随机过程的角度来理解学生的拖延行为，主要有两个刺激因素：（1）学生的一些活动可以看作是对外部刺激的反应，比如作业的截止日期（2）其他一些学生活动可以看作是学生以前与相同或其他学习材料类型互动的结果。在模型参数的基础上，为了回答问题 3，我们还提出了一个不仅能描述学生拖延而且能更好地解释学生表现的测量方法。</p><h2 id="基于作业开始时间的在线学习拖延指数"><a class="header-anchor" href="#基于作业开始时间的在线学习拖延指数">#</a>基于作业开始时间的在线学习拖延指数</h2><h3 id="摘要"><a class="header-anchor" href="#摘要">#</a>摘要</h3><p>这项工作的结果是一个简单而可靠的拖延指数，它可以概括多个学科，考虑到作业的个体特点，是学习成绩的一个强有力的预测因子，并提供了一个早期信号，使教育工作者能够为高危学生设计适当的干预措施。</p><h3 id="介绍"><a class="header-anchor" href="#介绍">#</a>介绍</h3><p>所有基于主观填写的拖延症分析都具有缺陷。本文采用了一种基于作业开始时间的度量拖延的方式。</p><h3 id="方法"><a class="header-anchor" href="#方法">#</a>方法</h3><p>采用了<code>Connect</code>在线学习平台的关于作业的开始时间、截止时间以及学生提交时间的数据，并只选择美国机构的，以消除相关参数影响。</p><h3 id="操作定义"><a class="header-anchor" href="#操作定义">#</a>操作定义</h3><h4 id="定义拖延"><a class="header-anchor" href="#定义拖延">#</a>定义拖延</h4><p>首先根据作业提交时间和最终成绩进行统计，到了60%，分数低于家庭作业的平均成绩。在75%附近，分数下降到比平均值低10%，而且下降速度加快。</p><p>所以探性地将作业的阈值时间<code>τt</code>设为75%，即75%的学生开始作业的时间。在这之前的拖延指数为0，否则为1。</p><p>学习者拖延指数（PI）（Learner Procrastination Index）：即总拖延指数除以总作业次数。</p><h3 id="讨论与结论"><a class="header-anchor" href="#讨论与结论">#</a>讨论与结论</h3><p>尽管在过去的几十年里已经有了大量的关于拖延的工作，但大部分工作都着眼于自我报告的措施或提交时间。在本文中，我们考虑学生开始作业的时间，相对于其他学生在同一作业上的作业，这可以跨上下文工作，并且可以跨课程聚合。我们的集合，称为拖延指数，不仅与Connect平台内的分数相关，而且与课程的整体分数相关，并且可以预测学生的成绩，实现先前自我报告措施中学生成绩的两到三倍相关性。</p><p>可以提出一些干预措施来减少拖延。</p><ul><li>让学生提供自己的截止日期</li><li>设想一个系统，使学生能够提出最后期限或提出额外的最后期限（例如，完成一半作业的目标），以帮助他们分解任务并减少拖延。</li></ul><p>在以可扩展的方式减少拖延和改善结果方面，哪些干预措施最有效，还有待观察。与寻求帮助等其他领域一样，拖延与结果之间的关系可能不是完全因果关系，并且可能在不改善结果的情况下减少拖延。找到正确的干预措施来改善结果不仅有助于改善结果，而且有助于理解拖延是否以及如何对学习产生因果影响。更一般地说，对拖延的更全面的理解可能有助于我们更好地减轻拖延的影响。学生拖延是一种习惯，还是在估计他们的时间需求时一直存在错误？无聊和缺乏参与扮演什么角色？更好地理解这些问题的答案可能最终导致重新设计课程和/或作业，以更好地让学生在整个学期内以稳定的方式参与学习。</p><p>我们计划利用这项研究来改进我们的产品——针对那些经常拖延改进的内容——并开发一些方法来促使学生更有效地工作并更早地完成他们的任务。如果我们作为一个领域，停止在这个重要问题上拖延，对我们学生的影响可能是深远的。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> procrastination </tag>
            
            <tag> 拖延症 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sync Sofa</title>
      <link href="/blog/2020/08/12/sync-sofa-doc/"/>
      <url>/blog/2020/08/12/sync-sofa-doc/</url>
      
        <content type="html"><![CDATA[<h1 id="sync-sofa-streaming-video-playback-synchronizer-extension"><a class="header-anchor" href="#sync-sofa-streaming-video-playback-synchronizer-extension">#</a>Sync Sofa (streaming video playback synchronizer extension)</h1><blockquote><p>This chrome extension allows multi-user sync streaming video in a fast, simple, and stable way.</p></blockquote><p><img src="https://img.shields.io/github/go-mod/go-version/LouisYLWang/Sync-Sofa?filename=server%2Fgo.mod&amp;style=flat-square" alt="GitHub go.mod Go version (subfolder of monorepo)"> <a href="https://chrome.google.com/webstore/detail/sync-sofa-beta-online-vid/kgpnhgmpijhpkefpddoehhminpfiddmg" target="_blank" rel="noopener"><img src="https://img.shields.io/chrome-web-store/users/kgpnhgmpijhpkefpddoehhminpfiddmg?style=flat-square" alt="Chrome web store users"></a> <img src="https://img.shields.io/uptimerobot/status/m785506902-abf56ee3c6b33304675185c6?label=sync-us&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m787861126-8d48fa150c9a82edd7e1315c?label=sync-us2&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m785506916-32a7dc946ed8718c859e7cdd?label=sync-cn&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m785512978-f4cf51568a716df159f1c762?label=sync-cn2&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m787861121-335727572de1d1ea7378ebf0?label=sync-cn3&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m787861123-ea67c98024d33c70b4366305?label=sync-cn4&amp;style=flat-square" alt="Uptime Robot status"></p><p><a href="#sync-sofa-streaming-video-playback-synchronizer-extension">English</a> | <a href="#sync-sofa-%E5%9C%A8%E7%BA%BF%E8%A7%86%E9%A2%91%E5%90%8C%E6%AD%A5%E6%92%AD%E6%94%BE%E6%8F%92%E4%BB%B6">中文</a></p><p>Sync Sofa is a full-stack web extension that provides an easy-to-use and stable way to synchronize streaming playback for multiple users. It can improve the experience when users from different locations want to share a video/movie remotely. Currently, the features include:</p><ul><li>2 party connection: either party can be the host of a sync room and the other can join with connection code.</li><li>sync pause/play: each user pause/play the video, the other side will do the same</li><li>sync play process bar control: the playing time change will also affect another side user</li><li>local video sync: provide two ways to sync your playing of a local video file</li></ul><p><img src="https://s1.ax1x.com/2020/10/07/0a2FQP.png" alt="title pic"></p><h2 id="current-version"><a class="header-anchor" href="#current-version">#</a>Current version</h2><p><strong>v1.0.9 - update on 14 Aug 2020</strong></p><p>⚠️⚠️⚠️ Each website has it’s <code>own controller</code> of the playback rate, so please ignore the wrong display of <code>playback rate</code>.</p><p>Add:</p><ol><li>playback rate sync: any side user’s change to the playback rate will sync to the other side.</li></ol><p>Fix:</p><ol><li>Fix bug of no new bugs</li></ol><hr><p><strong>v1.0.8 - update on 8 Aug 2020</strong></p><p>⚠️⚠️⚠️ <strong>Do Not</strong> try to use <code>Room code</code> like <code>0000</code> or <code>1234</code>, We strongly recommend you use uncommon code so that you do not need to change it.</p><p>Add:</p><ol><li>allow customized connection code, user can directly connect to peer simply click the start button, without reapplying a new code</li><li>simple built-in chat feature (can be toggled in options page)</li><li>add system notification (can be toggled in options page)</li><li>add connection status budge to extension icon (red-unconnected, yellow-pending connection, green-connecting)</li><li>add a notification for unknown socket disconcerting</li><li>add duplicate connection code notification</li></ol><p>Fix:</p><ol><li>Fix bug of no new bugs</li></ol><hr><a id="more"></a><h2 id="supported-list"><a class="header-anchor" href="#supported-list">#</a>Supported list</h2><ul><li><a href="https://www.iqiyi.com/" target="_blank" rel="noopener">Iqiyi</a></li><li><a href="https://www.youku.com/" target="_blank" rel="noopener">Youku</a></li><li><a href="https://www.weiyun.com/" target="_blank" rel="noopener">Tencent Cloud</a></li><li><a href="https://v.qq.com/" target="_blank" rel="noopener">Tencent Video</a></li><li><a href="https://www.youtube.com/" target="_blank" rel="noopener">YouTube</a></li><li><a href="https://www.mgtv.com/" target="_blank" rel="noopener">Mango TV</a></li><li><a href="https://www.aliyundrive.com/" target="_blank" rel="noopener">Aliyun Drive</a></li><li>Local mp4 file via Browser</li><li><a href="https://www.videolan.org/vlc/index.html" target="_blank" rel="noopener">Local video file via VLC media player</a></li></ul><p><a href="https://github.com/LouisYLWang/Sync-Sofa/blob/dev/client/chrome_extension/manifest.json#L12" target="_blank" rel="noopener">The full list can be found here</a><br><a href="https://github.com/LouisYLWang/Sync-Sofa/issues/22" target="_blank" rel="noopener">Click here to tell us more</a></p><h2 id="setting"><a class="header-anchor" href="#setting">#</a>Setting</h2><p>😊 This part is optional, we have already set default options for you, if you are not interested, please skip to <a href="#usage">next part</a>.</p><h3 id="server-list"><a class="header-anchor" href="#server-list">#</a>Server list</h3><p>Recently, Many Chinese users said our service is unstable, that is because our default server is located at us, so here is the server list, you can pick the nearest one.</p><ul><li>sync-cn:<ul><li><code>https</code></li><li><code>sync-cn.onns.xyz</code></li></ul></li><li>sync-cn-2 [deprecated] (Thanks to <a href="https://github.com/huoranxuanyuan" target="_blank" rel="noopener">@huoranxuanyuan</a>):<ul><li><code>https</code></li><li><code>api.huoranxuanyuan.cn</code></li></ul></li><li>sync-cn-3 [Beijing] (Thanks to <a href="https://github.com/liqimore" target="_blank" rel="noopener">@liqimore</a>):<ul><li><code>https</code></li><li><code>sync-bj.204800.xyz</code></li></ul></li><li>sync-cn-4 [Shanghai] (Thanks to <a href="https://github.com/liqimore" target="_blank" rel="noopener">@liqimore</a>):<ul><li><code>https</code></li><li><code>sync-shanghai.204800.xyz</code></li></ul></li><li>sync-us:<ul><li><code>https</code></li><li><code>app.ylwang.me</code></li></ul></li><li>sync-us-2 [Missouri] (Thanks to <a href="https://github.com/liqimore" target="_blank" rel="noopener">@liqimore</a>):<ul><li><code>https</code></li><li><code>sync-us-central.pq02.com</code></li></ul></li></ul><p>Before setting, check server status here: <a href="#sync-sofa-streaming-video-playback-synchronizer-extension">Sync Sofa (streaming video playback synchronizer extension)</a>.</p><p>We will be grateful for supporting us to build more server if it is convenient (Cause this project is unprofitable).</p><p><strong>Alipay, Wechat pay, Paypal</strong></p><p><img src="https://onns.xyz/blog/image/20200704-1.png" alt="alipay"> <img src="https://onns.xyz/blog/image/20200704-2.png" alt="wechat pay"> <img src="https://onns.xyz/blog/image/20200704-3.jpg" alt="paypal"></p><p>If you have already built your own server, and wanna share, please tell us!</p><h3 id="options-page"><a class="header-anchor" href="#options-page">#</a>Options page</h3><p>There are two ways to visit the options page.</p><ol><li>Right click <code>Sync Sofa</code> extension, choose <code>Options</code>.</li><li>Left click <code>Sync Sofa</code> extension, choose <code>Setting</code> icon in the popup page.</li></ol><p>Your webpage should be like this:</p><p><img src="https://onns.xyz/blog/image/20200629-3.png" alt="Sync Sofa - Options"></p><h3 id="refresh-video-page"><a class="header-anchor" href="#refresh-video-page">#</a>Refresh video page</h3><p>After saving options, please also refresh the video page or local mp4 page or <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a> to make changes to work.</p><h2 id="usage"><a class="header-anchor" href="#usage">#</a>Usage</h2><h3 id="notices"><a class="header-anchor" href="#notices">#</a>Notices</h3><p>⚠️ Before use, please make sure <code>the version number</code> of two clients is consistent.</p><p>⚠️ Before use, please make sure <code>the server host</code> of two clients are consistent.</p><p>⚠️ If you want to play the local <code>.mp4</code> file, please enable <code>Allow access to file URLs</code> in the extension details page.</p><ol><li>Open <code>chrome://extensions/</code>, find <code>Sync Sofa</code>, click the <code>Details</code> button, enable <code>Allow access to file URLs</code>.</li><li>Right click <code>Sync Sofa</code> extension, choose <code>Manage Extensions</code>, enable <code>Allow access to file URLs</code>.</li></ol><p>⚠️ If there are <code>multiple versions</code> of extensions in your browser, please enable one and disable others.</p><h3 id="open-a-video-page"><a class="header-anchor" href="#open-a-video-page">#</a>Open a video page</h3><p>You two don’t have to open the same webpage, you play the video via a local <code>.mp4</code> file and your partner watch it one some video websites, is ok as long as you both watch the same video actually (source providers are different).</p><p>In this doc, for example, <code>User A</code> will watch the video on Bilibili and <code>User B</code> will do it on Youtube. Here is the webpage:</p><ul><li><a href="https://www.bilibili.com/video/BV1k5411Y7Rc" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1k5411Y7Rc</a></li><li><a href="https://www.youtube.com/watch?v=QAelMP1PoNA" target="_blank" rel="noopener">https://www.youtube.com/watch?v=QAelMP1PoNA</a></li></ul><p>PS: I’m a fan of Boki, and screenshots have been Gaussian blurred. If there is copyright infringement, please contact us to delete it.</p><p><img src="https://onns.xyz/blog/image/20200627-1.png" alt="User A"><br><img src="https://onns.xyz/blog/image/20200627-2.png" alt="User B"></p><p>If there are any ads before the video, watch them before the next step.</p><h3 id="request-new-code"><a class="header-anchor" href="#request-new-code">#</a>Request new code</h3><p>Click the <code>Sync Sofa</code> extension and then click <code>START</code> button.</p><p><img src="https://onns.xyz/blog/image/20200627-3.png" alt="User A"></p><p>If nothing goes wrong you will receive a message like <code>Room created and room code copied to clipboard</code>, and the <code>room code</code> has been copied to your clipboard, send it to your partner.</p><h3 id="start-connection"><a class="header-anchor" href="#start-connection">#</a>Start connection</h3><p>Your partner receives the <code>room code</code>, click the <code>Sync Sofa</code> extension, paste it in the input area, and click <code>START</code> button.</p><p><img src="https://onns.xyz/blog/image/20200627-4.png" alt="User B"></p><h3 id="enjoy-yourselves"><a class="header-anchor" href="#enjoy-yourselves">#</a>Enjoy yourselves</h3><p><img src="https://onns.xyz/blog/image/20200627-5.png" alt="User A"><br><img src="https://onns.xyz/blog/image/20200627-6.png" alt="User B"></p><p>Now you can play the video, your operations will be synced to your partner. Enjoy yourselves!</p><h2 id="vlc-support"><a class="header-anchor" href="#vlc-support">#</a>VLC support</h2><p>If you and your partner play video via <code>VLC media player</code>, <code>Sync Sofa</code> can also synchronize your operations.</p><h3 id="start-vlc-on-the-server-with-the-web-interface"><a class="header-anchor" href="#start-vlc-on-the-server-with-the-web-interface">#</a>Start VLC on the server with the Web Interface</h3><p>First, we need to enable controlling VLC via our browser, here is the official documentation:</p><ul><li><a href="https://wiki.videolan.org/Control_VLC_via_a_browser/" target="_blank" rel="noopener">Control VLC via a browser</a></li><li><a href="https://wiki.videolan.org/Documentation:Modules/http_intf/#VLC_2.0.0_and_later" target="_blank" rel="noopener">Start VLC on the server with the Web Interface</a></li></ul><ol><li>Open VLC media player</li><li>Go <code>Tools → Preferences (select &quot;All&quot; radio-button) → Interface → Main interfaces</code>, check “Web”<br><img src="https://onns.xyz/blog/image/20200628-1.png" alt="Step 2"></li><li>Go <code>Tools → Preferences (select &quot;All&quot; radio-button) → Interface → Main interfaces → Lua</code>, set <code>Lua HTTP - Password</code><br><img src="https://onns.xyz/blog/image/20200628-2.png" alt="Step 3"></li><li><code>Save</code> and <code>reopen</code> VLC media player</li><li>Open <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a> in your browser</li></ol><p>Your webpage should be like this:</p><p><img src="https://onns.xyz/blog/image/20200628-3.png" alt="VLC media player - Web Interface"></p><h3 id="open-your-video"><a class="header-anchor" href="#open-your-video">#</a>Open your video</h3><p>Our extension control <code>VLC</code> via controlling <code>VLC Web Interface</code>(<a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a>), so next step you should open your local video via <code>VLC Media Player</code> and see if <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a> can control the video. If the answer is “yes”, go to the next step, otherwise you should check if there are multiple <code>VLC windows</code>, close the others, and recheck. Your <code>VLC Web Interface</code> should be like this:</p><p><img src="https://onns.xyz/blog/image/20200722-1.png" alt="VLC media player - Web Interface"></p><p>Video title, current time, and total time on the webpage.</p><h3 id="request-new-code-2"><a class="header-anchor" href="#request-new-code-2">#</a>Request new code</h3><p>Open <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a>, click the <code>Sync Sofa</code> extension, and then click <code>REQUEST NEW CODE</code> button.</p><p>If nothing goes wrong you will receive a message like <code>Room created and room code copied to clipboard</code>, and the <code>room code</code> has been copied to your clipboard, send it to your partner.</p><h3 id="start-connection-2"><a class="header-anchor" href="#start-connection-2">#</a>Start connection</h3><p>Your partner receives the <code>room code</code>, clicks the <code>Sync Sofa</code> extension, paste it in the input area, and clicks <code>START</code> button.</p><h3 id="enjoy-yourselves-2"><a class="header-anchor" href="#enjoy-yourselves-2">#</a>Enjoy yourselves</h3><p>Now you can play the video, your operations will be synced to your partner. Enjoy yourselves!</p><p><strong>Notice</strong>:</p><p>⚠️ Keep your browser open and <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a> itself.</p><h3 id="close-controller-webpage"><a class="header-anchor" href="#close-controller-webpage">#</a>Close Controller webpage</h3><p>After your video is finished, please click <code>STOP</code> button on <code>Sync Sofa</code> extension manually or just close <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a>.</p><h2 id="installation"><a class="header-anchor" href="#installation">#</a>Installation</h2><h3 id="google-chrome"><a class="header-anchor" href="#google-chrome">#</a>Google Chrome</h3><h4 id="install-from-chrome-web-store"><a class="header-anchor" href="#install-from-chrome-web-store">#</a>Install from Chrome Web Store</h4><ol><li>Open <a href="https://chrome.google.com/webstore/detail/sync-sofa-online-video-sy/kgpnhgmpijhpkefpddoehhminpfiddmg" target="_blank" rel="noopener">Sync Sofa - Online Video Synchronizer - Chrome Web Store</a> in your Chrome</li><li>Click <code>Add to Chrome</code> button</li><li>Choose <code>Add extension</code></li></ol><h4 id="install-from-local-crx-file"><a class="header-anchor" href="#install-from-local-crx-file">#</a>Install from local .crx file</h4><ol><li>Open <a href="https://github.com/LouisYLWang/Sync-Sofa/releases/latest" target="_blank" rel="noopener">Github release page</a></li><li>Download <code>sync_sofa.[version].crx</code>, <em>[version]</em> is the number of the latest version</li><li>Open <code>chrome://extensions/</code> in your Chrome</li><li>Turn on <code>Developer mode</code> (in the top right corner)</li><li>Drag <code>sync_sofa.[version].crx</code> into the <code>chrome://extensions/</code> page</li><li>Choose <code>Add extension</code></li></ol><p><strong>Notices</strong>:<br>If the extension is disabled by Chrome, try <a href="#install-from-chrome-web-store">Install from chrome web store</a> or <a href="#install-from-unpackaged-folder">Install from unpackaged folder</a>.</p><blockquote><p>This extension is not listed in the Chrome Web Store and may have been added without your knowledge.</p></blockquote><h4 id="install-from-unpackaged-folder"><a class="header-anchor" href="#install-from-unpackaged-folder">#</a>Install from unpackaged folder</h4><ol><li>Download <a href="https://github.com/LouisYLWang/Sync-Sofa/archive/master.zip" target="_blank" rel="noopener">stable version</a> or <a href="https://github.com/LouisYLWang/Sync-Sofa/archive/dev.zip" target="_blank" rel="noopener">development version</a> (with new features and some bugs maybe)</li><li>Unzip the <code>.zip</code> file you downloaded</li><li>Open <code>chrome://extensions/</code> in your Chrome</li><li>Turn on <code>Developer mode</code> (in the top right corner)</li><li>Click <code>Load unpacked</code> (in the top left corner)</li><li>Choose <code>[download_path]/[unzip folder]/client/chrome_extension</code></li><li>Click <code>select</code></li></ol><h3 id="microsoft-edge"><a class="header-anchor" href="#microsoft-edge">#</a>Microsoft Edge:</h3><h4 id="install-from-microsoft-edge-addons"><a class="header-anchor" href="#install-from-microsoft-edge-addons">#</a>Install from Microsoft Edge Addons</h4><ol><li>Open <a href="https://microsoftedge.microsoft.com/addons/detail/kpfbclpafmmjalikjjlcoddffpfgghgp" target="_blank" rel="noopener">Sync Sofa - Online Video Synchronizer - Microsoft Edge Addons</a> in your Microsoft Edge</li><li>Click <code>Get</code> button</li></ol><h3 id="firefox-will-be-supported-in-a-later-version"><a class="header-anchor" href="#firefox-will-be-supported-in-a-later-version">#</a>Firefox (will be supported in a later version)</h3><h2 id="self-hosting-guide"><a class="header-anchor" href="#self-hosting-guide">#</a>Self-hosting Guide</h2><p><strong>Notices</strong>:<br>⚠️ Before hosting, make sure your server can communicate securely with HTTPS and link it to a domain name. All deploy script is based on Let’s Encrypt certificates, you can customize with your own SSL certificate providers.<br>⚠️ dev mode intends for HTTP transmission, prod mode intends for https transmission.</p><h3 id="without-docker"><a class="header-anchor" href="#without-docker">#</a>Without Docker</h3><p><strong>1. Get binary executable file</strong></p><ul><li><p>If you want to alter the source code and build yourself, make sure you have <code>golang environment</code> in your server, then run the script below to get and build a binary file:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/LouisYLWang/Sync-Sofa/server</span><br><span class="line"><span class="comment"># If you don't know $GOPATH</span></span><br><span class="line"><span class="comment"># try "go env GOPATH"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/LouisYLWang/Sync-Sofa/server</span><br><span class="line"></span><br><span class="line"><span class="comment"># Next step is optional</span></span><br><span class="line"><span class="comment"># If you have any error message like:</span></span><br><span class="line"><span class="comment"># "dial tcp 216.58.200.49:443: i/o timeout"</span></span><br><span class="line"><span class="comment"># then try</span></span><br><span class="line"><span class="built_in">export</span> GOPROXY=https://goproxy.io</span><br><span class="line"></span><br><span class="line">go install</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/bin</span><br></pre></td></tr></table></figure></li><li><p>If you want to only deploy the binary file:</p><ol><li>Open <a href="https://github.com/LouisYLWang/Sync-Sofa/releases/latest" target="_blank" rel="noopener">Github release page</a></li><li>Download <code>server</code> binary file for linux server</li><li>Download <code>config.json</code> file to the same directory of binary file</li></ol></li></ul><p><strong>2. In the directory of binary file, adjust config file base on your need:</strong></p><ul><li><p>Config file variables:</p><ul><li><code>addr</code>: port of server</li><li><code>runmode</code>:<ul><li>dev: developing mode</li><li>prod: producting mode</li></ul></li><li><code>tlsdir</code>: TLS certificate paths<ul><li><code>tlskey</code>: TLS certificate privatekey path</li><li><code>tlscert</code>: TLS certification path</li></ul></li></ul><p><strong>Notices</strong>: <code>addr</code>, <code>runmode</code> are mandatory, <code>tlskey</code>, <code>tlscert</code> are required for TLS connection</p></li><li><p>minimal (non-https) config file:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"addr"</span>: <span class="string">":80"</span>,</span><br><span class="line">  <span class="attr">"runmode"</span>: <span class="string">"dev"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>production environment (https) config file:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"addr"</span>: <span class="string">":443"</span>,</span><br><span class="line">  <span class="attr">"runmode"</span>: <span class="string">"prod"</span>,</span><br><span class="line">  <span class="attr">"tlsdir"</span>: &#123;</span><br><span class="line">    <span class="attr">"tlskey"</span>: <span class="string">"/etc/letsencrypt/live/your.host.url/privkey.pem"</span>,</span><br><span class="line">    <span class="attr">"tlscert"</span>: <span class="string">"/etc/letsencrypt/live/your.host.url/fullchain.pem"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>3. Run <code>./server</code> to delopy the server, deployment is successful if you see:</strong></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">found config file, read parameters from config file...</span><br><span class="line">server is listening at &#123;your_port_number&#125;...</span><br></pre></td></tr></table></figure><h3 id="with-docker"><a class="header-anchor" href="#with-docker">#</a>With Docker</h3><p>Make sure docker service is runing on your server, make change to the script blow and run:</p><ul><li><p>variables</p><ul><li><code>ADDR</code>: port of server</li><li><code>RUNMODE</code>:<ul><li>dev: developing mode</li><li>prod: producting mode</li></ul></li><li><code>APIHOST</code>: your host name</li><li><code>IMGNAME</code>: your docker image name, set arbitrarily</li><li><code>TLSKEYPATH</code>: TLS certificate privatekey path</li><li><code>TLSCERTPATH</code>: TLS certification path</li></ul></li><li><p>minimal (non-https) hosting script:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker pull louisylwang/watchtogether</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> ADDR=:4000 \      </span><br><span class="line"><span class="built_in">export</span> RUNMODE=dev \   </span><br><span class="line"><span class="built_in">export</span> IMGNAME=yourimagename \   </span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">-e ADDR=:4000 \</span><br><span class="line">-e RUNMODE=RUNMODE \</span><br><span class="line">-p 4000:4000 \</span><br><span class="line">--name IMGNAME louisylwang/watchtogether</span><br></pre></td></tr></table></figure></li><li><p>production environment (https) hosting script:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">docker pull louisylwang/watchtogether</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> ADDR=:443 \      </span><br><span class="line"><span class="built_in">export</span> RUNMODE=prod \   </span><br><span class="line"><span class="built_in">export</span> APIHOST=your.host.name \   </span><br><span class="line"><span class="built_in">export</span> IMGNAME=yourimagename \   </span><br><span class="line"><span class="built_in">export</span> TLSKEYPATH=/your/path/to/TLS/privatekey \</span><br><span class="line"><span class="built_in">export</span> TLSCERTPATH=/your/path/to/TLS/certification \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">-e ADDR=:ADDR \</span><br><span class="line"><span class="comment">#docker port to server:server port to docker, not necessarily the same</span></span><br><span class="line">-p ADDR:ADDR \ </span><br><span class="line">-e RUNMODE=RUNMODE \</span><br><span class="line"><span class="comment">#if you use letsencrypt, TLSKEY value should be /etc/letsencrypt/live/$APIHOST/privkey.pem</span></span><br><span class="line">-e TLSKEY=TLSKEYPATH \ </span><br><span class="line"><span class="comment">#if you use letsencrypt, TLSCERT value should be /etc/letsencrypt/live/$APIHOST/fullchain.pem </span></span><br><span class="line">-e TLSCERT=TLSCERTPATH \ </span><br><span class="line"><span class="comment">#need to expose your TLS certification file to docker</span></span><br><span class="line">-v /etc/letsencrypt:/etc/letsencrypt:ro \ </span><br><span class="line">--name IMGNAME louisylwang/watchtogether \</span><br><span class="line">--restart=always</span><br></pre></td></tr></table></figure></li><li><p>deployment is successful if you see in <code>docker logs {your docker image name}</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">not found config file, read parameters from system variables...</span><br><span class="line">YYYY&#x2F;MM&#x2F;DD HH:MM:SS server is listening at :ADDR...</span><br></pre></td></tr></table></figure></li></ul><h2 id="release-history"><a class="header-anchor" href="#release-history">#</a>Release History</h2><h3 id="v1-0-10"><a class="header-anchor" href="#v1-0-10">#</a>v1.0.10</h3><h2 id="🛠-update-on-02-feb-2021"><a class="header-anchor" href="#🛠-update-on-02-feb-2021">#</a>🛠 update on 02 Feb 2021</h2><p>⚠️⚠️⚠️ ALL CODE can be found on <a href="https://github.com/LouisYLWang/Sync-Sofa" target="_blank" rel="noopener">https://github.com/LouisYLWang/Sync-Sofa</a>, ENJOY Video Calling and don’t worry we won’t gather anything from you.</p><p>Add:</p><ol><li>Video call support.</li></ol><p>Fix:</p><ol><li>Fix bug about close connection, now you can reconnect immdediately without refreshing current page.(<code>Auto reconnect</code> will be coming soon~)</li><li>UI changed.</li><li>Fix bug about video buffering.</li></ol><h3 id="v1-0-9"><a class="header-anchor" href="#v1-0-9">#</a>v1.0.9</h3><h2 id="🛠-update-on-14-aug-2020"><a class="header-anchor" href="#🛠-update-on-14-aug-2020">#</a>🛠 update on 14 Aug 2020</h2><p>⚠️⚠️⚠️ Each website has it’s <code>own controller</code> of the playback rate, so please ignore the wrong display of <code>playback rate</code>.</p><p>Add:</p><ol><li>playback rate sync: any side user’s change to the playback rate will sync to the other side.</li></ol><p>Fix:</p><ol><li>Fix bug of no new bugs</li></ol><h3 id="v1-0-8"><a class="header-anchor" href="#v1-0-8">#</a>v1.0.8</h3><h2 id="🛠-update-on-8-aug-2020"><a class="header-anchor" href="#🛠-update-on-8-aug-2020">#</a>🛠 update on 8 Aug 2020</h2><p>⚠️⚠️⚠️ <strong>Do Not</strong> try to use <code>Room code</code> like <code>0000</code> or <code>1234</code>, We strongly recommend you use uncommon code so that you do not need to change it.</p><p>Add:</p><ol><li>allow customized connection code, user can directly connect to peer simply click the start button, without reapplying a new code</li><li>simple built-in chat feature (can be toggled in options page)</li><li>add system notification (can be toggled in options page)</li><li>add connection status budge to extension icon (red-unconnected, yellow-pending connection, green-connecting)</li><li>add a notification for unknown socket disconcerting</li><li>add duplicate connection code notification</li></ol><p>Fix:</p><ol><li>Fix bug of no new bugs</li></ol><h3 id="v1-0-7"><a class="header-anchor" href="#v1-0-7">#</a>v1.0.7</h3><h2 id="🛠-update-on-7-july-2020"><a class="header-anchor" href="#🛠-update-on-7-july-2020">#</a>🛠 update on 7 July 2020</h2><p>⚠️⚠️⚠️ Notice, this version is not compatible with any version before 1.0.6 (&lt;= 1.0.5), please please please make sure your version is the same as your peer’s version</p><p>Add:<br>add version detection (lower version number will be detected from the user with higher version number if a room was established by lower version extension)</p><p>Fix:<br>fix support for <a href="https://www.bilibili.com/bangumi/*" target="_blank" rel="noopener">https://www.bilibili.com/bangumi/*</a> (bilibili movie)<br>fix support for Youku &amp; mangoTV</p><h3 id="v1-0-6"><a class="header-anchor" href="#v1-0-6">#</a>v1.0.6</h3><h2 id="🛠-update-on-28-june-2020"><a class="header-anchor" href="#🛠-update-on-28-june-2020">#</a>🛠 update on 28 June 2020</h2><p>⚠️⚠️⚠️ Notice, this version is not compatible with any version before, please please please make sure your version is the same as your peer’s version</p><ul><li>Add:<ul><li>add support for Mango TV (happy Sistering 🤣)</li><li>add support for local video file syncing with VLC player #20</li><li>add options page - debugging mode &amp; self-hosting option #21</li><li>add donating page</li><li>add new wiki page #11</li></ul></li><li>Fix:<ul><li>improve sync performance &amp; stability:<ul><li>new sync logic, not compatible with any version before</li><li>improve buffer detection</li></ul></li></ul></li></ul><h3 id="v1-0-5"><a class="header-anchor" href="#v1-0-5">#</a>v1.0.5</h3><h2 id="🛠-update-on-12-may-2020"><a class="header-anchor" href="#🛠-update-on-12-may-2020">#</a>🛠 update on 12 May 2020</h2><p>Improve stability</p><blockquote><p>Test for a new logic to avoid infinite echo back (each party repeats the last operation of another party) : introduce a queue as a buffer of operation and if the operations are beyond the frequency threshold, the client will automatically to halt and cool down for sometime.</p></blockquote><p>Add support for edge browser (beta)</p><h3 id="v1-0-4"><a class="header-anchor" href="#v1-0-4">#</a>v1.0.4</h3><h2 id="🛠-update-on-10-may-2020"><a class="header-anchor" href="#🛠-update-on-10-may-2020">#</a>🛠 update on 10 May 2020</h2><p>Now the user will get a notification when they successfully connected to each other<br>Improve stability, better sync performance<br>Change the notification UI using sweetalert</p><h3 id="v1-0-3"><a class="header-anchor" href="#v1-0-3">#</a>v1.0.3</h3><h2 id="🛠-update-on-8-may-2020"><a class="header-anchor" href="#🛠-update-on-8-may-2020">#</a>🛠 update on 8 May 2020</h2><p>improve stability &amp; UX logic<br>Added support of following websites:</p><ul><li><a href="https://www.iqiyi.com/" target="_blank" rel="noopener">iqiyi</a></li><li><a href="https://www.youku.com/" target="_blank" rel="noopener">youku</a></li><li><a href="https://www.weiyun.com/" target="_blank" rel="noopener">weiyun</a></li><li><a href="https://v.qq.com/" target="_blank" rel="noopener">tencent video</a></li></ul><p>Fixed the support of duonao live;<br>Removed the support of 91mjw (temporarily);<br>Refined documentation, will add more detail in next verison;</p><h3 id="v1-0-2"><a class="header-anchor" href="#v1-0-2">#</a>v1.0.2</h3><h2 id="🛠-update-on-31-mar-2020"><a class="header-anchor" href="#🛠-update-on-31-mar-2020">#</a>🛠 update on 31 Mar 2020</h2><p>Add support of play process bar control sync<br>Fixed the issue that when syncing playing time, there is the possibility to crash the extension</p><h3 id="v0-0-1"><a class="header-anchor" href="#v0-0-1">#</a>v0.0.1</h3><h2 id="🛠-update-on-26-mar-2020-beta-version"><a class="header-anchor" href="#🛠-update-on-26-mar-2020-beta-version">#</a>🛠 update on 26 Mar 2020 (beta version)</h2><p>Add support of 2 parties connection<br>Add support of sync pause and play action<br>Add support of out-of-sync notification</p><h2 id="meta"><a class="header-anchor" href="#meta">#</a>Meta</h2><p>Yiliang “Louis” Wang – <a href="https://ylwang.codes/" target="_blank" rel="noopener">@blog</a> – <a href="mailto:louis.yl.wang@outlook.com">@mail</a></p><p>Onns – <a href="https://onns.xyz/">@blog</a> – <a href="mailto:onns@onns.xyz">@mail</a></p><h2 id="contributing"><a class="header-anchor" href="#contributing">#</a>Contributing</h2><ol><li>Fork it (<a href="https://github.com/LouisYLWang/Sync-Sofa/fork" target="_blank" rel="noopener">https://github.com/LouisYLWang/Sync-Sofa/fork</a>)</li><li>Create your feature branch (<code>git checkout -b feature/fooBar</code>)</li><li>Commit your changes (<code>git commit -am 'Add some fooBar'</code>)</li><li>Push to the branch (<code>git push origin feature/fooBar</code>)</li><li>Create a new Pull Request</li></ol><!-- Markdown link & img dfn's --><h2 id="faq"><a class="header-anchor" href="#faq">#</a>FAQ</h2><ol><li><p><strong>Q:</strong> When I installed, Chrome popup says that Sync Sofa requires the permissions of <code>read and change your data on a number of websites</code> and <code>read your browsing history</code>, sounds so horrible, is that safe?<br><strong>A:</strong> We do not collect your browsing data, the only thing we do is to get your current tab information and make sure you are visiting a site we support (<a href="#supported-list">support list</a>). All information is collected and processed locally. We do not mess up the data on the websites you are watching, just inject a sync script to get your pause, play, and seek operation. <strong>All source code can be reviewed at <a href="https://github.com/LouisYLWang/Sync-Sofa" target="_blank" rel="noopener">our github page</a>, we promise everything we did is necessary and not harmful.</strong></p></li><li><p>If your find your extension <strong>button is darken</strong>, please first make sure you are in a video playing page.</p></li><li><p>If you find your extension <strong>can not request room code</strong>, please first check the  <a href="#options-page">option page</a> and click <code>RESET</code> button. If it still not work, please close your web browser, wait for a while and try again. Currently our server is hosting abroad, it may cause connecting issue.</p></li><li><p>If you find your extension cannot connect to your peer, please check following:</p><ol><li>please make sure the <strong>version number</strong> of two clients are consistent. To check the version number, you need to open <a href="chrome://extensions/">chrome extension page</a> (if this link is not work, please type <code>chrome://extensions/</code> into the address bar and visit). You will find a extension with the title of <code>Sync Sofa - Online Video Synchronizer 1.0.6</code>. <code>1.0.6</code> is your current version number of Sync Sofa.</li><li>If 4.1 does not solve your problem, please try step 2 again.</li></ol></li></ol><h3 id="how-to-get-debug-info"><a class="header-anchor" href="#how-to-get-debug-info">#</a>How to get debug info</h3><ol><li>Open <code>Debug mode</code> in <a href="#options-page">Options page</a>.</li><li>Refresh video page (to make changes work).</li><li><code>Shift + ctrl + i</code> in Windows or <code>Shift + cmd + i</code> in MacOS.</li><li>Choose <code>console</code> tab.</li></ol><h3 id="can-not-open-vlc-web-interface"><a class="header-anchor" href="#can-not-open-vlc-web-interface">#</a>Can not open VLC web Interface</h3><p>First, check if <code>http://127.0.0.1:8080/</code>can be opened successfully, if the answer is not, go and check if <code>8080</code> is binded by some other process. If this process can be shuted down, turn it off and try again.</p><p>If not, please change the default port of the VLC web interface to <code>9891</code>. (Will come into operation from <code>v1.0.10</code>)</p><h3 id="have-regular-intervals-while-using"><a class="header-anchor" href="#have-regular-intervals-while-using">#</a>Have regular intervals while using</h3><p>The new version of <code>Sycn Sofa</code> uses <strong>System Time</strong> to sync the play time, so if the <strong>System Time</strong> of you two are different, there may be regular intervals while using. So just connect to the Internet and <strong>synchronise System Time</strong>.</p><h1 id="sync-sofa-在线视频同步播放插件"><a class="header-anchor" href="#sync-sofa-在线视频同步播放插件">#</a>Sync Sofa (在线视频同步播放插件)</h1><blockquote><p>以稳定，快捷的方式远程同步观看在线/本地视频</p></blockquote><p><img src="https://img.shields.io/github/go-mod/go-version/LouisYLWang/Sync-Sofa?filename=server%2Fgo.mod&amp;style=flat-square" alt="GitHub go.mod Go version (subfolder of monorepo)"> <a href="https://chrome.google.com/webstore/detail/sync-sofa-beta-online-vid/kgpnhgmpijhpkefpddoehhminpfiddmg" target="_blank" rel="noopener"><img src="https://img.shields.io/chrome-web-store/users/kgpnhgmpijhpkefpddoehhminpfiddmg?style=flat-square" alt="Chrome web store users"></a> <img src="https://img.shields.io/uptimerobot/status/m785506902-abf56ee3c6b33304675185c6?label=sync-us&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m787861126-8d48fa150c9a82edd7e1315c?label=sync-us2&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m785506916-32a7dc946ed8718c859e7cdd?label=sync-cn&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m785512978-f4cf51568a716df159f1c762?label=sync-cn2&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m787861121-335727572de1d1ea7378ebf0?label=sync-cn3&amp;style=flat-square" alt="Uptime Robot status"> <img src="https://img.shields.io/uptimerobot/status/m787861123-ea67c98024d33c70b4366305?label=sync-cn4&amp;style=flat-square" alt="Uptime Robot status"></p><p><a href="#sync-sofa-streaming-video-playback-synchronizer-extension">English</a> | <a href="#sync-sofa-%E5%9C%A8%E7%BA%BF%E8%A7%86%E9%A2%91%E5%90%8C%E6%AD%A5%E6%92%AD%E6%94%BE%E6%8F%92%E4%BB%B6">中文</a></p><p>Sync Sofa是一个稳定易用的Chrome浏览器拓展插件，可同步两端用户的视频播放操作，提高与身处异地的小伙伴一同观看视频的体验，目前支持以下主要功能：</p><ul><li>平等双人连接：任意一端均可控制对方播放状态</li><li>同步播放进度：支持播放、暂停、进度切换等操作</li><li>本地视频同步：可通过VLC同步本地视频播放状态</li></ul><h2 id="当前版本特性"><a class="header-anchor" href="#当前版本特性">#</a>当前版本特性</h2><p><strong>v1.0.9 - 2020年8月14日更新</strong></p><p>⚠️⚠️⚠️ 每个网站都有它<code>自己的倍速控件</code>，所以请忽略前端的错误<code>播放速度</code>显示。</p><p>新增：</p><ol><li>播放速率同步功能：任意端用户对播放速率的调整会自动同步至另一端</li></ol><p>修复：</p><ol><li>修复了没有bug的bug</li></ol><hr><p><strong>v1.0.8 - 2020年8月8日更新</strong></p><p>⚠️⚠️⚠️ <strong>请不要</strong>尝试使用像<code>0000</code>和<code>1234</code>这样简单的<code>房间码</code>，我们强烈建议你使用不常见的房间码，这样就不必频繁更改它。</p><p>新增：</p><ol><li>修改房间申请码逻辑，用户可自行输入房间码，且下次连接时无需重新申请，只需点击start按钮即可快速连接（！房间码须为四位小写字母+数字的组合）</li><li>增加内置文字聊天（可在配置页面切换）</li><li>增加系统通知选项（可在配置页面切换）</li><li>增加连接状态指示灯，显示在插件图标右下角（红-未连接，黄-等待对方连接，绿-正在连接）</li><li>增加socket断开因未知原因断开通知</li><li>增加房间码占用通知</li></ol><p>修复：</p><ol><li>修复了没有bug的bug</li></ol><hr><h2 id="支持网站列表"><a class="header-anchor" href="#支持网站列表">#</a>支持网站列表</h2><ul><li><a href="https://www.iqiyi.com/" target="_blank" rel="noopener">爱奇艺</a></li><li><a href="https://www.youku.com/" target="_blank" rel="noopener">优酷</a></li><li><a href="https://www.weiyun.com/" target="_blank" rel="noopener">微云</a></li><li><a href="https://v.qq.com/" target="_blank" rel="noopener">腾讯视频</a></li><li><a href="https://www.youtube.com/" target="_blank" rel="noopener">油管</a></li><li><a href="https://www.mgtv.com/" target="_blank" rel="noopener">芒果</a></li><li><a href="https://www.aliyundrive.com/" target="_blank" rel="noopener">阿里云盘</a></li><li>通过浏览器播放本地视频（仅支持AVC/H.264编码）</li><li><a href="https://www.videolan.org/vlc/index.html" target="_blank" rel="noopener">通过VLC视频播放器播放本地视频</a></li></ul><p><a href="https://github.com/LouisYLWang/Sync-Sofa/blob/dev/client/chrome_extension/manifest.json#L12" target="_blank" rel="noopener">完整的支持网站列表点这里</a><br><a href="https://github.com/LouisYLWang/Sync-Sofa/issues/22" target="_blank" rel="noopener">点击这里向我们反馈更多网站</a></p><h2 id="设置"><a class="header-anchor" href="#设置">#</a>设置</h2><p>😊 此部分为可选设置，我们已经为你配置好默认服务器，如果你不感兴趣，或者没有修改服务器的需求，请移步至<a href="#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E">下一部分</a>.</p><h3 id="服务器列表"><a class="header-anchor" href="#服务器列表">#</a>服务器列表</h3><p>最近许多用户反映国内的访问不稳定，是因为我们的默认服务器在美国，因此我们提供了备用服务器列表，你可以根据你的位置切换到离你距离更近的服务器。</p><ul><li>中国杭州【1】<ul><li><code>https</code></li><li><code>sync-cn.onns.xyz</code></li></ul></li><li>中国北京【2】【弃用】 (感谢 <a href="https://github.com/huoranxuanyuan" target="_blank" rel="noopener">@huoranxuanyuan</a>)<ul><li><code>https</code></li><li><code>api.huoranxuanyuan.cn</code></li></ul></li><li>中国北京【3】 (感谢 <a href="https://github.com/liqimore" target="_blank" rel="noopener">@liqimore</a>)<ul><li><code>https</code></li><li><code>sync-bj.204800.xyz</code></li></ul></li><li>中国上海【4】 (感谢 <a href="https://github.com/liqimore" target="_blank" rel="noopener">@liqimore</a>)<ul><li><code>https</code></li><li><code>sync-shanghai.204800.xyz</code></li></ul></li><li>美国【1】<ul><li><code>https</code></li><li><code>app.ylwang.me</code></li></ul></li><li>美国密苏里州【2】 (感谢 <a href="https://github.com/liqimore" target="_blank" rel="noopener">@liqimore</a>)<ul><li><code>https</code></li><li><code>sync-us-central.pq02.com</code></li></ul></li></ul><p>在设置服务器前，请检查服务器的状态：<a href="#sync-sofa-%E5%9C%A8%E7%BA%BF%E8%A7%86%E9%A2%91%E5%90%8C%E6%AD%A5%E6%92%AD%E6%94%BE%E6%8F%92%E4%BB%B6">Sync Sofa (在线视频同步播放插件)</a>.</p><p>我们会感谢你对该开源项目作出的贡献，你可以通过<strong>提供自己部署的服务</strong>来支持我们，也可以帮我们<strong>分担一点服务器费用</strong>的压力。（<s>也可以一键三连</s>）</p><p><strong>支付宝, 微信支付, 贝宝</strong></p><p><img src="https://onns.xyz/blog/image/20200704-1.png" alt="alipay"> <img src="https://onns.xyz/blog/image/20200704-2.png" alt="wechat pay"> <img src="https://onns.xyz/blog/image/20200704-3.jpg" alt="paypal"></p><h3 id="选项页"><a class="header-anchor" href="#选项页">#</a>选项页</h3><p>打开选项页有下列两种方法：</p><ol><li>右键点击<code>Sync Sofa</code>插件图标, 选择<code>选项</code>。</li><li>左键点击<code>Sync Sofa</code>插件图标, 在插件弹窗中选择底部<code>设置</code>图标。</li></ol><p>设置界面如下：</p><p><img src="https://onns.xyz/blog/image/20200629-3.png" alt="Sync Sofa - Options"></p><h3 id="刷新视频页面"><a class="header-anchor" href="#刷新视频页面">#</a>刷新视频页面</h3><p>修改设置并保存后，请刷新视频网站页面/本地视频页面/ <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a>（如果你使用VLC播放本地视频）来使设置生效。</p><h2 id="使用说明"><a class="header-anchor" href="#使用说明">#</a>使用说明</h2><h3 id="注意事项"><a class="header-anchor" href="#注意事项">#</a>注意事项</h3><p>⚠️ 使用前请确保两个<code>客户端版本号</code>一致。</p><p>⚠️ 使用前请确保两个<code>服务器域名</code>一致。</p><p>⚠️ 如需播放本地<code>.mp4</code>文件，请在扩展详细信息页面启用“允许访问文件url”。</p><p>方法1. 在地址栏输入<code>chrome://extensions/</code>，找到<code>Sync Sofa</code>，点击<code>详情</code>按钮，启用<code>允许访问文件网址</code>。</p><p>方法2.右击浏览器左上角<code>Sync Sofa</code>图标，选择<code>管理拓展程序</code>, 启用<code>允许访问文件网址</code>。</p><p>⚠️ 如果你的浏览器中安装了<code>多个不同版本</code>的<code>Sync Sofa</code>,请只启用其中一个并禁用其他版本。</p><h3 id="打开视频页面"><a class="header-anchor" href="#打开视频页面">#</a>打开视频页面</h3><p>你们可以同步观看不同来源的视频，在播放本地<code>.mp4</code>视频文件时，你的小伙伴可以选择在视频网站上和你同步观看，此外，你们还可以在不同的视频网站看观看相同的视频。</p><p>例如，<code>用户A</code>在Bilibili上观看此视频：</p><ul><li><a href="https://www.bilibili.com/video/BV1k5411Y7Rc" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1k5411Y7Rc</a><br><img src="https://onns.xyz/blog/image/20200627-1.png" alt="User A"></li></ul><p>此时<code>用户B</code>可在YouTube上同步观看同一视频：</p><ul><li><a href="https://www.youtube.com/watch?v=QAelMP1PoNA" target="_blank" rel="noopener">https://www.youtube.com/watch?v=QAelMP1PoNA</a><br><img src="https://onns.xyz/blog/image/20200627-2.png" alt="User B"></li></ul><p>PS：我是boki的粉丝，所以就用了她的视频截图，已经高斯模糊处理过了，如果有侵权的话，请联系我们删除，真的很抱歉！</p><p>如果视频开始前有广告，请在广告结束后进入下一步。</p><h3 id="获取连接码"><a class="header-anchor" href="#获取连接码">#</a>获取连接码</h3><p>点击 <code>Sync Sofa</code> 插件图标并点击<code>START</code>（开始） 按钮.</p><p><img src="https://onns.xyz/blog/image/20200627-3.png" alt="User A"></p><p>如一切正常，你会收到弹窗提示<code>Room created and room code copied to clipboard</code> （房间已建立，连接码已复制到剪贴板），同时<code>连接码</code>将自动拷贝到剪切板中，请将它发给你的小伙伴。</p><h3 id="开始连接"><a class="header-anchor" href="#开始连接">#</a>开始连接</h3><p>你的小伙伴收到<code>room code（连接码）</code>后，点击<code>Sync Sofa</code>插件图标，粘贴到输入栏中点击<code>START（开始）</code>按钮。</p><p><img src="https://onns.xyz/blog/image/20200627-4.png" alt="User B"></p><h3 id="愉快观看吧"><a class="header-anchor" href="#愉快观看吧">#</a>愉快观看吧</h3><p><img src="https://onns.xyz/blog/image/20200627-5.png" alt="User A"><br><img src="https://onns.xyz/blog/image/20200627-6.png" alt="User B"></p><p>现在你可以播放视频了，你的播放，暂停，更改时间等操作都会同步给你的小伙伴。愉快地同步观看吧!</p><h2 id="vlc支持"><a class="header-anchor" href="#vlc支持">#</a>VLC支持</h2><p>如果你们都通过<code>VLC 媒体播放器</code>播放视频，<code>Sync Sofa</code>也可以同步你们的操作。</p><h3 id="通过web控制界面操控vlc播放"><a class="header-anchor" href="#通过web控制界面操控vlc播放">#</a>通过Web控制界面操控VLC播放</h3><p>首先你们需要开启VLC的Web控制界面，使浏览器可以控制VLC的播放，请参考以下官方文档：</p><ul><li><a href="https://wiki.videolan.org/Control_VLC_via_a_browser/" target="_blank" rel="noopener">通过浏览器控制VLC</a></li><li><a href="https://wiki.videolan.org/Documentation:Modules/http_intf/#VLC_2.0.0_and_later" target="_blank" rel="noopener">开启VLC的web控制界面</a></li></ul><ol><li>打开VLC媒体播放器</li><li>进入 <code>工具 → 偏好设置 (左下角显示设置选择 &quot;全部&quot;) → 界面 → 主界面</code>, 勾选 “Web”<br><img src="https://onns.xyz/blog/image/20200628-1.png" alt="Step 2"></li><li>进入 <code>工具 → 偏好设置 (左下角显示设置选择 &quot;全部&quot;) → 界面 → 主界面 → Lua</code>, 设置 <code>Lua HTTP - 密码</code><br><img src="https://onns.xyz/blog/image/20200628-2.png" alt="Step 3"></li><li>点击<code>保存</code> 并重启VLC媒体播放器</li><li>在浏览器中打开 <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a></li></ol><p>这时你的网页应该如下图所示:</p><p><img src="https://onns.xyz/blog/image/20200628-3.png" alt="VLC media player - Web Interface"></p><h3 id="打开本地视频"><a class="header-anchor" href="#打开本地视频">#</a>打开本地视频</h3><p>本插件本质上是通过控制<code>VLC的网页控制页面</code>（<a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a>）来控制<code>VLC</code>的，所以下一步你应该用<code>VLC媒体播放器</code>来打开你想同步的视频，然后检查一下<a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a>能否顺利控制视频的播放等。如果可以，即可进入下一步；否则需要检查一下是不是打开了多个<code>VLC的窗口</code>，如果是请关掉其它的，然后重新尝试控制。一个正常的<code>VLC控制界面</code>应该如下图所示：</p><p><img src="https://onns.xyz/blog/image/20200722-1.png" alt="VLC media player - Web Interface"></p><p>在网页上有视频标题，当前播放时间和总播放时长等。</p><h3 id="获取连接码-2"><a class="header-anchor" href="#获取连接码-2">#</a>获取连接码</h3><p>确认已在浏览器中打开 <a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a>,<br>点击 <code>Sync Sofa</code> 插件图标并点击<code>REQUEST NEW CODE</code>（获取链接码） 按钮.</p><p>如一切正常，你会收到弹窗提示<code>Room created and room code copied to clipboard</code>（房间已建立，连接码已复制到剪贴板，同时<code>连接码</code>将自动拷贝到剪切板中，请将它发给你的小伙伴。</p><h3 id="开始连接-2"><a class="header-anchor" href="#开始连接-2">#</a>开始连接</h3><p>你的小伙伴收到<code>room code</code>后，点击<code>Sync Sofa</code>插件图标，粘贴到输入栏中点击<code>START</code>（开始）按钮。</p><h3 id="愉快观看吧-2"><a class="header-anchor" href="#愉快观看吧-2">#</a>愉快观看吧</h3><p>现在你可以使用<code>Sync Sofa</code>通过VLC同步本地视频播放状态了，你的播放，暂停，更改时间等操作都会同步给你的小伙伴。愉快地同步观看吧!</p><p><strong>注意</strong>:</p><p>⚠️ 在播放时，切勿关闭<a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a>页面。</p><h3 id="关闭控制页面"><a class="header-anchor" href="#关闭控制页面">#</a>关闭控制页面</h3><p>视频播放完毕后，点击<code>Sync Sofa</code>插件页面上的<code>STOP</code>按钮，或关闭<a href="http://127.0.0.1:8080/" target="_blank" rel="noopener">http://127.0.0.1:8080/</a>页面。</p><h2 id="安装"><a class="header-anchor" href="#安装">#</a>安装</h2><h3 id="谷歌浏览器"><a class="header-anchor" href="#谷歌浏览器">#</a>谷歌浏览器</h3><h4 id="从谷歌商店安装"><a class="header-anchor" href="#从谷歌商店安装">#</a>从谷歌商店安装</h4><ol><li>在Chrome浏览器中打开 <a href="https://chrome.google.com/webstore/detail/sync-sofa-online-video-sy/kgpnhgmpijhpkefpddoehhminpfiddmg" target="_blank" rel="noopener">Sync Sofa - Online Video Synchronizer - Chrome Web Store</a></li><li>点击 <code>Add to Chrome</code> 按钮</li><li>选择 <code>Add extension</code></li></ol><h4 id="从本地-crx-文件安装"><a class="header-anchor" href="#从本地-crx-文件安装">#</a>从本地 .crx 文件安装</h4><ol><li>打开 <a href="https://github.com/LouisYLWang/Sync-Sofa/releases/latest" target="_blank" rel="noopener">Github release page（版本发布页面）</a></li><li>下载 <code>sync_sofa.[version].crx</code>, <em>[version]</em> 为当前最新版本编号</li><li>在Chrome浏览器地址栏中输入 <code>chrome://extensions/</code></li><li>启用 <code>开发者模式</code> (页面右上角)</li><li>将 <code>sync_sofa.[版本号].crx</code> 拖入 <code>chrome://extensions/</code> 页面</li><li>点击 <code>添加插件</code> 按钮</li></ol><p><strong>注意</strong>:<br>如果该插件被Chrome浏览器禁用，请尝试 <a href="#%E4%BB%8E%E8%B0%B7%E6%AD%8C%E5%95%86%E5%BA%97%E5%AE%89%E8%A3%85">从谷歌商店安装</a> 或者 <a href="#%E5%AE%89%E8%A3%85%E6%9C%AA%E6%89%93%E5%8C%85%E7%9A%84%E6%8F%92%E4%BB%B6">安装未打包的插件</a></p><blockquote><p>This extension is not listed in the Chrome Web Store and may have been added without your knowledge.</p></blockquote><h4 id="安装未打包的插件"><a class="header-anchor" href="#安装未打包的插件">#</a>安装未打包的插件</h4><ol><li>下载 <a href="https://github.com/LouisYLWang/Sync-Sofa/archive/master.zip" target="_blank" rel="noopener">稳定版本</a> or <a href="https://github.com/LouisYLWang/Sync-Sofa/archive/dev.zip" target="_blank" rel="noopener">开发版本</a> (新特性，也许也有bug)</li><li>解压你下载的<code>.zip</code> 压缩文件</li><li>在Chrome地址栏输入 <code>chrome://extensions/</code> 打开插件管理页面</li><li>开启右上角<code>开发者模式</code> 按钮</li><li>点击左上角<code>加载未打包的拓展</code> 按钮</li><li>选择 <code>下载路径/解压路径/client/chrome_extension</code></li><li>点击 <code>选择</code></li></ol><h3 id="微软edge浏览器"><a class="header-anchor" href="#微软edge浏览器">#</a>微软Edge浏览器:</h3><h4 id="从edge浏览器插件中心安装"><a class="header-anchor" href="#从edge浏览器插件中心安装">#</a>从Edge浏览器插件中心安装</h4><ol><li>在Edge浏览器中打开 <a href="https://microsoftedge.microsoft.com/addons/detail/kpfbclpafmmjalikjjlcoddffpfgghgp" target="_blank" rel="noopener">Sync Sofa - Online Video Synchronizer - Microsoft Edge Addons</a></li><li>点击 <code>获取</code> 按钮</li></ol><h3 id="firefox（后续版本添加支持）"><a class="header-anchor" href="#firefox（后续版本添加支持）">#</a>Firefox（后续版本添加支持）</h3><p><s>其实也可能不会</s></p><h2 id="服务端部署指南"><a class="header-anchor" href="#服务端部署指南">#</a>服务端部署指南</h2><p><strong>注意</strong>:</p><p>⚠️ 部署前，建议你的服务器已经部署了SSL/TLS证书，并已连接到域名。以下部署脚本基于使用Let’s Encrypt certificates验证的服务器，如使用其他的证书提供商，可能需要修改部分脚本以正常运行。</p><p>⚠️ dev模式使用http协议进行传输，prod使用https协议进行传输</p><h3 id="直接部署（不使用docker容器）"><a class="header-anchor" href="#直接部署（不使用docker容器）">#</a>直接部署（不使用Docker容器）:</h3><p><strong>1. 获取执行文件</strong></p><ul><li><p>如果你想要修改源代码并自行编译，请执行以下shell脚本获取二进制文件。在执行前，请确认服务器已安装<code>Go</code>的环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/LouisYLWang/Sync-Sofa/server</span><br><span class="line"><span class="comment"># 如果你不清楚 $GOPATH</span></span><br><span class="line"><span class="comment"># 请尝试输入并执行 "go env GOPATH"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/LouisYLWang/Sync-Sofa/server</span><br><span class="line"></span><br><span class="line"><span class="comment"># （下一步可省略）</span></span><br><span class="line"><span class="comment"># 如果你看到了这条消息:</span></span><br><span class="line"><span class="comment"># "dial tcp 216.58.200.49:443: i/o timeout"</span></span><br><span class="line"><span class="comment"># 请添加并执行下一条命令</span></span><br><span class="line"><span class="built_in">export</span> GOPROXY=https://goproxy.io</span><br><span class="line"></span><br><span class="line">go install</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/bin</span><br></pre></td></tr></table></figure></li><li><p>如果无需修改源代码并自行编译，你也可以直接下载二进制文件:</p><ol><li>打开 <a href="https://github.com/LouisYLWang/Sync-Sofa/releases/latest" target="_blank" rel="noopener">Github release page</a></li><li>下载 <code>server</code> 文件（适用于linux服务器）</li><li>下载 <code>config.json</code> 文件，移动至<code>server</code>同一路径</li></ol></li></ul><p><strong>2. 修改配置文件：</strong></p><ul><li><p>配置变量：</p><ul><li><code>addr</code>: 服务器端口</li><li><code>runmode</code>:<ul><li>dev: 开发模式（建议本地使用，不包含对HTTPS的支持）</li><li>prod: 生产模式</li></ul></li><li><code>tlsdir</code>:<ul><li><code>tlskey</code>: TLS证书私钥路径</li><li><code>tlscert</code>: TLS证书路径</li></ul></li></ul><p><strong>Notices</strong>: <code>addr</code>, <code>runmode</code> 为必须参数, <code>tlskey</code>, <code>tlscert</code> 参数在使用HTTPS连接时（生产环境下）为必须参数</p></li><li><p>开发模式（http）配置文件样例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"addr"</span>: <span class="string">":80"</span>,</span><br><span class="line">  <span class="attr">"runmode"</span>: <span class="string">"dev"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>生产模式（https）配置文件样例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"addr"</span>: <span class="string">":443"</span>,</span><br><span class="line">  <span class="attr">"runmode"</span>: <span class="string">"prod"</span>,</span><br><span class="line">  <span class="attr">"tlsdir"</span>: &#123;</span><br><span class="line">    <span class="attr">"tlskey"</span>: <span class="string">"/etc/letsencrypt/live/your.host.url/privkey.pem"</span>,</span><br><span class="line">    <span class="attr">"tlscert"</span>: <span class="string">"/etc/letsencrypt/live/your.host.url/fullchain.pem"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>3. 在执行文件所在路径下，执行 <code>./server</code> 部署服务器, 部署成功信息如下:</strong></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">found config file, read parameters from config file...</span><br><span class="line">server is listening at &#123;your_port_number&#125;...</span><br></pre></td></tr></table></figure><h3 id="使用docker容器部署"><a class="header-anchor" href="#使用docker容器部署">#</a>使用Docker容器部署</h3><p>在部署前请确认Docker容器在服务器端可正常运行，请按照如下提示修改参数</p><ul><li><p>配置变量：</p><ul><li><code>ADDR</code>: 服务器端口</li><li><code>RUNMODE</code>:<ul><li>dev: 开发模式（建议本地使用，不包含对HTTPS的支持）</li><li>prod: 生产模式</li></ul></li><li><code>APIHOST</code>: 服务器网址</li><li><code>IMGNAME</code>: docker容器名称（可自选）</li><li><code>TLSKEYPATH</code>: TLS证书私钥路径</li><li><code>TLSCERTPATH</code>: TLS证书路径</li></ul></li><li><p>开发模式（http）配置文件样例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker pull louisylwang/watchtogether</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> ADDR=:4000 \      </span><br><span class="line"><span class="built_in">export</span> RUNMODE=dev \   </span><br><span class="line"><span class="built_in">export</span> IMGNAME=yourimagename \   </span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">-e ADDR=:4000 \</span><br><span class="line">-e RUNMODE=RUNMODE \</span><br><span class="line">-p 4000:4000 \</span><br><span class="line">--name IMGNAME louisylwang/watchtogether</span><br></pre></td></tr></table></figure></li><li><p>生产模式（https）配置文件样例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">docker pull louisylwang/watchtogether</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> ADDR=:443 \      </span><br><span class="line"><span class="built_in">export</span> RUNMODE=prod \   </span><br><span class="line"><span class="built_in">export</span> APIHOST=your.host.name \   </span><br><span class="line"><span class="built_in">export</span> IMGNAME=yourimagename \   </span><br><span class="line"><span class="built_in">export</span> TLSKEYPATH=/your/path/to/TLS/privatekey \</span><br><span class="line"><span class="built_in">export</span> TLSCERTPATH=/your/path/to/TLS/certification \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">-e ADDR=:ADDR \</span><br><span class="line"><span class="comment">#docker port to server:server port to docker, not necessarily the same</span></span><br><span class="line">-p ADDR:ADDR \ </span><br><span class="line">-e RUNMODE=RUNMODE \</span><br><span class="line"><span class="comment">#if you use letsencrypt, TLSKEY value should be /etc/letsencrypt/live/$APIHOST/privkey.pem</span></span><br><span class="line">-e TLSKEY=TLSKEYPATH \ </span><br><span class="line"><span class="comment">#if you use letsencrypt, TLSCERT value should be /etc/letsencrypt/live/$APIHOST/fullchain.pem </span></span><br><span class="line">-e TLSCERT=TLSCERTPATH \ </span><br><span class="line"><span class="comment">#need to expose your TLS certification file to docker</span></span><br><span class="line">-v /etc/letsencrypt:/etc/letsencrypt:ro \ </span><br><span class="line">--name IMGNAME louisylwang/watchtogether \</span><br><span class="line">--restart=always</span><br></pre></td></tr></table></figure></li><li><p>部署成功后，执行 <code>docker logs {your docker image name}</code>将会提示下列日志信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">not found config file, read parameters from system variables...</span><br><span class="line">YYYY&#x2F;MM&#x2F;DD HH:MM:SS server is listening at :ADDR...</span><br></pre></td></tr></table></figure></li></ul><h2 id="版本日志"><a class="header-anchor" href="#版本日志">#</a>版本日志</h2><h3 id="v1-0-9-2"><a class="header-anchor" href="#v1-0-9-2">#</a>v1.0.9</h3><h2 id="🛠-2020年8月14日更新"><a class="header-anchor" href="#🛠-2020年8月14日更新">#</a>🛠 2020年8月14日更新</h2><p>⚠️⚠️⚠️ 每个网站都有它<code>自己的倍速控件</code>，所以请忽略前端的错误<code>播放速度</code>显示。</p><p>新增：</p><ol><li>播放速率同步功能：任意端用户对播放速率的调整会自动同步至另一端</li></ol><p>修复：</p><ol><li>修复了没有bug的bug</li></ol><h3 id="v1-0-8-2"><a class="header-anchor" href="#v1-0-8-2">#</a>v1.0.8</h3><h2 id="🛠-2020年8月8日更新"><a class="header-anchor" href="#🛠-2020年8月8日更新">#</a>🛠 2020年8月8日更新</h2><p>⚠️⚠️⚠️ <strong>请不要</strong>尝试使用像<code>0000</code>和<code>1234</code>这样简单的<code>房间码</code>，我们强烈建议你使用不常见的房间码，这样就不必频繁更改它。</p><p>新增：</p><ol><li>修改房间申请码逻辑，用户可自行输入房间码，且下次连接时无需重新申请，只需点击start按钮即可快速连接（！房间码须为四位小写字母+数字的组合）</li><li>增加内置文字聊天（可在配置页面切换）</li><li>增加系统通知选项（可在配置页面切换）</li><li>增加连接状态指示灯，显示在插件图标右下角（红-未连接，黄-等待对方连接，绿-正在连接）</li><li>增加socket断开因未知原因断开通知</li><li>增加房间码占用通知</li></ol><p>修复：</p><ol><li>修复了没有bug的bug</li></ol><h3 id="v1-0-7-2"><a class="header-anchor" href="#v1-0-7-2">#</a>v1.0.7</h3><h2 id="🛠-2020年7月5日更新"><a class="header-anchor" href="#🛠-2020年7月5日更新">#</a>🛠 2020年7月5日更新</h2><p>⚠️⚠️⚠️ 注意，此版本与&lt;= 1.0.5的任何版本都不兼容，请务必确保你的版本与小伙伴的版本一致。</p><ul><li>新增功能：<ul><li>新增版本检测（高版本用户与低版本用户连接时，若连接码由低版本用户申请，高版本用户将收到提示，请根据提示告知对方升级最新版本）</li></ul></li><li>修复功能:<ul><li>修复对 <a href="https://www.bilibili.com/bangumi/*" target="_blank" rel="noopener">bilibili movie</a> 的支持</li><li>修复了优酷及芒果TV无法同步操作的问题</li></ul></li></ul><h3 id="v1-0-6-2"><a class="header-anchor" href="#v1-0-6-2">#</a>v1.0.6</h3><h2 id="🛠-2020年6月28日更新"><a class="header-anchor" href="#🛠-2020年6月28日更新">#</a>🛠 2020年6月28日更新</h2><p>⚠️⚠️⚠️ 注意，此版本与之前的任何版本都不兼容，请务必确保你的版本与小伙伴的版本一致。</p><ul><li>新增功能：<ul><li>支持芒果TV（来乘风破浪吧！🤣）</li><li>支持使用VLC播放器同步播放本地视频文件</li><li>新增设置页面-调试模式</li><li>新增捐赠页面</li><li>新增wiki页面</li></ul></li><li>修复功能:<ul><li>提高同步的稳定性:<ul><li>更新了同步逻辑（不与之前的任何版本兼容，请尽快更新至1.0.6+）</li><li>增加缓冲检测</li></ul></li></ul></li></ul><h3 id="v1-0-5-2"><a class="header-anchor" href="#v1-0-5-2">#</a>v1.0.5</h3><h2 id="🛠-2020年5月12日更新"><a class="header-anchor" href="#🛠-2020年5月12日更新">#</a>🛠 2020年5月12日更新</h2><ul><li>新增功能：<ul><li>增加对Edge浏览器的支持</li></ul></li><li>修复功能：<ul><li>提高同步的稳定性</li></ul></li></ul><h3 id="v1-0-4-2"><a class="header-anchor" href="#v1-0-4-2">#</a>v1.0.4</h3><h2 id="🛠-2020年5月10日更新"><a class="header-anchor" href="#🛠-2020年5月10日更新">#</a>🛠 2020年5月10日更新</h2><ul><li>新增功能：<ul><li>新增成功连接提示</li></ul></li><li>修复功能：<ul><li>提高同步的稳定性</li><li>修改消息弹窗样式</li></ul></li></ul><h3 id="v1-0-3-2"><a class="header-anchor" href="#v1-0-3-2">#</a>v1.0.3</h3><h2 id="🛠-2020年5月8日更新"><a class="header-anchor" href="#🛠-2020年5月8日更新">#</a>🛠 2020年5月8日更新</h2><ul><li>新增功能：<ul><li>新增对以下视频网站的支持<ul><li><a href="https://www.iqiyi.com/" target="_blank" rel="noopener">爱奇艺</a></li><li><a href="https://www.youku.com/" target="_blank" rel="noopener">优酷</a></li><li><a href="https://www.weiyun.com/" target="_blank" rel="noopener">微云</a></li><li><a href="https://v.qq.com/" target="_blank" rel="noopener">腾讯视频</a></li></ul></li></ul></li><li>修复功能：<ul><li>提高同步的稳定性</li><li>修改文档</li></ul></li></ul><h3 id="v1-0-2-2"><a class="header-anchor" href="#v1-0-2-2">#</a>v1.0.2</h3><h2 id="🛠-2020年3月31日更新"><a class="header-anchor" href="#🛠-2020年3月31日更新">#</a>🛠 2020年3月31日更新</h2><ul><li>新增功能：<ul><li>支持对修改播放进度的同步</li></ul></li><li>修复功能：<ul><li>提高同步的稳定性</li></ul></li></ul><h3 id="v0-0-1-2"><a class="header-anchor" href="#v0-0-1-2">#</a>v0.0.1</h3><h2 id="🛠-2020年3月26日更新-测试版"><a class="header-anchor" href="#🛠-2020年3月26日更新-测试版">#</a>🛠 2020年3月26日更新 (测试版)</h2><ul><li>新增功能：<ul><li>支持播放暂停同步</li><li>支持断开连接提示</li></ul></li></ul><h2 id="开发者"><a class="header-anchor" href="#开发者">#</a>开发者</h2><p>Yiliang “Louis” Wang – <a href="https://ylwang.codes/" target="_blank" rel="noopener">@blog</a> – <a href="mailto:louis.yl.wang@outlook.com">@mail</a></p><p>Onns – <a href="https://onns.xyz/">@blog</a> – <a href="mailto:onns@onns.xyz">@mail</a></p><h2 id="参与更新"><a class="header-anchor" href="#参与更新">#</a>参与更新</h2><ol><li>拷贝当前代码（<a href="https://github.com/LouisYLWang/Sync-Sofa/fork%EF%BC%89" target="_blank" rel="noopener">https://github.com/LouisYLWang/Sync-Sofa/fork）</a></li><li>创建你自己的分支 (<code>git checkout -b feature/fooBar</code>)</li><li>添加评论 (<code>git commit -am 'Add some fooBar'</code>)</li><li>提交代码 (<code>git push origin feature/fooBar</code>)</li><li>创建一个更新请求</li></ol><!-- Markdown link & img dfn's --><h2 id="常见问题"><a class="header-anchor" href="#常见问题">#</a>常见问题</h2><ol><li><p><strong>Q:</strong> 在我安装的时候，Chrome提示我Sync Sofa可以<code>读取和更改您在一些网站上的数据</code>以及<code>读取您的浏览记录</code>，听起来很严重，它安全吗？</p><p><strong>A:</strong> 我们不会收集你的浏览数据，我们只会读取你当前标签页的标题，用来判断你是否在访问我们支持的页面(<a href="#supported-list">支持网站列表</a>)，以避免影响使用体验的事情发生。所有对你浏览数据的收集和处理只会发生在本地；事实上我们也不会随意修改网站的数据，我们只会使用一个同步脚本来监测你播放，暂停及更新进度等操作（我们不得不这样做）。<strong>所有的源码都可以在 [我们的项目主页]审核(<a href="https://github.com/LouisYLWang/Sync-Sofa" target="_blank" rel="noopener">https://github.com/LouisYLWang/Sync-Sofa</a>), 我们承诺目前做的所有事情都是必要且无害的.</strong></p></li><li><p>如果你发现<strong>按钮变灰</strong>, 请确认你是否在我们支持的网站操作(<a href="#supported-list">支持网站列表</a>).</p></li><li><p>如果你发现插件<strong>无法获取同步码</strong>，请按以下顺序检查问题：</p><ol><li>请检查 <a href="#options-page">选项页面</a> 并点击<code>重置</code> 按钮</li><li>请参考 <a href="#options-page">选项页面</a> 根据你所在的位置选择并设置合适的服务器</li><li>请检查服务器当前状态 <a href="https://sync-status.onns.xyz/" target="_blank" rel="noopener">https://sync-status.onns.xyz/</a>是否正常启动</li><li>如以上都不能解决你的问题，请通过<a href="https://github.com/LouisYLWang/Sync-Sofa/issues" target="_blank" rel="noopener">项目反馈页面</a>或<a href="https://onns.xyz/sync-sofa/">项目wiki页面</a>右下角的反馈按钮通知我们。</li></ol></li><li><p>如果你发现插件<strong>无法正常同步操作</strong>，请按以下顺序检查问题：</p><ol><li>请务必确认两方版本号是否一致，欲检测版本号，需打开<a href="chrome://extensions/">chrome extension page</a>，并找到<code>Sync Sofa - Online Video Synchronizer *.*.*</code>，其中 <code>*.*.*</code> 为当前版本。</li><li>请检查 <a href="#options-page">选项页面</a> 并点击<code>重置</code> 按钮</li><li>请参考 <a href="#options-page">选项页面</a> 根据你所在的位置选择并设置合适的服务器</li><li>请检查服务器当前状态 <a href="https://sync-status.onns.xyz/" target="_blank" rel="noopener">https://sync-status.onns.xyz/</a>是否正常启动.</li><li>如以上都不能解决你的问题，请通过<a href="https://github.com/LouisYLWang/Sync-Sofa/issues" target="_blank" rel="noopener">项目反馈页面</a>或<a href="https://onns.xyz/sync-sofa/">项目wiki页面</a>右下角的反馈按钮通知我们。</li></ol></li></ol><h3 id="如何获取调试信息"><a class="header-anchor" href="#如何获取调试信息">#</a>如何获取调试信息</h3><ol><li>在<a href="#%E9%80%89%E9%A1%B9%E9%A1%B5">选项页</a>里打开 <code>debug模式</code>。</li><li>刷新视频页面。</li><li><code>Shift + ctrl + i</code> 在 Windows 下 或者 <code>Shift + cmd + i</code> 在 MacOS 下.</li><li>选择 <code>console</code> 标签页.</li></ol><h3 id="vlc同步功能无法正常使用"><a class="header-anchor" href="#vlc同步功能无法正常使用">#</a>VLC同步功能无法正常使用</h3><p>首先确认<code>http://127.0.0.1:8080/</code>能否正常打开，如果不能，请查看一下<code>8080</code>端口是否被其它应用程序占用。如果该程序可以被关闭，请关闭后再次尝试开启。</p><p>如果不能，请参考相关配置将<code>VLC</code>的端口号设置为<code>9891</code>。（将在<code>v1.0.10</code>之后生效）</p><p>如果可以打开<code>http://127.0.0.1:8080/</code>，但页面无法正常渲染，请尝试开启<code>科学上网</code>后再次刷新页面。（页面需要加载google的一个js文件）</p><h3 id="在使用时有固定的播放间隔"><a class="header-anchor" href="#在使用时有固定的播放间隔">#</a>在使用时有固定的播放间隔</h3><p>新版的<code>Sync Sofa</code>插件使用了<strong>系统时间</strong>来同步播放时间，如果两个设备的<strong>系统时间</strong>不一致，就会产生固定的时间间隔。解决方法是联网<strong>同步系统时间</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chrome </tag>
            
            <tag> extension </tag>
            
            <tag> sync-sofa </tag>
            
            <tag> document </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信表情包</title>
      <link href="/blog/2020/08/10/wechat-sticker/"/>
      <url>/blog/2020/08/10/wechat-sticker/</url>
      
        <content type="html"><![CDATA[<p>一直有个愿望希望可以做一套表情包，猫猫狗狗的，发布到微信表情商店去，然后获得一份来自陌生人的打赏。</p><p>兜兜转转，最终终于发出去了：<a href="https://w.url.cn/s/AhnuUpf#wechat_redirect" target="_blank" rel="noopener">【圆不溜Q】</a></p><center><p><img src="//onns.xyz/blog/image/20200810-1.jpg" alt="QQ"></p></center><a id="more"></a><p>四舍五入，也算是有了自己的猫了。</p><p>也算是今年的小目标：</p><ul><li>发布一套微信表情 ✓</li><li>获得一份陌生人的赞赏 x</li></ul><p>开通赞赏好麻烦，需要的素材文件大小太大，在<code>降质</code>方面浪费了好多时间。</p><p>结果因为用错字体，又重新导出了一次表情包，如果能够批量导出，该有多好呀。</p><p>第一次审核第二天就出结果了，不通过，因为<code>憨批</code>这个词，不符合价值观。</p><p>第二次是五天后才出的结果，终于通过了，唉 ╮(╯▽╰)╭。</p>]]></content>
      
      
      <categories>
          
          <category> try </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> wechat </tag>
            
            <tag> 表情包 </tag>
            
            <tag> sticker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux追加日志测试</title>
      <link href="/blog/2020/08/10/log-write-test/"/>
      <url>/blog/2020/08/10/log-write-test/</url>
      
        <content type="html"><![CDATA[<p>插件监控有用到简单的文件系统，想知道写入量很大之后会不会有太大的性能问题，这样才好确定是单个日志文件（方便收集和查看）还是要多个日志文件。</p><a id="more"></a><h2 id="修改私钥权限"><a class="header-anchor" href="#修改私钥权限">#</a>修改私钥权限</h2><p>一般 SSH 私钥都要赋予一个<code>600</code>的权限，否则会提示权限过高不能使用，但是 Windows 没有类似<code>chmod</code>的命令，所以只能手动的修改权限。</p><ol><li>打开<code>Windows PowerShell</code>，输入<code>$env:username</code>得到当前用户名</li><li>右键-&gt;属性-&gt;安全-&gt;高级</li><li>禁用继承</li><li>删除所有的<code>权限条目</code></li><li>将私钥文件的所有者设置为当前用户，即刚刚拿到的用户名</li></ol><p>详细内容可以参考 <a href="https://blog.csdn.net/joshua2011/article/details/90208741" target="_blank" rel="noopener">真正解决 windows OpenSSH WARNING: UNPROTECTED PRIVATE KEY FILE!</a>。</p><h2 id="查看系统"><a class="header-anchor" href="#查看系统">#</a>查看系统</h2><p>首先要看下文件系统，因为各个文件系统可能存在差异。</p><p>服务器是阿里云的，系统版本为<code>CentOS7</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ lsb_release -a</span><br><span class="line">LSB Version:    :core-4.1-amd64:core-4.1-noarch</span><br><span class="line">Distributor ID: CentOS</span><br><span class="line">Description:    CentOS Linux release 7.8.2003 (Core)</span><br><span class="line">Release:        7.8.2003</span><br><span class="line">Codename:       Core</span><br></pre></td></tr></table></figure><h2 id="查看文件系统"><a class="header-anchor" href="#查看文件系统">#</a>查看文件系统</h2><p>所用的文件系统是<code>ext4</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs        909M     0  909M   0% /dev</span><br><span class="line">tmpfs           919M     0  919M   0% /dev/shm</span><br><span class="line">tmpfs           919M  540K  919M   1% /run</span><br><span class="line">tmpfs           919M     0  919M   0% /sys/fs/cgroup</span><br><span class="line">/dev/vda1        40G  3.1G   35G   9% /</span><br><span class="line">overlay          40G  3.1G   35G   9% /var/lib/docker/overlay2/ccce49da9cce1095aa9a4c46c83ec608529802a0ad8643e90e99e4e60bdc5a00/merged</span><br><span class="line">tmpfs           184M     0  184M   0% /run/user/0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file -s /dev/vda1</span><br><span class="line">/dev/vda1: Linux rev 1.0 ext4 filesystem data, UUID=59d9ca7b-4f39-4c0c-9334-c56c182076b5 (needs journal recovery) (extents) (large files) (huge files)</span><br></pre></td></tr></table></figure><h2 id="生成数据文件"><a class="header-anchor" href="#生成数据文件">#</a>生成数据文件</h2><p>模拟已经写入过的数据文件，一个<code>1GB</code>，一个<code>10GB</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=1.test bs=8M count=128</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=10.test bs=8M count=1280</span><br></pre></td></tr></table></figure><h2 id="写入测试"><a class="header-anchor" href="#写入测试">#</a>写入测试</h2><p>简单的用 Python 测试一下，写入<code>10万</code>条数据记录时间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"></span><br><span class="line">work_dir = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># file_name = os.path.join(work_dir,'1.test')</span></span><br><span class="line">file_name = os.path.join(work_dir,<span class="string">'10.test'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> time.time()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000</span>):</span><br><span class="line">url_us = <span class="string">'https://app.ylwang.me/v1/status'</span></span><br><span class="line">us = url_us</span><br><span class="line"></span><br><span class="line">url_cn = <span class="string">'https://sync-cn.onns.xyz/v1/status'</span></span><br><span class="line">cn = url_cn</span><br><span class="line"></span><br><span class="line">url_cn2 = <span class="string">'https://api.huoranxuanyuan.cn/v1/status'</span></span><br><span class="line">cn2 = url_cn2</span><br><span class="line"></span><br><span class="line">f = open(file_name, <span class="string">'a'</span>)</span><br><span class="line">f.write(json.dumps(&#123;time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime(time.time())):&#123;<span class="string">"us"</span>:us,<span class="string">"cn"</span>:cn,<span class="string">"cn2"</span>:cn2&#125;&#125;))</span><br><span class="line">f.write(<span class="string">"\n"</span>)</span><br><span class="line">f.close()</span><br><span class="line"><span class="keyword">print</span> time.time()</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> time.time()</span><br></pre></td></tr></table></figure><h2 id="测试结果"><a class="header-anchor" href="#测试结果">#</a>测试结果</h2><center><table><thead><tr><th style="text-align:center">已有文件大小</th><th style="text-align:center">开始时间戳</th><th style="text-align:center">结束时间戳</th><th style="text-align:center">差值（单位：秒）</th></tr></thead><tbody><tr><td style="text-align:center">1GB</td><td style="text-align:center">1597029893.02</td><td style="text-align:center">1597029897.22</td><td style="text-align:center">4.20</td></tr><tr><td style="text-align:center">10GB</td><td style="text-align:center">1597029915.22</td><td style="text-align:center">1597029919.57</td><td style="text-align:center">4.30</td></tr></tbody></table></center><p>总得来说，追加写入文件是一件被优化过的事情（我自己理解的），不会对已有的系统造成太大的负担，我之前还在想会不会因为文件过大，从而造成主要操作耗时过长。</p><p>知道了一个大概的数量级，对以后的应用也能有个粗略的概念！<br>知道了一些新的 Linux 命令~</p><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="https://blog.csdn.net/joshua2011/article/details/90208741" target="_blank" rel="noopener">真正解决 windows OpenSSH WARNING: UNPROTECTED PRIVATE KEY FILE!</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> system </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> linux </tag>
            
            <tag> windows </tag>
            
            <tag> log </tag>
            
            <tag> file system </tag>
            
            <tag> ext4 </tag>
            
            <tag> ssh </tag>
            
            <tag> permission </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新邮件签名！</title>
      <link href="/blog/2020/08/09/new-email-signature/"/>
      <url>/blog/2020/08/09/new-email-signature/</url>
      
        <content type="html"><![CDATA[<p>今天过生日！发邮件的时候发现以前的邮件签名好丑～换一个吧！</p><center><p><img src="//onns.xyz/blog/image/20200809-1.png" alt="邮件签名"></p></center><p>来源是：<a href="https://www.freepik.com/" target="_blank" rel="noopener">https://www.freepik.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> email </tag>
            
            <tag> signature </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：分割数组的最大值</title>
      <link href="/blog/2020/07/24/solution-of-split-array-largest-sum/"/>
      <url>/blog/2020/07/24/solution-of-split-array-largest-sum/</url>
      
        <content type="html"><![CDATA[<h2 id="410-分割数组的最大值"><a class="header-anchor" href="#410-分割数组的最大值">#</a><a href="https://leetcode-cn.com/problems/split-array-largest-sum/" target="_blank" rel="noopener">410. 分割数组的最大值</a></h2><p>给定一个非负整数数组和一个整数<code>m</code>，你需要将这个数组分成<code>m</code>个非空的连续子数组。设计一个算法使得这<code>m</code>个子数组各自和的最大值最小。</p><p>注意:<br>数组长度<code>n</code>满足以下条件:</p><ul><li>1 ≤ <code>n</code> ≤ 1000</li><li>1 ≤ <code>m</code> ≤ min(50, n)</li></ul><p>示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">nums &#x3D; [7,2,5,10,8]</span><br><span class="line">m &#x3D; 2</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">18</span><br><span class="line"></span><br><span class="line">解释:</span><br><span class="line">一共有四种方法将nums分割为2个子数组。</span><br><span class="line">其中最好的方式是将其分为[7,2,5] 和 [10,8]，</span><br><span class="line">因为此时这两个子数组各自的和的最大值为18，在所有情况中最小。</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="写在前面"><a class="header-anchor" href="#写在前面">#</a>写在前面</h2><p><a href="https://onns.xyz/blog/2020/07/02/solution-of-kth-smallest-element-in-a-sorted-matrix/">上次说的</a>数组溢出问题，这次倒是没有犯了，但这次找边界条件的又是因为<code>+1</code>没有搞明白，其实上次就有遇到，这次一定要记住了。</p><h2 id="不可行方案"><a class="header-anchor" href="#不可行方案">#</a>不可行方案</h2><p>我最开始想到的方法是，先把子数组<code>粗略地</code>划分一下。</p><ol><li>求出所有元素之和<code>total</code>，然后除以<code>m</code>得到每个子数组的平均值，记为<code>threshold</code>。</li><li>尽量靠近边界进行划分，比如说如果当前的和<code>current</code>比<code>current + nums[i]</code>离<code>threshold</code>更近，就不加，否则加。</li><li>最后一次划分的时候将所有未统计过的数字都归到最后一个子数组中。</li></ol><p>如果说想得到一个<code>局部最优解</code>，那么这样的划分方法肯定没有问题，但局部最优不是全局最优，想了好久如何调整，没有思路，此方法就此作罢。</p><h2 id="动态规划"><a class="header-anchor" href="#动态规划">#</a>动态规划</h2><p>动态规划最重要的是要找到<code>状态转移方程</code>，然后确定<code>初始条件</code>。</p><p>令<code>f(i)(j)</code>为将<code>nums[0]</code>到<code>nums[i]</code>划分成<code>j</code>个子数组的各自和的最小值，则<code>f(i)(j)</code>一定可以表示为某个子划分的最小值。</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> leetcode </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> dynamic programming </tag>
            
            <tag> binary search </tag>
            
            <tag> 二分查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：戳气球</title>
      <link href="/blog/2020/07/24/solution-of-burst-balloons/"/>
      <url>/blog/2020/07/24/solution-of-burst-balloons/</url>
      
        <content type="html"><![CDATA[<h2 id="312-戳气球"><a class="header-anchor" href="#312-戳气球">#</a><a href="https://leetcode-cn.com/problems/burst-balloons/" target="_blank" rel="noopener">312. 戳气球</a></h2><p>有 <code>n</code> 个气球，编号为 <code>0</code> 到 <code>n-1</code>，每个气球上都标有一个数字，这些数字存在数组 <code>nums</code> 中。</p><p>现在要求你戳破所有的气球。如果你戳破气球 <code>i</code>，就可以获得 <code>nums[left] * nums[i] * nums[right]</code> 个硬币。这里的 <code>left</code> 和 <code>right</code> 代表和 <code>i</code> 相邻的两个气球的序号。注意当你戳破了气球 <code>i</code> 后，气球 <code>left</code> 和气球 <code>right</code> 就变成了相邻的气球。</p><p>求所能获得硬币的最大数量。</p><p>说明：</p><ul><li>你可以假设 <code>nums[-1] = nums[n] = 1</code>，但注意它们不是真实存在的所以并不能被戳破。</li><li>0 ≤ <code>n</code> ≤ 500, 0 ≤ <code>nums[i]</code> ≤ 100</li></ul><p>示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: [3,1,5,8]</span><br><span class="line">输出: 167</span><br><span class="line">解释: nums &#x3D; [3,1,5,8] --&gt; [3,5,8] --&gt;   [3,8]   --&gt;  [8]  --&gt; []</span><br><span class="line">     coins &#x3D;  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   &#x3D; 167</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="写在前面"><a class="header-anchor" href="#写在前面">#</a>写在前面</h2><p>没太做出来，想了很久，官方给的思路根本不可能想出来。。。顺着 <a href="https://www.cnblogs.com/niuyourou/p/11964842.html" target="_blank" rel="noopener">Burst Balloons（leetcode戳气球，困难）从指数级时间复杂度到多项式级时间复杂度的超详细优化思路（回溯到分治到动态规划）</a> 的思路一点点自己做下来的。</p><h2 id="递归-回溯"><a class="header-anchor" href="#递归-回溯">#</a>递归+回溯</h2><p>最简单的办法就是穷举，把所有可能的情况都列举一次。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BurstBalloonsSolution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c; <span class="comment">// 用来统计计算次数</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxCoins</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span>[] flag = <span class="keyword">new</span> <span class="keyword">boolean</span>[nums.length];</span><br><span class="line">        <span class="keyword">this</span>.c = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> r = burst(nums, flag, <span class="number">0</span>);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">burst</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">boolean</span>[] flag, <span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (count == n) <span class="comment">// 戳够了足够多的气球之后，就不戳了</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123; <span class="comment">// 遍历气球数组</span></span><br><span class="line">            <span class="keyword">if</span> (!flag[i]) &#123; <span class="comment">// 如果当前气球没有被戳过</span></span><br><span class="line">                flag[i] = <span class="keyword">true</span>; <span class="comment">// 标记当前气球为已戳</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> res = find(nums, flag, i) * nums[i] + burst(nums, flag, count + <span class="number">1</span>); <span class="comment">// 计算戳当前气球能拿到的分数，然后递归剩下的气球</span></span><br><span class="line">                <span class="keyword">if</span> (res &gt; max) &#123;</span><br><span class="line">                    max = res; <span class="comment">// 更新最大值</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                flag[i] = <span class="keyword">false</span>; <span class="comment">// 回溯，把戳过的气球还原</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">boolean</span>[] flag, <span class="keyword">int</span> cur)</span> </span>&#123; <span class="comment">// find 方法是找到当前气球的前一个和后一个，相乘并返回</span></span><br><span class="line">        <span class="keyword">this</span>.c += <span class="number">1</span>; <span class="comment">// 计数</span></span><br><span class="line">        <span class="keyword">int</span> i = cur;</span><br><span class="line">        <span class="keyword">int</span> pre = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> next = <span class="number">1</span>;</span><br><span class="line">        cur -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (cur &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!flag[cur]) &#123;</span><br><span class="line">                pre = nums[cur];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cur -= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cur = i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (cur &lt; nums.length) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!flag[cur]) &#123;</span><br><span class="line">                next = nums[cur];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cur += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pre * next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行之后能够得到结果，但是这样的一个程序的时间复杂度达到了 <code>n!</code>，显然不行。</p><h2 id="分治"><a class="header-anchor" href="#分治">#</a>分治</h2><p>摸了，先上代码。</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> leetcode </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 递归 </tag>
            
            <tag> 回溯 </tag>
            
            <tag> dynamic programming </tag>
            
            <tag> recursion </tag>
            
            <tag> traceback </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客添加搜索支持</title>
      <link href="/blog/2020/07/18/blog-search-support/"/>
      <url>/blog/2020/07/18/blog-search-support/</url>
      
        <content type="html"><![CDATA[<p>早就想给博客加搜索功能了，但是之前忙着面试，现在面试凉了，有短暂的时间可以来做些自己的事情了，开整。</p><a id="more"></a><h2 id="搜索汇总"><a class="header-anchor" href="#搜索汇总">#</a>搜索汇总</h2><p>因为静态博客，所以需要把博客的全部内容打包成一个<code>搜索集合</code>，借助 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a>，我们可以在生成静态文件的时候直接生成一个 <code>search.xml</code>，后续再通过 <code>ajax</code> 读取即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>在博客根目录的 <code>_config.yml</code> 输入配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="搜索样式"><a class="header-anchor" href="#搜索样式">#</a>搜索样式</h2><p>接下来就要自己实现搜索了，Google 了一波，选了一个比较能契合主题的：<a href="https://codepen.io/choogoor/pen/NGJVMb" target="_blank" rel="noopener">https://codepen.io/choogoor/pen/NGJVMb</a>。</p><p>首先在 <code>header.swig</code> 里添加搜索所需要的 <code>html</code> 结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- if config.search -%&#125;</span><br><span class="line">    &lt;div class&#x3D;&quot;search-button&quot;&gt;</span><br><span class="line">        &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;search-toggle&quot; data-selector&#x3D;&quot;.site-navbar&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;search-box&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;local-search-input&quot; class&#x3D;&quot;text search-input&quot; placeholder&#x3D;&quot;Type here to search...&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&#123;%- endif -%&#125;</span><br></pre></td></tr></table></figure><p>然后添加搜索的 <code>js</code> 代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> config.search -%&#125;</span><br><span class="line">&lt;script id=<span class="string">"search"</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> searchFunc = <span class="function"><span class="keyword">function</span>(<span class="params">path, search_id, content_id</span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: path,</span><br><span class="line">        dataType: <span class="string">"xml"</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params"> xmlResponse </span>) </span>&#123;</span><br><span class="line">            <span class="comment">// get the contents from search data</span></span><br><span class="line">            <span class="keyword">var</span> datas = $( <span class="string">"entry"</span>, xmlResponse ).map(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    title: $( <span class="string">"title"</span>, <span class="keyword">this</span> ).text(),</span><br><span class="line">                    content: $(<span class="string">"content"</span>,<span class="keyword">this</span>).text(),</span><br><span class="line">                    url: $( <span class="string">"url"</span> , <span class="keyword">this</span>).text()</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;).get();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> $input = <span class="built_in">document</span>.getElementById(search_id);</span><br><span class="line"><span class="keyword">if</span> (!$input) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">var</span> $resultContent = <span class="built_in">document</span>.getElementById(content_id);</span><br><span class="line"></span><br><span class="line">            $input.addEventListener(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> str = <span class="string">'&lt;section class=\"posts\"&gt;'</span>;</span><br><span class="line">                <span class="keyword">var</span> keywords = <span class="keyword">this</span>.value.trim().toLowerCase().split(<span class="regexp">/[\s\-]+/</span>);</span><br><span class="line">                $resultContent.innerHTML = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.value.trim().length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// perform local searching</span></span><br><span class="line">                datas.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> isMatch = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">var</span> content_index = [];</span><br><span class="line">                    <span class="keyword">if</span> (!data.title || data.title.trim() === <span class="string">''</span>) &#123;</span><br><span class="line">                        data.title = <span class="string">"Untitled"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> data_title = data.title.trim().toLowerCase();</span><br><span class="line">                    <span class="keyword">var</span> data_content = data.content.trim().replace(<span class="regexp">/&lt;[^&gt;]+&gt;/g</span>, <span class="string">""</span>).toLowerCase();</span><br><span class="line">                    <span class="keyword">var</span> data_url = data.url;</span><br><span class="line">                    <span class="keyword">var</span> index_title = <span class="number">-1</span>;</span><br><span class="line">                    <span class="keyword">var</span> index_content = <span class="number">-1</span>;</span><br><span class="line">                    <span class="keyword">var</span> first_occur = <span class="number">-1</span>;</span><br><span class="line">                    <span class="comment">// only match artiles with not empty contents</span></span><br><span class="line">                    <span class="keyword">if</span> (data_content !== <span class="string">''</span>) &#123;</span><br><span class="line">                        keywords.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">keyword, i</span>) </span>&#123;</span><br><span class="line">                            index_title = data_title.indexOf(keyword);</span><br><span class="line">                            index_content = data_content.indexOf(keyword);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span> (index_title &lt; <span class="number">0</span> &amp;&amp; index_content &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                                isMatch = <span class="literal">false</span>;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">if</span> (index_content &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    index_content = <span class="number">0</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                                    first_occur = index_content;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="comment">// content_index.push(&#123;index_content:index_content, keyword_len:keyword_len&#125;);</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        isMatch = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// show search results</span></span><br><span class="line">                    <span class="keyword">if</span> (isMatch) &#123;</span><br><span class="line">                        str += <span class="string">`</span></span><br><span class="line"><span class="string">&lt;article class="post"&gt;</span></span><br><span class="line"><span class="string">    &lt;header class="post-header"&gt;</span></span><br><span class="line"><span class="string">      &lt;h1 class="post-title"&gt;&lt;a class="post-link" href="`</span>+ data_url +<span class="string">`"&gt;`</span>+ data_title +<span class="string">`&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;/header&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="post-content"&gt;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line">                        <span class="keyword">var</span> content = data.content.trim().replace(<span class="regexp">/&lt;[^&gt;]+&gt;/g</span>, <span class="string">""</span>);</span><br><span class="line">                        <span class="keyword">if</span> (first_occur &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="comment">// cut out 100 characters</span></span><br><span class="line">                            <span class="keyword">var</span> start = first_occur - <span class="number">20</span>;</span><br><span class="line">                            <span class="keyword">var</span> end = first_occur + <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span> (start &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                                start = <span class="number">0</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span> (start == <span class="number">0</span>) &#123;</span><br><span class="line">                                end = <span class="number">100</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span> (end &gt; content.length) &#123;</span><br><span class="line">                                end = content.length;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> match_content = content.substring(start, end);</span><br><span class="line"></span><br><span class="line">                            <span class="comment">// highlight all keywords</span></span><br><span class="line">                            keywords.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">keyword</span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">var</span> regS = <span class="keyword">new</span> <span class="built_in">RegExp</span>(keyword, <span class="string">"gi"</span>);</span><br><span class="line">                                match_content = match_content.replace(regS, <span class="string">"&lt;code&gt;"</span> + keyword + <span class="string">"&lt;/code&gt;"</span>);</span><br><span class="line">                            &#125;);</span><br><span class="line"></span><br><span class="line">                            str += <span class="string">"&lt;p&gt;"</span> + match_content + <span class="string">"...&lt;/p&gt;"</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        str += <span class="string">"&lt;/article&gt;"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                str += <span class="string">"&lt;/section&gt;"</span>;</span><br><span class="line">                $resultContent.innerHTML = str;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> search_path = <span class="string">"&#123;&#123; config.search.path &#125;&#125;"</span>;</span><br><span class="line"><span class="keyword">if</span> (search_path.length == <span class="number">0</span>) &#123;</span><br><span class="line">search_path = <span class="string">"search.xml"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> path = <span class="string">"&#123;&#123; config.root &#125;&#125;"</span> + search_path;</span><br><span class="line">searchFunc(path, <span class="string">'local-search-input'</span>, <span class="string">'local-search-result'</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;%- endif -%&#125;</span></span><br></pre></td></tr></table></figure><p>说起来简单，但是各种最后还是花了一下午的时间。</p><p>效果页面里就有咯。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a></li><li><a href="https://github.com/wzpan/hexo-generator-search#how-to-use-this-plugin-in-my-hexo-blog" target="_blank" rel="noopener">How to use this plugin in my Hexo blog?</a></li><li><a href="https://codepen.io/choogoor/pen/NGJVMb" target="_blank" rel="noopener">Header Search</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> search </tag>
            
            <tag> hexo-theme-even </tag>
            
            <tag> blog </tag>
            
            <tag> hexo-generator-search </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各种剧更新邮件推送</title>
      <link href="/blog/2020/07/13/dramas-update-email-notification/"/>
      <url>/blog/2020/07/13/dramas-update-email-notification/</url>
      
        <content type="html"><![CDATA[<p>闲的无事，不想学习，做了一个小的<code>定时脚本</code>来检测韩剧网站的熟肉更新。因为虽然剧每周都是按日期播，但是字幕组们可能就没有那么准时了，与其自己手动刷新，不如<s>懒（不是</s>叫服务器帮我完成，反正服务器除了架了个插件的后台没什么别的用。</p><a id="more"></a><h2 id="获取更新"><a class="header-anchor" href="#获取更新">#</a>获取更新</h2><p>一般一个字幕组的剧集主页都是不变的，这样方便各个地方索引，但是资源的网站基本都是变的，因为可能的版权啊之类的，所以要一层一层一层的<s>拨开我的心</s>找到最终的资源页，才能知道有木有更新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root</span><br><span class="line">├── ju.py</span><br><span class="line">└── data.json</span><br></pre></td></tr></table></figure><h2 id="剧数据"><a class="header-anchor" href="#剧数据">#</a>剧数据</h2><p>当然，一个小小的脚本是不需要数据库来杀鸡牛刀的，就直接写入文件读取文件吧（因为要记录之前多少集，才有更新一说）。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"https://newzmz.com/details-xN3YGxeW.html"</span>,</span><br><span class="line">    <span class="attr">"count"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"\u867d\u7136\u662f\u7cbe\u795e\u75c5\u4f46\u6ca1\u5173\u7cfb"</span>,</span><br><span class="line">    <span class="attr">"element"</span>: [<span class="string">"&lt;a class=\"addgz\" href=\"([\\S]+)\""</span>, <span class="string">"&lt;tr&gt;"</span>]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>以上就是<code>data.json</code>的内容，因为未来可能会有很多剧需要追更，所以最外层是个数组，然后才是每个剧的字典。</p><p>因为功能很简单，所以字段暂时先弄这么多，<s>后面需要再加</s>。</p><ul><li><code>url</code>: 就是前面说的字幕组的剧集主页，不会变的。</li><li><code>count</code>: 记录当前集数。</li><li><code>name</code>: 就是这部剧的名字，发邮件的时候要带上的，这里其实是<code>《虽然是精神病但没关系》</code>的 unicode 字符。</li><li><code>element</code>: 这个就是比较重要的东西了，是一个正则表达式，<code>前面的 n-1 个</code>是用来找到最终的资源页面的，<code>最后一个</code>是用来数数的，就是有多少集。</li></ul><h2 id="主体代码"><a class="header-anchor" href="#主体代码">#</a>主体代码</h2><p>为了兼容，写的是<code>python2</code>的版本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.utils <span class="keyword">import</span> formataddr</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> re</span><br></pre></td></tr></table></figure><p>发邮件直接 copy 幕课的，因为以前有个电费提醒的脚本，所以直接拿过来用了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">my_sender=<span class="string">'i@onns.xyz'</span>    <span class="comment"># 发件人邮箱账号</span></span><br><span class="line">my_pass = <span class="string">''</span>              <span class="comment"># 发件人邮箱密码</span></span><br><span class="line">my_user=<span class="string">'onns@onns.xyz'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mail</span><span class="params">(to,content)</span>:</span></span><br><span class="line">ret=<span class="literal">True</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">msg=MIMEText(content,<span class="string">'plain'</span>,<span class="string">'utf-8'</span>)</span><br><span class="line">msg[<span class="string">'From'</span>]=formataddr([<span class="string">"Onns"</span>,my_sender])  <span class="comment"># 括号里的对应发件人邮箱昵称、发件人邮箱账号</span></span><br><span class="line">msg[<span class="string">'To'</span>]=formataddr([<span class="string">'to'</span>,to])              <span class="comment"># 括号里的对应收件人邮箱昵称、收件人邮箱账号</span></span><br><span class="line">msg[<span class="string">'Subject'</span>]=<span class="string">"新剧提醒"</span>                <span class="comment"># 邮件的主题，也可以说是标题</span></span><br><span class="line"></span><br><span class="line">server=smtplib.SMTP_SSL(<span class="string">"smtp.exmail.qq.com"</span>, <span class="number">465</span>)  <span class="comment"># 发件人邮箱中的SMTP服务器，端口是25</span></span><br><span class="line">server.login(my_sender, my_pass)  <span class="comment"># 括号中对应的是发件人邮箱账号、邮箱密码</span></span><br><span class="line">server.sendmail(my_sender,[to,],msg.as_string())  <span class="comment"># 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span></span><br><span class="line">server.quit()  <span class="comment"># 关闭连接</span></span><br><span class="line"><span class="keyword">except</span> Exception, e:  <span class="comment"># 如果 try 中的语句没有执行，则会执行下面的 ret=False</span></span><br><span class="line"><span class="keyword">print</span> e</span><br><span class="line">ret=<span class="literal">False</span></span><br><span class="line"><span class="keyword">return</span> ret</span><br></pre></td></tr></table></figure><p>主体代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">'/root/data.json'</span>, <span class="string">'r'</span>)</span><br><span class="line">data =  json.loads(f.read())</span><br><span class="line">f.close()</span><br><span class="line">new_data = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ju <span class="keyword">in</span> data:</span><br><span class="line">html = <span class="string">''</span></span><br><span class="line">url = ju[<span class="string">'url'</span>]</span><br><span class="line"><span class="keyword">for</span> ele <span class="keyword">in</span> ju[<span class="string">'element'</span>]:</span><br><span class="line">html = urllib2.urlopen(url).read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">results = re.findall(ele, html)</span><br><span class="line">url = results[<span class="number">0</span>]</span><br><span class="line">count = len(results)</span><br><span class="line"><span class="keyword">if</span> count &gt; ju[<span class="string">'count'</span>]:</span><br><span class="line">ret=mail(my_user,<span class="string">u'《'</span>+ju[<span class="string">'name'</span>]+ <span class="string">u'》更新啦！'</span>)</span><br><span class="line">ju[<span class="string">'count'</span>] = count</span><br><span class="line">new_data.append(ju)</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'/root/data.json'</span>, <span class="string">'w'</span>)</span><br><span class="line">f.write(json.dumps(new_data))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h2 id="上服务器"><a class="header-anchor" href="#上服务器">#</a>上服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br></pre></td></tr></table></figure><p>把定时脚本加进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/10 * * * 6,7,1 /usr/bin/python /root/ju.py /dev/null 1&gt;/dev/null</span><br></pre></td></tr></table></figure><p>因为不用很精细就 10 分钟执行一次，周末晚间更新所以 <code>6、7、1</code> 三天才需要跑的。</p><center><p><img src="//onns.xyz/blog/image/20200713-1.jpg" alt="截图"></p></center><p>完。</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> drama </tag>
            
            <tag> email </tag>
            
            <tag> 虽然是精神病但没关系 </tag>
            
            <tag> 韩剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome关闭深色模式</title>
      <link href="/blog/2020/07/09/chrome-turn-off-dark-mode/"/>
      <url>/blog/2020/07/09/chrome-turn-off-dark-mode/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.google.Chrome NSRequiresAquaSystemAppearance -bool YES</span><br></pre></td></tr></table></figure><p>然后重启Chrome。</p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chrome </tag>
            
            <tag> dark mode </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HashMap源码阅读</title>
      <link href="/blog/2020/07/07/hashmap-source-code/"/>
      <url>/blog/2020/07/07/hashmap-source-code/</url>
      
        <content type="html"><![CDATA[<p>讲道理，复习面试是真的复习吐了。。。实在是复习不下去了，摸会鱼，看看<code>HashMap</code>的源码吧😭😭😭。</p><a id="more"></a><h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>我的Java版本是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash"> java --version</span></span><br><span class="line">java 13.0.2 2020-01-14</span><br><span class="line">Java(TM) SE Runtime Environment (build 13.0.2+8)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 13.0.2+8, mixed mode, sharing)</span><br></pre></td></tr></table></figure><h2 id="关键参数"><a class="header-anchor" href="#关键参数">#</a>关键参数</h2><p>先来看参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The default initial capacity - MUST be a power of two.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_INITIAL_CAPACITY = <span class="number">1</span> &lt;&lt; <span class="number">4</span>; <span class="comment">// aka 16</span></span><br></pre></td></tr></table></figure><p>默认的容器大小，就是数组的大小。HashMap的底层就是数组+链表/红黑树。</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> HashMap </tag>
            
            <tag> source code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode题解：有序矩阵中第K小的元素</title>
      <link href="/blog/2020/07/02/solution-of-kth-smallest-element-in-a-sorted-matrix/"/>
      <url>/blog/2020/07/02/solution-of-kth-smallest-element-in-a-sorted-matrix/</url>
      
        <content type="html"><![CDATA[<h2 id="378-有序矩阵中第k小的元素"><a class="header-anchor" href="#378-有序矩阵中第k小的元素">#</a><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/" target="_blank" rel="noopener">378. 有序矩阵中第K小的元素</a></h2><p>给定一个 <code>n * n</code> 矩阵，其中每行和每列元素均按升序排序，找到矩阵中第 <code>k</code> 小的元素。<br>请注意，它是排序后的第 <code>k</code> 小元素，而不是第 <code>k</code> 个不同的元素。</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">matrix &#x3D; [</span><br><span class="line">[ 1,  5,  9],</span><br><span class="line">[10, 11, 13],</span><br><span class="line">[12, 13, 15]</span><br><span class="line">],</span><br><span class="line">k &#x3D; 8,</span><br><span class="line"></span><br><span class="line">返回 13。</span><br></pre></td></tr></table></figure><p>提示：<br>你可以假设 k 的值永远是有效的，<code>1 ≤ k ≤ n^2</code> 。</p><a id="more"></a><h2 id="写在前面"><a class="header-anchor" href="#写在前面">#</a>写在前面</h2><p>写这个的根本目的是记录一些之前根本不会注意到的小<code>错误</code>。在我写完去看官方题解的时候，官方的求中位数方法是：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> mid = left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>自己的是：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> temp = (min + max) / <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>感叹自己不会移位但却少了一步减法的时候，却没有考虑到两个 <code>int</code> 相加是可能会溢出的。</p><p>所以今日小tip：</p><ul><li>两个 <code>int</code> 相加是可能溢出的。</li></ul><h2 id="二分查找"><a class="header-anchor" href="#二分查找">#</a>二分查找</h2><p>最简单的，取出来排序，这个就不说了，肯定不是最优雅的解法。</p><p>老实说我最开始的想法是从左上角开始向下向右数个数，维护两个队列，一个向右的，一个向下的。但我意识到完全存在着<code>一个数的向下</code>可能小于<code>前面某一个数的向右</code>。完全没有办法按序输出。此思路作罢。</p><p>第二个思路是 <code>i * i</code> 的值如果大于 <code>k</code>，那么结果一定在 <code>i * i</code>的子矩阵中。但除了 <code>matrix[i][i]</code>这个点之外，所有其它的点都有可能是结果，所以没有办法通过这个条件继续缩小范围了。</p><p>想了半小时没有想到好的解法，我选择了去看官方题解，简单了解了一下思路后，回来自己想。</p><h3 id="判断特殊情况"><a class="header-anchor" href="#判断特殊情况">#</a>判断特殊情况</h3><p>已经养成习惯了，在每个方法的最开始将特殊情况判断一下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthSmallestElementInASortedMatrixSolution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = matrix.length;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="进行一次查找"><a class="header-anchor" href="#进行一次查找">#</a>进行一次查找</h3><p>先写一次查找的结果，看看对不对。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthSmallestElementInASortedMatrixSolution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = matrix.length;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> min = matrix[<span class="number">0</span>][<span class="number">0</span>]; <span class="comment">// 初始化最小值</span></span><br><span class="line"><span class="keyword">int</span> max = matrix[n - <span class="number">1</span>][n - <span class="number">1</span>]; <span class="comment">// 初始化最大值</span></span><br><span class="line"><span class="keyword">int</span> i = n - <span class="number">1</span>, j = <span class="number">0</span>; <span class="comment">// 从左下角开始找</span></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>; <span class="comment">// 记录个数</span></span><br><span class="line"><span class="keyword">int</span> temp = (min+max)/<span class="number">2</span>; <span class="comment">// 中位数开始找</span></span><br><span class="line"><span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; j &lt; n) &#123; <span class="comment">// 超过数组范围则退出</span></span><br><span class="line"><span class="keyword">if</span>(matrix[i][j] &lt;= temp)&#123; <span class="comment">// 向左</span></span><br><span class="line">j+=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 向上</span></span><br><span class="line">count += j; <span class="comment">// 向上之前，把第i行前j-1个元素都算上</span></span><br><span class="line"><span class="comment">// 索引默认0开始，j-1+1=j</span></span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count += (i+<span class="number">1</span>)*n; <span class="comment">// 如果因为j越界的原因退出，证明上面还有i+1行没有算</span></span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><span style="color:red">1</span></td><td><span style="color:red">3</span></td><td><span style="color:red">5</span></td><td><span style="color:red">7</span></td><td>9</td><td>11</td></tr><tr><td><span style="color:red">2</span></td><td><span style="color:red">4</span></td><td><span style="color:red">6</span></td><td><span style="color:red">8</span></td><td>10</td><td>12</td></tr><tr><td><span style="color:red">3</span></td><td><span style="color:red">5</span></td><td><span style="color:red">7</span></td><td>9</td><td>11</td><td>13</td></tr><tr><td><span style="color:red">4</span></td><td><span style="color:red">6</span></td><td><span style="color:red">8</span></td><td>10</td><td>12</td><td>14</td></tr><tr><td><span style="color:red">5</span></td><td><span style="color:red">7</span></td><td>9</td><td>11</td><td>13</td><td>15</td></tr><tr><td><span style="color:red">6</span></td><td><span style="color:red">8</span></td><td>10</td><td>12</td><td>14</td><td>16</td></tr></tbody></table><p>结果是 <code>18</code>，正确。</p><h3 id="迭代查找"><a class="header-anchor" href="#迭代查找">#</a>迭代查找</h3><p>接着就可以写更新策略了，我想的是，如果现在的数<code>小于</code>要求的数，那一定是在后面，但是如果<code>等于</code>却不一定，因为这个中位数可能是矩阵中不存在的数，但最终结果一定会<code>小于等于</code>现在的数，所以<code>&gt;=</code>的策略可以写在一起。</p><p>最后的的迭代终止条件就是<code>min==max</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthSmallestElementInASortedMatrixSolution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = matrix.length;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> min = matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> max = matrix[n - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> i = n - <span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp = (min + max) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; j &lt; n) &#123;</span><br><span class="line"><span class="keyword">if</span> (matrix[i][j] &lt;= temp) &#123;</span><br><span class="line">j += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">count += j;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count += (i + <span class="number">1</span>) * n;</span><br><span class="line"><span class="keyword">if</span> (count &lt; k) &#123;</span><br><span class="line">min = temp;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">max = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (min == max) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这个会死循环卡住，我用纸自己跑了一下，发现假如<code>min = 7, max = 8</code>，再跑一轮的时候迭代还会是<code>min = 7, max = 8</code>，无限循环了。解决方法是判断迭代值和 <code>min</code> 是否相等：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthSmallestElementInASortedMatrixSolution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = matrix.length;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> min = matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> max = matrix[n - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> i = n - <span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp = (min + max) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; j &lt; n) &#123;</span><br><span class="line"><span class="keyword">if</span> (matrix[i][j] &lt;= temp) &#123;</span><br><span class="line">j += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">count += j;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count += (i + <span class="number">1</span>) * n;</span><br><span class="line"><span class="keyword">if</span> (count &lt; k) &#123;</span><br><span class="line"><span class="keyword">if</span> (temp == min) &#123;</span><br><span class="line">min += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">min = temp;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">max = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (min == max) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过了。当然，官方题解里的 <code>+1</code> 就很灵性，但是我想不到。。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthSmallestElementInASortedMatrixSolution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = matrix.length;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> min = matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> max = matrix[n - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> i = n - <span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp = (min + max) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; j &lt; n) &#123;</span><br><span class="line"><span class="keyword">if</span> (matrix[i][j] &lt;= temp) &#123;</span><br><span class="line">j += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">count += j;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count += (i + <span class="number">1</span>) * n;</span><br><span class="line"><span class="keyword">if</span> (count &lt; k) &#123;</span><br><span class="line">min = temp + <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">max = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (min == max) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整代码"><a class="header-anchor" href="#完整代码">#</a>完整代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> leetcode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KthSmallestElementInASortedMatrix</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[][] matrix = &#123; &#123; <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span> &#125;, &#123; <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span> &#125;, &#123; <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span> &#125;,</span><br><span class="line">&#123; <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span> &#125;, &#123; <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span> &#125;, &#123; <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span> &#125; &#125;;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">18</span>;</span><br><span class="line">KthSmallestElementInASortedMatrixSolution sol = <span class="keyword">new</span> KthSmallestElementInASortedMatrixSolution();</span><br><span class="line"><span class="keyword">int</span> res = sol.kthSmallest(matrix, k);</span><br><span class="line">System.out.println(res);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthSmallestElementInASortedMatrixSolution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = matrix.length;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> min = matrix[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> max = matrix[n - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> i = n - <span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp = (min + max) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; j &lt; n) &#123;</span><br><span class="line"><span class="keyword">if</span> (matrix[i][j] &lt;= temp) &#123;</span><br><span class="line">j += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">count += j;</span><br><span class="line">i -= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count += (i + <span class="number">1</span>) * n;</span><br><span class="line"><span class="keyword">if</span> (count &lt; k) &#123;</span><br><span class="line"><span class="keyword">if</span> (temp == min) &#123;</span><br><span class="line">min += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">min = temp;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">max = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (min == max) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% javac leetcode/KthSmallestElementInASortedMatrix.java</span><br><span class="line">% java leetcode.KthSmallestElementInASortedMatrix</span><br><span class="line">8</span><br></pre></td></tr></table></figure><p>完。</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tips </tag>
            
            <tag> leetcode </tag>
            
            <tag> binary search </tag>
            
            <tag> 二分查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试复习提纲</title>
      <link href="/blog/2020/06/18/review-for-the-interview/"/>
      <url>/blog/2020/06/18/review-for-the-interview/</url>
      
        <content type="html"><![CDATA[<p>复习</p><a id="more"></a><h2 id="tcp-udp"><a class="header-anchor" href="#tcp-udp">#</a>TCP UDP</h2><p>TCP: 传输控制协议（英语：Transmission Control Protocol，缩写为 TCP）是一种面向连接的、可靠的、基于字节流的传输层通信协议，由 IETF 的 RFC 793 定义。</p><p>UDP:用户数据报协议（英语：User Datagram Protocol，缩写为 UDP），又称使用者资料包协定，是一个简单的面向数据报的传输层协议，正式规范为 RFC 768。</p><h3 id="tcp-与-udp-基本区别"><a class="header-anchor" href="#tcp-与-udp-基本区别">#</a>TCP 与 UDP 基本区别</h3><ol><li>基于连接与无连接</li><li>TCP 要求系统资源较多，UDP 较少；</li><li>UDP 程序结构较简单</li><li>流模式（TCP）与数据报模式(UDP);</li><li>TCP 保证数据正确性，UDP 可能丢包</li><li>TCP 保证数据顺序，UDP 不保证</li><li>UDP 是不处理堵塞，应用需要发，就会发送。TCP 还拥有堵塞控制，TCP 会根据网络环境调整发包的频率。</li><li>UDP 支持多播和广播</li><li>TCP 有流量控制（滑动窗口）和拥塞控制（慢开始、拥塞避免、快重传、快恢复）</li></ol><h3 id="udp-应用场景"><a class="header-anchor" href="#udp-应用场景">#</a>UDP 应用场景</h3><ol><li>面向数据报方式</li><li>网络数据大多为短消息</li><li>拥有大量 Client</li><li>对数据安全性无特殊要求</li><li>网络负担非常重，但对响应速度要求高</li><li>QQ 的文件传输</li><li>DNS、TFTP、RIP（路由选择协议）、SNMP、NFS</li></ol><h3 id="tcp-三次握手"><a class="header-anchor" href="#tcp-三次握手">#</a>TCP 三次握手</h3><center><p><img src="//onns.xyz/blog/image/20200618-1.png" alt="TCP三次握手"></p></center><h3 id="tcp-四次握手"><a class="header-anchor" href="#tcp-四次握手">#</a>TCP 四次握手</h3><center><p><img src="//onns.xyz/blog/image/20200618-2.png" alt="TCP四次握手"></p></center><h4 id="为什么两次握手不行"><a class="header-anchor" href="#为什么两次握手不行">#</a>为什么两次握手不行</h4><p>为了防止已失效的连接请求报文段突然又传送到了 B，因而产生错误。A 发送的包丢了，又发送一个包建立连接，结果这个丢的包又被找回来了，B 又建立了一个 A 不认可的连接。</p><h4 id="为什么需要设置一个-time-wait-的时间"><a class="header-anchor" href="#为什么需要设置一个-time-wait-的时间">#</a>为什么需要设置一个 TIME-WAIT 的时间</h4><ol><li>保证 TCP 协议的全双工连接能够可靠关闭。先说第一点，如果 Client 直接 CLOSED 了，那么由于 IP 协议的不可靠性或者是其它网络原因，导致 Server 没有收到 Client 最后回复的 ACK。那么 Server 就会在超时之后继续发送 FIN，此时由于 Client 已经 CLOSED 了，就找不到与重发的 FIN 对应的连接，最后 Server 就会收到 RST 而不是 ACK，Server 就会以为是连接错误把问题报告给高层。这样的情况虽然不会造成数据丢失，但是却导致 TCP 协议不符合可靠连接的要求。所以，Client 不是直接进入 CLOSED，而是要保持 TIME_WAIT，当再次收到 FIN 的时候，能够保证对方收到 ACK，最后正确的关闭连接。</li><li>保证这次连接的重复数据段从网络中消失。再说第二点，如果 Client 直接 CLOSED，然后又再向 Server 发起一个新连接，我们不能保证这个新连接与刚关闭的连接的端口号是不同的。也就是说有可能新连接和老连接的端口号是相同的。一般来说不会发生什么问题，但是还是有特殊情况出现：假设新连接和已经关闭的老连接端口号是一样的，如果前一次连接的某些数据仍然滞留在网络中，这些延迟数据在建立新连接之后才到达 Server，由于新连接和老连接的端口号是一样的，又因为 TCP 协议判断不同连接的依据是 socket pair，于是，TCP 协议就认为那个延迟的数据是属于新连接的，这样就和真正的新连接的数据包发生混淆了。所以 TCP 连接还要在 TIME_WAIT 状态等待 2 倍 MSL，这样可以保证本次连接的所有数据都从网络中消失。</li></ol><h3 id="tcp-如何保证可靠的传输"><a class="header-anchor" href="#tcp-如何保证可靠的传输">#</a>TCP 如何保证可靠的传输?</h3><ol><li>确认和重传</li><li>数据校验</li><li>数据合理分片和排序</li><li>流量控制：当接收方来不及处理发送方的数据，能提示发送方降低发送的速率，防止包丢失。</li><li>拥塞控制：当网络拥塞时，减少数据的发送。</li></ol><h3 id="相关名词"><a class="header-anchor" href="#相关名词">#</a>相关名词</h3><ul><li>MSL（Maximum Segment Lifetime）：报文最大生存时间</li><li>MTU（Maximum Transmission Unit）：用来通知对方所能接受数据服务单元的最大尺寸，说明发送方能够接受的有效载荷大小。</li></ul><h2 id="进程和线程"><a class="header-anchor" href="#进程和线程">#</a>进程和线程</h2><h3 id="定义"><a class="header-anchor" href="#定义">#</a>定义</h3><p>进程:具有一定独立功能的程序关于某个数据集合上的一次运行活动,进程是系统进行资源分配和调度的一个独立单位.</p><p>线程:进程的一个实体,是 CPU 调度和分派的基本单位,它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源,只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈),但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源.</p><h3 id="关系"><a class="header-anchor" href="#关系">#</a>关系</h3><p>一个线程可以创建和撤销另一个线程;同一个进程中的多个线程之间可以并发执行.</p><p>相对进程而言，线程是一个更加接近于执行体的概念，它可以与同进程中的其他线程共享数据，但拥有自己的栈空间，拥有独立的执行序列。</p><h3 id="区别"><a class="header-anchor" href="#区别">#</a>区别</h3><p>进程和线程的主要差别在于它们是不同的操作系统资源管理方式。进程有独立的地址空间，一个进程崩溃后，在保护模式下不会对其它进程产生影响，而线程只是一个进程中的不同执行路径。线程有自己的堆栈和局部变量，但线程之间没有单独的地址空间，一个线程死掉就等于整个进程死掉，所以多进程的程序要比多线程的程序健壮，但在进程切换时，耗费资源较大，效率要差一些。但对于一些要求同时进行并且又要共享某些变量的并发操作，只能用线程，不能用进程。</p><ol><li>简而言之,一个程序至少有一个进程,一个进程至少有一个线程.</li><li>线程的划分尺度小于进程，使得多线程程序的并发性高。</li><li>另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。</li><li>线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。</li><li>从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。</li></ol><hr><p>根本区别：进程是操作系统资源分配的基本单位，而线程是任务调度和执行的基本单位</p><p>在开销方面：每个进程都有独立的代码和数据空间（程序上下文），程序之间的切换会有较大的开销；线程可以看做轻量级的进程，同一类线程共享代码和数据空间，每个线程都有自己独立的运行栈和程序计数器（PC），线程之间切换的开销小。</p><p>所处环境：在操作系统中能同时运行多个进程（程序）；而在同一个进程（程序）中有多个线程同时执行（通过 CPU 调度，在每个时间片中只有一个线程执行）</p><p>内存分配方面：系统在运行的时候会为每个进程分配不同的内存空间；而对线程而言，除了 CPU 外，系统不会为线程分配内存（线程所使用的资源来自其所属进程的资源），线程组之间只能共享资源。</p><p>包含关系：没有线程的进程可以看做是单线程的，如果一个进程内有多个线程，则执行过程不是一条线的，而是多条线（线程）共同完成的；线程是进程的一部分，所以线程也被称为轻权进程或者轻量级进程。</p><h3 id="协程"><a class="header-anchor" href="#协程">#</a>协程</h3><p>协程，是一种比线程更加轻量级的存在，协程不是被操作系统内核所管理，而完全是由程序所控制（也就是在用户态执行）。这样带来的好处就是性能得到了很大的提升，不会像线程切换那样消耗资源。</p><p>极高的执行效率：因为子程序切换不是线程切换，而是由程序自身控制，因此，没有线程切换的开销，和多线程比，线程数量越多，协程的性能优势就越明显；<br>不需要多线程的锁机制：因为只有一个线程，也不存在同时写变量冲突，在协程中控制共享资源不加锁，只需要判断状态就好了，所以执行效率比多线程高很多。</p><h2 id="红黑树"><a class="header-anchor" href="#红黑树">#</a>红黑树</h2><h3 id="性质"><a class="header-anchor" href="#性质">#</a>性质</h3><ol><li>每个节点要么是黑色，要么是红色。</li><li>根节点是黑色。</li><li>每个叶子节点（NIL）是黑色。</li><li>每个红色结点的两个子结点一定都是黑色。</li><li>任意一结点到每个叶子结点的路径都包含数量相同的黑结点。</li></ol><h3 id="插入"><a class="header-anchor" href="#插入">#</a>插入</h3><center><p><img src="//onns.xyz/blog/image/20200703-1.png" alt="插入"></p></center><h3 id="删除"><a class="header-anchor" href="#删除">#</a>删除</h3><center><p><img src="//onns.xyz/blog/image/20200703-2.png" alt="删除"></p></center><h3 id="时间复杂度"><a class="header-anchor" href="#时间复杂度">#</a>时间复杂度</h3><table><thead><tr><th>Algorithm</th><th>Average</th><th>Worst case</th></tr></thead><tbody><tr><td>Space</td><td>O(n)</td><td>O(n)</td></tr><tr><td>Search</td><td>O(log n)</td><td>O(log n)</td></tr><tr><td>Insert</td><td>O(log n)</td><td>O(log n)</td></tr><tr><td>Delete</td><td>O(log n)</td><td>O(log n)</td></tr></tbody></table><h3 id="与-avl-区别"><a class="header-anchor" href="#与-avl-区别">#</a>与 AVL 区别</h3><p>AVL 是严格的平衡树，因此在增加或者删除节点的时候，根据不同情况，旋转的次数比红黑树要多；<br>红黑树是用非严格的平衡来换取增删节点时候旋转次数的降低开销；<br>所以简单说，如果你的应用中，搜索的次数远远大于插入和删除，那么选择 AVL 树，<br>如果搜索，插入删除次数几乎差不多，应选择红黑树。即，有时仅为了排序（建立-遍历-删除），不查找或查找次数很少，R-B 树合算一些。<br>AVL 树在顺序插入和删除时有 20%左右的性能优势，但随机性能反而落后 15%左右，现实应用当然一般都是随机情况，所以红黑树得到了更广泛的应用。</p><h2 id="死锁"><a class="header-anchor" href="#死锁">#</a>死锁</h2><p>死锁是指多个进程（线程）在执行过程中，由于竞争资源或者由于彼此通信而造成的一种阻塞的现象（互相挂起等待），若无外力作用，它们都将无法推进下去。</p><h3 id="常见死锁"><a class="header-anchor" href="#常见死锁">#</a>常见死锁</h3><ol><li>线程将自己锁住</li></ol><p>为了保证线程之间的同步和互斥，我们往往需要给其加锁，有时候，线程申请了锁资源，还没有等待释放，又一次申请这把锁，结果就是挂起等待这把锁的释放，但是这把锁是被自己拿着，所以就会永远挂起等待，就造成了死锁。</p><ol start="2"><li>多线程竞争资源循环等待</li></ol><p>有两个线程 P1 和 P2，P1 首先申请得到了锁 L1,P2 申请得到了锁 L2,这个时候 P1 有向去申请锁 L2，结果是被挂起等待 P2 释放锁 L2,而 P2 恰好也想申请锁 L1，结果是挂起等待 P1 释放锁 L1，此时就造成两个线程互相僵持，造成死锁。</p><ol start="3"><li>进程推进顺序不当引起的死锁问题</li></ol><p>有三个线程，P1，P2 和 P3，分别生产数据 M1，M2，M3，同时分别接收别的线程产生的数据 M3,M2,M1,如果线程推进的顺序正确，即三个线程都先生产数据，再接收，那么没有问题，但是一旦线程先接受数据，再生产数据，因为一开始没有数据产生，那么就会造成三个线程的死锁问题。</p><h3 id="产生原因"><a class="header-anchor" href="#产生原因">#</a>产生原因</h3><ol><li>系统的资源不足。</li><li>进程（线程）推进的顺序不对。</li><li>资源的分配不当。</li></ol><h3 id="必要条件"><a class="header-anchor" href="#必要条件">#</a>必要条件</h3><ol><li>互斥条件：进程（线程）申请的资源在一段时间中只能被一个进程（线程）使用。</li><li>请求与等待条件：进程（线程）已经拥有了一个资源，但是又申请新的资源，拥有的资源保持不变 。</li><li>不可剥夺条件：在一个进程（线程）没有用完，主动释放资源的时候，不能被抢占。</li><li>循环等待条件：多个进程（线程）之间存在资源循环链。</li></ol><h4 id="打破"><a class="header-anchor" href="#打破">#</a>打破</h4><ol><li>打破互斥条件：改造独占性资源为虚拟大资源，但是大部分资源无法改造，因此不建议使用这个方法。</li><li>打破请求与保持条件：在进程（线程）运行之前，就把需要申请的资源一次性申请到位，满足则运行，不满足就等待，这样就不会造成在占有资源的情况下，还要申请新资源。</li><li>打破不可剥夺条件：在占有资源并且还想要申请新资源的时候，归还已经占有的资源。</li><li>打破循环等待条件：实现资源的有序分配，即对所有的设备进行分类编号，只能以升序的方式来申请资源。</li></ol><h3 id="处理方法"><a class="header-anchor" href="#处理方法">#</a>处理方法</h3><ol><li>预防死锁：破坏死锁产生的四个条件之一，注意，互斥条件不能破坏。</li><li>避免死锁：合理的分配资源。</li><li>检查死锁：利用专门的死锁机构检查死锁的发生，然后采取相应的方法。</li><li>解除死锁：发生死锁时候，采取合理的方法解决死锁。一般是强行剥夺资源。</li></ol><ul><li>等待某个资源时，使用超时机制。</li><li>采用消息通信的通信机制，而不是共享内存的通信机制。</li></ul><h2 id="http"><a class="header-anchor" href="#http">#</a>HTTP</h2><p>HTTP 协议是 Hyper Text Transfer Protocol（超文本传输协议）的缩写，是用于从万维网服务器传输超文本到本地浏览器的传送协议。<br>HTTP 是一个基于 TCP/IP 通信协议来传递数据。<br>应用层协议。</p><ol><li>HTTP 是无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li><li>HTTP 是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过 HTTP 发送。客户端以及服务器指定使用适合的 MIME-type 内容类型。</li><li>HTTP 是无状态：HTTP 协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</li></ol><h3 id="http-2-0"><a class="header-anchor" href="#http-2-0">#</a>HTTP 2.0</h3><p>HTTP/2（超文本传输协议第 2 版，最初命名为 HTTP2.0），是 HTTP 协议的第二个主要版本。HTTP/2 是 HTTP 协议自 1999 年 HTTP1.1 发布后的首个更新，主要基于 SPDY 协议。<br>HTTP2.0 的特点是：在不改动 HTTP 语义、方法、状态码、URI 及首部字段的情况下，大幅度提高了 web 性能。</p><p>SPDY 协议：Google 开发的基于 TCP 协议的应用层协议。目标是优化 HTTP 协议的性能，通过压缩、多路复用和优先级等技术，缩短网页的加载时间并提高安全性。SPDY 协议的核心思想是尽量减少 TCP 连接数。SPDY 并不是一种用于替代 HTTP 的协议，而是对 HTTP 协议的增强。</p><h4 id="二进制传输"><a class="header-anchor" href="#二进制传输">#</a>二进制传输</h4><p>HTTP2.0 中所有加强性能的核心是二进制传输，在 HTTP1.x 中，我们是通过文本的方式传输数据。基于文本的方式传输数据存在很多缺陷，文本的表现形式有多样性，因此要做到健壮性考虑的场景必然有很多，但是二进制则不同，只有 0 和 1 的组合，因此选择了二进制传输，实现方便且健壮。<br>在 HTTP2.0 中引入了新的编码机制，所有传输的数据都会被分割，并采用二进制格式编码。<br>为了保证 HTTP 不受影响，那就需要在应用层（HTTP2.0）和传输层（TCP or UDP）之间增加一个二进制分帧层。在二进制分帧层上，HTTP2.0 会将所有传输的信息分为更小的消息和帧，并采用二进制格式编码，其中 HTTP1.x 的首部信息会被封装到 Headers 帧，而 Request Body 则封装到 Data 帧。</p><h4 id="多路复用"><a class="header-anchor" href="#多路复用">#</a>多路复用</h4><p>在 HTTP1.0 中，我们经常会使用到雪碧图、使用多个域名等方式来进行优化，都是因为浏览器限制了同一个域名下的请求数量，当页面需要请求很多资源的时候，队头阻塞（Head of line blocking）会导致在达到最大请求时，资源需要等待其他资源请求完成后才能继续发送。<br>HTTP2.0 中，有两个概念非常重要：帧（frame）和流（stream）。<br>帧是最小的数据单位，每个帧会标识出该帧属于哪个流，流是多个帧组成的数据流。<br>所谓多路复用，即在一个 TCP 连接中存在多个流，即可以同时发送多个请求，对端可以通过帧中的表示知道该帧属于哪个请求。在客户端，这些帧乱序发送，到对端后再根据每个帧首部的流标识符重新组装。通过该技术，可以避免 HTTP 旧版本的队头阻塞问题，极大提高传输性能。</p><h4 id="header-压缩"><a class="header-anchor" href="#header-压缩">#</a>Header 压缩</h4><p>在 HTTP1.0 中，我们使用文本的形式传输 header，在 header 中携带 cookie 的话，每次都需要重复传输几百到几千的字节，这着实是一笔不小的开销。<br>在 HTTP2.0 中，我们使用了 HPACK（HTTP2 头部压缩算法）压缩格式对传输的 header 进行编码，减少了 header 的大小。并在两端维护了索引表，用于记录出现过的 header，后面在传输过程中就可以传输已经记录过的 header 的键名，对端收到数据后就可以通过键名找到对应的值。</p><h4 id="服务器-push"><a class="header-anchor" href="#服务器-push">#</a>服务器 Push</h4><p>在 HTTP2.0 中，服务端可以在客户端某个请求后，主动推送其他资源。<br>可以想象一下，某些资源客户端是一定会请求的，这时就可以采取服务端 push 的技术，提前给客户端推送必要的资源，就可以相对减少一点延迟时间。在浏览器兼容的情况下也可以使用 prefetch。</p><h4 id="更安全"><a class="header-anchor" href="#更安全">#</a>更安全</h4><p>HTTP2.0 使用了 tls 的拓展 ALPN 做为协议升级，除此之外，HTTP2.0 对 tls 的安全性做了近一步加强，通过黑名单机制禁用了几百种不再安全的加密算法。</p><h2 id="数据库"><a class="header-anchor" href="#数据库">#</a>数据库</h2><h3 id="三个问题"><a class="header-anchor" href="#三个问题">#</a>三个问题</h3><h4 id="脏读（读取未提交数据）"><a class="header-anchor" href="#脏读（读取未提交数据）">#</a>脏读（读取未提交数据）</h4><p>A 事务读取 B 事务尚未提交的数据，此时如果 B 事务发生错误并执行回滚操作，那么 A 事务读取到的数据就是脏数据。就好像原本的数据比较干净、纯粹，此时由于 B 事务更改了它，这个数据变得不再纯粹。这个时候 A 事务立即读取了这个脏数据，但事务 B 良心发现，又用回滚把数据恢复成原来干净、纯粹的样子，而事务 A 却什么都不知道，最终结果就是事务 A 读取了此次的脏数据，称为脏读。</p><table><thead><tr><th style="text-align:center">时间顺序</th><th style="text-align:center">转账事务</th><th style="text-align:center">取款事务</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"></td><td style="text-align:center">开始事务</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">开始事务</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"></td><td style="text-align:center">查询账户余额为 2000 元</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"></td><td style="text-align:center">取款 1000 元，余额被更改为 1000 元</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">查询账户余额为 1000 元（产生脏读）</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"></td><td style="text-align:center">取款操作发生未知错误，事务回滚，余额变更为 2000 元</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">转入 2000 元，余额被更改为 3000 元（脏读的 1000+2000）</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">提交事务</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">备注</td><td style="text-align:center">按照正确逻辑，此时账户余额应该为 4000 元</td><td style="text-align:center"></td></tr></tbody></table><h4 id="不可重复读（前后多次读取，数据内容不一致）"><a class="header-anchor" href="#不可重复读（前后多次读取，数据内容不一致）">#</a>不可重复读（前后多次读取，数据内容不一致）</h4><p>事务 A 在执行读取操作，由整个事务 A 比较大，前后读取同一条数据需要经历很长的时间 。而在事务 A 第一次读取数据，比如此时读取了小明的年龄为 20 岁，事务 B 执行更改操作，将小明的年龄更改为 30 岁，此时事务 A 第二次读取到小明的年龄时，发现其年龄是 30 岁，和之前的数据不一样了，也就是数据不重复了，系统不可以读取到重复的数据，成为不可重复读。</p><table><thead><tr><th style="text-align:center">时间顺序</th><th style="text-align:center">事务 A</th><th style="text-align:center">事务 B</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">开始事务</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">第一次查询，小明的年龄为 20 岁</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"></td><td style="text-align:center">开始事务</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">其他操作</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"></td><td style="text-align:center">更改小明的年龄为 30 岁</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"></td><td style="text-align:center">提交事务</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">第二次查询，小明的年龄为 30 岁</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">备注</td><td style="text-align:center">按照正确逻辑，事务 A 前后两次读取到的数据应该一致</td><td style="text-align:center"></td></tr></tbody></table><h4 id="幻读（前后多次读取，数据总量不一致）"><a class="header-anchor" href="#幻读（前后多次读取，数据总量不一致）">#</a>幻读（前后多次读取，数据总量不一致）</h4><p>事务 A 在执行读取操作，需要两次统计数据的总量，前一次查询数据总量后，此时事务 B 执行了新增数据的操作并提交后，这个时候事务 A 读取的数据总量和之前统计的不一样，就像产生了幻觉一样，平白无故的多了几条数据，成为幻读。</p><table><thead><tr><th style="text-align:center">时间顺序</th><th style="text-align:center">事务 A</th><th style="text-align:center">事务 B</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">开始事务</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">第一次查询，数据总量为 100 条</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"></td><td style="text-align:center">开始事务</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">其他操作</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"></td><td style="text-align:center">新增 100 条数据</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"></td><td style="text-align:center">提交事务</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">第二次查询，数据总量为 200 条</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">备注</td><td style="text-align:center">按照正确逻辑，事务 A 前后两次读取到的数据总量应该一致</td><td style="text-align:center"></td></tr></tbody></table><h3 id="隔离级别"><a class="header-anchor" href="#隔离级别">#</a>隔离级别</h3><h4 id="读未提交（read-uncommitted）"><a class="header-anchor" href="#读未提交（read-uncommitted）">#</a>读未提交（Read uncommitted）</h4><p>在这种隔离级别下，所有事务能够读取其他事务未提交的数据。读取其他事务未提交的数据，会造成脏读。因此在该种隔离级别下，不能解决脏读、不可重复读和幻读。</p><h4 id="读已提交（read-committed）"><a class="header-anchor" href="#读已提交（read-committed）">#</a>读已提交（Read committed）</h4><p>在这种隔离级别下，所有事务只能读取其他事务已经提交的内容。能够彻底解决脏读的现象。但在这种隔离级别下，会出现一个事务的前后多次的查询中却返回了不同内容的数据的现象，也就是出现了不可重复读。</p><p>这是大多数数据库系统默认的隔离级别，例如 Oracle 和 SQL Server，但 mysql 不是。</p><h4 id="可重复读（repeatable-read）"><a class="header-anchor" href="#可重复读（repeatable-read）">#</a>可重复读（Repeatable read）</h4><p>在这种隔离级别下，所有事务前后多次的读取到的数据内容是不变的。也就是某个事务在执行的过程中，不允许其他事务进行 update 操作，但允许其他事务进行 add 操作，造成某个事务前后多次读取到的数据总量不一致的现象，从而产生幻读。</p><p>mysql 的默认事务隔离级别。</p><h4 id="可串行化（serializable）"><a class="header-anchor" href="#可串行化（serializable）">#</a>可串行化（Serializable）</h4><p>在这种隔离级别下，所有的事务顺序执行，所以他们之间不存在冲突，从而能有效地解决脏读、不可重复读和幻读的现象。但是安全和效率不能兼得，这样事务隔离级别，会导致大量的操作超时和锁竞争，从而大大降低数据库的性能，一般不使用这样事务隔离级别。</p><h4 id="总结"><a class="header-anchor" href="#总结">#</a>总结</h4><table><thead><tr><th style="text-align:center">隔离级别</th><th style="text-align:center">脏读</th><th style="text-align:center">不可重复读</th><th style="text-align:center">幻读</th></tr></thead><tbody><tr><td style="text-align:center">读未提交（Read uncommitted）</td><td style="text-align:center">×(未解决)</td><td style="text-align:center">×</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">读已提交（Read committed）</td><td style="text-align:center">√(解决)</td><td style="text-align:center">×</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">可重复读（Repeatable read）</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">可串行化（Serializable）</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr></tbody></table><h3 id="事务"><a class="header-anchor" href="#事务">#</a>事务</h3><p>数据库事务(Database Transaction) ，是指作为单个逻辑工作单元执行的一系列操作（对数据库的相关增删改查的操作），要么完全地执行，要么完全地不执行。</p><h4 id="特性（acid）"><a class="header-anchor" href="#特性（acid）">#</a>特性（ACID）</h4><ol><li>原子性（Atomicity）：事务作为一个整体被执行，包含在其中的对数据库的操作要么全部被执行，要么都不执行。</li><li>一致性（Consistency）：事务应确保数据库的状态从一个一致状态转变为另一个一致状态。一致状态的含义是数据库中的数据应满足完整性约束。</li><li>隔离性（Isolation）：多个事务并发执行时，一个事务的执行不应影响其他事务的执行。</li><li>持久性（Durability）：一个事务一旦提交，他对数据库的修改应该永久保存在数据库中。</li></ol><p>用一个常用的“A 账户向 B 账号汇钱”的例子来说明如何通过数据库事务保证数据的准确性和完整性。熟悉关系型数据库事务的都知道从帐号 A 到帐号 B 需要 6 个操作：</p><p>1、从 A 账号中把余额读出来（500）。<br>2、对 A 账号做减法操作（500-100）。<br>3、把结果写回 A 账号中（400）。<br>4、从 B 账号中把余额读出来（500）。<br>5、对 B 账号做加法操作（500+100）。<br>6、把结果写回 B 账号中（600）。</p><p>原子性：<br>保证 1-6 所有过程要么都执行，要么都不执行。一旦在执行某一步骤的过程中发生问题，就需要执行回滚操作。 假如执行到第五步的时候，B 账户突然不可用（比如被注销），那么之前的所有操作都应该回滚到执行事务之前的状态。</p><p>一致性<br>在转账之前，A 和 B 的账户中共有 500+500=1000 元钱。在转账之后，A 和 B 的账户中共有 400+600=1000 元。也就是说，数据的状态在执行该事务操作之后从一个状态改变到了另外一个状态。同时一致性还能保证账户余额不会变成负数等。</p><p>隔离性<br>在 A 向 B 转账的整个过程中，只要事务还没有提交（commit），查询 A 账户和 B 账户的时候，两个账户里面的钱的数量都不会有变化。<br>如果在 A 给 B 转账的同时，有另外一个事务执行了 C 给 B 转账的操作，那么当两个事务都结束的时候，B 账户里面的钱应该是 A 转给 B 的钱加上 C 转给 B 的钱再加上自己原有的钱。</p><p>持久性<br>一旦转账成功（事务提交），两个账户的里面的钱就会真的发生变化（会把数据写入数据库做持久化保存）！</p><p>原子性与隔离行<br>一致性与原子性是密切相关的,原子性的破坏可能导致数据库的不一致，数据的一致性问题并不都和原子性有关。<br>比如刚刚的例子，在第五步的时候，对 B 账户做加法时只加了 50 元。那么该过程可以符合原子性，但是数据的一致性就出现了问题。</p><p>因此，事务的原子性与一致性缺一不可。</p><h3 id="索引"><a class="header-anchor" href="#索引">#</a>索引</h3><p>优点：</p><p>1.大大加快数据的检索速度</p><p>2.创建唯一性索引，保证数据库表中每一行数据的唯一性</p><p>3.加速表和表之间的连接</p><p>4.在使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间</p><p>缺点</p><p>1.索引需要占用数据表以外的物理存储空间</p><p>2.创建索引和维护索引要花费一定的时间</p><p>3.当对表进行更新操作时，索引需要被重建，这样降低了数据的维护速度</p><h4 id="分类"><a class="header-anchor" href="#分类">#</a>分类</h4><p>主键索引（PRIMAY KEY）</p><p>主键：</p><p>某一个属性组能唯一标识一条记录</p><p>如：学生表（学号，姓名，班级，性别等等），学号时唯一标识的，可以作为主键</p><p>特点：</p><p>最常见的索引类型</p><p>确保数据记录的唯一性</p><p>确定特定数据记录在数据库中的位置</p><p>实例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`表名`</span>（、</span><br><span class="line"></span><br><span class="line">　　<span class="string">`GradeID`</span> <span class="built_in">INT</span>(<span class="number">11</span>)  AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line"></span><br><span class="line">　　<span class="comment">#或 PRIMARY KEY(`GradeID`)</span></span><br><span class="line"></span><br><span class="line">）</span><br></pre></td></tr></table></figure><p>唯一索引（UNIQUE）</p><p>作用：</p><p>避免同一个表中某数据列中的值重复</p><p>与主键索引的区别</p><p>主键索引只能有一个</p><p>唯一索引可有多个</p><p>实例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`Grade`</span>（、</span><br><span class="line"></span><br><span class="line">　　<span class="string">`GradeID`</span> <span class="built_in">INT</span>(<span class="number">11</span>)  AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line"></span><br><span class="line">　　<span class="string">`GradeName`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span></span><br><span class="line"></span><br><span class="line">　　<span class="comment">#或 UNIQUE KEY ` GradeID`(`GradeID`)</span></span><br></pre></td></tr></table></figure><p>常规索引（INDEX）</p><p>作用：</p><p>快速定位特定数据</p><p>注意：</p><p>index 和 key 关键字都可以设置常规索引</p><p>应加在查询条件的字段</p><p>不易添加太多常规索引，影响数据的插入，删除和修改操作</p><p>实例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##创建表时添加</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`result`</span>&#123;</span><br><span class="line"></span><br><span class="line">　　//省略一些代码</span><br><span class="line"></span><br><span class="line">　　<span class="keyword">INDEX</span> / <span class="keyword">KEY</span> <span class="string">`ind`</span> (<span class="string">`studentNo`</span>,<span class="string">`subjectNo`</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##创建后追加</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`result`</span> <span class="keyword">ADD</span>  <span class="keyword">INDEX</span> <span class="string">`ind`</span> (<span class="string">`studentNo`</span>,<span class="string">`subjectNo`</span>);</span><br></pre></td></tr></table></figure><p>全文索引（FULLTEXT）</p><p>作用：</p><p>快速定位特定数据</p><p>注意：</p><p>只能用于 MyISAM 类型的数据表</p><p>只能用于 CHAR ,VARCHAR,TEXT 数据列类型</p><p>使用大型数据集</p><p>实例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`student`</span>(</span><br><span class="line"></span><br><span class="line">　　<span class="comment">#省略一些sql语句</span></span><br><span class="line"></span><br><span class="line">　　　　FULLTEXT(<span class="string">`StudentName`</span>)</span><br><span class="line"></span><br><span class="line">)ENDINE=MYISAM;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employee <span class="keyword">ADD</span> FULLTEXT(<span class="string">`first_name`</span>)</span><br></pre></td></tr></table></figure><h3 id="覆盖索引与回表"><a class="header-anchor" href="#覆盖索引与回表">#</a>覆盖索引与回表</h3><h4 id="聚簇索引"><a class="header-anchor" href="#聚簇索引">#</a>聚簇索引</h4><ul><li>如果表设置了主键，则主键就是聚簇索引</li><li>如果表没有主键，则会默认第一个 NOT NULL，且唯一（UNIQUE）的列作为聚簇索引</li><li>以上都没有，则会默认创建一个隐藏的 row_id 作为聚簇索引</li></ul><p>InnoDB 的聚簇索引的叶子节点存储的是行记录（其实是页结构，一个页包含多行数据），InnoDB 必须要有至少一个聚簇索引。<br>由此可见，使用聚簇索引查询会很快，因为可以直接定位到行记录。</p><h4 id="普通索引"><a class="header-anchor" href="#普通索引">#</a>普通索引</h4><p>普通索引也叫二级索引，除聚簇索引外的索引，即非聚簇索引。<br>InnoDB 的普通索引叶子节点存储的是主键（聚簇索引）的值，而 MyISAM 的普通索引存储的是记录指针。</p><h4 id="回表查询"><a class="header-anchor" href="#回表查询">#</a>回表查询</h4><p>先通过普通索引的值定位聚簇索引值，再通过聚簇索引的值定位行记录数据，需要扫描两次索引 B+树，它的性能较扫一遍索引树更低。</p><h4 id="索引覆盖"><a class="header-anchor" href="#索引覆盖">#</a>索引覆盖</h4><p>只需要在一棵索引树上就能获取 SQL 所需的所有列数据，无需回表，速度更快。<br>例如：select id,age from user where age = 10;</p><p>常见的方法是：将被查询的字段，建立到联合索引里去。</p><h2 id="b-树"><a class="header-anchor" href="#b-树">#</a>B+树</h2><p>B+ 树是一种树数据结构，是一个 n 叉树，每个节点通常有多个孩子，一颗 B+树包含根节点、内部节点和叶子节点。B+ 树通常用于数据库和操作系统的文件系统中。 B+ 树的特点是能够保持数据稳定有序，其插入与修改拥有较稳定的对数时间复杂度。 B+ 树元素自底向上插入。</p><ol><li>根结点至少有两个子女。</li><li>每个中间节点都至少包含 ceil(m / 2)个孩子，最多有 m 个孩子。</li><li>每一个叶子节点都包含 k-1 个元素，其中 m/2 &lt;= k &lt;= m。</li><li>所有的叶子结点都位于同一层。</li><li>每个节点中的元素从小到大排列，节点当中 k-1 个元素正好是 k 个孩子包含的元素的值域分划。</li><li>每个叶子节点都有一个指针，指向下一个数据，形成一个有序链表。</li><li>而只有叶子节点才会有 data，其他都是索引。</li></ol><h3 id="与-b-树的区别"><a class="header-anchor" href="#与-b-树的区别">#</a>与 B 树的区别</h3><ol><li>有 k 个子结点的结点必然有 k 个关键码。</li><li>非叶结点仅具有索引作用，跟记录有关的信息均存放在叶结点中。</li><li>树的所有叶结点构成一个有序链表，可以按照关键码排序的次序遍历全部记录。</li></ol><h3 id="页"><a class="header-anchor" href="#页">#</a>页</h3><p>这里我们就需要了解页（page）的概念，在计算机里，无论是内存还是磁盘，操作系统都是按页的大小进行读取的（页大小通常为 4 kb），磁盘每次读取都会预读，会提前将连续的数据读入内存中，这样就避免了多次 IO，这就是计算机中有名的局部性原理，即我用到一块数据，很大可能这块数据附近的数据也会被用到，干脆一起加载，省得多次 IO 拖慢速度， 这个连续数据有多大呢，必须是操作系统页大小的整数倍，这个连续数据就是 MySQL 的页，默认值为 16 KB，也就是说对于 B+ 树的节点，最好设置成页的大小（16 KB），这样一个 B+ 树上的节点就只会有一次 IO 读。</p><h3 id="优点"><a class="header-anchor" href="#优点">#</a>优点</h3><p>B+树相比 B 树的存储效率更高。<br>B+树的高度更小，检索效率更高。<br>B+树支持范围检索，在实际应用中更为广泛。<br>插入和删除更为方便，其实流程和 B 树类似，但 B+树里面，关键码的个数和子节点的个数是对等的，所以从记忆角度来说，B+树更方便记忆使用，而 B 树则需要时刻注意节点数和关键码的对应关系。</p><h2 id="mysql"><a class="header-anchor" href="#mysql">#</a>Mysql</h2><h3 id="常用引擎"><a class="header-anchor" href="#常用引擎">#</a>常用引擎</h3><h4 id="区别-2"><a class="header-anchor" href="#区别-2">#</a>区别</h4><ol><li>InnoDB 支持事务，MyISAM 不支持事务。这是 MySQL 将默认存储引擎从 MyISAM 变成 InnoDB 的重要原因之一；</li><li>InnoDB 支持外键，而 MyISAM 不支持。对一个包含外键的 InnoDB 表转为 MYISAM 会失败；</li><li>InnoDB 是聚集索引，MyISAM 是非聚集索引。聚簇索引的文件存放在主键索引的叶子节点上，因此 InnoDB 必须要有主键，通过主键索引效率很高。但是辅助索引需要两次查询，先查询到主键，然后再通过主键查询到数据。因此，主键不应该过大，因为主键太大，其他索引也都会很大。而 MyISAM 是非聚集索引，数据文件是分离的，索引保存的是数据文件的指针。主键索引和辅助索引是独立的。</li><li>InnoDB 不保存表的具体行数，执行 select count(*) from table 时需要全表扫描。而 MyISAM 用一个变量保存了整个表的行数，执行上述语句时只需要读出该变量即可，速度很快；</li><li>InnoDB 最小的锁粒度是行锁，MyISAM 最小的锁粒度是表锁。一个更新语句会锁住整张表，导致其他查询和更新都会被阻塞，因此并发访问受限。这也是 MySQL 将默认存储引擎从 MyISAM 变成 InnoDB 的重要原因之一；</li></ol><h4 id="如何选择"><a class="header-anchor" href="#如何选择">#</a>如何选择</h4><ol><li>是否要支持事务，如果要请选择 InnoDB，如果不需要可以考虑 MyISAM；</li><li>如果表中绝大多数都只是读查询，可以考虑 MyISAM，如果既有读写也挺频繁，请使用 InnoDB。</li><li>系统奔溃后，MyISAM 恢复起来更困难，能否接受，不能接受就选 InnoDB；</li><li>MySQL5.5 版本开始 Innodb 已经成为 Mysql 的默认引擎(之前是 MyISAM)，说明其优势是有目共睹的。如果你不知道用什么存储引擎，那就用 InnoDB，至少不会差。</li></ol><h3 id="binlog-和-redolog"><a class="header-anchor" href="#binlog-和-redolog">#</a>binlog 和 redolog</h3><ol><li>功能不同，binlog 主要用于归档，而 redolog 主要用于崩溃恢复</li><li>内容不同，binlog 是逻辑日志，而 redolog 是物理日志</li><li>写入时机不同，binlog 是 server 层记录的，所有存储引擎可共享，而 redolog 是 InnoDB 引擎特有的</li><li>写入方式不同，binlog 容量无限，追加写入，而 redolog 容量有限，循环写入</li></ol><h2 id="java"><a class="header-anchor" href="#java">#</a>JAVA</h2><h3 id="类加载过程"><a class="header-anchor" href="#类加载过程">#</a>类加载过程</h3><h4 id="加载"><a class="header-anchor" href="#加载">#</a>加载</h4><p>简单来说，加载指的是把 class 字节码文件从各个来源通过类加载器装载入内存中。</p><p>这里有两个重点：</p><p>字节码来源。一般的加载来源包括从本地路径下编译生成的.class 文件，从 jar 包中的.class 文件，从远程网络，以及动态代理实时编译</p><p>类加载器。一般包括启动类加载器，扩展类加载器，应用类加载器，以及用户的自定义类加载器。</p><p>注：为什么会有自定义类加载器？</p><p>一方面是由于 java 代码很容易被反编译，如果需要对自己的代码加密的话，可以对编译后的代码进行加密，然后再通过实现自己的自定义类加载器进行解密，最后再加载。</p><p>另一方面也有可能从非标准的来源加载代码，比如从网络来源，那就需要自己实现一个类加载器，从指定源进行加载。</p><h4 id="验证"><a class="header-anchor" href="#验证">#</a>验证</h4><p>主要是为了保证加载进来的字节流符合虚拟机规范，不会造成安全错误。</p><p>包括对于文件格式的验证，比如常量中是否有不被支持的常量？文件中是否有不规范的或者附加的其他信息？</p><p>对于元数据的验证，比如该类是否继承了被 final 修饰的类？类中的字段，方法是否与父类冲突？是否出现了不合理的重载？</p><p>对于字节码的验证，保证程序语义的合理性，比如要保证类型转换的合理性。</p><p>对于符号引用的验证，比如校验符号引用中通过全限定名是否能够找到对应的类？校验符号引用中的访问性（private，public 等）是否可被当前类访问？</p><h4 id="准备"><a class="header-anchor" href="#准备">#</a>准备</h4><p>主要是为类变量（注意，不是实例变量）分配内存，并且赋予初值。</p><p>特别需要注意，初值，不是代码中具体写的初始化的值，而是 Java 虚拟机根据不同变量类型的默认初始值。</p><p>比如 8 种基本类型的初值，默认为 0；引用类型的初值则为 null；常量的初值即为代码中设置的值，final static tmp = 456， 那么该阶段 tmp 的初值就是 456</p><h4 id="解析"><a class="header-anchor" href="#解析">#</a>解析</h4><p>将常量池内的符号引用替换为直接引用的过程。</p><p>两个重点：</p><p>符号引用。即一个字符串，但是这个字符串给出了一些能够唯一性识别一个方法，一个变量，一个类的相关信息。</p><p>直接引用。可以理解为一个内存地址，或者一个偏移量。比如类方法，类变量的直接引用是指向方法区的指针；而实例方法，实例变量的直接引用则是从实例的头指针开始算起到这个实例变量位置的偏移量</p><p>举个例子来说，现在调用方法 hello()，这个方法的地址是 1234567，那么 hello 就是符号引用，1234567 就是直接引用。</p><p>在解析阶段，虚拟机会把所有的类名，方法名，字段名这些符号引用替换为具体的内存地址或偏移量，也就是直接引用。</p><h4 id="初始化"><a class="header-anchor" href="#初始化">#</a>初始化</h4><p>这个阶段主要是对类变量初始化，是执行类构造器的过程。</p><p>换句话说，只对 static 修饰的变量或语句进行初始化。</p><p>如果初始化一个类的时候，其父类尚未初始化，则优先初始化其父类。</p><p>如果同时包含多个静态变量和静态代码块，则按照自上而下的顺序依次执行。</p><h3 id="classloader"><a class="header-anchor" href="#classloader">#</a>ClassLoader</h3><p>它是用来加载 Class 的。它负责将 Class 的字节码形式转换成内存形式的 Class 对象。字节码可以来自于磁盘文件 _.class，也可以是 jar 包里的 _.class，也可以来自远程服务器提供的字节流，字节码的本质就是一个字节数组 []byte，它有特定的复杂的内部格式。</p><p>JVM 运行实例中会存在多个 ClassLoader，不同的 ClassLoader 会从不同的地方加载字节码文件。它可以从不同的文件目录加载，也可以从不同的 jar 文件中加载，也可以从网络上不同的静态文件服务器来下载字节码再加载。</p><h4 id="bootstrapclassloader"><a class="header-anchor" href="#bootstrapclassloader">#</a>BootstrapClassLoader</h4><p>启动类加载器：负责加载 JVM 运行时核心类,加载 System.getProperty(“sun.boot.class.path”)所指定的路径或 jar</p><h4 id="extensionclassloader"><a class="header-anchor" href="#extensionclassloader">#</a>ExtensionClassLoader</h4><p>拓展类加载器：负责加载 JVM 扩展类，比如 swing 系列、内置的 js 引擎、xml 解析器 等等，这些库名通常以 javax 开头，它们的 jar 包位于 JAVAHOME/lib/rt.jar 文件中.<br>加载 System.getProperty(“java.ext.dirs”)所指定的路径或 jar。在使用 Java 运行程序时，也可以指定其搜索路径，例如：java -Djava.ext.dirs=d:\projects\testproj\classes HelloWorld。</p><h4 id="appclassloader"><a class="header-anchor" href="#appclassloader">#</a>AppClassLoader</h4><p>用户类加载器：它会加载 Classpath 环境变量里定义的路径中的 jar 包和目录。我们自己编写的代码以及使用的第三方 jar 包通常都是由它来加载的。<br>加载 System.getProperty(“java.class.path”)所指定的路径或 jar。在使用 Java 运行程序时，也可以加上-cp 来覆盖原有的 Classpath 设置，例如： java -cp ./lavasoft/classes HelloWorld</p><h4 id="urlclassloader"><a class="header-anchor" href="#urlclassloader">#</a>URLClassLoader</h4><p>那些位于网络上静态文件服务器提供的 jar 包和 class 文件，jdk 内置了一个 URLClassLoader，用户只需要传递规范的网络路径给构造器，就可以使用 URLClassLoader 来加载远程类库了。URLClassLoader 不但可以加载远程类库，还可以加载本地路径的类库，取决于构造器中不同的地址形式。ExtensionClassLoader 和 AppClassLoader 都是 URLClassLoader 的子类，它们都是从本地文件系统里加载类库。</p><h4 id="关于-jvm-类的加载"><a class="header-anchor" href="#关于-jvm-类的加载">#</a>关于 jvm 类的加载</h4><p>在 Java 中，类装载器把一个类装入 Java 虚拟机中，要经过三个步骤来完成：装载、链接和初始化，其中链接又可以分成校验、准备和解析三步，除了解析外，其它步骤是严格按照顺序完成的，各个步骤的主要工作如下：</p><p>装载：查找和导入类或接口的二进制数据； //byte[]</p><p>链接：执行下面的校验、准备和解析步骤，其中解析步骤是可以选择的；//包含了虚方法表的初始化</p><p>校验：检查导入类或接口的二进制数据的正确性； //魔数 babycafe?</p><p>准备：给类的静态变量分配并初始化存储空间； //分配内存空间</p><p>解析：将符号引用转成直接引用；</p><p>初始化：激活类的静态变量的初始化 Java 代码和静态 Java 代码块。<br>//对应的为<clinit>()方法,该方法在多线环境中如果有多个线程同时去初始化一个类,那么久只有一个线程去执行。<br>//这也是我们写单例时,为什么可以使用静态内部类了,保证了内部重排序对外部线程时不可见的,具体可以见对 DCL 的分析</p><h3 id="范型"><a class="header-anchor" href="#范型">#</a>范型</h3><p>Java 的泛型只存在于编译期，一旦编译成字节码，泛型将被擦除。泛型的作用在于在编译阶段保证我们使用了正确的类型，并且由编译器帮我们加入转型动作，使得转型是不需要关心且安全的。</p><h3 id="gc"><a class="header-anchor" href="#gc">#</a>GC</h3><h4 id="可以作为-gc-roots-对象"><a class="header-anchor" href="#可以作为-gc-roots-对象">#</a>可以作为 GC Roots 对象</h4><ol><li>虚拟机栈中局部变量表中引用的对象</li><li>本地方法栈中 native 方法引用的对象</li><li>方法区中类静态属性引用的对象</li><li>方法区中的常量引用的对象</li></ol><h4 id="四种引用类型"><a class="header-anchor" href="#四种引用类型">#</a>四种引用类型</h4><p>强引用：使用 new 一个新对象的方式来创建强引用。只要强引用还存在，垃圾收集器永远不会回收掉被引用的对象。<br>软引用：一些还有用但并非必须的对象。软引用关联着的对象，在系统要发生内存溢出之前，会把这些对象进行垃圾回收。<br>弱引用：也是描述一些非必须对象，强度比软引用更弱，只要发生垃圾回收，它就一定会被回收。<br>虚引用：又称幽灵引用、幻影引用，是最弱的一种引用。为对象设置虚引用的唯一目的是能在这个对象被回收时会收到一个系统通知。</p><h4 id="垃圾收集算法"><a class="header-anchor" href="#垃圾收集算法">#</a>垃圾收集算法</h4><ol><li>标记 - 清除算法：适用老年代</li><li>标记 - 整理算法：适用老年代</li><li>复制算法：适用年轻代</li></ol><h3 id="线程池"><a class="header-anchor" href="#线程池">#</a>线程池</h3><h4 id="好处"><a class="header-anchor" href="#好处">#</a>好处</h4><p>我们知道不用线程池的话，每个线程都要通过 new Thread(xxRunnable).start()的方式来创建并运行一个线程，线程少的话这不会是问题，而真实环境可能会开启多个线程让系统和程序达到最佳效率，当线程数达到一定数量就会耗尽系统的 CPU 和内存资源，也会造成 GC 频繁收集和停顿，因为每次创建和销毁一个线程都是要消耗系统资源的，如果为每个任务都创建线程这无疑是一个很大的性能瓶颈。所以，线程池中的线程复用极大节省了系统资源，当线程一段时间不再有任务处理时它也会自动销毁，而不会长驻内存。</p><h4 id="工作流程"><a class="header-anchor" href="#工作流程">#</a>工作流程</h4><ol><li>如果线程池中的线程小于 corePoolSize 时就会创建新线程直接执行任务。</li><li>如果线程池中的线程大于 corePoolSize 时就会暂时把任务存储到工作队列 workQueue 中等待执行。</li><li>如果工作队列 workQueue 也满时，当线程数小于最大线程池数 maximumPoolSize 时就会创建新线程来处理，而线程数大于等于最大线程池数 maximumPoolSize 时就会执行拒绝策略。</li></ol><h4 id="分类-2"><a class="header-anchor" href="#分类-2">#</a>分类</h4><ol><li><p>newFixedThreadPool<br>固定线程池，核心线程数和最大线程数固定相等，而空闲存活时间为 0 毫秒，说明此参数也无意义，工作队列为最大为 Integer.MAX_VALUE 大小的阻塞队列。当执行任务时，如果线程都很忙，就会丢到工作队列等有空闲线程时再执行，队列满就执行默认的拒绝策略。</p></li><li><p>newCachedThreadPool<br>带缓冲线程池，从构造看核心线程数为 0，最大线程数为 Integer 最大值大小，超过 0 个的空闲线程在 60 秒后销毁，SynchronousQueue 这是一个直接提交的队列，意味着每个新任务都会有线程来执行，如果线程池有可用线程则执行任务，没有的话就创建一个来执行，线程池中的线程数不确定，一般建议执行速度较快较小的线程，不然这个最大线程池边界过大容易造成内存溢出。</p></li><li><p>newSingleThreadExecutor<br>单线程线程池，核心线程数和最大线程数均为 1，空闲线程存活 0 毫秒同样无意思，意味着每次只执行一个线程，多余的先存储到工作队列，一个一个执行，保证了线程的顺序执行。</p></li><li><p>newScheduledThreadPool<br>调度线程池，即按一定的周期执行任务，即定时任务，对 ThreadPoolExecutor 进行了包装而已。</p></li></ol><h4 id="拒绝策略"><a class="header-anchor" href="#拒绝策略">#</a>拒绝策略</h4><ol><li>AbortPolicy<br>简单粗暴，直接抛出拒绝异常，这也是默认的拒绝策略。</li><li>CallerRunsPolicy<br>如果线程池未关闭，则会在调用者线程中直接执行新任务，这会导致主线程提交线程性能变慢。</li><li>DiscardPolicy<br>从方法看没做任务操作，即表示不处理新任务，即丢弃。</li><li>DiscardOldestPolicy<br>抛弃最老的任务，就是从队列取出最老的任务然后放入新的任务进行执行。</li></ol><h3 id="多态"><a class="header-anchor" href="#多态">#</a>多态</h3><p>面向对象的三大特性：封装、继承、多态<br>多态的定义：指允许不同类的对象对同一消息做出响应。即同一消息可以根据发送对象的不同而采用多种不同的行为方式。（发送消息就是函数调用）<br>实现多态的技术称为：动态绑定（dynamic binding），是指在执行期间判断所引用对象的实际类型，根据其实际的类型调用其相应的方法。<br>多态的作用：消除类型之间的耦合关系。<br>现实中，关于多态的例子不胜枚举。比方说按下 F1 键这个动作，如果当前在 Flash 界面下弹出的就是 AS 3 的帮助文档；如果当前在 Word 下弹出的就是 Word 帮助；在 Windows 下弹出的就是 Windows 帮助和支持。同一个事件发生在不同的对象上会产生不同的结果。<br>下面是多态存在的三个必要条件，要求大家做梦时都能背出来！</p><p>多态存在的三个必要条件<br>一、要有继承；<br>二、要有重写；<br>三、父类引用指向子类对象。</p><h2 id="epoll"><a class="header-anchor" href="#epoll">#</a>epoll</h2><p>1、支持一个进程所能打开的最大连接数</p><p>select：单个进程所能打开的最大连接数有 FD_SETSIZE 宏定义，其大小是 32 个整数的大小（在 32 位的机器上，大小就是 3232，同理 64 位机器上 FD_SETSIZE 为 3264），当然我们可以对进行修改，然后重新编译内核，但是性能可能会受到影响，这需要进一步的测试。</p><p>poll：poll 本质上和 select 没有区别，但是它没有最大连接数的限制，原因是它是基于链表来存储的。</p><p>epoll：虽然连接数有上限，但是很大，1G 内存的机器上可以打开 10 万左右的连接，2G 内存的机器可以打开 20 万左右的连接。</p><p>2、FD 剧增后带来的 IO 效率问题</p><p>select：因为每次调用时都会对连接进行线性遍历，所以随着 FD 的增加会造成遍历速度慢的“线性下降性能问题”。</p><p>poll：同上</p><p>epoll：因为 epoll 内核中实现是根据每个 fd 上的 callback 函数来实现的，只有活跃的 socket 才会主动调用 callback，所以在活跃 socket 较少的情况下，使用 epoll 没有前面两者的线性下降的性能问题，但是所有 socket 都很活跃的情况下，可能会有性能问题。</p><p>3、 消息传递方式</p><p>select：内核需要将消息传递到用户空间，都需要内核拷贝动作</p><p>poll：同上</p><p>epoll：epoll 通过内核和用户空间共享一块内存来实现的。</p><p>总结：</p><p>综上，在选择 select，poll，epoll 时要根据具体的使用场合以及这三种方式的自身特点。</p><p>1、表面上看 epoll 的性能最好，但是在连接数少并且连接都十分活跃的情况下，select 和 poll 的性能可能比 epoll 好，毕竟 epoll 的通知机制需要很多函数回调。</p><p>select，poll 实现需要自己不断轮询所有 fd 集合，直到设备就绪，期间可能要睡眠和唤醒多次交替。而 epoll 其实也需要调用 epoll_wait 不断轮询就绪链表，期间也可能多次睡眠和唤醒交替，但是它是设备就绪时，调用回调函数，把就绪 fd 放入就绪链表中，并唤醒在 epoll_wait 中进入睡眠的进程。虽然都要睡眠和交替，但是 select 和 poll 在“醒着”的时候要遍历整个 fd 集合，而 epoll 在“醒着”的时候只要判断一下就绪链表是否为空就行了，这节省了大量的 CPU 时间。这就是回调机制带来的性能提升。</p><p>2、select 低效是因为每次它都需要轮询。但低效也是相对的，视情况而定，也可通过良好的设计改善</p><p>select，poll 每次调用都要把 fd 集合从用户态往内核态拷贝一次，并且要把 current 往设备等待队列中挂一次，而 epoll 只要一次拷贝，而且把 current 往等待队列上挂也只挂一次（在 epoll_wait 的开始，注意这里的等待队列并不是设备等待队列，只是一个 epoll 内部定义的等待队列）。这也能节省不少的开销。</p><h2 id="计算机网络"><a class="header-anchor" href="#计算机网络">#</a>计算机网络</h2><h3 id="数据链路层"><a class="header-anchor" href="#数据链路层">#</a>数据链路层</h3><h4 id="封装成帧"><a class="header-anchor" href="#封装成帧">#</a>封装成帧</h4><p>封装成帧（framing）就是在一段数据的前后分别添加首部和尾部，这样就构成了一个帧。接收端在收到物理层上交的比特流后，就能根据首部和尾部的标记，从比特流中识别帧的开始和结束。</p><p>首部和尾部的一个重要作用就是进行帧定界（即确定帧的界限）。此外，首部和尾部还包括许多必要的控制信息。</p><p>为了提高帧的传输效率，应当使帧的数据部分长度尽量大于首部和尾部的长度。<br>最大传输单元 MTU（Maximum Transfer Unit）：帧数据部分长度上限。</p><p>控制字符<code>SOH</code>（start of header）放在一帧的最前面，表示帧的首部开始。另一个控制字符<code>EOT</code>（end of transmission）表示帧的结束。注意：<code>SOH</code>和<code>EOT</code>都只是控制字符的名称，他们的十六进制编码分别是 01（二进制是 00000001）和 04（二进制是 00000100）。SOH、EOT 并不是 S O H E O T 这几个字符，只是名字而已。</p><h4 id="透明传输"><a class="header-anchor" href="#透明传输">#</a>透明传输</h4><p>为了解决透明传输问题，字节填充法或字符填充：在控制字符 SOH、EOT 的前面插入一个转义字符 ESC（其十六进制编码是 1B，二进制是 00011011）。而接收端的数据链路层在把数据送往网络层之前删除这个插入的转义字符。</p><h4 id="差错检测"><a class="header-anchor" href="#差错检测">#</a>差错检测</h4><p>目前在数据链路层广泛使用了循环冗余检验（CRC）的检错技术。</p><p>在数据链路层的 CRC 检验都是用硬件完成的，处理很迅速，因此不会延误数据的传输。</p><p>为什么数据链路层要以帧为单位来传送数据呢？因为如果不以帧为单位，就无法加入冗余码来进行差错检验。</p><p>现在的互联网采用了区别对待的方法：</p><p>对于通信质量良好的有线传输链路，数据链路层协议不使用确认和重传机制，即不要求数据链路层向上提供可靠传输的服务。如果在数据链路层传输数据时出现了差错并且需要进行改正，那么改正差错的任务就由上层协议（例如，运输层的 TCP 协议）来完成。</p><p>对于通信质量较差的无线传输链路，数据链路层协议使用确认和重传机制，数据链路层向上提供可靠传输的服务。</p><h2 id="exception和error的区别"><a class="header-anchor" href="#exception和error的区别">#</a>Exception和Error的区别</h2><center><p><img src="//onns.xyz/blog/image/20200916-1.png" alt="继承关系"></p></center><p>Error：表示由 JVM 所侦测到的无法预期的错误，由于这是属于 JVM 层次的严重错误，导致 JVM 无法继续执行，因此，这是不可捕捉到的，无法采取任何恢复的操作，顶多只能显示错误信息。</p><p>Exception：表示可恢复的例外/异常，这是可捕捉到的。</p><p>Java 提供了两类主要的异常：RuntimeException和checked exception。</p><p>checked异常也就是我们经常遇到的 IO 异常，以及SQL 异常等。对于这种异常，JAVA 编译器强制要求我们必需对出现的这些异常进行处理。</p><p>但是RuntimeException，也称运行时异常，我们可以不处理。当出现这样的异常时，总是由虚拟机接管。比如：我们从来没有人去处理过NullPointerException 异常，它就是运行时异常，并且这种异常还是最常见的异常之一。</p><p>出现运行时异常后，系统会把异常一直往上层抛，一直遇到处理代码。如果没有处理块，到最上层，如果是多线程就由 Thread.run() 抛出 ，如果是单线程就被 main() 抛出 。抛出之后，如果是线程，这个线程也就退出了。如果是主程序抛出的异常，那么这整个程序也就退出了。运行时异常是 Exception 的子类，也有一般异常的特点，也是可以被 Catch 块处理的。只不过往往我们不对他处理罢了。也就是说，你如果不对运行时异常进行处理，那么出现运行时异常之后，要么是线程中止，要么是主程序终止。<br>如果不想终止，则必须捕捉所有的运行时异常，决不让这个处理线程退出。队列里面出现异常数据了，正常的处理应该是把异常数据舍弃，然后记录日志。不应该由于异常数据而影响下面对正常数据的处理。在这个场景这样处理可能是一个比较好的应用，但并不代表在所有的场景都应该如此。如果在其它场景，遇到了一些错误，如果退出程序比较好，这时你就可以不理会运行时异常 。<br>异常处理的目标之一就是为了把程序从异常中恢复出来 。</p><p>对于Checked异常的处理方式有两种：</p><p>（1）当前方法明确知道如何处理该异常，程序应该使用try…catch块来捕获该异常，然后在对应的catch块中修补该异常。</p><p>（2）当前方法不知道如何处理这种异常，应该在定义该方法时声明抛出该异常。</p><h2 id="assert"><a class="header-anchor" href="#assert">#</a>assert</h2><p>在Java中，assert关键字是从JAVA SE 1.4 引入的，为了避免和老版本的Java代码中使用了assert关键字导致错误，Java在执行的时候默认是不启动断言检查的（这个时候，所有的断言语句都将忽略！），如果要开启断言检查，则需要用开关-enableassertions或-ea来开启。</p><p>assert关键字语法很简单，有两种用法：</p><p>1、assert &lt;boolean表达式&gt;<br>如果&lt;boolean表达式&gt;为true，则程序继续执行。<br>如果为false，则程序抛出AssertionError，并终止执行。</p><p>2、assert &lt;boolean表达式&gt; : &lt;错误信息表达式&gt;<br>如果&lt;boolean表达式&gt;为true，则程序继续执行。<br>如果为false，则程序抛出java.lang.AssertionError，并输入&lt;错误信息表达式&gt;。</p><h3 id="陷阱"><a class="header-anchor" href="#陷阱">#</a>陷阱</h3><p>assert关键字用法简单，但是使用assert往往会让你陷入越来越深的陷阱中。应避免使用。笔者经过研究，总结了以下原因：</p><p>1、assert关键字需要在运行时候显式开启才能生效，否则你的断言就没有任何意义。而现在主流的Java IDE工具默认都没有开启-ea断言检查功能。这就意味着你如果使用IDE工具编码，调试运行时候会有一定的麻烦。并且，对于Java Web应用，程序代码都是部署在容器里面，你没法直接去控制程序的运行，如果一定要开启-ea的开关，则需要更改Web容器的运行配置参数。这对程序的移植和部署都带来很大的不便。</p><p>2、用assert代替if是陷阱之二。assert的判断和if语句差不多，但两者的作用有着本质的区别：assert关键字本意上是为测试调试程序时使用的，但如果不小心用assert来控制了程序的业务流程，那在测试调试结束后去掉assert关键字就意味着修改了程序的正常的逻辑。</p><p>3、assert断言失败将面临程序的退出。这在一个生产环境下的应用是绝不能容忍的。一般都是通过异常处理来解决程序中潜在的错误。但是使用断言就很危险，一旦失败系统就挂了。</p><h2 id="final"><a class="header-anchor" href="#final">#</a>final</h2><p>final关键字可以用来修饰引用、方法和类。</p><ol><li>用来修饰一个引用<br>如果引用为基本数据类型，则该引用为常量，该值无法修改；<br>如果引用为引用数据类型，比如对象、数组，则该对象、数组本身可以修改，但指向该对象或数组的地址的引用不能修改。<br>如果引用时类的成员变量，则必须当场赋值，否则编译会报错。</li><li>用来修饰一个方法<br>当使用final修饰方法时，这个方法将成为最终方法，无法被子类重写。但是，该方法仍然可以被继承。</li><li>用来修饰类<br>当用final修改类时，该类成为最终类，无法被继承。简称为“断子绝孙类”。</li></ol><h2 id="volatile"><a class="header-anchor" href="#volatile">#</a>volatile</h2><p>Java内存模型规定所有的变量都是存在主存当中（类似于前面说的物理内存），每个线程都有自己的工作内存（类似于前面的高速缓存）。线程对变量的所有操作都必须在工作内存中进行，而不能直接对主存进行操作。并且每个线程不能访问其他线程的工作内存。<br>由于java中的每个线程有自己的工作空间，这种工作空间相当于上面所说的高速缓存，因此多个线程在处理一个共享变量的时候，就会出现线程安全问题。</p><p>1）保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的。<br>2）禁止进行指令重排序。</p><h2 id="解决哈希冲突的四种方法"><a class="header-anchor" href="#解决哈希冲突的四种方法">#</a>解决哈希冲突的四种方法</h2><p>1.开放地址方法</p><p>（1）线性探测</p><p>按顺序决定值时，如果某数据的值已经存在，则在原来值的基础上往后加一个单位，直至不发生哈希冲突。</p><p>（2）再平方探测</p><p>按顺序决定值时，如果某数据的值已经存在，则在原来值的基础上先加1的平方个单位，若仍然存在则减1的平方个单位。随之是2的平方，3的平方等等。直至不发生哈希冲突。</p><p>（3）伪随机探测</p><p>按顺序决定值时，如果某数据已经存在，通过随机函数随机生成一个数，在原来值的基础上加上随机数，直至不发生哈希冲突。</p><p>2.链式地址法（HashMap的哈希冲突解决方法）</p><p>对于相同的值，使用链表进行连接。使用数组存储每一个链表。</p><p>优点：</p><p>（1）拉链法处理冲突简单，且无堆积现象，即非同义词决不会发生冲突，因此平均查找长度较短；</p><p>（2）由于拉链法中各链表上的结点空间是动态申请的，故它更适合于造表前无法确定表长的情况；</p><p>（3）开放定址法为减少冲突，要求装填因子α较小，故当结点规模较大时会浪费很多空间。而拉链法中可取α≥1，且结点较大时，拉链法中增加的指针域可忽略不计，因此节省空间；</p><p>（4）在用拉链法构造的散列表中，删除结点的操作易于实现。只要简单地删去链表上相应的结点即可。<br>　　缺点：</p><p>指针占用较大空间时，会造成空间浪费，若空间用于增大散列表规模进而提高开放地址法的效率。</p><p>3.建立公共溢出区</p><p>建立公共溢出区存储所有哈希冲突的数据。</p><p>4.再哈希法</p><p>对于冲突的哈希值再次进行哈希处理，直至没有哈希冲突。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://blog.csdn.net/greentealc/article/details/79880220" target="_blank" rel="noopener">关于 TCP，UDP，针对面试。超详细</a></li><li><a href="https://www.jianshu.com/p/deee6abf0b72" target="_blank" rel="noopener">面试常问之 TCP 与 UDP</a></li><li><a href="https://www.cnblogs.com/lgk8023/p/6430592.html" target="_blank" rel="noopener">Java 基础面试题（进程和线程的区别）</a></li><li><a href="https://blog.csdn.net/daaikuaichuan/article/details/82951084" target="_blank" rel="noopener">进程、线程和协程之间的区别和联系</a></li><li><a href="https://www.cnblogs.com/jobbible/p/9766649.html" target="_blank" rel="noopener">每个程序员都会遇到的面试问题：谈谈进程和线程的区别</a></li><li><a href="https://www.jianshu.com/p/e136ec79235c" target="_blank" rel="noopener">30 张图带你彻底理解红黑树</a></li><li><a href="https://www.cnblogs.com/ryxiong-blog/p/10892010.html" target="_blank" rel="noopener">进程（线程）死锁详解</a></li><li><a href="https://www.runoob.com/http/http-intro.html" target="_blank" rel="noopener">HTTP 简介</a></li><li><a href="https://segmentfault.com/a/1190000016656529?utm_source=tag-newest" target="_blank" rel="noopener">【快速入门系列】一篇文章让你入门 HTTP2.0</a></li><li><a href="https://blog.csdn.net/qq_33591903/article/details/81672260" target="_blank" rel="noopener">【数据库】快速理解脏读、不可重复读、幻读</a></li><li><a href="https://blog.csdn.net/qq_33591903/article/details/82079302" target="_blank" rel="noopener">【数据库】事务隔离级别</a></li><li><a href="http://www.hollischuang.com/archives/898" target="_blank" rel="noopener">彻底理解数据库事务</a></li><li><a href="https://www.jianshu.com/p/71700a464e97" target="_blank" rel="noopener">B+树总结</a></li><li><a href="https://www.cnblogs.com/zsc1/p/9230096.html" target="_blank" rel="noopener">数据库索引</a></li><li><a href="https://zhuanlan.zhihu.com/p/107125866" target="_blank" rel="noopener">MySQL 的覆盖索引与回表</a></li><li><a href="https://www.zhihu.com/question/20596402" target="_blank" rel="noopener">Mysql 中 MyISAM 和 InnoDB 的区别有哪些？</a></li><li><a href="https://www.jianshu.com/p/907f9002442e" target="_blank" rel="noopener">一文带你看懂 binlog 和 redo log</a></li><li><a href="https://www.jianshu.com/p/ebdf0eb76088" target="_blank" rel="noopener">ClassLoader 总结</a></li><li><a href="https://www.jianshu.com/p/6ec45a6da9ba" target="_blank" rel="noopener">Java 基础-泛型的使用及泛型实现原理</a></li><li><a href="https://blog.csdn.net/wteruiycbqqvwt/article/details/90299610" target="_blank" rel="noopener">深入理解 select、poll 和 epoll 及区别</a></li><li><a href="https://blog.csdn.net/rongtaoup/article/details/90723680" target="_blank" rel="noopener">一文搞懂 JVM 垃圾收集</a></li><li><a href="https://blog.csdn.net/ln152315/article/details/79223441" target="_blank" rel="noopener">面试官：请你谈谈 Java 的类加载过程</a></li><li><a href="https://blog.csdn.net/azsx02/article/details/69387317" target="_blank" rel="noopener">数据链路层的三个基本问题：封装成帧 透明传输 差错检测</a></li><li><a href="https://blog.csdn.net/sjmz30071360/article/details/80016972" target="_blank" rel="noopener">Java中的Error和Exception【一篇就够】</a></li><li><a href="https://blog.csdn.net/m0_37602175/article/details/80271647" target="_blank" rel="noopener">Exception和Error的区别</a></li><li><a href="https://blog.51cto.com/lavasoft/43735" target="_blank" rel="noopener">Java陷阱之assert关键字</a></li><li><a href="https://www.cnblogs.com/chhyan-dream/p/10685878.html" target="_blank" rel="noopener">JAVA中final关键字的作用</a></li><li><a href="https://www.cnblogs.com/dolphin0520/p/3920373.html" target="_blank" rel="noopener">Java并发编程：volatile关键字解析</a></li><li><a href="https://www.cnblogs.com/kubidemanong/p/9505944.html" target="_blank" rel="noopener">线程安全(上)–彻底搞懂volatile关键字</a></li><li><a href="https://www.cnblogs.com/higerMan/p/11907117.html" target="_blank" rel="noopener">哈希冲突及四种解决方法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> jobs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> review </tag>
            
            <tag> interview </tag>
            
            <tag> tcp </tag>
            
            <tag> udp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插件测试页面</title>
      <link href="/blog/2020/06/15/hexo-plugin-test/"/>
      <url>/blog/2020/06/15/hexo-plugin-test/</url>
      
        <content type="html"><![CDATA[<p>新环境总担心旧博文的插件会出问题，这个页面里的插件如果没问题的话，其它的也应该没问题。</p><a id="more"></a><h2 id="flowchart"><a class="header-anchor" href="#flowchart">#</a><a href="https://github.com/bubkoo/hexo-filter-flowchart" target="_blank" rel="noopener">flowchart</a></h2><h3 id="安装方法"><a class="header-anchor" href="#安装方法">#</a>安装方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-filter-flowchart --save</span><br></pre></td></tr></table></figure><h3 id="参数配置"><a class="header-anchor" href="#参数配置">#</a>参数配置</h3><p>在 <code>_config.yml</code> 中。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">flowchart:</span></span><br><span class="line">  <span class="attr">raphael:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js</span></span><br><span class="line">  <span class="attr">flowchart:</span> <span class="string">//flowchart.js.org/flowchart-latest.js</span></span><br></pre></td></tr></table></figure><h3 id="效果展示"><a class="header-anchor" href="#效果展示">#</a>效果展示</h3><center><div id="flowchart-0" class="flow-chart"></div><p>图 1 程序流程图</p></center><h2 id="sub-sup-footnote-ins"><a class="header-anchor" href="#sub-sup-footnote-ins">#</a><a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">sub,sup,footnote,ins</a></h2><h3 id="安装方法-2"><a class="header-anchor" href="#安装方法-2">#</a>安装方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure><h3 id="参数配置-2"><a class="header-anchor" href="#参数配置-2">#</a>参数配置</h3><p>在 <code>_config.yml</code> 中。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">"“”‘’"</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="attr">permalinkSide:</span> <span class="string">"right"</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">¶</span></span><br><span class="line">    <span class="attr">case:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">separator:</span> <span class="string">"-"</span></span><br></pre></td></tr></table></figure><h3 id="效果展示-2"><a class="header-anchor" href="#效果展示-2">#</a>效果展示</h3><h4 id="sub"><a class="header-anchor" href="#sub">#</a>sub</h4><p>H<sub>2</sub>O</p><h4 id="sup"><a class="header-anchor" href="#sup">#</a>sup</h4><p>x<sup>2</sup>y<sup>2</sup></p><h4 id="footnote"><a class="header-anchor" href="#footnote">#</a>footnote</h4><p>这是一段正文<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><h4 id="ins"><a class="header-anchor" href="#ins">#</a>ins</h4><p><ins>inserted</ins></p><h2 id="pdf"><a class="header-anchor" href="#pdf">#</a><a href="https://github.com/superalsrk/hexo-pdf" target="_blank" rel="noopener">pdf</a></h2><h3 id="安装方法-3"><a class="header-anchor" href="#安装方法-3">#</a>安装方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-pdf --save</span><br></pre></td></tr></table></figure><h3 id="效果展示-3"><a class="header-anchor" href="#效果展示-3">#</a>效果展示</h3><div class="row">    <embed src="//onns.xyz/blog/files/sign-recognition-lab-report.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="math"><a class="header-anchor" href="#math">#</a><a href="https://github.com/hexojs/hexo-math" target="_blank" rel="noopener">math</a></h2><h3 id="安装方法-4"><a class="header-anchor" href="#安装方法-4">#</a>安装方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-math --save</span><br></pre></td></tr></table></figure><h3 id="参数配置-3"><a class="header-anchor" href="#参数配置-3">#</a>参数配置</h3><p>在 <code>_config.yml</code> 中。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="attr">engine:</span> <span class="string">"mathjax"</span> <span class="comment"># or 'katex'</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">custom_mathjax_source</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="comment"># MathJax config</span></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">css:</span> <span class="string">custom_css_source</span></span><br><span class="line">    <span class="attr">js:</span> <span class="string">custom_js_source</span> <span class="comment"># not used</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="comment"># KaTeX config</span></span><br></pre></td></tr></table></figure><h3 id="效果展示-4"><a class="header-anchor" href="#效果展示-4">#</a>效果展示</h3>$$\begin{aligned}\dot{x} & = \sigma(y-x) \\\dot{y} & = \rho x - y - xz \\\dot{z} & = -\beta z + xy\end{aligned}$$<h2 id="math-2"><a class="header-anchor" href="#math-2">#</a><a href="https://github.com/hexojs/hexo-math" target="_blank" rel="noopener">math</a></h2><h3 id="安装方法-5"><a class="header-anchor" href="#安装方法-5">#</a>安装方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-math --save</span><br></pre></td></tr></table></figure><h3 id="效果展示-5"><a class="header-anchor" href="#效果展示-5">#</a>效果展示</h3><div id="graphviz-0"></div><h2 id="markdown-渲染"><a class="header-anchor" href="#markdown-渲染">#</a>markdown 渲染</h2><h3 id="有序列表"><a class="header-anchor" href="#有序列表">#</a>有序列表</h3><ul><li>1<ul><li>1.1<ul><li>1.1.1</li></ul></li></ul></li><li>2</li><li>3</li><li>4</li></ul><h3 id="无序列表"><a class="header-anchor" href="#无序列表">#</a>无序列表</h3><ol><li>1<ol><li>1.1<ol><li>1.1.1</li></ol></li></ol></li><li>2</li><li>3</li><li>4</li></ol><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 确定初始状态(10, 0, 0), 加入队列e1=>end: 未找到目标状态e2=>end: 达到目标状态(5, 5, 0)op1=>operation: 取出队列头部中的第一个状态cond1=>condition: 此状态是否为空?cond2=>condition: 是否为目标状态?op2=>operation: 将所有可能下一步状态加入队列尾部st->op1->cond1cond1(yes)->e1cond1(no)->cond2cond2(yes)->e2cond2(no)->op2op2->op1</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><script src="https://unpkg.com/viz.js@2.1.2/viz.js"></script><script src="https://unpkg.com/viz.js@2.1.2/full.render.js"></script><textarea id="graphviz-0-code" style="display: none">digraph G {  "(10,0,0)" -> "(3,7,0)"[color=red,label="1"]  "(10,0,0)" -> "(7,0,3)"[label="2"]  "(3,7,0)" -> "(0,7,3)"[label="2"]  "(3,7,0)" -> "(3,4,3)"[color=red,label="4"]  "(7,0,3)" -> "(7,3,0)"[label="12"]  "(3,4,3)" -> "(6,4,0)"[color=red,label="11"]  "(7,3,0)" -> "(4,3,3)"[label="2"]  "(6,4,0)" -> "(6,1,3)"[color=red,label="4"]  "(4,3,3)" -> "(4,6,0)"[label="12"]  "(6,1,3)" -> "(9,1,0)"[color=red,label="11"]  "(4,6,0)" -> "(1,6,3)"[label="2"]  "(9,1,0)" -> "(9,0,1)"[color=red,label="10"]  "(1,6,3)" -> "(1,7,2)"[label="6"]  "(9,0,1)" -> "(2,7,1)"[color=red,label="1"]  "(1,7,2)" -> "(8,0,2)"[label="9"]  "(2,7,1)" -> "(2,5,3)"[color=red,label="4"]  "(8,0,2)" -> "(8,2,0)"[label="12"]  "(2,5,3)" -> "(5,5,0)"[color=red,label="11"]  "(8,2,0)" -> "(5,2,3)"[label="2"]}</textarea><script>  var viz = new Viz();  var code = document.getElementById("graphviz-0-code").value;  viz.renderSVGElement(code)  .then(function(element) {    document.getElementById("graphviz-0").append(element)  });</script><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>这是脚注 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修复MacOS上crontab的Operation not permitted问题</title>
      <link href="/blog/2020/06/10/fix-crontab-operation-not-permitted-on-mac/"/>
      <url>/blog/2020/06/10/fix-crontab-operation-not-permitted-on-mac/</url>
      
        <content type="html"><![CDATA[<p>因为项目需要Xcode，但是Xcode又必须要在<code>10.15</code>以上的系统下运行，不得已更新了系统，然而更新一时爽，bug修复***。真的是出现了各种问题，没办法，挨个解决叭…</p><a id="more"></a><h2 id="起因"><a class="header-anchor" href="#起因">#</a>起因</h2><p>为了方便电脑自动化整理文档，我的电脑上一直运行着一堆定时的脚本，用来隔一段时间将截图整理到<code>图片</code>文件夹。有人这里可能会问，为什么不直接把截图目录设置成<code>Pictures</code>目录，因为截图在桌面用起来更方便诶，毕竟截图就是为了发出去或者做什么的不是。</p><p>但用完所有截图都在桌面真的好乱。</p><p>所以我之前版本的定时脚本都是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -l</span><br><span class="line">30 */1 * * * bash /Users/onns/Documents/code/bash/clear </span><br><span class="line">0 22 * * * bash /Users/onns/Documents/code/bash/backup</span><br></pre></td></tr></table></figure><p>在更新系统之前一直都可以正常运行，但更新了之后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">You have new mail.</span><br><span class="line">$ cat /var/mail/onns</span><br><span class="line">...</span><br><span class="line">bash: /Users/onns/Documents/code/bash/clear: Operation not permitted</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这个的原因就是苹果更新了<code>System Integrity Protection</code>功能，具体的可以去看官方的公告：<a href="https://support.apple.com/en-us/HT204899" target="_blank" rel="noopener">About System Integrity Protection on your Mac</a>，所以最简单粗暴的解决方案就是关闭<code>SIP</code>。</p><p>但我觉得，苹果既然出于安全考虑推出了这样一个功能，那就尽量遵从苹果的思路来，毕竟你后面还要更新系统，难道每次都关一次？何况关起来还挺麻烦的。。。也不安全。</p><p>同时你会留意到，<code>系统安全隐私</code>里增加了一项权限划分<code>Full Disk Access</code>，大概也是出于安全考虑吧。</p><center><p><img src="//onns.xyz/blog/image/20200610-1.png" alt="Full Disk Access页面"></p></center><p>这是我修复bug之后的截图了，最开始的时候这里面什么都没有。</p><p>还有就是，打开<code>Terminal</code>的时候，会弹出下列信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The default interactive shell is now zsh.</span><br><span class="line">To update your account to use zsh, please run `chsh -s /bin/zsh`.</span><br><span class="line">For more details, please visit https://support.apple.com/kb/HT208050.</span><br></pre></td></tr></table></figure><p>详细可以去官网看：<a href="https://support.apple.com/en-us/HT208050" target="_blank" rel="noopener">Use zsh as the default shell on your Mac</a></p><p>所以总结来说，定时脚本出错的原因有两点：</p><ol><li>苹果更改了默认的shell工具</li><li>shell工具的权限不够</li><li>crontab的权限不够（自我猜测，不知道这点是不是影响因素）</li></ol><h2 id="解决"><a class="header-anchor" href="#解决">#</a>解决</h2><h3 id="更改shell"><a class="header-anchor" href="#更改shell">#</a>更改shell</h3><p>这一点很好操作，首先先将<code>zsh</code>作为默认的shell工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure><p>然后只需要重启一下<code>Terminal</code>就可以了。</p><p>然后修改一下定时任务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% crontab -e</span><br><span class="line">30 */1 * * * zsh /Users/onns/Documents/code/bash/clear </span><br><span class="line">0 22 * * * zsh /Users/onns/Documents/code/bash/backup</span><br></pre></td></tr></table></figure><p>然后我这样又试了一下，还是报错了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsh: can<span class="string">'t open input file: /Users/onns/Documents/code/bash/clear</span></span><br></pre></td></tr></table></figure><p>所以还是需要给<code>zsh</code>权限</p><h3 id="赋予full-disk-access权限"><a class="header-anchor" href="#赋予full-disk-access权限">#</a>赋予Full Disk Access权限</h3><ol><li>打开<code>System Preference -&gt; Security &amp; Privacy -&gt; Privacy</code>。</li><li>找到<code>Full Disk Access</code>。</li><li>点击左下角的<code>锁头🔒</code>解锁更改权限，输入密码。</li><li>点击添加按钮，在弹出的文件浏览页面按住<code>cmd+shift+G</code>，输入<code>/bin</code>，点击<code>go</code>来到<code>/bin</code>目录并选择<code>zsh</code>，添加。</li><li>同理在<code>/usr/sbin/</code>目录下找到<code>cron</code>，添加。</li></ol><p>成功，完。</p><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="https://support.apple.com/en-us/HT204899" target="_blank" rel="noopener">About System Integrity Protection on your Mac</a></li><li><a href="https://support.apple.com/en-us/HT208050" target="_blank" rel="noopener">Use zsh as the default shell on your Mac</a></li><li><a href="https://osxdaily.com/2020/04/27/fix-cron-permissions-macos-full-disk-access/" target="_blank" rel="noopener">How to Fix Cron Permission Issues in MacOS Catalina &amp; Mojave</a></li><li><a href="https://blog.bejarano.io/fixing-cron-jobs-in-mojave/" target="_blank" rel="noopener">Fixing cron jobs in Mojave</a></li><li><a href="https://stackoverflow.com/questions/58593877/crontab-cant-execute-python-script-with-error-errno-1-operation-not-permitt" target="_blank" rel="noopener">Crontab can’t execute python script with error: “[Errno 1] Operation not permitted”</a></li><li><a href="https://www.howtogeek.com/444596/how-to-change-the-default-shell-to-bash-in-macos-catalina/" target="_blank" rel="noopener">How to Change the Default Shell to Bash on macOS Catalina</a></li><li><a href="https://blog.csdn.net/qq_38287952/article/details/86755672" target="_blank" rel="noopener">Mac权限问题，operation not permitted</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cron </tag>
            
            <tag> crontab </tag>
            
            <tag> macos </tag>
            
            <tag> Catalina </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些处理字符的工具</title>
      <link href="/blog/2020/06/05/some-tools/"/>
      <url>/blog/2020/06/05/some-tools/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://onns.xyz/tools/hyphens-to-camel-case/">连字符转驼峰式</a></li></ul><a id="more"></a><h2 id="连字符转驼峰式"><a class="header-anchor" href="#连字符转驼峰式">#</a><a href="https://onns.xyz/tools/hyphens-to-camel-case/">连字符转驼峰式</a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toCamel</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> temp = str.replace(<span class="regexp">/(?:-+([^-]))/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">$<span class="number">1</span>, $<span class="number">2</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $<span class="number">2.</span>toUpperCase();</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> temp.slice(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + temp.slice(<span class="number">1</span>);;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://colorlib.com/wp/template/contact-form-v9/" target="_blank" rel="noopener">Contact Form v9</a></li><li><a href="https://regexper.com/#%2F%28%5B%5E-%5D%29%28%3F%3A-%2B%28%5B%5E-%5D%29%29%2Fg" target="_blank" rel="noopener">Regexper</a></li><li><a href="https://blog.csdn.net/qq_42392522/article/details/83376466" target="_blank" rel="noopener">JS 实现：驼峰式转下横线，下横线转驼峰式</a></li><li><a href="https://blog.csdn.net/qq_26212731/article/details/78523624" target="_blank" rel="noopener">js监听textarea 内容的变化，并计算内容的长度</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> hyphens </tag>
            
            <tag> camel case </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在MacOS上部署ftp服务器</title>
      <link href="/blog/2020/06/02/ftp-server-on-mac/"/>
      <url>/blog/2020/06/02/ftp-server-on-mac/</url>
      
        <content type="html"><![CDATA[<p>20200717 更新：<br>每次电脑重启之后需要执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew services stop pure-ftpd</span><br><span class="line">sudo /usr/<span class="built_in">local</span>/sbin/pure-ftpd -lpam -B</span><br><span class="line">brew services start pure-ftpd</span><br></pre></td></tr></table></figure><p>ftp 才会生效。</p><hr><p>因为小米手机的文件管理支持远程存储服务，早就想在自己的 Mac 上弄了，但是搜索了几次都失败了，昨晚半夜两点热得睡不着（好惨一男的），起床捣鼓，记录之。</p><a id="more"></a><center><p><img src="//onns.xyz/blog/image/20200602-1.jpg" alt="手机文件管理支持远程存储列表"></p></center><p>之前搜索的，无一例外，全是叫我输入如下所示的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist</span><br></pre></td></tr></table></figure><p>但是看下面的消息，原文链接点<a href="https://apple.stackexchange.com/questions/361901/host-ftp-server-on-mojave" target="_blank" rel="noopener">这里</a>：</p><blockquote><p>Apple removed the included File Transfer Protocol (FTP) server from recent versions of macOS. FTP is not secure by default and better avoided.<br>FTP is not secure because the connection is not encrypted. Modern network protocols are encrypted by default – even on local networks.</p></blockquote><p>出于安全考虑，苹果官方已经把 ftp.plist<code>移除</code>了，解决办法是需要自己安装一个<code>ftpd服务</code>。</p><p>用<code>homebrew</code>就可以安装了，如果没有安装可以参考<a href="https://onns.xyz/blog/2020/06/01/install-homebrew-on-mac/">这里</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install pure-ftpd</span><br><span class="line">brew services start pure-ftpd</span><br></pre></td></tr></table></figure><p>然后需要配置<code>ftpd</code>的验证，使之可以通过系统用户进行验证登录。<br>新建一个<code>/etc/pam.d/pure-ftpd</code>文件，记得用 root 权限编辑。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/pam.d/pure-ftpd</span><br></pre></td></tr></table></figure><p>内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># pure-ftpd: auth account password session</span><br><span class="line">auth       required       pam_opendirectory.so</span><br><span class="line">account    required       pam_permit.so</span><br><span class="line">password   required       pam_deny.so</span><br><span class="line">session    required       pam_permit.so</span><br></pre></td></tr></table></figure><p>然后让配置文件生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/<span class="built_in">local</span>/sbin/pure-ftpd -lpam -B</span><br></pre></td></tr></table></figure><p>最后重启一下<code>pure-ftpd</code>服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services restart pure-ftpd</span><br></pre></td></tr></table></figure><p>停止的命令是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services stop pure-ftpd</span><br></pre></td></tr></table></figure><p>这里是<code>pure-ftpd</code>的<a href="https://download.pureftpd.org/pub/pure-ftpd/doc/README.MacOS-X" target="_blank" rel="noopener">官方文档</a>，虽然很简单但。。。聊胜于无吧。</p><h2 id="汇总"><a class="header-anchor" href="#汇总">#</a>汇总</h2><p>如果出现任何问题，可以参考 <a href="https://superuser.com/questions/1398800/pure-ftpd-connection-refused-localhost-on-high-sierra" target="_blank" rel="noopener">pure-ftpd Connection refused localhost on high sierra</a>，这个软件的相关文档真的很不完善，重复完成下述步骤应该就可以解决了，我也不知道为什么我出问题了，但是重装就解决了，这大概就是重启/重装解决 99%的问题的人生四大哲理吧。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brew services stop pure-ftpd</span><br><span class="line">brew remove pure-ftpd</span><br><span class="line">brew upgrade</span><br><span class="line">brew cleanup</span><br><span class="line">brew install pure-ftpd</span><br><span class="line">sudo vi /etc/pam.d/pure-ftpd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># pure-ftpd: auth account password session</span><br><span class="line">auth       required       pam_opendirectory.so</span><br><span class="line">account    required       pam_permit.so</span><br><span class="line">password   required       pam_deny.so</span><br><span class="line">session    required       pam_permit.so</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/<span class="built_in">local</span>/sbin/pure-ftpd -lpam -B</span><br><span class="line">brew services restart pure-ftpd</span><br></pre></td></tr></table></figure><p>完。</p><p>真的很方便，直接在手机上存取了就。</p><center><p><img src="//onns.xyz/blog/image/20200602-2.jpg" alt="手机连接ftp示意图"></p></center><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://www.jianshu.com/p/f4994754b74a" target="_blank" rel="noopener">MAC 搭建 FTP 服务器</a>（不靠谱，错误答案）</li><li><a href="https://zhidao.baidu.com/question/653759039211321605.html" target="_blank" rel="noopener">mac os 10.13.6 如何启动 FTP 服务器？急！ </a>（不靠谱，错误答案）</li><li><a href="https://blog.csdn.net/weixin_33733810/article/details/92498798" target="_blank" rel="noopener">Mac 实践–MAC 搭建 FTP 服务器</a>（SFTP 可以参照这个，FTP 依然是错误的）</li><li><a href="https://apple.stackexchange.com/questions/361901/host-ftp-server-on-mojave" target="_blank" rel="noopener">host ftp server on Mojave</a></li><li><a href="https://apple.stackexchange.com/questions/141633/quick-to-install-and-set-up-ftp-server-on-homebrew-for-osx" target="_blank" rel="noopener">quick to install and set up FTP server on homebrew for OSX</a></li><li><a href="https://download.pureftpd.org/pub/pure-ftpd/doc/README.MacOS-X" target="_blank" rel="noopener">PURE-FTPD DOCUMENTATION-Notes for MacOS users</a></li><li><a href="https://superuser.com/questions/1398800/pure-ftpd-connection-refused-localhost-on-high-sierra" target="_blank" rel="noopener">pure-ftpd Connection refused localhost on high sierra</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macos </tag>
            
            <tag> homebrew </tag>
            
            <tag> ftpd </tag>
            
            <tag> pure-ftpd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在MacOS上安装Homebrew</title>
      <link href="/blog/2020/06/01/install-homebrew-on-mac/"/>
      <url>/blog/2020/06/01/install-homebrew-on-mac/</url>
      
        <content type="html"><![CDATA[<p>因为想在Mac上安装<code>python3</code>，一个最友好的方式是安装<code>pyenv</code>，所以顺便把包管理工具<code>homebrew</code>一起安装了叭。</p><a id="more"></a><p>安装方法参照<a href="https://docs.brew.sh/Installation" target="_blank" rel="noopener">官方安装文档</a>，不过这个配置好像有点麻烦，如果想要一键可以试试<a href="https://treehouse.github.io/installation-guides/mac/homebrew" target="_blank" rel="noopener">这个</a>。</p><p>我本来是想顺着官方文档来的，但是还要配置环境变量的样子，算了，用一键脚本。</p><p>在用之前需要解决一个问题，<code>GitHub</code> 的源在国内访问太慢了。。。之前尝试过用 <code>HTTP_PROXY</code>，发现没什么用，今天又去查了一下，这下就可以了。随意感受下速度的变化，从<code>41.00 KiB/s</code>到<code>9.04 MiB/s</code>，完全不是一个数量级好吧。</p><center><p><img src="//onns.xyz/blog/image/20200601-1.png" alt="未开启代理之前"></p><p><img src="//onns.xyz/blog/image/20200601-2.png" alt="开启代理之后"></p></center><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启代理命令，这个需要你本地有代理程序哦</span></span><br><span class="line"><span class="built_in">export</span> ALL_PROXY=socks5://127.0.0.1:1081</span><br></pre></td></tr></table></figure><p>然后就可以一键安装<code>homebrew</code>了，中间输入一次密码即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><p>然后安装<code>pyenv</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install pyenv</span><br></pre></td></tr></table></figure><p>然后安装<code>python3</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install 3.8.0</span><br></pre></td></tr></table></figure><p>虽然<code>pyenv</code>和<code>python3</code>都装好了，但是还是要设置一下环境变量，参照官方的<a href="https://github.com/pyenv/pyenv#installation" target="_blank" rel="noopener">文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export PYENV_ROOT="$HOME/.pyenv"'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH="$PYENV_ROOT/bin:$PATH"'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">'if command -v pyenv 1&gt;/dev/null 2&gt;&amp;1; then\n  eval "$(pyenv init -)"\nfi'</span> &gt;&gt; ~/.bash_profile</span><br></pre></td></tr></table></figure><p>然后重启一下命令行即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv global 3.8.0</span><br><span class="line">$ python</span><br><span class="line">Python 3.8.0 (default, Jun  1 2020, 11:01:42) </span><br><span class="line">[Clang 10.0.1 (clang-1001.0.46.4)] on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br></pre></td></tr></table></figure><p>完。</p><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="https://opensource.com/article/19/5/python-3-default-mac" target="_blank" rel="noopener">The right and wrong way to set Python 3 as default on a Mac</a></li><li><a href="https://treehouse.github.io/installation-guides/mac/homebrew" target="_blank" rel="noopener">Installing Homebrew on a Mac</a></li><li><a href="https://docs.brew.sh/Installation" target="_blank" rel="noopener">Homebrew Documentation</a></li><li><a href="https://www.zhihu.com/question/276143842" target="_blank" rel="noopener">怎么解决从github下载资源慢？</a></li><li><a href="https://github.com/pyenv/pyenv#installation" target="_blank" rel="noopener">Simple Python Version Management: pyenv</a></li><li><a href="https://stackoverflow.com/questions/33321312/cannot-switch-python-with-pyenv" target="_blank" rel="noopener">Cannot switch Python with pyenv</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> macos </tag>
            
            <tag> homebrew </tag>
            
            <tag> pyenv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome插件-同步播放电影</title>
      <link href="/blog/2020/05/12/chrome-extension-sync-sofa/"/>
      <url>/blog/2020/05/12/chrome-extension-sync-sofa/</url>
      
        <content type="html"><![CDATA[<h2 id="太长不看版"><a class="header-anchor" href="#太长不看版">#</a>太长不看版</h2><p>sync-sofa是一个chrome的插件，安装之后可以让两台不同的设备在播放同一个视频源的时候，彼此同步操作（播放、暂停、拖动进度条等）。</p><p>目前支持的网站：</p><ul><li><a href="https://www.iqiyi.com/" target="_blank" rel="noopener">爱奇艺</a></li><li><a href="https://www.youku.com/" target="_blank" rel="noopener">优酷视频</a></li><li><a href="https://www.weiyun.com/" target="_blank" rel="noopener">微云网盘</a></li><li><a href="https://v.qq.com/" target="_blank" rel="noopener">腾讯视频</a></li><li><a href="https://www.youtube.com/" target="_blank" rel="noopener">YouTube</a></li></ul><a id="more"></a><h3 id="操作流程"><a class="header-anchor" href="#操作流程">#</a>操作流程</h3><p>这里以<code>微云</code>为例，好处是只要你找到了视频源，就可以播放任何你想要播放的视频。本来也想加入百度云的，但奈何百度云有所限制，只能看未来是否有技术上的突破了。</p><p><strong>用户1</strong>：浏览器顶部为渐变色，主题颜色为粉红色<br><strong>用户2</strong>：浏览器顶部为黑色，主题颜色为黑色</p><ol><li>双方都打开视频，跳过一切广告或者片头之后，暂停视频。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-1.png" alt="初始页面"></p></center><ol start="2"><li><strong>用户1</strong>点开插件，点击请求<code>识别码</code>按钮。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-2.png" alt="请求识别码页面"></p></center><ol start="3"><li><strong>用户1</strong>请求成功后，会收到一个长度为4的<code>识别码</code>（图示中为<strong>aM9d</strong>），<code>识别码</code>自动复制到<code>剪切板</code>，并弹出提示，提示和插件页面<code>3秒</code>后自动关闭。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-3.png" alt="请求识别码成功页面"></p></center><ol start="4"><li><strong>用户1</strong>将<code>识别码</code>发送给<strong>用户2</strong>，<strong>用户2</strong>点开插件，在上方输入框输入<code>识别码</code>，点击<strong>开始</strong>按钮。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-4.png" alt="根据识别码匹配页面"></p></center><ol start="5"><li><strong>用户2</strong>和<strong>用户1</strong>匹配成功后，双方都会收到成功提示。至此，一切准备工作完成，可以开始观看视频。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-5.png" alt="用户2匹配成功界面"></p><p><img src="//onns.xyz/blog/image/20200512-6.png" alt="用户1匹配成功界面"></p></center><ol start="6"><li>若<strong>一方用户</strong>断开连接，<strong>另一方用户</strong>会收到通知，届时只需按照<code>步骤1-5</code>重新建立连接即可。</li></ol><center><p><img src="//onns.xyz/blog/image/20200512-7.png" alt="根据识别码匹配页面"></p></center><h3 id="相关连接"><a class="header-anchor" href="#相关连接">#</a>相关连接</h3><ul><li><a href="https://chrome.google.com/webstore/detail/sync-sofa-online-video-sy/kgpnhgmpijhpkefpddoehhminpfiddmg" target="_blank" rel="noopener">Chrome插件下载地址</a></li><li><a href="https://github.com/LouisYLWang/Sync-Sofa" target="_blank" rel="noopener">项目地址</a></li><li><a href="https://github.com/LouisYLWang/Sync-Sofa/issues" target="_blank" rel="noopener">反馈地址</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chrome </tag>
            
            <tag> extension </tag>
            
            <tag> sync-sofa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10下安装PCL1.9.1</title>
      <link href="/blog/2020/04/11/pcl-vs2017-in-windows10/"/>
      <url>/blog/2020/04/11/pcl-vs2017-in-windows10/</url>
      
        <content type="html"><![CDATA[<p>PCL的库配置是真的繁琐，配置了好多次才成功。<br>Point Cloud Library 1.9.1 + Visual Studio 2017 + Windows 10</p><a id="more"></a><h2 id="pcl"><a class="header-anchor" href="#pcl">#</a>PCL</h2><p><code>PCL</code> 从 <code>1.8.0</code> 版本开始代码都托管在了<a href="https://github.com/PointCloudLibrary/pcl/releases/" target="_blank" rel="noopener">GitHub</a>之上，点击这里直接下载即可：<a href="https://github.com/PointCloudLibrary/pcl/releases/download/pcl-1.9.1/PCL-1.9.1-AllInOne-msvc2017-win64.exe" target="_blank" rel="noopener">PCL-1.9.1-AllInOne-msvc2017-win64.exe</a>。</p><p>因为 <code>PCL</code> 会依赖很多插件库，所以下 <code>AllInOne</code> 版本就可以都装上了。</p><p>安装的时候一路下一步即可，不过需要注意安装的最后会弹出一个单独的安装程序来安装 <code>OpenNI2</code>。假如我 <code>PCL的安装目录（PCL_ROOT）</code> 为 <strong>D:\Program Files\PCL1.9.1</strong><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，那么建议 <code>OpenNI2</code> 的安装目录设置为 <strong>%PCL_ROOT%\3rdParty\OpenNI2</strong>，即：<strong>D:\Program Files\PCL1.9.1\3rdParty\OpenNI2</strong>。这样做的目的是为了方便管理第三方库。</p><p>至此，<code>PCL</code> 及其相关第三方库安装完成。</p><h2 id="添加环境变量"><a class="header-anchor" href="#添加环境变量">#</a>添加环境变量</h2><p>在 <code>计算机—&gt;属性—&gt;高级系统属性—&gt;高级—&gt;环境变量</code> 中，添加如下<code>环境变量</code>：</p><center><table><thead><tr><th style="text-align:left">变量</th><th style="text-align:left">值</th></tr></thead><tbody><tr><td style="text-align:left">PCL_ROOT</td><td style="text-align:left">D:\Program Files\PCL1.9.1</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\bin</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\Boost\lib</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\FLANN\bin</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\OpenNI2\Lib</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\OpenNI2\Redist</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\OpenNI2\Tools</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\Qhull\bin</td></tr><tr><td style="text-align:left">PATH</td><td style="text-align:left">%PCL_ROOT%\3rdParty\VTK\bin</td></tr></tbody></table></center><p>由于PATH要添加的变量很多，有 <code>8</code> 个，鉴于有人懒得打八次，直接点击<code>编辑文本</code>，将下述内容粘贴到行尾即可，注意<strong>分号</strong>。</p><center><p><img src="//onns.xyz/blog/image/20200411-1.png" alt="编辑文本示意图"></p></center><blockquote><p>%PCL_ROOT%\bin;%PCL_ROOT%\3rdParty\Boost\lib;%PCL_ROOT%\3rdParty\FLANN\bin;%PCL_ROOT%\3rdParty\OpenNI2\Lib;%PCL_ROOT%\3rdParty\OpenNI2\Redist;%PCL_ROOT%\3rdParty\OpenNI2\Tools;%PCL_ROOT%\3rdParty\Qhull\bin;%PCL_ROOT%\3rdParty\VTK\bin;</p></blockquote><h2 id="vs2017配置"><a class="header-anchor" href="#vs2017配置">#</a>VS2017配置</h2><p>打开VS2017，新建一个 <code>C++</code>的<code>空项目</code>即可。</p><p>首先打开<code>属性管理器</code>，如果找不到可以在<code>视图-&gt;其他窗口-&gt;属性管理器</code>中打开，或者直接搜索也可以。</p><p>然后在<code>属性管理器-&gt; Release | x64</code>文件夹右键，<code>添加新项目属性表</code>，名字自己起即可。</p><p>接着右键<code>刚刚创建的属性表</code>，点击<code>属性</code>，弹出如图所示界面。</p><center><p><img src="//onns.xyz/blog/image/20200411-2.png" alt="属性页"></p></center><p>在 <code>通用属性—&gt;VC++目录—&gt;包含目录</code> 中添加 <code>7</code> 项，这个只能一个一个加，就没法偷懒了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\PCL1.9.1\include\pcl-1.9</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Boost\include\boost-1_68</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Eigen\eigen3</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\FLANN\include</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\OpenNI2\Include</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Qhull\include</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\VTK\include\vtk-8.1</span><br></pre></td></tr></table></figure><p>在 <code>通用属性—&gt;VC++目录—&gt;库目录</code> 中添加 <code>6</code> 项，同上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\PCL1.9.1\lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Boost\lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\FLANN\lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\OpenNI2\Lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\Qhull\lib</span><br><span class="line">D:\Program Files\PCL1.9.1\3rdParty\VTK\lib</span><br></pre></td></tr></table></figure><p>在 <code>C/C++—&gt;预处理器—&gt;预处理器定义</code> 中添加 <code>3</code> 行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_CRT_SECURE_NO_WARNINGS</span><br><span class="line">_SCL_SECURE_NO_WARNINGS</span><br><span class="line">_SILENCE_FPOS_SEEKPOS_DEPRECATION_WARNING</span><br></pre></td></tr></table></figure><p>将 <code>C/C++—&gt;所有选项—&gt;SDL检查</code> 改为<code>否 (/sdl-)</code>。</p><p>在 <code>通用属性—&gt;链接器—&gt;输入—&gt;附加的依赖项</code> 中添加 <code>lib</code> 文件，<code>Release</code> 和 <code>Debug</code> 所需要的库文件不同，写了一个python脚本文件，保存运行就可以了。然后把输出的结果复制添加即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置PCL的lib目录</span></span><br><span class="line">PCL_LIB_DIR = <span class="string">'D:/Program Files/PCL1.9.1/lib'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置VTK的lib目录</span></span><br><span class="line">VTK_LIB_DIR = <span class="string">'D:/Program Files/PCL1.9.1/3rdParty/VTK/lib'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下列两行二选其一</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># VERSION = 'DEBUG'</span></span><br><span class="line">VERSION = <span class="string">'RELEASE'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> home, dirs, files <span class="keyword">in</span> os.walk(PCL_LIB_DIR):</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">        ext = <span class="string">'_release.lib'</span></span><br><span class="line">        num = <span class="number">-12</span></span><br><span class="line">        <span class="keyword">if</span> VERSION == <span class="string">'DEBUG'</span>:</span><br><span class="line">            ext = <span class="string">'_debug.lib'</span></span><br><span class="line">            num = <span class="number">-10</span></span><br><span class="line">        <span class="keyword">if</span> filename[num:] == ext:</span><br><span class="line">            print(filename)</span><br><span class="line">            <span class="comment"># fullname = os.path.join(home, filename)</span></span><br><span class="line">            <span class="comment"># print(fullname)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> home, dirs, files <span class="keyword">in</span> os.walk(VTK_LIB_DIR):</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">        <span class="keyword">if</span> os.path.splitext(filename)[<span class="number">1</span>] == <span class="string">'.lib'</span>:</span><br><span class="line">            <span class="keyword">if</span> VERSION == <span class="string">'RELEASE'</span> <span class="keyword">and</span> filename[<span class="number">-6</span>:<span class="number">-4</span>] != <span class="string">'gd'</span>:</span><br><span class="line">                print(filename)</span><br><span class="line">            <span class="keyword">if</span> VERSION == <span class="string">'DEBUG'</span> <span class="keyword">and</span> filename[<span class="number">-6</span>:<span class="number">-4</span>] == <span class="string">'gd'</span>:</span><br><span class="line">                print(filename)</span><br></pre></td></tr></table></figure><center><p><img src="//onns.xyz/blog/image/20200411-3.png" alt="运行结果图"></p></center><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="https://mp.weixin.qq.com/s/WcNKk07GEAbhUTS1aPRufw" target="_blank" rel="noopener">PCL1.8.1+vs2015配置教程</a></li><li><a href="https://blog.csdn.net/weixin_41991128/article/details/83864713" target="_blank" rel="noopener">VS2017配置PCL1.9（win10环境）</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>安装的时候有人建议把目录 <code>PCL 1.9.1</code> 中间的<code>空格</code>删掉，我就照做了。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows10 </tag>
            
            <tag> PCL </tag>
            
            <tag> point cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页截图之停止GIF</title>
      <link href="/blog/2020/04/01/stop-gif-for-screenshot/"/>
      <url>/blog/2020/04/01/stop-gif-for-screenshot/</url>
      
        <content type="html"><![CDATA[<p>经常会有用到网页截取的时候，截取方法很简单，但是如果页面里GIF图很多的话，会出现截断，即GIF上下画面不一致（因为本质上全屏截图也都是先截屏幕再拼接的）。花点功夫找了下，记录之。</p><a id="more"></a><p>都是以<code>Chrome</code>为例，其它浏览器就自行google咯。首先去下一个自己喜欢的全屏截图插件，<a href="https://chrome.google.com/webstore/search/Screenshot?hl=en" target="_blank" rel="noopener">传送门</a>。</p><p>小tip：微信页面采用的是 <code>lazy load</code> 模式，要自己浏览一遍全文才能加载所有的GIF和图片。</p><p>然后就打开<code>开发者模式</code>，快捷键 <code>cmd+alt+i</code>，选择标签为 <code>console</code> 的一栏，将下述代码粘贴进去，回车即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createElement</span>(<span class="params">type, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> element = <span class="built_in">document</span>.createElement(type);</span><br><span class="line"></span><br><span class="line">    callback(element);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">freezeGif</span>(<span class="params">img</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> width = img.width,</span><br><span class="line">    height = img.height,</span><br><span class="line">    canvas = createElement(<span class="string">'canvas'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">clone</span>) </span>&#123;</span><br><span class="line">        clone.width = width;</span><br><span class="line">        clone.height = height;</span><br><span class="line">    &#125;),</span><br><span class="line">    attr,</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> freeze = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        canvas.getContext(<span class="string">'2d'</span>).drawImage(img, <span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; img.attributes.length; i++) &#123;</span><br><span class="line">            attr = img.attributes[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (attr.name !== <span class="string">'"'</span>) &#123; <span class="comment">// test for invalid attributes</span></span><br><span class="line">                canvas.setAttribute(attr.name, attr.value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        canvas.style.position = <span class="string">'absolute'</span>;</span><br><span class="line"></span><br><span class="line">        img.parentNode.insertBefore(canvas, img);</span><br><span class="line">        img.style.opacity = <span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (img.complete) &#123;</span><br><span class="line">        freeze();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        img.addEventListener(<span class="string">'load'</span>, freeze, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">freezeAllGifs</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Array</span>().slice.apply(<span class="built_in">document</span>.images).map(freezeGif);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">freezeAllGifs();</span><br></pre></td></tr></table></figure><p>代码自 <a href="https://stackoverflow.com/a/24707088/13182099" target="_blank" rel="noopener">Stopping GIF Animation Programmatically</a> 处拷贝。</p><p>然后GIF图就都不动啦。</p><p>完。</p>]]></content>
      
      
      <categories>
          
          <category> work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（七）</title>
      <link href="/blog/2020/03/16/java-notes-7/"/>
      <url>/blog/2020/03/16/java-notes-7/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="集合"><a class="header-anchor" href="#集合">#</a>集合</h2><a id="more"></a><ul><li><code>for each</code> 循环可以与任何实现了 <code>Iterable</code> 接口的对象一起工作。</li><li>迭代器访问 <code>HashSet</code> 虽然可以确定在迭代过程中能够遍历到集合中的所有元素，但却无法预知元素被访问的次序。</li><li>将 Java 迭代器认为是<code>位于两个元素之间</code>的。当调用 <code>next</code> 时，迭代器就越过下一个元素，并返回刚刚越过的那个元素的引用。</li><li>如果想删除两个相邻的元素，需要先 <code>next</code> 再 <code>remove</code>。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Iterator&lt;String&gt; it = c.Iterator();</span><br><span class="line">it.next();</span><br><span class="line">it.remove();</span><br><span class="line">it.next();</span><br><span class="line">it.remove();</span><br></pre></td></tr></table></figure></li><li>在 Java 程序设计语言中，所有链表实际上都是<code>双向链接的</code>。</li></ul><center><table><thead><tr><th style="text-align:left">集合类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">ArrayList</td><td style="text-align:left">一种可以动态增长和缩减的索引序列</td></tr><tr><td style="text-align:left">LinkedList</td><td style="text-align:left">一种可以在任何位置进行高效地插人和删除操作的有序序列</td></tr><tr><td style="text-align:left">ArrayDeque</td><td style="text-align:left">一种用循环数组实现的双端队列</td></tr><tr><td style="text-align:left">HashSet</td><td style="text-align:left">一种没有重复元素的无序集合</td></tr><tr><td style="text-align:left">TreeSet</td><td style="text-align:left">—种有序集</td></tr><tr><td style="text-align:left">EnumSet</td><td style="text-align:left">一种包含枚举类型值的集</td></tr><tr><td style="text-align:left">LinkedHashSet</td><td style="text-align:left">一种可以记住元素插人次序的集</td></tr><tr><td style="text-align:left">PriorityQueue</td><td style="text-align:left">一种允许高效删除最小元素的集合</td></tr><tr><td style="text-align:left">HashMap</td><td style="text-align:left">一种存储键/值关联的数据结构</td></tr><tr><td style="text-align:left">TreeMap</td><td style="text-align:left">一种键值有序排列的映射表</td></tr><tr><td style="text-align:left">EnumMap</td><td style="text-align:left">一种键值属于枚举类型的映射表</td></tr><tr><td style="text-align:left">LinkedHashMap</td><td style="text-align:left">一种可以记住键/值项添加次序的映射表</td></tr><tr><td style="text-align:left">WeakHashMap</td><td style="text-align:left">一种其值无用武之地后可以被垃圾回收器回收的映射表</td></tr><tr><td style="text-align:left">IdentityHashMap</td><td style="text-align:left">一种用 == 而不是用 equals 比较键值的映射表</td></tr></tbody></table><p><img src="//onns.xyz/blog/image/20200316-1.png" alt="集合框架中的类"></p></center><ul><li>数组和数组列表都有一个重大的缺陷。这就是从数组的<code>中间位置插入/删除</code>一个元素要付出很大的代价，其原因是数组中处于被删除元素之后的所有元素都要向数组的前端移动。</li><li>链表是一个有序集合。</li><li>可以根据需要给容器附加许多的迭代器，但是这些迭代器只能<code>读取列表</code>。另外，再单独附加一个<code>既能读又能写</code>的迭代器。</li><li>迭代器检测到并发修改：在每个迭代器方法的开始处检查自己改写操作的计数值是否与集合的改写操作计数值一致。</li><li>散列表（hash table）：要想査找表中对象的位置，就要先计算它的散列码，然后与桶的总数取余，所得到的结果就是保存这个元素的桶的索引。</li><li>装填因子（load factor）决定何时对散列表进行再散列。</li><li>树集是一个有序集合。</li><li>链接散列映射将用<code>访问顺序</code>，而不是<code>插入顺序</code>，对映射条目进行迭代。</li><li>每次调用 get 或 put，受到影响的条目将从当前的位置删除，并放到条目链表的尾部（只有条目在链表中的位置会受影响，而散列表中的桶不会受影响。一个条目总位于与键散列码对应的桶中）。</li><li>EmimSet 是一个枚举类型元素集的高效实现。EnumSet 类没有公共的构造器。</li><li><code>IdentityHashMap</code> 类的键的散列值不是用 <code>hashCode</code> 函数计算 的，而是用 <code>System.identityHashCode</code> 方法计算的。它根据对象的内存地址来计算散列码。两个对象在比较时使用 <code>==</code>。</li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（六）</title>
      <link href="/blog/2020/03/14/java-notes-6/"/>
      <url>/blog/2020/03/14/java-notes-6/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="范型程序设计"><a class="header-anchor" href="#范型程序设计">#</a>范型程序设计</h2><a id="more"></a><ul><li>构造函数中可以省略泛型类型。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; file = <span class="keyword">new</span> ArrayList&lt;&gt;()</span><br></pre></td></tr></table></figure></li><li>出现编译错误比类在运行时出现类的强制类型转换异常要好得多。</li><li><code>类型参数</code>使得程序具有更好的<code>可读性</code>和<code>安全性</code>。</li><li>泛型类可以有多个类型变量，例如 <code>public class Pair&lt;T, U&gt; { ... }</code>。</li><li>泛型方法可以定义在普通类中，也可以定义在泛型类中。</li><li>类型变量放在修饰符的后面，返回类型的前面。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArrayAlg</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getMiddle</span><span class="params">(T... a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[a.length / <span class="number">2</span>];</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>当调用一个泛型方法时，在方法名前的尖括号中放人具体的类型：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String middle = ArrayAlg.&lt;String&gt;getMiddle(<span class="string">"John"</span>, <span class="string">"Q."</span>, <span class="string">"Public"</span>);</span><br></pre></td></tr></table></figure></li><li>可以通过对类型变量 T 设置<code>限定</code>来对类型变量加以约束。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Comparable&gt; <span class="function">T <span class="title">min</span><span class="params">(T[] a)</span> ...</span></span><br></pre></td></tr></table></figure></li><li>一个类型变量或通配符可以有多个限定，例如：<code>T extends Comparable &amp; Serializable</code>。限定类型用 <code>&amp;</code> 分隔，而 <code>,</code> 用来分隔类型变量。</li><li>在 Java 的继承中，可以根据需要拥有多个接口超类型，但限定中至多有一个类。如果用 一个类作为限定，它必须是限定列表中的第一个。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></li><li>无论何时定义一个泛型类型，都自动提供了一个相应的原始类型（raw type）。</li><li>原始类型用第一个限定的类型变量来替换，如果没有给定限定就用 <code>Object</code> 替换。</li><li>当程序调用泛型方法时，如果擦除返回类型，编译器插入强制类型转换。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Pair&lt;Employee&gt; buddies = ...;</span><br><span class="line">Employee buddy = buddies.getFirst();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 对原始方法 Pair.getFirst 的调用。</span></span><br><span class="line"><span class="comment">// 2. 将返回的 Object 类型强制转换为 Employee 类型。</span></span><br></pre></td></tr></table></figure></li><li>Java 泛型转换：<ul><li>虚拟机中没有泛型，只有普通的类和方法。</li><li>所有的类型参数都用它们的限定类型替换。</li><li>桥方法被合成来保持多态。</li><li>为保持类型安全性，必要时插人强制类型转换。</li></ul></li><li>桥方法：解决类型擦除与多态发生的冲突。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DateInterval</span> <span class="keyword">extends</span> <span class="title">Pair</span>&lt;<span class="title">LocalDate</span>&gt; </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecond</span><span class="params">(LocalDate second)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 上述类擦除后会变成</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DateInterval</span> <span class="keyword">extends</span> <span class="title">Pair</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecond</span><span class="params">(LocalDate second)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 但会从Pair类中继承一个方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pair</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecond</span><span class="params">(Object second)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 桥方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecond</span><span class="params">(Object second)</span> </span>&#123; setSecond((Date) second); &#125;</span><br></pre></td></tr></table></figure></li><li>大多数 Java 泛型限制都是由类型擦除引起的。</li><li>不能用类型参数代替基本类型。</li><li>虚拟机中的对象总有一个特定的非泛型类型。</li><li>不能实例化参数化类型的数组。</li><li>不能实例化类型变置。</li><li>不能构造泛型数组。</li><li>带有超类型限定的通配符可以向泛型对象写人，带有子类型限定的通配符可以从泛型对象读取。</li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>不太懂 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>道理理解但还需要更详细的文档补充 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>InDesign小技巧</title>
      <link href="/blog/2020/02/27/Indesign-skills/"/>
      <url>/blog/2020/02/27/Indesign-skills/</url>
      
        <content type="html"><![CDATA[<p>记录一些InDesign的小技巧。</p><a id="more"></a><ul><li>InDesign导入高清图像会失真，原因是为了加快图像的加载速度，解决方案：<code>View-&gt;Display Performance-&gt;High Quality Display</code>。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.jb51.net/Indesign/632934.html" target="_blank" rel="noopener">Indesign导入的高清图片变模糊怎么办?</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> indesign </tag>
            
            <tag> adobe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（五）</title>
      <link href="/blog/2020/02/25/java-notes-5/"/>
      <url>/blog/2020/02/25/java-notes-5/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="异常、断言和日志"><a class="header-anchor" href="#异常、断言和日志">#</a>异常、断言和日志</h2><a id="more"></a><h3 id="异常"><a class="header-anchor" href="#异常">#</a>异常</h3><ul><li>在 Java 程序设计语言中，异常对象都是派生于 <code>Throwable</code> 类的一个实例。</li><li><code>Error</code> 类层次结构描述了 Java 运行时系统的内部错误和资源耗尽错误。除了通告给用户，并尽力使程序安全地终止之外，再无能为力。</li><li>在设计 Java 程序时， 需要关注 <code>Exception</code> 层次结构：<ol><li><strong>RuntimeException</strong>：由程序错误导致的异常。</li><li><strong>其它异常</strong>：程序本身没有问题，但由于像<code>I/O错误</code>这类问题导致的异常。</li></ol></li><li>如果出现 <code>RuntimeException</code> 异常，那么就一定是你的问题。</li><li>派生于 Error 类或 RuntimeException 类的所有异常称为<code>非受查（unchecked）异常</code>，所有其他的异常称为<code>受查（checked）异常</code>。</li><li>一个方法必须声明所有可能抛出的受查异常，而非受查异常要么不可控制（Error），要么就应该避免发生（RuntimeException）。</li><li>抛出异常：<ol><li>找到一个合适的异常类。</li><li>创建这个类的一个对象。</li><li>将对象抛出。</li></ol></li><li>如果调用了一个抛出受查异常的方法，就必须对它进行处理，或者继续传递。</li><li>应该捕获那些<code>知道如何处理的异常</code>，而将那些<code>不知道怎样处理的异常</code>继续进行传递。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(String filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    InputStream in = <span class="keyword">new</span> FileInputStream(filename);</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">    <span class="keyword">while</span> ((b = in.read()) != -<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// process input</span></span><br><span class="line">      ...</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (IOException exception)</span><br><span class="line">  &#123;</span><br><span class="line">    exception.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更好的选择👇</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(String filename)</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  InputStream in = <span class="keyword">new</span> FileInputStream(filename);</span><br><span class="line">  <span class="keyword">int</span> b;</span><br><span class="line">  <span class="keyword">while</span> ((b = in.read()) != -<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// process input</span></span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>如果编写一个覆盖超类的方法，而这个方法又没有抛出异常，那么这个方法就必须捕获方法代码中出现的每一个受查异常。</li><li>不允许在子类的 throws 说明符中出现超过超类方法所列出的异常类范围。</li><li>强烈建议使用这种包装技术，这样可以让用户抛出子系统中的高级异常，而不会丢失原始异常的细节。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> </span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// access the database</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e)</span><br><span class="line">&#123;</span><br><span class="line">  Throwable se = <span class="keyword">new</span> ServletException(<span class="string">"database error"</span>);</span><br><span class="line">  se.initCause(e);</span><br><span class="line">  <span class="keyword">throw</span> se;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得原始异常</span></span><br><span class="line">Throwable e = se.getCause();</span><br></pre></td></tr></table></figure></li><li>不管是否有异常被捕获，<code>finally</code> 子句中的代码都被执行。</li><li><code>带资源的 try 语句</code>可以很好地处理“如果 try 块抛出一个异常，而且 close 方法也抛出一个异常”的问题。</li><li>异常处理不能代替简单的测试。因为异常捕获的耗时较长。</li><li>不要过分地细化异常。</li><li>不要压制异常。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></li><li>在检测错误时，“苛刻”要比“放任”更好。尽早抛出异常可以让使用者更方便的处理，而未知的异常才是最难检查的。</li><li>不要羞于传递异常。</li></ul><hr><h3 id="断言"><a class="header-anchor" href="#断言">#</a>断言</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> 条件;</span><br><span class="line"><span class="keyword">assert</span> 条件:表达式;</span><br></pre></td></tr></table></figure><ul><li>断言失败是致命的、不可恢复的错误。</li><li>断言检查只用于开发和测阶段。</li></ul><hr><ul><li>7个日志记录器级别：<ul><li>SEVERE</li><li>WARNING</li><li>INFO</li><li>CONFIG</li><li>FINE</li><li>FINER</li><li>FINEST</li></ul></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>没太看懂 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（四）</title>
      <link href="/blog/2020/02/24/java-notes-4/"/>
      <url>/blog/2020/02/24/java-notes-4/</url>
      
        <content type="html"><![CDATA[<p>Java核心技术卷一基础知识第10版</p><h2 id="接口、lambda-表达式与内部类"><a class="header-anchor" href="#接口、lambda-表达式与内部类">#</a>接口、lambda 表达式与内部类</h2><a id="more"></a><h3 id="接口"><a class="header-anchor" href="#接口">#</a>接口</h3><ul><li>接口中的所有方法自动地属于 <code>public</code>，在接口中声明方法时不必提供关键字 <code>public</code>。</li><li>接口绝不能含有 <code>实例域</code>。提供实例域和方法实现的任务应该由实现接口的那个类来完成。</li><li>为了让类实现一个接口，需要：<ol><li>将类声明为实现给定的接口。<br>要将类声明为实现某个接口，需要使用关键字 <strong>implements</strong>。</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> <span class="keyword">implements</span> <span class="title">Comparable</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>对接口中的所有方法进行定义。</li></ol></li><li>如果存在这样一种通用算法，它能够对两个不同的子类对象进行比较，则应该在<code>超类</code>中提供一个 <code>compareTo</code> 方法，并将这个方法声明为 <code>final</code>。</li><li>接口不是类，不能使用 <code>new</code> 运算符实例化一个接口，但是可以声明接口的变量，接口变量必须引用实现了接口的类对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="keyword">new</span> Comparable(...); <span class="comment">// ERROR</span></span><br><span class="line">Comparable x; <span class="comment">// OK</span></span><br><span class="line">x = <span class="keyword">new</span> Employee(...); <span class="comment">// OK provided Employee implements Comparable</span></span><br></pre></td></tr></table></figure></li><li>可以使用 <code>instance</code> 检查一个对象是否实现了某个特定的接口。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> Comparable) &#123;...&#125;</span><br></pre></td></tr></table></figure></li><li>接口中的域将被自动设为 <code>public static final</code>。</li><li>在实现接口时，必须把方法声明为 <code>public</code>，否则，编译器将认为这个方法的访问属性是包可见性，即类的默认访问属性，之后编译器就会给出试图提供更严格的访问权限的警告信息。</li><li>每个类可以实现多个接口。</li><li>可以为接口方法提供一个默认实现，必须用 <code>default</code> 修饰符标记这样一个方法。</li><li>默认方法的一个重要用法是 <code>接口演化（interface evolution）</code>，保证不会对旧代码产生影响。</li><li>如果先在一个接口中将一个方法定义为默认方法，然后又在超类或另一个接口中定义了同样的方法，遵循如下规则：<ol><li>超类优先。<br>如果超类提供了一个具体方法，同名而且有相同参数类型的默认方法会被忽略。</li><li>接口冲突。<br>如果一个超接口提供了一个默认方法，另一个接口提供了一个同名而且参数类型(不论是否是默认参数)相同的方法，必须覆盖这个方法来解决冲突。</li></ol></li></ul><hr><p>接口与回调可能在这里不太看得懂，暂时跳过。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><hr><h3 id="lambda-表达式"><a class="header-anchor" href="#lambda-表达式">#</a>lambda 表达式</h3><ul><li>lambda表达式就是一个代码块， 以及必须传入代码的变量规范。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(String first, String second)</span><br><span class="line">  -&gt; first.length() - second.length()</span><br></pre></td></tr></table></figure></li><li>如果代码要完成的计算无法放在一个表达式中，就可以像写方法一样，把这些代码放在 <code>{}</code> 中， 并包含显式的 return 语句。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(String first, String second) -&gt;</span><br><span class="line">&#123; </span><br><span class="line">  <span class="keyword">if</span> (first.length() &lt; second.length()) <span class="keyword">return</span> -<span class="number">1</span>; </span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (first.length() &gt; second.length()) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>即使 lambda 表达式没有参数，仍然要提供空括号，就像无参数方法一样。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">() -&gt; &#123; <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">100</span>; i &gt;= <span class="number">0</span>; i-- ) System.out.println(i); &#125;</span><br></pre></td></tr></table></figure></li><li>如果可以推导出一个 lambda 表达式的参数类型，则可以忽略其类型。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Comparator&lt;String&gt; comp</span><br><span class="line">= (first, second) <span class="comment">// Same as (String first, String second)</span></span><br><span class="line">  -&gt; first.length() - second.length();</span><br></pre></td></tr></table></figure></li><li>如果方法只有一个参数，而且这个参数的类型可以推导得出，那么甚至还可以省略小括号。</li><li>无需指定 lambda 表达式的返回类型。lambda 表达式的返回类型总是会由上下文推导得出。</li><li>要用 <code>::</code> 操作符分隔方法名与对象或类名主要有3种情况：<ul><li>object::instanceMethod</li><li>Class::staticMethod</li><li>Class::instanceMethod</li></ul></li><li>无法构造泛型类型 <code>T</code> 的数组。（数组构造器引用对于克服这个限制很有用。）<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Object[] people = stream.toArray(); <span class="comment">// Object数组引用</span></span><br><span class="line">Person[] people = stream.toArray(Person[]::<span class="keyword">new</span>); <span class="comment">// Person数组引用</span></span><br></pre></td></tr></table></figure></li><li>lambda 表达式中捕获的变量必须实际上是<code>最终变量（effectively final）</code>。</li><li>lambda 表达式的体与嵌套块有相同的作用域。</li><li>在 lambda 表达式中声明与一个局部变量同名的参数或局部变量是不合法的。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Path first = Paths.get(<span class="string">"/usr/bin"</span>); </span><br><span class="line">Comparator&lt;String&gt; comp =</span><br><span class="line">(first, second) -&gt; first.length() - second.length();</span><br><span class="line"><span class="comment">// Error: Variable first already defined</span></span><br></pre></td></tr></table></figure></li><li>在一个 lambda 表达式中使用 <code>this</code> 关键字时，是指创建这个 lambda 表达式的方法的 <code>this</code> 参数。</li><li>使用 lambda 表达式的重点是<code>延迟执行（deferred execution）</code>。</li></ul><hr><h3 id="内部类"><a class="header-anchor" href="#内部类">#</a>内部类</h3><ul><li>使用内部类的原因：<ul><li>内部类方法可以访问该类定义所在的作用域中的数据，包括私有的数据。</li><li>内部类可以对同一个包中的其他类隐藏起来。</li><li>当想要定义一个回调函数且不想编写大量代码时，使用匿名（anonymous）内部类比较便捷。</li></ul></li><li>使用外围类引用的正规语法为 <code>OuterClass.this</code>。</li></ul><p>好晕啊😭，看不懂。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><p>代理也待看<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>待看 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>待看 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>待看 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下超好用的软件——Teleport ultra</title>
      <link href="/blog/2020/02/21/teleport-ultra-for-windows/"/>
      <url>/blog/2020/02/21/teleport-ultra-for-windows/</url>
      
        <content type="html"><![CDATA[<p><code>Teleport ultra</code> 是一个可以把整个站离线下载下来的工具，超级好用。<br>有很多技术文档都是在线的、静态的，用这个工具很合适～</p><a id="more"></a><ol><li>新建项目向导</li><li>复制一个网址，包含该网站的目录结构</li><li>选择网站和爬取深度</li><li>选择爬取所有文件</li><li>保存当前项目</li><li>点击蓝色三角号▶️开始按钮</li><li>完成</li></ol>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> software </tag>
            
            <tag> teleport ultra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信文章svg交互</title>
      <link href="/blog/2020/02/20/wechat-svg/"/>
      <url>/blog/2020/02/20/wechat-svg/</url>
      
        <content type="html"><![CDATA[<p>如果不是特别想做的话，还是在文章的开头劝退一波，因为 <strong>付出 &gt;&gt; 收获</strong>，不论如何，最终的反响不是特别好。</p><a id="more"></a><p>回归正题，前前后后弄了一周多的时间，期间都是高强度研究的那种，踩过了很多坑，希望大家复现的时候少踩些坑。</p><h2 id="壹"><a class="header-anchor" href="#壹">#</a>壹</h2><p>最初的时候是一篇名叫<a href="https://mp.weixin.qq.com/s/-gugc0Gn0XZXSOONw-NKHg" target="_blank" rel="noopener">《2020，我的新年签居然是…》</a>的推送吸引了大家的注意力，站在他们的肩（chuang）膀（yi）上，我们做了进一步的升华。</p><p>首先需要了解一下微信文章推送的定位，它是一个<code>阉割</code>了的网页，只保留了<code>文本</code>、<code>媒体</code>和<code>样式</code>这三种内容，而我们正常网页交互所使用的 <code>js</code> 则完全不能使用，甚至连 <code>&lt;style&gt;&lt;/style&gt;</code> 这样的样式标签也会被移除。一句话概括，你只能展示内容，而无法与读者互动，无法交互。</p><p>而 <code>svg</code> 是为数不多的可以用到的可定制式的交互样式，它的出身可以百度如果你感兴趣。<code>svg</code> 能够做到的交互我目前知道两个<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，简要概括就是：<code>透明度/角度变化</code>和<code>（按照固定轨迹）移动</code>，基本上所有的交互都是这两个交互的<code>延伸</code>和<code>组合</code>。</p><p><strong>透明度/角度变化</strong>：实际中用到的就是<code>点击空白处显示文字</code>。<br><strong>（按照固定轨迹）移动</strong>：<code>点击移动</code>、<code>抽奖</code>等。</p><h2 id="贰"><a class="header-anchor" href="#贰">#</a>贰</h2><p>抽签的本质上就是<strong>签高速的移动</strong>，可能有些人不太理解，我解释下。如果不想了解或者觉得我解释的不清楚可以跳过或者看<a href="https://www.zhihu.com/question/25403913/answer/142033761" target="_blank" rel="noopener">《为什么高速顺时针旋转的车轮看起来像是缓慢的逆时针旋转？》</a>。</p><p>我们偶尔看公路上的车轮会保持静止，因为车轮速度过快，每次看到的时候车轮都保持同一个位置，这就是高速带来的<code>静止</code>效果。<code>svg</code> 有一个参数就是可以让某一秒的画面代替动画中间的间隙效果，后面会详细介绍。</p><h2 id="叁"><a class="header-anchor" href="#叁">#</a>叁</h2><p>签的所有设计工作在 <code>Adobe illustrator</code> 中进行，后续的修补和动画通过<code>修改代码</code>完成。</p><p>在所有工作开始前一定要确定的事情是你整个画布的大小，后续所有的调整和动画都是基于<code>数值计算</code>的，如果最后才发现开始设计得不统一，再回来修改的话，等于之前所有的工作都要重做一遍。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><p>我选取的画布大小是 <code>640*960</code>，后续所有的参数都是基于这个。</p><p>新建画布的时候，一定要去画布预设里把文档的出血设置成 <code>0</code>，出血是为了打印时四周预留足够的空间，但我们要精确计算到像素，所以必须要刨除这些不确定因素。</p><p>接下来就是画面能动起来的重中之重：<code>图层结构</code>。</p><p>在介绍之前先了解一下 <code>Adobe illustrator</code> 的<code>编组</code>功能，<code>编组</code>功能的作用是能够让许多对象<code>作为一个整体</code>进行编辑等后续操作。体现在 <code>svg</code> 代码中则易于理解些，即众多对象被 <code>&lt;g&gt;&lt;/g&gt;</code> 标签包裹。</p><p>将图层结构与代码结构综合理解，有助于对整个动画的原理进行理解，如果觉得有些难以理解，可以跳过，只要按步骤做即可。</p><p>首先说图层结构，图层结构总体设计如下（假设16张签面）：</p><center><p><img src="//onns.xyz/blog/image/20200220-2.jpg" alt="图层结构"></p><p>图1 图层结构</p></center><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">新年签设计</span><br><span class="line">├── 前景</span><br><span class="line">|   ├── 签面1</span><br><span class="line">|   |   ├── “门”字</span><br><span class="line">|   |   ├── “门”字</span><br><span class="line">|   |   ├── “满”字</span><br><span class="line">|   |   ├── “绩”字</span><br><span class="line">|   |   └── 签1背景图</span><br><span class="line">|   ├── 签面2</span><br><span class="line">|   ├── ...</span><br><span class="line">|   └── 签面16</span><br><span class="line">├── 背景</span><br><span class="line">|   ├── 2020文字</span><br><span class="line">|   ├── 老鼠图案</span><br><span class="line">|   ├── ...</span><br><span class="line">|   └── 红色背景</span><br></pre></td></tr></table></figure><p>接下来详细讲一下。</p><p>首先要把签上<code>动的部分</code>和<code>不动的部分</code>分开，<code>不动的部分</code>放在<strong>背景层</strong>，只要放在背景层里，细致的结构无须考虑；<code>动的部分</code>放在<strong>前景层</strong>，每个签面内容都编组为一个整体，16个整体在<strong>前景层</strong>里是平行关系，处于同一层次。</p><p>每个签内容保证在编组里即可，内部的细节层次结构也都不影响。</p><p>接下来的重点是，每个签的位置摆放。16个签<strong>依次水平等间距摆放</strong>即可。</p><p>需要注意 <code>png</code> 格式的图片大小不能超过 <strong>100kb</strong>。<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><center><p><img src="//onns.xyz/blog/image/20200220-1.jpg" alt="设计图"></p><p>图2 设计图</p></center><p>摆放时需要满足的要求是：<strong>画布宽度中只允许出现一个签</strong>，长度为 <code>640</code> 的画布每个签之间的水平间距应该<code>大于等于640</code>。</p><p><code>图2</code>中<strong>门门满绩</strong>相对于画布左上角的相对位置是：<code>x:131 y:164</code>，那么<strong>瘦十斤</strong>相对于画布左上角的位置应该是：<code>x:131+640 y:164</code>。</p><p>等整体设计完成之后，就可以导出了。</p><center><p><img src="//onns.xyz/blog/image/20200220-3.jpg" alt="导出选项"></p><p>图3 导出选项</p></center><p>选择导出为 <code>svg</code>，然后需要注意两个参数：</p><ol><li>样式选择为 <code>演示文稿属性</code><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></li><li>图像选择为 <code>链接</code><sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></li></ol><p>然后你就拥有了以 <code>&lt;svg&gt;&lt;/svg&gt;</code> 包裹的签代码，就可以添加动画了。</p><hr><p>写了俩小时写不动了，歇会儿😂</p><hr><h2 id="肆"><a class="header-anchor" href="#肆">#</a>肆</h2><p>在用文本编辑器打开 <code>svg</code>之后，你会看到如下的一个标签结构。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 96000"</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先要做的是将 <code>svg</code> 标签属性里的 <code>viewBox</code> 大小设置为我们的画布大小，改为 <code>0 0 640 960</code>。</p><p>在 <code>Adobe illustrator</code> 里的文档结构在 <code>svg</code> 代码里会完全反过来。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 9600"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 背景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签16<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签2<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签1<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加动画的方法非常简单，在属于前景层的 <code>&lt;g&gt;&lt;/g&gt;</code> 里添加代码即可：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 9600"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 背景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签16<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签2<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span>&gt;</span>签1<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">animateTransform</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">attributeName</span>=<span class="string">"transform"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"translate"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">values</span>=<span class="string">"0 0;-640 0;-1280 0;...;-8960 0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">begin</span>=<span class="string">"0s"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">dur</span>=<span class="string">"0.45s"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">end</span>=<span class="string">"click"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">"freeze"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">calcMode</span>=<span class="string">"discrete"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">repeatCount</span>=<span class="string">"indefinite"</span>&gt;</span><span class="tag">&lt;/<span class="name">animateTransform</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>需要自行修改的属性和解释的属性如下，其它没解释的就自行百度即可。</p><ol><li><code>type</code> 设置为 <code>&quot;translate&quot;</code>，就是移动的意思。</li><li><code>values</code> 设置为每个签的水平间距，值为负，即 <code>0 0</code> 、 <code>-640 0</code> 、 <code>-640*2 0</code> 、 <code>-640*3 0</code>，以此类推。</li><li><code>begin</code> 设置为 <code>0</code>，动画一开始就进行。</li><li><code>dur</code> 为整个动画持续时间，自行设置。</li><li><code>end</code> 何时结束动画，点击结束，即 <code>click</code>。</li><li><code>fill</code> 就是上文提到的动画间隙如何填充，就用固定的画面填充即可，即 <code>freeze</code>。</li><li><code>repeatCount</code> 重复次数，在没点击之前肯定是无限次重复啦。</li></ol><p>至此动画已经可以动起来并且点击停止了，再加一个封面图片就可以了，然后设置封面点击一次就消失。这里可以用透明度降低的动画效果，也可以用移动到画布之外的动画效果。</p><p>前面说过 <code>svg</code> 的标签结构和图层结构是反的，所以新加的封面放在整个文档的最下方，和<code>前景</code>、<code>背景</code>同级。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 9600"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 背景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 前景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 封面层</span><br><span class="line">    <span class="tag">&lt;<span class="name">rect</span> <span class="attr">y</span>=<span class="string">"1.5"</span> <span class="attr">fill</span>=<span class="string">"#b6352f"</span> <span class="attr">width</span>=<span class="string">"649"</span> <span class="attr">height</span>=<span class="string">"960"</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"960"</span> <span class="attr">href</span>=<span class="string">"https://mmbiz.qpic.cn/mmbiz_jpg/g84wSb3VFX7sDq8k89pwzNiaQIibwiav6P7QQrPNCfVibmRAKhlrz1868ybEGAxzKpJaZovZpUw69P15Daqsltiaic7A/0?wx_fmt=jpeg"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">animatetransform</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">attributename</span>=<span class="string">"transform"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"translate"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">values</span>=<span class="string">"0 0;10000 0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">begin</span>=<span class="string">"click"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">dur</span>=<span class="string">"0.01s"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">fill</span>=<span class="string">"freeze"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">calcmode</span>=<span class="string">"discrete"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">repeatcount</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">animatetransform</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>至此，抽签的 <code>svg</code> 功能方面已经全部完成，下面的额外工作是<code>设计优化</code>和<code>微信公众平台适配</code>。</p><h2 id="伍"><a class="header-anchor" href="#伍">#</a>伍</h2><p>虽然签做好了，但是有一个很让人无语的问题：只有签面的区域点击才可以，红色背景点击没有办法令签停止。</p><center><p><img src="//onns.xyz/blog/image/20200220-4.jpg" alt="有效区域示意图"></p><p>图4 有效区域示意图</p></center><p>我的第一个解决方法是：<strong>将签面的背景图补成整个画布的大小，周围填充透明像素</strong>。</p><p>当时想出这个办法的时候我都为自己的机智而鼓掌，结果到最后一步的时候现实终于将魔爪伸向了我这只小猫咪了。<strong>微信png图片最大允许100KB</strong>，我整个人都傻了。</p><p>前面都写了<code>画布图片大小</code>影响到整个制作过程，所以我又从头制作了一遍，呵呵。</p><p>作为一个完美主义者，最终还是找到了一个解决方案：<strong>在每个签里加一个拉伸到整个画布大小的透明图像</strong>。这个方法亲测可以把有效区域扩大至整个画布，问题解决。这个透明图像放在<code>签编组</code>的任意位置都可以，反正是透明的，不会造成遮挡。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xlink</span>=<span class="string">"http://www.w3.org/1999/xlink"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">viewBox</span>=<span class="string">"0 0 640 9600"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 背景层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 前景层</span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span> <span class="attr">data-name</span>=<span class="string">"门门满绩"</span>&gt;</span></span><br><span class="line">      // 透明图像</span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"960"</span> <span class="attr">href</span>=<span class="string">"https://mmbiz.qpic.cn/mmbiz_png/g84wSb3VFX4WIFj78My2uNfKb2aBE3j32DkhOa6UEmCy5icgPPLZibMLczvJTMVJGfO1Z3y9eWef5emxn78gb6Ww/0?wx_fmt=png"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span>&gt;</span></span><br><span class="line">    // 封面层</span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后把所有的图像传到微信后台然后替换一下链接即可。<br>这里需要注意 <code>Adobe illustrator</code> 导出的 <code>image</code> 标签里的地址属性是 <code>xlink:href=&quot;图像地址&quot;</code>，微信无法识别，需要改成 <code>href=&quot;图像地址&quot;</code>，批量替换即可。</p><h2 id="陆"><a class="header-anchor" href="#陆">#</a>陆</h2><p>前前后后忙活了好几周，踩了好多坑，也有很多本来不会对整体有影响的小错误出现，唯一促使自己坚持下来的动力就是：<code>做都做了</code>、<code>我有强迫症啊喂，这地方多出几个像素我受不了</code>、<code>我是完美主义者啊，既然做了，那就做好</code>、<code>对阅读量充满期待，万一呢？</code>。前几个是本性，后一个是希冀。事实证明，爬得越高，摔得越惨。平平淡淡的反响，掩饰不住的失落，更别提当时网络的不畅导致二维码没有正常跳转。</p><p>但这就是生活啊，人生啊～永远对未知的结果抱有恐惧和期待。</p><p>不过在我心里，我已经做到最好了。</p><p><a href="https://onns.xyz/s/2020q">https://onns.xyz/s/2020q</a></p><h2 id="完"><a class="header-anchor" href="#完">#</a>完</h2><ul><li><a href="https://mp.weixin.qq.com/s/-gugc0Gn0XZXSOONw-NKHg" target="_blank" rel="noopener">2020，我的新年签居然是…</a></li><li><a href="https://zhuanlan.zhihu.com/p/75023148" target="_blank" rel="noopener">详细教你微信公众号正文页SVG交互开发</a></li><li><a href="https://www.zhangxinxu.com/wordpress/2014/08/so-powerful-svg-smil-animation/" target="_blank" rel="noopener">超级强大的SVG SMIL animation动画详解</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>可能有很多，但我只了解到两个。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>坑1，一定要注意顺序。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>坑2，微信后台只允许上传小于100kb的透明图片，超过的会强制转换为jpg，本来设计的效果全没了，真是个大坑。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/75023148" target="_blank" rel="noopener">把Styling选择为Presentation Attributes，这样导出的SVG就不含有style，而且元素的样式也会通过标签属性进行设置，而不使用style内联css。</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p>坑2，选别的会把图片变成base64编码后直接保存到文档里，很大的文档导致层次混乱。 <a href="#fnref5" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adobe </tag>
            
            <tag> wechat </tag>
            
            <tag> svg </tag>
            
            <tag> illustrator </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>excel字符串查找</title>
      <link href="/blog/2020/02/19/find-string-in-excel/"/>
      <url>/blog/2020/02/19/find-string-in-excel/</url>
      
        <content type="html"><![CDATA[<p>经常会有在excel查找多个字符串的需求，比如在一个大excel表里找几门课，之前一直是导出成 <code>csv</code> 然后对文本文档进行操作，这样最终还要导回 <code>excel</code>，今天花费3、4个小时学了下vb，做了一个宏，直接在excel上操作。</p><a id="more"></a><h2 id="最长公共子序列"><a class="header-anchor" href="#最长公共子序列">#</a>最长公共子序列</h2><p>逻辑是将课程名与要查找的课程名进行<code>最长公共子序列</code>匹配，达到阈值则算找到相应的课程。</p><p>所用到的算法可以参考：<br><a href="https://blog.csdn.net/zjxxyz123/article/details/80277721" target="_blank" rel="noopener">最长公共子序列（Longest Common Subsequence）问题</a></p><p>代码copy自 <a href="https://thydzik.com/longest-common-subsequence-implemented-in-vba-visual-basic-for-applications/" target="_blank" rel="noopener">Longest Common Subsequence implemented in VBA (Visual Basic for Applications)</a>，做了简单的修改。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> max(<span class="keyword">ByRef</span> a <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByRef</span> b <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    <span class="keyword">If</span> a &gt;= b <span class="keyword">Then</span></span><br><span class="line">        max = a</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        max = b</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> longestCommonSubsequence(<span class="keyword">ByRef</span> string1 <span class="keyword">As</span> <span class="built_in">String</span>, <span class="keyword">ByRef</span> string2 <span class="keyword">As</span> <span class="built_in">String</span>) <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">    <span class="keyword">If</span> string1 = vbNullString <span class="keyword">Or</span> string2 = vbNullString <span class="keyword">Then</span></span><br><span class="line">        MsgBox <span class="string">"出错"</span></span><br><span class="line">        <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">Dim</span> num() <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">'define the array, note rows of zeros get added to front automatically</span></span><br><span class="line">    <span class="keyword">ReDim</span> num(Len(string1), Len(string2))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Long</span>, j <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> Len(string1)</span><br><span class="line">        <span class="keyword">For</span> j = <span class="number">1</span> <span class="keyword">To</span> Len(string2)</span><br><span class="line">            <span class="keyword">If</span> <span class="keyword">Mid</span>$(string1, i, <span class="number">1</span>) = <span class="keyword">Mid</span>$(string2, j, <span class="number">1</span>) <span class="keyword">Then</span></span><br><span class="line">                num(i, j) = num(i - <span class="number">1</span>, j - <span class="number">1</span>) + <span class="number">1</span></span><br><span class="line">            <span class="keyword">Else</span></span><br><span class="line">                num(i, j) = max(num(i - <span class="number">1</span>, j), num(i, j - <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span> j</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> Len(string1) &gt; Len(string2) <span class="keyword">Then</span></span><br><span class="line">        longestCommonSubsequence = num(Len(string1), Len(string2)) * <span class="number">100.0</span> / Len(string2)</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        longestCommonSubsequence = num(Len(string1), Len(string2)) * <span class="number">100.0</span> / Len(string1)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><h2 id="构建查询字符串"><a class="header-anchor" href="#构建查询字符串">#</a>构建查询字符串</h2><p>没有想到在vb里创建一个字符串数组变量这么麻烦，最终还是选择了<a href="https://stackoverflow.com/questions/19369132/declare-and-initialize-string-array-in-vba" target="_blank" rel="noopener">Declare and Initialize String Array in VBA</a>里的方法。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> classList() <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">classList = Split(<span class="string">"符号学,大学语文,统计"</span>, <span class="string">","</span>)</span><br></pre></td></tr></table></figure><p>有点担心需要查询的课程名中有 <code>,</code>，到时候可能要找些别的符号作为分隔符。</p><h2 id="遍历并标记"><a class="header-anchor" href="#遍历并标记">#</a>遍历并标记</h2><p>参考<a href="https://stackoverflow.com/questions/10923053/using-vba-to-select-and-highlight-excel-rows" target="_blank" rel="noopener">Using VBA to Select and Highlight Excel Rows</a>，使用 <code>.EntireRow.Interior.ColorIndex</code> 方法来将整行标记，在excel里，白色的数值是<strong>2</strong>，黄色是<strong>6</strong>。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">If</span> longestCommonSubsequence(Cells(pos, nameRow).<span class="keyword">text</span>, classList(classNum)) &gt; <span class="number">40</span> <span class="keyword">Then</span></span><br><span class="line">Cells(pos, nameRow).EntireRow.Interior.ColorIndex = <span class="number">6</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure><h2 id="完整代码"><a class="header-anchor" href="#完整代码">#</a>完整代码</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> max(<span class="keyword">ByRef</span> a <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByRef</span> b <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    <span class="keyword">If</span> a &gt;= b <span class="keyword">Then</span></span><br><span class="line">        max = a</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        max = b</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> longestCommonSubsequence(<span class="keyword">ByRef</span> string1 <span class="keyword">As</span> <span class="built_in">String</span>, <span class="keyword">ByRef</span> string2 <span class="keyword">As</span> <span class="built_in">String</span>) <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">    <span class="keyword">If</span> string1 = vbNullString <span class="keyword">Or</span> string2 = vbNullString <span class="keyword">Then</span></span><br><span class="line">        MsgBox <span class="string">"出错"</span></span><br><span class="line">        <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">Dim</span> num() <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">'define the array, note rows of zeros get added to front automatically</span></span><br><span class="line">    <span class="keyword">ReDim</span> num(Len(string1), Len(string2))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Long</span>, j <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> Len(string1)</span><br><span class="line">        <span class="keyword">For</span> j = <span class="number">1</span> <span class="keyword">To</span> Len(string2)</span><br><span class="line">            <span class="keyword">If</span> <span class="keyword">Mid</span>$(string1, i, <span class="number">1</span>) = <span class="keyword">Mid</span>$(string2, j, <span class="number">1</span>) <span class="keyword">Then</span></span><br><span class="line">                num(i, j) = num(i - <span class="number">1</span>, j - <span class="number">1</span>) + <span class="number">1</span></span><br><span class="line">            <span class="keyword">Else</span></span><br><span class="line">                num(i, j) = max(num(i - <span class="number">1</span>, j), num(i, j - <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span> j</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> Len(string1) &gt; Len(string2) <span class="keyword">Then</span></span><br><span class="line">        longestCommonSubsequence = num(Len(string1), Len(string2)) * <span class="number">100.0</span> / Len(string2)</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        longestCommonSubsequence = num(Len(string1), Len(string2)) * <span class="number">100.0</span> / Len(string1)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> FindAndMark()</span><br><span class="line">    <span class="keyword">Dim</span> pos <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> nameRow <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> classNum <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> rate <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    nameRow = <span class="number">1</span></span><br><span class="line">    rate = <span class="number">60</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> pos = <span class="number">1</span> <span class="keyword">To</span> Sheet1.UsedRange.Rows.Count    </span><br><span class="line">        Cells(pos, nameRow).EntireRow.Interior.ColorIndex = <span class="number">2</span></span><br><span class="line">    <span class="keyword">Next</span> pos</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> classList() <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    classList = Split(<span class="string">"品味《诗经》,老子的智慧,庄子新解,汉书,魏晋风度,唐宋词史,品味朱子,红楼问梦,“胡”说四大名著,儒家养心课,禅道智慧,道德经,古希腊哲学,古典文明,中世纪文明,文艺复兴,启蒙运动,冷战,世界当代史,西方史学名著选读,西方都市与文明,世界主要宗教掠影,美育与实践:书法的构形美学溯源,美育与实践:茶道,美育与实践:花艺,美育与实践:黑白之道——围棋,美育与实践:行为之美,美育与实践:民乐,美育与实践:古琴,美育与实践:色彩美学,跨界•对话,周游列国：中国人开眼看世界,城•人：多学科视野中的都市空间、历史与文化,音乐的观念,音乐的观念（下）,音乐的观念·音乐的多维视角,人文经典导读,生命科学导论,“走进海洋”系列讲座,人文大讲堂,人文大讲堂·中国文化巡礼,人文大讲堂·周游列国,人文大讲堂·艺术的观念,人文大讲堂·性别与社会,人文大讲堂·哲学与世界,人文大讲堂·人文经典导读,人文大讲堂·认识中国,人文大讲堂·文艺鉴赏,性别教育,影像的世界,媒体第一课,与社会学同游"</span>, <span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> pos = <span class="number">1</span> <span class="keyword">To</span> Sheet1.UsedRange.Rows.Count</span><br><span class="line">        <span class="keyword">For</span> classNum = <span class="number">0</span> <span class="keyword">To</span> UBound(classList)</span><br><span class="line">            <span class="keyword">If</span> longestCommonSubsequence(Cells(pos, nameRow).<span class="keyword">text</span>, classList(classNum)) &gt; rate <span class="keyword">Then</span></span><br><span class="line">                Cells(pos, nameRow).EntireRow.Interior.ColorIndex = <span class="number">6</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">Next</span> pos</span><br><span class="line"></span><br><span class="line">    classList = Split(<span class="string">"生态之美,一“诺”千金——诺贝尔文学奖作家经典作品导读,海陆相望话丝路,西方古代建筑艺术史,世界艺术博物馆之旅,西方经典歌剧与音乐剧欣赏,西方摇滚文化,英国创造了现代世界吗? ——英国近代史,知日之智——中日之间文化交涉的诠释与反思,东山魁夷与日本艺术,中东漫记,全球化与中国史,认识地球,美国文化史,中国古代城市史,中国暨东方古代建筑艺术史,文化中国,官僚,中国文学（先秦魏晋南北朝部分）,中国文学（唐宋部分）,中国科举文化,大唐盛世：唐代的政治与社会,明清小说中的社会生活,灯谜中的中国智慧,当代中国的文化生产,中国经济与文化地理,十二孔陶笛演奏,男声合唱（上）,小提琴演奏训练,礼乐之邦的乐文化巡礼,艺术欣赏与创作,影像工作坊,校园戏剧创作实践,纪录片与实践,基地实践与教学（上）,迷人的音乐与即兴的乐趣,聆听经典音乐,美国大众流行音乐,声乐艺术赏析,性别与文学,性别教育与生活,身份与认同,中医养生（原名：走近中医,生活中的化学A,磷与生活,疾病与健康,无知之知——哲学的智慧,生活中的伦理,物质文明,家屋与族性"</span>, <span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> pos = <span class="number">1</span> <span class="keyword">To</span> Sheet1.UsedRange.Rows.Count</span><br><span class="line">        <span class="keyword">For</span> classNum = <span class="number">0</span> <span class="keyword">To</span> UBound(classList)</span><br><span class="line">            <span class="keyword">If</span> longestCommonSubsequence(Cells(pos, nameRow).<span class="keyword">text</span>, classList(classNum)) &gt; rate <span class="keyword">Then</span></span><br><span class="line">                Cells(pos, nameRow).EntireRow.Interior.ColorIndex = <span class="number">6</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">Next</span> pos</span><br><span class="line"></span><br><span class="line">    classList = Split(<span class="string">"文学与文化研究热点概念解析,知识分子与公共领域,公民常识,科技伦理,闽南方言与文化,闽南话入门,应用医疗人类学与身心健康,文化人类学,逻辑与科学,推理与论证,流行文化——爱与哀愁,比较文学与文化,跨界论道：科学走进人文,国故新知：沟通文理，启迪智慧,恋人絮语—世界电影的情感教育,教育学电影批评,思维规则,沉舟帆影-海洋考古,乡村仪式与戏剧,乡村、乡愁与新乡村建设,中外文化比较,简明天文学,药学与化妆品学,文物鉴赏,大数据时代的信息安全,财税基础,环境与能源,智能制造与工业4.0,水与生活,航空航天基础,Positive Psychology（积极心理学）,大学历史与文化,大自然探秘：自然与生态,东西方文化巡礼,人文与公共卫生,华夏文明传播,经济学经典,两岸国学与文化传承,美国文学经典,品悟西游,逻辑学,社会心理学,项目管理：案例与实践,中国历史地理,国剧赏析"</span>, <span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> pos = <span class="number">1</span> <span class="keyword">To</span> Sheet1.UsedRange.Rows.Count</span><br><span class="line">        <span class="keyword">For</span> classNum = <span class="number">0</span> <span class="keyword">To</span> UBound(classList)</span><br><span class="line">            <span class="keyword">If</span> longestCommonSubsequence(Cells(pos, nameRow).<span class="keyword">text</span>, classList(classNum)) &gt; rate <span class="keyword">Then</span></span><br><span class="line">                Cells(pos, nameRow).EntireRow.Interior.ColorIndex = <span class="number">6</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">Next</span> pos</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>完整的代码如上，需要自己拿去修改的地方有：</p><ol><li><code>nameRow</code> 是需要查找的名字所在的列号</li><li><code>classList</code> 是需要查找的名字的集合</li><li><code>rate</code> 是重复率，即阈值</li><li>如果<code>classList</code>特别长，看情况分几段来查找吧，像上面这样，注意每一段的开头和结尾不要带逗号<code>,</code></li></ol><p>一列数据转<code>,</code>格式的网址在这：<a href="https://onns.xyz/tools/line-break-to-comma/">https://onns.xyz/tools/line-break-to-comma/</a>，效果如图：</p><center><p><img src="//onns.xyz/blog/image/20200914-1.jpg" alt="效果图"></p></center><h2 id="测试"><a class="header-anchor" href="#测试">#</a>测试</h2><p>测试结果如图所示：</p><center><p><img src="https://onns.xyz/blog/image/20200219-1.png" alt="测试结果图"></p></center><h2 id="其它"><a class="header-anchor" href="#其它">#</a>其它</h2><p>如果只显示标黄的相关问题可以百度。</p><ul><li><a href="https://zhidao.baidu.com/question/555387177.html" target="_blank" rel="noopener">在EXCEL表格中，如何把标注黄色的数据单元格筛选出来</a></li></ul><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="https://www.vitoshacademy.com/excel-search-and-highlight-text/" target="_blank" rel="noopener">Excel VBA – Search and highlight text</a></li></ul><p>如果有任何问题可以留言问我～～</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> visual basic for applications </tag>
            
            <tag> macro </tag>
            
            <tag> LCS </tag>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（三）</title>
      <link href="/blog/2020/02/14/java-notes-3/"/>
      <url>/blog/2020/02/14/java-notes-3/</url>
      
        <content type="html"><![CDATA[<p>Java 核心技术卷一基础知识第 10 版</p><h2 id="继承"><a class="header-anchor" href="#继承">#</a>继承</h2><a id="more"></a><h3 id="类、超类和子类"><a class="header-anchor" href="#类、超类和子类">#</a>类、超类和子类</h3><ul><li><p>关键字<code>extends</code>表示继承。</p></li><li><p>在通过扩展超类定义子类的时候，仅需要指出子类与超类的不同之处。</p></li><li><p>在设计类的时候，应该将通用的方法放在超类中，而将具有特殊用途的方法放在子类中。</p></li><li><p>子类继承的方法不能直接地访问超类的私有域，可以使用 <code>super</code> 调用超类的方法来重写子类的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSalary</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">double</span> baseSalary = <span class="keyword">super</span>.getSalary();</span><br><span class="line">  <span class="keyword">return</span> baseSalary + bonus;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>super</code> 调用构造器的语句必须是子类构造器的第一条语句。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Manager</span><span class="params">(String name, <span class="keyword">double</span> salary, <span class="keyword">int</span> year,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> month, <span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">super</span>(name, salary, year, month, day);</span><br><span class="line">  <span class="comment">// 调用超类 Employee 中含有 n、s、year month</span></span><br><span class="line">  <span class="comment">// 和 day 参数的构造器</span></span><br><span class="line">  bonus = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>如果子类的构造器没有显式地调用超类的构造器，则将自动地调用超类默认（没有参数）的构造器。如果超类没有不带参数的构造器，并且在子类的构造器中又没有显式地调用超类的其他构造器，则 Java 编译器将报告错误。</p></li><li><p><code>super</code> 关键字的两个用途:</p><ol><li>调用超类的方法。</li><li>调用超类的构造器。</li></ol></li><li><p><strong>多态（polymorphism）</strong>：一个对象变量可以指示多种实际类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Manager boss = <span class="keyword">new</span> Manager(. . .);</span><br><span class="line">Employee[] staff = <span class="keyword">new</span> Employee[<span class="number">3</span>];</span><br><span class="line">staff[<span class="number">0</span>] = boss;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在这个例子中，变量 staff[0] 与 boss 引用同一个对象。</span></span><br><span class="line"><span class="comment">// 但编译器将 staff[0] 看成 Employee 对象。 这意味着，</span></span><br><span class="line"><span class="comment">// 可以这样调用</span></span><br><span class="line">boss.setBonus(<span class="number">5000</span>); <span class="comment">// OK</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 但不能这样调用</span></span><br><span class="line">staff[<span class="number">0</span>].setBonus(<span class="number">5000</span>); <span class="comment">// Error</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是因为 staff[0] 声明的类型是 Employee，</span></span><br><span class="line"><span class="comment">// 而 setBonus 不是 Employee 类的方法。</span></span><br></pre></td></tr></table></figure></li><li><p><strong>动态绑定（dynamic binding）</strong>：在运行时能够自动地选择调用哪个方法。</p></li><li><p>可以将一个子类的对象赋给超类变量，但不能将一个超类的引用赋给子类变量。不是所有的水果都是西瓜<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p></li><li><p>假设要调用 <code>x.f(args)</code>，隐式参数 <code>x</code> 声明为类 <code>C</code> 的一个对象。</p><ol><li>编译器査看对象的声明类型和方法名。编译器将会一一列举所有 <code>C</code> 类中名为 <code>f</code> 的方法和其超类中访问属性为 <code>public</code> 且名为 <code>f</code> 的方法（超类的私有方法不可访问）。</li><li>编译器将査看调用方法时提供的参数类型。如果在所有名为 <code>f</code> 的方法中存在一个与提供的参数类型完全匹配，就选择这个方法。这个过程被称为<code>重载解析(overloading resolution)</code>。返回类型不是签名的一部分，因此，在覆盖方法时，一定要保证返回类型的兼容性。允许子类将覆盖方法的返回类型定义为原返回类型的子类型。<sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup></li><li>如果是 private 方法、static 方法、final 方法或者构造器，那么编译器将可以准确地知道应该调用哪个方法，我们将这种调用方式称 <code>为静态绑定(static binding)</code>。</li><li>当程序运行，并且采用动态绑定调用方法时，虚拟机一定调用与 <code>x</code> 所引用对象的实际类型最合适的那个类的方法。</li></ol></li><li><p>每次调用方法都要进行搜索，时间开销相当大。因此，虚拟机预先为每个类创建了一个<code>方法表(method table)</code>，其中列出了所有方法的签名和实际调用的方法。</p></li><li><p>动态绑定有一个非常重要的特性：无需对现存的代码进行修改，就可以对程序进行扩展。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>多了一个新的类之后，比如<code>Executive</code>类也是<code>Employee</code>的子类，那<code>Employee e</code>如果刚好引用一个 <code>Executive</code> 类的对象，就可以自动的调用而不需要修改代码。<sup class="footnote-ref"><a href="#fn1" id="fnref1:2">[1:2]</a></sup></p></li><li><p>在覆盖一个方法的时候，子类方法不能低于超类方法的可见性。<sup class="footnote-ref"><a href="#fn1" id="fnref1:3">[1:3]</a></sup></p></li><li><p>不允许扩展的类被称为 <code>final</code> 类。</p></li><li><p><code>final</code> 类中的所有方法自动地成为 <code>final</code> 方法。</p></li><li><p>如果将一个类声明为 <code>final</code>，只有其中的方法自动地成为 <code>final</code>，而不包括域。</p></li><li><p>如果一个方法没有被覆盖并且很短，编译器就能够对它进行优化处理，这个过程为称为<code>内联(inlining)</code>。例如，内联调用<code>e.getName()</code>将被替换为访问 <code>e.name</code> 域。<sup class="footnote-ref"><a href="#fn1" id="fnref1:4">[1:4]</a></sup></p></li></ul><hr><ul><li>进行类型转换的唯一原因是：在暂时忽视对象的实际类型之后，使用对象的全部功能。</li><li>将一个值存人变量时，编译器将检查是否允许该操作。将一个子类的引用赋给一个超类变量，编译器是允许的。但将一个超类的引用赋给一个子类变量，必须进行类型转换，这样才能够通过运行时的检査。<sup class="footnote-ref"><a href="#fn1" id="fnref1:5">[1:5]</a></sup></li><li>运行这个程序时，Java 运行时系统将报告这个错误，并产生一个<code>ClassCastException</code>异常。<sup class="footnote-ref"><a href="#fn1" id="fnref1:6">[1:6]</a></sup><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Manager boss = <span class="keyword">new</span> Manager(. . .);</span><br><span class="line">Employee[] staff = <span class="keyword">new</span> Employee[<span class="number">3</span>];</span><br><span class="line">staff[<span class="number">0</span>] = boss;</span><br><span class="line">Manager boss = (Manager) staff[<span class="number">1</span>]; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure></li><li>在进行类型转换之前，先查看一下是否能够成功地转换。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (staff[<span class="number">1</span>] <span class="keyword">instanceof</span> Manager)</span><br><span class="line">&#123;</span><br><span class="line">  boss = (Manager) staff[<span class="number">1</span>];</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>只能在继承层次内进行类型转换。</li><li>在将超类转换成子类之前，应该使用 <code>instanceof</code> 进行检查。</li><li>在一般情况下，应该尽量少用类型转换和 <code>instanceof</code> 运算符。</li></ul><hr><ul><li>包含一个或多个抽象方法的类本身必须被声明为抽象的。</li><li>抽象方法充当着占位的角色，它们的具体实现在子类中。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  . . .</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">getDescription</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>抽象类可以包含具体数据和具体方法。<blockquote><p>许多程序员认为，在抽象类中不能包含具体方法。建议尽量将通用的域和方法（不管是否是抽象的）放在超类（不管是否是抽象类）中。</p></blockquote></li><li>类即使不含抽象方法，也可以将类声明为抽象类。</li><li>抽象类不能被实例化。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Person(<span class="string">"Vinee Vu"</span>) <span class="comment">// 错误</span></span><br></pre></td></tr></table></figure></li><li>可以定义一个抽象类的对象变量，但是它只能引用非抽象子类的对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Person p = <span class="keyword">new</span> Student(<span class="string">"Vinee Vu"</span>, <span class="string">"Economics"</span>);</span><br></pre></td></tr></table></figure></li><li>Java 用于控制可见性的 4 个访问修饰符：<ol><li>仅对本类可见： private。</li><li>对所有类可见： public。</li><li>对本包和所有子类可见： protected。</li><li>对本包可见： 不需要修饰符。</li></ol></li></ul><hr><h3 id="object：所有类的超类"><a class="header-anchor" href="#object：所有类的超类">#</a>Object：所有类的超类</h3><ul><li>Object 类是 Java 中所有类的始祖，在 Java 中每个类都是由它扩展而来的。</li><li>可以使用 Object 类型的变量引用任何类型的对象。</li></ul><hr><p>编写一个完美的 equals 方法的建议：</p><ol><li><p>显式参数命名为 otherObject，稍后需要将它转换成另一个叫做 other 的变量。</p></li><li><p>检测 this 与 otherObject 是否引用同一个对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> = otherObject) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br></pre></td></tr></table></figure><p>这条语句只是一个优化。实际上，这是一种经常采用的形式。因为计算这个等式要比一个一个地比较类中的域所付出的代价小得多。</p></li><li><p>检测 otherObject 是否为 null ,如果为 null ，返回 false。这项检测是很必要的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (otherObject = <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure></li><li><p>比较 this 与 otherObject 是否属于同一个类。如果 equals 的语义在每个子类中有所改变，就使用 getClass 检测：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (getClass() != otherObject.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><p>如果所有的子类都拥有统一的语义，就使用 instanceof 检测:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!(otherObject <span class="keyword">instanceof</span> ClassName)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure></li><li><p>将 otherObject 转换为相应的类类型变量：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ClassName other = (ClassName) otherObject</span><br></pre></td></tr></table></figure></li><li><p>现在开始对所有需要比较的域进行比较了。使用 <code>==</code> 比较基本类型域，使用 equals 比较对象域。如果所有的域都匹配，就返回 true；否则返回 false。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> field1 == other.field1</span><br><span class="line">  &amp;&amp; Objects.equals(field2, other.field2)</span><br><span class="line">  &amp;&amp; . . . ;</span><br></pre></td></tr></table></figure><p>如果在子类中重新定义 equals, 就要在其中包含调用 super.equals(other)。</p></li></ol><hr><ul><li>只要对象与一个字符串通过操作符 “+” 连接起来，Java 编译就会自动地调用 <code>toString</code> 方法，以便获得这个对象的字符串描述。</li></ul><hr><h3 id="范性数组列表"><a class="header-anchor" href="#范性数组列表">#</a>范性数组列表</h3><ul><li>范型数组列表<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br></pre></td></tr></table></figure></li><li>不必指出数组的大小。</li><li>使用 add 将任意多的元素添加到数组中。</li><li>使用 size() 替代 length 计算元素的数目。</li><li>使用 a.get(i) 替代 a[i] 访问元素。</li><li>一旦能够确认数组列表的大小不再发生变化，就可以调用 <code>trimToSize</code> 方法。这个方法将存储区域的大小调整为当前元素数量所需要的存储空间数目。垃圾回收器将回收多余的存储空间。</li><li>一旦整理了数组列表的大小，添加新元素就需要花时间再次移动存储块， 所以应该在确认不会添加任何元素时，再调用 <code>trimToSize</code>。</li></ul><hr><ul><li>printf 方法是这样定义的：<sup class="footnote-ref"><a href="#fn1" id="fnref1:7">[1:7]</a></sup><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintStream</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> PrintStream <span class="title">printf</span><span class="params">(String fmt, Object... args)</span> </span>&#123; <span class="keyword">return</span> format(fmt, args); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><code>...</code>是 Java 代码的一部分，它表明这个方法可以接收任意数量的对象（除 fmt 参数之外）。</li></ul><hr><ul><li><p>在比较两个枚举类型的值时，永远不需要调用 <code>equals</code>, 而直接使用 <code>==</code> 就可以了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Size &#123; SMALL, MEDIUM, LARGE, EXTRA_LARGE &#125;;</span><br></pre></td></tr></table></figure></li><li><p>如果需要的话，可以在枚举类型中添加一些构造器、方法和域。构造器只是在构造枚举常量的时候被调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Size</span><br><span class="line">&#123;</span><br><span class="line">  SMALL(<span class="string">"S"</span>), MEDIUM(<span class="string">"M"</span>) , LARGE(<span class="string">"L"</span>) , EXTRA_LARGE(<span class="string">"XL"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> String abbreviation;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Size</span><span class="params">(String abbreviation)</span> </span>&#123; <span class="keyword">this</span>.abbreviation = abbreviation; &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getAbbreviation</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> abbreviation; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>所有的枚举类型都是 <code>Enum</code> 类的子类。</p></li><li><p>每个枚举类型都有一个静态的 <code>values</code> 方法，它将返回一个包含全部枚举值的数组。</p></li><li><p><code>ordinal</code> 方法返冋 enum 声明中枚举常量的位置，位置从 <code>0</code> 开始计数。例如：<code>Size.MEDIUM.ordinal()</code> 返回 <code>1</code>。</p></li></ul><hr><h3 id="反射"><a class="header-anchor" href="#反射">#</a>反射</h3><ul><li><p><code>反射(reflective)</code>：能够分析类能力的程序。<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p></li><li><p>反射机制可以用来：</p><ul><li>在运行时分析类的能力。</li><li>在运行时查看对象。例如，编写一个 toString 方法供所有类使用。</li><li>实现通用的数组操作代码。</li><li>利用 Method 对象。</li></ul></li><li><p>在程序运行期间，Java 运行时系统始终为所有的对象维护一个被称为运行时的类型标识。 这个信息跟踪着每个对象所属的类。虚拟机利用运行时类型信息选择相应的方法执行。</p></li><li><p>Object 类中的 <code>getClass()</code> 方法将会返回一个 <code>Class</code> 类型的实例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Employee e;</span><br><span class="line">...</span><br><span class="line">Class cl = e.getClass();</span><br></pre></td></tr></table></figure></li><li><p>一个 Class 对象将表示一个特定类的属性。最常用的 Class 方法是<code>getName</code>。这个方法将返回类的名字。</p></li><li><p>可以调用静态方法 <code>forName</code> 获得类名对应的 <code>Class</code> 对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String className = <span class="string">"java.util.Random"</span>;</span><br><span class="line">Class cl = Class.forName(className);</span><br><span class="line"><span class="comment">// 如果类名保存在字符串中，并可在运行中改变，</span></span><br><span class="line"><span class="comment">// 就可以使用这个方法。</span></span><br></pre></td></tr></table></figure></li><li><p>如果 <code>T</code> 是任意的 Java 类型（或 void 关键字），<code>T.class</code> 将代表匹配的类对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Class cl1 = Random<span class="class">.<span class="keyword">class</span></span>; <span class="comment">// if you import java.util.*;</span></span><br><span class="line">Class cl2 = <span class="keyword">int</span><span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">Class cl3 = Double[]<span class="class">.<span class="keyword">class</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>一个 Class 对象实际上表示的是一个类型，而这个类型未必一定是一种类。例如，<code>int</code>不是类，但 <code>int.class</code> 是一个 Class 类型的对象。</p></li><li><p>虚拟机为每个类型管理一个 Class 对象。因此，可以利用 <code>==</code> 运算符实现两个类对象比较的操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (e.getClass() == Employee<span class="class">.<span class="keyword">class</span>) ...</span></span><br></pre></td></tr></table></figure></li><li><p><code>newInstance()</code>可以用来动态地创建一个类的实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.getClass().newInstance();</span><br></pre></td></tr></table></figure></li><li><p><code>newInstance</code> 方法调用默认的构造器（没有参数的构造器）初始化新创建的对象。如果这个类没有默认的构造器，就会抛出一个异常。</p></li><li><p>在<code>java.lang.reflect</code>包中有三个类<code>Field</code>、<code>Method</code>和<code>Constructor</code>分别用于描述类的<code>域</code>、<code>方法</code>和<code>构造器</code>。</p></li><li><p>共有方法：</p><ul><li><code>getName</code>方法，用来返回项目的名称。</li><li><code>getModifiers</code>方法，返回一个整型数值，用不同的位开关描述<code>public</code>和<code>static</code>这样的修饰符使用状况。</li></ul></li><li><p><code>Field</code>类有一个<code>getType</code>方法，用来返回描述域所属类型的 Class 对象。</p></li><li><p>Class 类中的<code>getFields</code>、<code>getMethods</code>和<code>getConstructors</code>方法将分别返回类提供的 public 域、方法和构造器数组，其中包括超类的公有成员。</p></li><li><p>Class 类的<code>getDeclareFields</code>、<code>getDeclareMethods</code>和<code>getDeclaredConstructors</code>方法将分别返回类中声明的全部域、方法和构造器，其中包括私有和受保护成员，但不包括超类的成员。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* This program uses reflection to print all features of a class.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 1.1 2004-02-21</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Cay Horstmann</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectionTest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="comment">// read class name from command line args or user input</span></span><br><span class="line">      String name;</span><br><span class="line">      <span class="keyword">if</span> (args.length &gt; <span class="number">0</span>) name = args[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"Enter class name (e.g. java.util.Date): "</span>);</span><br><span class="line">        name = in.next();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// print class name and superclass name (if != Object)</span></span><br><span class="line">        Class cl = Class.forName(name);</span><br><span class="line">        Class supercl = cl.getSuperclass();</span><br><span class="line">        String modifiers = Modifier.toString(cl.getModifiers());</span><br><span class="line">        <span class="keyword">if</span> (modifiers.length() &gt; <span class="number">0</span>) System.out.print(modifiers + <span class="string">" "</span>);</span><br><span class="line">        System.out.print(<span class="string">"class "</span> + name);</span><br><span class="line">        if (supercl != null &amp;&amp; supercl != Object.class) System.out.print(" extends "</span><br><span class="line">              + supercl.getName());</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">"\n&#123;\n"</span>);</span><br><span class="line">        printConstructors(cl);</span><br><span class="line">        System.out.println();</span><br><span class="line">        printMethods(cl);</span><br><span class="line">        System.out.println();</span><br><span class="line">        printFields(cl);</span><br><span class="line">        System.out.println(<span class="string">"&#125;"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (ClassNotFoundException e)</span><br><span class="line">      &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">      System.exit(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Prints all constructors of a class</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> cl a class</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printConstructors</span><span class="params">(Class cl)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      Constructor[] constructors = cl.getDeclaredConstructors();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (Constructor c : constructors)</span><br><span class="line">      &#123;</span><br><span class="line">        String name = c.getName();</span><br><span class="line">        System.out.print(<span class="string">"   "</span>);</span><br><span class="line">        String modifiers = Modifier.toString(c.getModifiers());</span><br><span class="line">        <span class="keyword">if</span> (modifiers.length() &gt; <span class="number">0</span>) System.out.print(modifiers + <span class="string">" "</span>);</span><br><span class="line">        System.out.print(name + <span class="string">"("</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// print parameter types</span></span><br><span class="line">        Class[] paramTypes = c.getParameterTypes();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; paramTypes.length; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j &gt; <span class="number">0</span>) System.out.print(<span class="string">", "</span>);</span><br><span class="line">            System.out.print(paramTypes[j].getName());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">");"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Prints all methods of a class</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> cl a class</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMethods</span><span class="params">(Class cl)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      Method[] methods = cl.getDeclaredMethods();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (Method m : methods)</span><br><span class="line">      &#123;</span><br><span class="line">        Class retType = m.getReturnType();</span><br><span class="line">        String name = m.getName();</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">"   "</span>);</span><br><span class="line">        <span class="comment">// print modifiers, return type and method name</span></span><br><span class="line">        String modifiers = Modifier.toString(m.getModifiers());</span><br><span class="line">        <span class="keyword">if</span> (modifiers.length() &gt; <span class="number">0</span>) System.out.print(modifiers + <span class="string">" "</span>);</span><br><span class="line">        System.out.print(retType.getName() + <span class="string">" "</span> + name + <span class="string">"("</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// print parameter types</span></span><br><span class="line">        Class[] paramTypes = m.getParameterTypes();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; paramTypes.length; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j &gt; <span class="number">0</span>) System.out.print(<span class="string">", "</span>);</span><br><span class="line">            System.out.print(paramTypes[j].getName());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">");"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Prints all fields of a class</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> cl a class</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printFields</span><span class="params">(Class cl)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      Field[] fields = cl.getDeclaredFields();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (Field f : fields)</span><br><span class="line">      &#123;</span><br><span class="line">        Class type = f.getType();</span><br><span class="line">        String name = f.getName();</span><br><span class="line">        System.out.print(<span class="string">"   "</span>);</span><br><span class="line">        String modifiers = Modifier.toString(f.getModifiers());</span><br><span class="line">        <span class="keyword">if</span> (modifiers.length() &gt; <span class="number">0</span>) System.out.print(modifiers + <span class="string">" "</span>);</span><br><span class="line">        System.out.println(type.getName() + <span class="string">" "</span> + name + <span class="string">";"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">$ java reflection.ReflectionTest</span><br><span class="line">Enter class name (e.g. java.util.Date):</span><br><span class="line">java.util.List</span><br><span class="line">public abstract interface class java.util.List</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  public abstract void add(int, java.lang.Object);</span><br><span class="line">  public abstract boolean add(java.lang.Object);</span><br><span class="line">  public abstract boolean remove(java.lang.Object);</span><br><span class="line">  public abstract java.lang.Object remove(int);</span><br><span class="line">  public abstract java.lang.Object get(int);</span><br><span class="line">  public abstract boolean equals(java.lang.Object);</span><br><span class="line">  public abstract int hashCode();</span><br><span class="line">  public static java.util.List copyOf(java.util.Collection);</span><br><span class="line">  public abstract int indexOf(java.lang.Object);</span><br><span class="line">  public abstract void clear();</span><br><span class="line">  public abstract int lastIndexOf(java.lang.Object);</span><br><span class="line">  public abstract boolean isEmpty();</span><br><span class="line">  public void replaceAll(java.util.function.UnaryOperator);</span><br><span class="line">  public abstract int size();</span><br><span class="line">  public abstract java.util.List subList(int, int);</span><br><span class="line">  public abstract [Ljava.lang.Object; toArray([Ljava.lang.Object;);</span><br><span class="line">  public abstract [Ljava.lang.Object; toArray();</span><br><span class="line">  public abstract java.util.Iterator iterator();</span><br><span class="line">  public static java.util.List of(java.lang.Object, java.lang.Object);</span><br><span class="line">  public static java.util.List of(java.lang.Object);</span><br><span class="line">  public static java.util.List of();</span><br><span class="line">  public static java.util.List of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);</span><br><span class="line">  public static java.util.List of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);</span><br><span class="line">  public static java.util.List of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);</span><br><span class="line">  public static java.util.List of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);</span><br><span class="line">  public static java.util.List of(java.lang.Object, java.lang.Object, java.lang.Object);</span><br><span class="line">  public static java.util.List of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);</span><br><span class="line">  public static java.util.List of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);</span><br><span class="line">  public static transient java.util.List of([Ljava.lang.Object;);</span><br><span class="line">  public static java.util.List of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);</span><br><span class="line">  public abstract boolean contains(java.lang.Object);</span><br><span class="line">  public java.util.Spliterator spliterator();</span><br><span class="line">  public abstract boolean addAll(int, java.util.Collection);</span><br><span class="line">  public abstract boolean addAll(java.util.Collection);</span><br><span class="line">  public abstract java.lang.Object <span class="built_in">set</span>(int, java.lang.Object);</span><br><span class="line">  public abstract boolean containsAll(java.util.Collection);</span><br><span class="line">  public abstract boolean retainAll(java.util.Collection);</span><br><span class="line">  public abstract boolean removeAll(java.util.Collection);</span><br><span class="line">  public void sort(java.util.Comparator);</span><br><span class="line">  public abstract java.util.ListIterator listIterator();</span><br><span class="line">  public abstract java.util.ListIterator listIterator(int);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>反射机制的默认行为受限于 Java 的访问控制。</p></li><li><p>将一个<code>Employee[]</code>临时地转换成<code>Object[]</code>数组，然后再把它转换回来是可以的，但一从开始就是<code>Object[]</code>的数组却永远不能转换成<code>Employe[]</code>数组。</p></li><li><p>Array 类中的静态方法<code>newInstance</code>，它能够构造新数组。在调用它时必须提供两个参数，一个是数组的元素类型，一个是数组的长度。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object newArray = Array.newInstance(componentType, newLength);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* This method grows an array by allocating a new array of the same type and</span></span><br><span class="line"><span class="comment">* copying all elements.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> a the array to grow. This can be an object array or a primitive</span></span><br><span class="line"><span class="comment">* type array</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> a larger array that contains all elements of a.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">goodCopyOf</span><span class="params">(Object a, <span class="keyword">int</span> newLength)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Class cl = a.getClass();</span><br><span class="line">  <span class="keyword">if</span> (!cl.isArray()) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  Class componentType = cl.getComponentType();</span><br><span class="line">  <span class="keyword">int</span> length = Array.getLength(a);</span><br><span class="line">  Object newArray = Array.newInstance(componentType, newLength);</span><br><span class="line">  System.arraycopy(a, <span class="number">0</span>, newArray, <span class="number">0</span>, Math.min(length, newLength));</span><br><span class="line">  <span class="keyword">return</span> newArray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 Method 类中有一个<code>invoke</code>方法，它允许调用包装在当前 Method 对象中的方法。</p></li><li><p><code>invoke</code>方法的签名是：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Object <span class="title">invoke</span><span class="params">(Object obj, Object... args)</span></span></span><br></pre></td></tr></table></figure></li><li><p>第一个参数是隐式参数，其余的对象提供了显式参数。对于静态方法，第一个参数可以被忽略，即可以将它设置为<code>null</code>。</p></li><li><p><code>invoke</code>的参数和返回值必须是<code>Object</code>类型的。</p></li></ul><hr><ul><li>继承的设计技巧<ol><li>将公共操作和域放在超类</li><li>不要使用受保护的域</li><li>使用继承实现 <code>is-a</code> 关系</li><li>除非所有继承的方法都有意义，否则不要使用继承</li><li>在覆盖方法时，不要改变预期的行为</li><li>使用多态，而非类型信息</li><li>不要过多地使用反射</li></ol></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>20200815 更新，看<a href="https://www.bilibili.com/video/BV12J41137hu?p=74" target="_blank" rel="noopener">【狂神说 Java】Java 零基础学习视频通俗易懂</a>再回来看看。 <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a> <a href="#fnref1:2" class="footnote-backref">↩︎</a> <a href="#fnref1:3" class="footnote-backref">↩︎</a> <a href="#fnref1:4" class="footnote-backref">↩︎</a> <a href="#fnref1:5" class="footnote-backref">↩︎</a> <a href="#fnref1:6" class="footnote-backref">↩︎</a> <a href="#fnref1:7" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>其实没太懂。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>回来学反射 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文档同步</title>
      <link href="/blog/2020/02/13/online-doc/"/>
      <url>/blog/2020/02/13/online-doc/</url>
      
        <content type="html"><![CDATA[<p>经常会有这样一种需求：我需要把一段文字从一个设备发送到另一个设备，虽然确实会有很多解决办法，比如登陆QQ、微信，然后传过去，但是这些都<code>需要繁琐的登陆步骤</code>，并且有些时候你需要发送的设备是一台<code>不可信的</code>、<code>你不愿意在上面暴露自己账号密码</code>的设备，所以想弄一个无需登陆的小Demo，花了四个小时，效果还不错。</p><a id="more"></a><h2 id="准备工作"><a class="header-anchor" href="#准备工作">#</a>准备工作</h2><h3 id="编辑器"><a class="header-anchor" href="#编辑器">#</a>编辑器</h3><p>网页访问应该是最方便快捷的方式了，所以这个小demo就依托 <code>web</code>。解决了框架的问题，下一个需要考虑的问题是选择什么样的前端编辑器。</p><p>最初的设想是采用一些开源的 <code>markdown</code> 编辑器，毕竟 <code>markdown</code> 是我最经常编写的文本样式了，也确实有一些很好看的编辑器：</p><ul><li><a href="https://github.com/lepture/editor" target="_blank" rel="noopener">https://github.com/lepture/editor</a></li><li><a href="https://github.com/sparksuite/simplemde-markdown-editor" target="_blank" rel="noopener">https://github.com/sparksuite/simplemde-markdown-editor</a></li></ul><p>但这背离了我的初衷，我要做的不是一个在线的编辑器，而仅仅是一个可以存放文本的编辑器，markdown的解析和预览需要很大的工作量，且样式不一定是我喜欢的。</p><p>最终我选择一款<a href="http://www.htmleaf.com/css3/ui-design/201609023948.html" target="_blank" rel="noopener">纯CSS3制作可编辑的微软Word样式文档</a>，他的<a href="https://github.com/delight-im/HTML-Sheets-of-Paper" target="_blank" rel="noopener">github地址</a>。</p><h3 id="数据存储"><a class="header-anchor" href="#数据存储">#</a>数据存储</h3><p>我的网站挂在GitHub上，只有前端没有服务器，如果仅仅只是为了一个小demo就迁移到服务器上，未免有些小题大做。<br>我的博客上其实就有基于后端的内容，用的是<a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud</a>的服务，免费版的api限制是 <code>3万次/天</code>，对于个人日常使用完全足够。故本demo的数据存储与同步也同样使用 <code>leancloud</code>，相关的文档见<a href="https://leancloud.cn/docs/leanstorage_guide-js.html" target="_blank" rel="noopener">数据存储开发指南 · JavaScript</a>。</p><h2 id="具体实现"><a class="header-anchor" href="#具体实现">#</a>具体实现</h2><p>这里只考虑js逻辑，其它详见代码。</p><h3 id="获取当前url参数"><a class="header-anchor" href="#获取当前url参数">#</a>获取当前url参数</h3><p>在线文档当然不能只有一个可编辑的页面，所以我的设想是获取 <code>url</code> 上的额外参数，以此作为文档的<strong>唯一ID</strong>，这样就可以有无数个文档可以存放内容，比如 <code>/doc/?1</code> 和 <code>/doc/?12</code> 就是两个不同的文档。<br>而本身的域名可能发生改变，为了方便拓展， <code>url</code> 参数应该是去掉<code>协议（https://）</code>、<code>域名（xxxxx.com）</code>和<code>端口号（80）</code>后的结果。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前url</span></span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">window</span>.location.href.slice(<span class="built_in">window</span>.location.href.indexOf(<span class="string">'/doc/'</span>));</span><br></pre></td></tr></table></figure><h3 id="拉取远端数据"><a class="header-anchor" href="#拉取远端数据">#</a>拉取远端数据</h3><p>页面第一次加载时应该拉取远端的数据，来恢复文档内容（如果远端存在备份内容）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">AV.init(&#123;</span><br><span class="line">  appId: <span class="string">"jIRe5LRqbWDB2dxmu7FH8c1S-gzGzoHsz"</span>,</span><br><span class="line">  appKey: <span class="string">"xxxxxxxxxxxxxxxxx"</span>,</span><br><span class="line">  serverURLs: <span class="string">"https://jire5lrq.lc-cn-n1-shared.com"</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">'DocSync'</span>);</span><br><span class="line">query.equalTo(<span class="string">'url'</span>, url);</span><br><span class="line">query.find().then(<span class="function"><span class="keyword">function</span> (<span class="params">docsync</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 拉取远端结果</span></span><br><span class="line">  <span class="keyword">if</span> (docsync.length == <span class="number">1</span>) &#123;</span><br><span class="line">    docEle.innerHTML = docsync[<span class="number">0</span>].attributes.content;</span><br><span class="line">    content = docsync[<span class="number">0</span>].attributes.content;</span><br><span class="line">    objectId = docsync[<span class="number">0</span>].id;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="更新远端数据"><a class="header-anchor" href="#更新远端数据">#</a>更新远端数据</h3><p>数据更新的策略是，判断当前页面在远端是否有字段保留，如果有就更新字段即可，否则需要新增一条记录保存当前 <code>url</code> 的内容。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (objectId == <span class="string">''</span>) &#123;</span><br><span class="line">    <span class="comment">// 声明 class</span></span><br><span class="line">    <span class="keyword">var</span> DocSync = AV.Object.extend(<span class="string">'DocSync'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建对象</span></span><br><span class="line">    <span class="keyword">var</span> docsync = <span class="keyword">new</span> DocSync();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为属性赋值</span></span><br><span class="line">    docsync.set(<span class="string">'url'</span>, url);</span><br><span class="line">    docsync.set(<span class="string">'content'</span>, docEle.innerHTML);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将对象保存到云端</span></span><br><span class="line">    docsync.save().then(<span class="function"><span class="keyword">function</span> (<span class="params">docsync</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 成功保存之后，执行其他逻辑</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'保存成功。objectId：'</span> + docsync.id);</span><br><span class="line">      objectId = docsync.id;</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 异常处理</span></span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> docsync = AV.Object.createWithoutData(<span class="string">'DocSync'</span>, objectId);</span><br><span class="line">    docsync.set(<span class="string">'content'</span>, docEle.innerHTML);</span><br><span class="line">    docsync.save().then(<span class="function"><span class="keyword">function</span> (<span class="params">docsync</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'更新成功。'</span>);</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  content = docEle.innerHTML;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更新策略"><a class="header-anchor" href="#更新策略">#</a>更新策略</h3><p>我设置的更新的策略是 <code>10s</code> 自动保存一次。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (docEle.innerHTML != content &amp;&amp; docEle.innerHTML != <span class="string">''</span>) &#123;</span><br><span class="line">    update();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="number">1000</span> * <span class="number">10</span>);</span><br></pre></td></tr></table></figure><h2 id="demo"><a class="header-anchor" href="#demo">#</a>Demo</h2><p>详见<a href="https://onns.xyz/doc/">https://onns.xyz/doc/</a>。</p><h2 id="todo"><a class="header-anchor" href="#todo">#</a>TODO</h2><ul><li>因为是用 <code>leancloud</code> 服务，不清楚单个字段的大小限制，可能出现无法保存或无法完整保存的情况，需要编辑器加以限制。</li><li>一些诸如保存时间、字数大小等控制信息的显示。</li><li>编辑器本身支持很多功能，需要相关组件来丰富。</li><li>由于接口调用限制，数据的远端拉取并未定时执行而只会在网页加载时执行一次，可以有更多合理的策略。</li><li>更新策略也可以更智能，比如如果新增文字数大于<code>阈值</code>则马上更新。</li><li>手机端UI不友好。</li></ul><p>如果有建议欢迎留言～</p>]]></content>
      
      
      <categories>
          
          <category> idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sync </tag>
            
            <tag> serverless </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（二）</title>
      <link href="/blog/2020/02/11/java-notes-2/"/>
      <url>/blog/2020/02/11/java-notes-2/</url>
      
        <content type="html"><![CDATA[<p>Java 核心技术卷一基础知识第 10 版</p><h2 id="对象与类"><a class="header-anchor" href="#对象与类">#</a>对象与类</h2><a id="more"></a><p>封装（encapsulation）是与对象有关的一个重要概念。 从形式上看，封装不过是将数据和行为组合在一个包中，并对对象的使用者隐藏了数据的实现方式。对象中的数据称为实例域（instance field），操纵数据的过程称为方法（ method）。对于每个特定的类实例（对象）都有一组特定的实例域值。</p><p>继承（inheritance）：通过扩展一个类来建立另外一个类的过程。</p><p>一个对象变量并没有实际包含一个对象，而仅仅引用一个对象。<br>在 Java 中，任何对象变量的值都是对存储在另外一个地方的一个对象的引用。<br>局部变量不会自动地初始化为 <code>null</code>，而必须通过调用 <code>new</code> 或将它们设置为 <code>null</code> 进行初始化。</p><ul><li>更改器方法（mutator method）：改变对象的状态。</li><li>访问器方法（accessor method）：只访问对象而不修改对象的方法。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MyCalendar.java</span></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCalendar</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LocalDate nowDate = LocalDate.now();</span><br><span class="line">        <span class="keyword">int</span> day = nowDate.getDayOfMonth();</span><br><span class="line">        System.out.println(<span class="string">"Sun Mon Tue Wed Thu Fri Sat"</span>);</span><br><span class="line">        <span class="keyword">int</span> week = nowDate.getDayOfWeek().getValue();</span><br><span class="line">        <span class="keyword">int</span> n = (<span class="number">7</span> - (day - week) % <span class="number">7</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.print(<span class="string">"    "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= nowDate.lengthOfMonth(); i++) &#123;</span><br><span class="line">            n++;</span><br><span class="line">            System.out.printf(<span class="string">"%3d"</span>, i);</span><br><span class="line">            <span class="keyword">if</span> (n % <span class="number">7</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == day) &#123;</span><br><span class="line">                    System.out.print(<span class="string">"*"</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">" "</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This program tests the Employee class.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.12 2015-05-08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Cay Horstmann</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeTest</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">// fill the staff array with three Employee objects</span></span><br><span class="line">      Employee[] staff = <span class="keyword">new</span> Employee[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">      staff[<span class="number">0</span>] = <span class="keyword">new</span> Employee(<span class="string">"Carl Cracker"</span>, <span class="number">75000</span>, <span class="number">1987</span>, <span class="number">12</span>, <span class="number">15</span>);</span><br><span class="line">      staff[<span class="number">1</span>] = <span class="keyword">new</span> Employee(<span class="string">"Harry Hacker"</span>, <span class="number">50000</span>, <span class="number">1989</span>, <span class="number">10</span>, <span class="number">1</span>);</span><br><span class="line">      staff[<span class="number">2</span>] = <span class="keyword">new</span> Employee(<span class="string">"Tony Tester"</span>, <span class="number">40000</span>, <span class="number">1990</span>, <span class="number">3</span>, <span class="number">15</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// raise everyone's salary by 5%</span></span><br><span class="line">      <span class="keyword">for</span> (Employee e : staff)</span><br><span class="line">         e.raiseSalary(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// print out information about all Employee objects</span></span><br><span class="line">      <span class="keyword">for</span> (Employee e : staff)</span><br><span class="line">         System.out.println(<span class="string">"name="</span> + e.getName() + <span class="string">",salary="</span> + e.getSalary() + <span class="string">",hireDay="</span> + e.getHireDay());</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">double</span> salary;</span><br><span class="line">   <span class="keyword">private</span> LocalDate hireDay;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(String n, <span class="keyword">double</span> s, <span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">      name = n;</span><br><span class="line">      salary = s;</span><br><span class="line">      hireDay = LocalDate.of(year, month, day);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSalary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> salary;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> LocalDate <span class="title">getHireDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hireDay;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">raiseSalary</span><span class="params">(<span class="keyword">double</span> byPercent)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">double</span> raise = salary * byPercent / <span class="number">100</span>;</span><br><span class="line">      salary += raise;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在一个源文件中，只能有一个公有类，但可以有任意数目的非公有类。</li><li>类通常包括类型属于某个类类型的实例域。</li><li>构造器总是伴随着 <code>new</code> 操作符的执行被调用，而不能对一个已经存在的对象调用构造器来达到重新设置实例域的目的。</li><li>构造器<ul><li>构造器与类同名</li><li>每个类可以有一个以上的构造器</li><li>构造器可以有 0 个、1 个或多个参数</li><li>构造器没有返回值</li><li>构造器总是伴随着 new 操作一起调用</li></ul></li><li>不要在构造器中定义与实例域重名的局部变量。</li><li>一个方法可以访问所属类的所有对象的私有数据。</li></ul><p>可以将实例域定义为 <code>final</code>。构建对象时必须初始化这样的域。也就是说，必须确保在每一个构造器执行之后，这个域的值被设置，并且在后面的操作中，不能够再对它进行修改。</p><p>对于可变的类， 使用 <code>final</code> 修饰符可能会对读者造成混乱。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> StringBuilder evaluations;</span><br></pre></td></tr></table></figure><p>在 Employee 构造器中会初始化为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">evaluations = <span class="keyword">new</span> StringBuilder();</span><br></pre></td></tr></table></figure><p><code>final</code> 关键字只是表示存储在 <code>evaluations</code> 变量中的对象引用不会再指示其他 <code>StringBuilder</code> 对象。不过这个对象可以更改：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">giveGoldStar</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  evaluations.append(LocalDate.now() + <span class="string">": Gold star!\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><ul><li>如果将域定义为 <code>static</code>，每个类中只有一个这样的域。</li><li>每一个对象对于所有的实例域却都有自己的一份拷贝。</li><li>静态方法是一种不能向对象实施操作的方法。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></li><li>静态方法可以访问自身类中的静态域。</li><li>使用静态方法的情况：<ol><li>方法不需要访问对象状态，其所需参数都是通过显式参数提供。</li><li>一个方法只需要访问类的静态域。</li></ol></li></ul><hr><ul><li>Java 程序设计语言总是采用 <code>按值调用</code>。也就是说， 方法得到的是所有参数值的一个<code>拷贝</code>，方法不能修改传递给它的任何参数变量的内容。</li><li>Java 的对象引用也是按值传递的。</li><li>一个方法不能修改一个基本数据类型的参数（即数值型或布尔型）。</li><li>一个方法可以改变一个对象参数的状态。</li><li>一个方法不能让对象参数引用一个新的对象。</li></ul><hr><p><strong>重载（overloading）</strong>：多个方法有相同的名字、不同的参数。<br><strong>重载解析（overloading resolution）</strong>：编译器必须挑选出具体执行哪个方法，它通过用各个方法给出的参数类型与特定方法调用所使用的值类型进行匹配来挑选出相应的方法。如果编译器找不到匹配的参数，就会产生编译时错误，因为根本不存在匹配，或者没有一个比其他的更好。</p><ul><li><p>Java 允许重载任何方法，而不只是构造器方法。</p></li><li><p>如果在编写一个类时没有编写构造器，那么系统就会提供一个无参数构造器。</p></li><li><p>如果类中提供了至少一个构造器，但是没有提供无参数的构造器，则在构造对象时如果没有提供参数就会被视为<code>不合法</code>。</p></li><li><p>可以在类定义中， 直接将一个值赋给任何域。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String name = <span class="string">""</span>;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在执行构造器之前，先执行赋值操作。</p></li><li><p>如果构造器的第一个语句形如 this(…)，这个构造器将调用同一个类的另一个构造器。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(<span class="keyword">double</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// calls the Employee(String, double) constructor</span></span><br><span class="line">  <span class="keyword">this</span>(<span class="string">"Employee #"</span> + nextId, s);</span><br><span class="line">  <span class="comment">// 对公共的构造器代码部分只编写一次即可。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>初始化数据域的方法：</p><ol><li>在构造器中设置值</li><li>在声明中赋值</li><li>初始化块(initialization block)</li></ol></li><li><p>new 操作时，首先运行初始化块，然后才运行构造器的主体部分。通常会直接将初始化代码放在构造器中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> nextld;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">double</span> salary;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// object initialization block</span></span><br><span class="line">  &#123;</span><br><span class="line">    id = nextld;</span><br><span class="line">    nextld++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(String n, <span class="keyword">double</span> s)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    name = n;</span><br><span class="line">    salary = s;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    name = <span class="string">""</span>;</span><br><span class="line">    salary = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>调用构造器的具体处理步骤：</p><ol><li>所有数据域被初始化为默认值(0、false 或 null)。</li><li>按照在类声明中出现的次序，依次执行所有域初始化语句和初始化块。</li><li>如果构造器第一行调用了第二个构造器，则执行第二个构造器主体。</li><li>执行这个构造器的主体。</li></ol></li><li><p>如果对类的静态域进行初始化的代码比较复杂，那么可以使用静态的初始化块。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// static initialization block</span></span><br><span class="line"><span class="keyword">static</span></span><br><span class="line">&#123;</span><br><span class="line">  Random generator = <span class="keyword">new</span> Random();</span><br><span class="line">  <span class="comment">// set nextId to a random number between 0 and 9999</span></span><br><span class="line">  nextId = generator.nextInt(<span class="number">10000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>由于 Java 有自动的垃圾回收器，不需要人工回收内存， 所以 Java 不支持析构器。</p></li><li><p>可以为任何一个类添加<code>finalize</code>方法。<code>finalize</code>方法将在垃圾回收器清除对象之前调用。在实际应用中，不要依赖于使用<code>finalize</code>方法回收任何短缺的资源，这是因为很难知道这个方法什么时候才能够调用。</p></li></ul><hr><ul><li><p><code>import</code>语句应该位于源文件的顶部，但位于<code>package</code>语句的后面。</p></li><li><p>如果能够明确地指出所导人的类，将会使代码的读者更加准确地知道加载了哪些类。</p></li><li><p>在不同的包具有相同的类名冲突时，可以增加一个特定的<code>import</code>语句。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br></pre></td></tr></table></figure></li><li><p>如果都需要使用，就在每个类名的前面加上完整的包名。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java.util.Date deadline = <span class="keyword">new</span> java.util.Date();</span><br><span class="line">java.sql.Date today = <span class="keyword">new</span> java.sql.Date(...);</span><br></pre></td></tr></table></figure></li><li><p>在包中定位类是编译器（compiler）的工作。类文件中的字节码肯定使用完整的包名来引用其他类。</p></li><li><p>import 语句不仅可以导人类，还增加了导人静态方法和静态域的功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.System.*;</span><br><span class="line"><span class="comment">// 就可以使用 System 类的静态方法和静态域，而不必加类名前缀：</span></span><br><span class="line">out.println(<span class="string">"Goodbye, World!"</span>); <span class="comment">// i.e., System.out</span></span><br><span class="line">exit(<span class="number">9</span>); <span class="comment">// i.e., System.exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 另外，还可以导入特定的方法或域：</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.System.out;</span><br></pre></td></tr></table></figure></li><li><p>要想将一个类放人包中， 就必须将包的名字放在源文件的开头。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.horstmann.corejava;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>如果没有在源文件中放置<code>package</code>语句，这个源文件中的类就被放置在一个默认包（default package）中。</p></li></ul><hr><ul><li>类设计技巧：<ol><li>一定要保证数据私有</li><li>一定要对数据初始化</li><li>不要在类中使用过多的基本类型</li><li>不是所有的域都需要独立的域访问器和域更改器</li><li>将职责过多的类进行分解</li><li>类名和方法名要能够体现它们的职责</li><li>优先使用不可变的类</li></ol></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>我自己的理解是，因为静态方法可以在不 new 的前提下使用，所以不能对需要 new 之后的对象操作。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记（一）</title>
      <link href="/blog/2020/02/10/java-notes-1/"/>
      <url>/blog/2020/02/10/java-notes-1/</url>
      
        <content type="html"><![CDATA[<p>Java 核心技术卷一基础知识第 10 版</p><h2 id="java-的基本程序设计结构"><a class="header-anchor" href="#java-的基本程序设计结构">#</a>Java 的基本程序设计结构</h2><a id="more"></a><h3 id="一个简单的-java-应用程序"><a class="header-anchor" href="#一个简单的-java-应用程序">#</a>一个简单的 Java 应用程序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstSample</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"hello java"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Java 中定义类名的规则很宽松。名字必须以字母开头，后面可以跟字母和数字的任意组合，长度基本上没有限制，但是不能使用 Java 保留字作为类名。</li><li>标准的命名规范为：类名是以大写字母开头的名词。如果名字由多个单词组成，每个单词的第一个字母都应该大写。</li><li>源代码的文件名必须与公共类的名字相同，并用 <code>.java</code> 作为扩展名。</li></ul><hr><h3 id="数据类型"><a class="header-anchor" href="#数据类型">#</a>数据类型</h3><ul><li>Java 是一种强类型语言。共有 8 种基本类型：int、short、long、byte、float、double、char、boolean。</li><li>在 Java 中， 整型的范围与运行 Java 代码的机器无关。</li><li>长整型数值有一个后缀 <code>L</code> 或 <code>l</code>。<ul><li>4000000000L</li></ul></li><li>十六进制数值有一个前缀 <code>0x</code> 或 <code>0X</code>。<ul><li>0xCAFE</li></ul></li><li>八进制有一个前缀 <code>0</code>。<ul><li>010 是十进制的 8</li></ul></li><li>加上前缀 <code>0b</code> 或 <code>0B</code> 就可以写二进制数。<ul><li>0b1001 是十进制的 9</li></ul></li><li>float 类型的数值有一个后缀 <code>F</code> 或 <code>f</code>。没有后缀 <code>F</code> 的浮点数值默认为 double 类型，也可以在浮点数值后面添加后缀 <code>D</code> 或 <code>d</code>。</li></ul><hr><ul><li>Unicode 转义序列在解析代码之前进行<ul><li>注释中的 <code>\u</code> 也会被转义</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String\u005B\u005D args)</span> \\ 合法</span></span><br><span class="line"><span class="function">\\ 等价于</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br></pre></td></tr></table></figure></li><li><a href="https://github.com/onns/insight_python/blob/master/Unicode_and_Character_Sets.md" target="_blank" rel="noopener">码点</a></li><li>可以在任意位置声明变量</li><li><code>final</code> 声明常量<ul><li>关键字 <code>final</code> 表示这个变量只能被赋值一次。一旦被赋值之后，就不能够再更改了。习惯上，常量名使用全大写。</li></ul></li><li>如果运算符得到一个值，其类型与左侧操作数的类型不同，就会发生强制类型转换。<ul><li><code>x += 3.5;</code> 等价于 <code>x = (int)(x + 3.5);</code></li></ul></li><li><code>+=</code> 是右结合运算符<ul><li><code>a += b += c</code> 等价于 <code>a += (b += c)</code></li></ul></li><li>位运算符<ul><li><code>&amp;</code> (“and”)</li><li><code>|</code> (“or”)</li><li><code>^</code> (“xor”)</li><li><code>~</code> (“not”)</li><li><code>&gt;&gt;</code> 左移</li><li><code>&lt;&lt;</code> 右移</li><li><code>&gt;&gt;&gt;</code> 运算符会用 0 填充高位</li></ul></li><li>String 类对象为不可变字符串，不能修改。</li></ul><hr><ul><li>Java 提供了一种带标签的 break 语句， 用于跳出多重嵌套的循环语句。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">label:</span><br><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">break</span> label;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><code>Arrays.toString(a)</code> 打印数组中的所有值。</li><li><code>Arrays.deepToString(a)</code> 快速地打印一个二维数组的数据元素列表。</li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C测试系统设计</title>
      <link href="/blog/2020/02/06/ctest-design/"/>
      <url>/blog/2020/02/06/ctest-design/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>因为必须要给同学们的C程序看代码，但是挨个手工检查也太麻烦且耗时间了，所以还是弄个小小的测试系统吧。</p><a id="more"></a><h2 id="系统流程"><a class="header-anchor" href="#系统流程">#</a>系统流程</h2><p>大体的系统流程如<code>图1</code>所示，将学生们编写的C程序文件收集到服务器上后，编译并测试程序，将信息记录并最终展示给学生，方便他们反复提交和修改。</p><center><p><img src="//onns.xyz/blog/image/20200206-1.jpg" alt="系统流程图"></p><p>图1 系统流程图</p></center><h3 id="收集代码"><a class="header-anchor" href="#收集代码">#</a>收集代码</h3><p>但凡一种网页语言都有文件上传接口，所以只需要网页表单即可完成代码的收集工作，但我为了偷懒😂，选择了用腾讯微云的文件收集功能，具体可以自行了解。</p><p>在收集代码的时候，规定了文件的命名格式为 <code>学号(题号)</code> 的方式，所以可以得到代码的成员信息和题号信息而不必额外附加说明。</p><h3 id="编译"><a class="header-anchor" href="#编译">#</a>编译</h3><p>因为想用命令行的c语言工具，最方便的大概就是 <code>gcc</code> 了。<br>window下gcc安装比较麻烦，相关方法可以参照 <a href="http://www.mingw.org/" target="_blank" rel="noopener">MinGW | Minimalist GNU for Windows</a> 进行安装。<br>MacOS和Linux都直接命令行自带gcc，直接使用即可，但后两者在编译时会默认编译为 <code>.o</code> 结尾的文件，而windows是 <code>.exe</code> 结尾的文件，不过问题不大，指定一下即可。</p><p>不过需要注意的是在windows命令行下运行可执行文件的时候，不需要加 <code>./</code> ，所以在系统上需要加以区分。在命名中的一些诸如 <code>()</code> 之类的符号在MacOS下需要转义加 <code>\</code>，但是如果在windows下进行转义又会出错，也要加以区分。</p><h3 id="测试"><a class="header-anchor" href="#测试">#</a>测试</h3><p>测试是测试C语言程序有没有正确的必要步骤，只要和学生们约定好输入输出的格式，到时候只需要将程序执行结果与标准答案进行字符匹配即可。<br>这里需要注意一个问题是，MacOS下的换行一般以 <code>\n</code> 为主，而windows下则以 <code>\r\n</code> 为主，在匹配前需要将 <code>\r</code> 移除。</p><h3 id="展示"><a class="header-anchor" href="#展示">#</a>展示</h3><p>这个展示就因人而异了，我选择的是bootstrap的table样式表进行展示。</p><h2 id="具体实现"><a class="header-anchor" href="#具体实现">#</a>具体实现</h2><p>整个流程控制是用python完成的，一个 <code>pipe.py</code> 文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件命名格式：      学号(题目).cpp</span></span><br><span class="line"><span class="comment"># 例子：            23020181154229(1).cpp</span></span><br><span class="line"></span><br><span class="line">dir = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line">os_type = <span class="string">'1'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(platform.system() == <span class="string">'Windows'</span>):</span><br><span class="line">    os_type = <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">match</span><span class="params">(name)</span>:</span></span><br><span class="line">    res = re.search(<span class="string">r'^([0-9]+)\(([0-9]+)\)'</span>, name)</span><br><span class="line">    <span class="keyword">if</span>(res):</span><br><span class="line">        <span class="keyword">if</span>(name.endswith(<span class="string">".c"</span>) <span class="keyword">or</span> name.endswith(<span class="string">".cpp"</span>)):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">untest</span><span class="params">(name)</span>:</span></span><br><span class="line">    res = re.search(<span class="string">r'^0-([0-9]&#123;14&#125;)-([0-9]+)\(([0-9]+)\)'</span>, name)</span><br><span class="line">    <span class="keyword">if</span>(res):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">(dir)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> home, dirs, files <span class="keyword">in</span> os.walk(dir):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> match(filename):</span><br><span class="line"></span><br><span class="line">                os.rename(os.path.join(home, filename), os.path.join(</span><br><span class="line">                    home, time.strftime(<span class="string">"0-%Y%m%d%H%M%S-"</span>, time.localtime()) + filename))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(dir)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> home, dirs, files <span class="keyword">in</span> os.walk(dir):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> untest(filename):</span><br><span class="line">                newname = <span class="string">'1'</span> + filename[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">                os.rename(os.path.join(home, filename),</span><br><span class="line">                          os.path.join(home, newname))</span><br><span class="line">                <span class="keyword">return</span> newname</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build</span><span class="params">(cname, oname)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = subprocess.check_output(<span class="string">"gcc \"%s\" -o %s"</span> % (cname, oname),</span><br><span class="line">                                      stderr=subprocess.STDOUT,</span><br><span class="line">                                      shell=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(oname, idata, odata)</span>:</span></span><br><span class="line">    r, w = os.pipe()</span><br><span class="line">    os.write(w, bytes(idata, <span class="string">"utf-8"</span>))</span><br><span class="line">    os.close(w)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(os_type == <span class="string">'1'</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            res = subprocess.check_output(<span class="string">"./%s"</span> % (oname), stdin=r, timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">except</span> subprocess.TimeoutExpired <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span>(os_type == <span class="string">'2'</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            res = subprocess.check_output(<span class="string">"%s"</span> % (oname), stdin=r, timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">except</span> subprocess.TimeoutExpired <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = res.decode(<span class="string">"utf-8"</span>).replace(<span class="string">'\r'</span>, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> result.strip().replace(<span class="string">" "</span>,<span class="string">""</span>) == odata.strip().replace(<span class="string">" "</span>,<span class="string">""</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    print(result)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(oname, question)</span>:</span></span><br><span class="line">    question_list = &#123;</span><br><span class="line">        <span class="string">'1'</span>: [[<span class="string">'24'</span>, <span class="string">'0'</span>], [<span class="string">'11'</span>, <span class="string">'1'</span>], [<span class="string">'0'</span>, <span class="string">'0'</span>], [<span class="string">'-2'</span>, <span class="string">'0'</span>], [<span class="string">'-21'</span>, <span class="string">'1'</span>]],</span><br><span class="line">        <span class="string">'2'</span>: [[<span class="string">'a'</span>, <span class="string">'a'</span>], [<span class="string">'A'</span>, <span class="string">'a'</span>], [<span class="string">'Z'</span>, <span class="string">'z'</span>], [<span class="string">'0'</span>, <span class="string">'0'</span>], [<span class="string">'Q'</span>, <span class="string">'q'</span>]],</span><br><span class="line">        <span class="string">'3'</span>: [[<span class="string">'12/14/16\n10/10/15'</span>, <span class="string">'10/10/15'</span>], [<span class="string">'13/12/16\n10/10/15'</span>, <span class="string">'-1'</span>]],</span><br><span class="line">        <span class="string">'4'</span>: [[<span class="string">'1 2 3 4'</span>, <span class="string">'4 1'</span>]],</span><br><span class="line">        <span class="string">'5'</span>: [[<span class="string">'3 4 5'</span>, <span class="string">'1\n1'</span>], [<span class="string">'1.5 1.5 1.5'</span>, <span class="string">'1\n0'</span>], [<span class="string">'0 0 0'</span>, <span class="string">'0\n0'</span>], [<span class="string">'-3 -4 -5'</span>, <span class="string">'0\n0'</span>]],</span><br><span class="line">        <span class="string">'6'</span>: [[<span class="string">'2019 1 1'</span>, <span class="string">'1'</span>], [<span class="string">'1900 3 1'</span>, <span class="string">'60'</span>], [<span class="string">'2000 3 1'</span>, <span class="string">'61'</span>]],</span><br><span class="line">        <span class="string">'7'</span>: [[<span class="string">'1 2 3 4 5 6 7 8 9 10'</span>, <span class="string">'1 1\n'</span>], [<span class="string">'89 56 23 14 789 54 1223 78 12 65'</span>, <span class="string">'12 9\n'</span>], [<span class="string">'3 2 1 1 5 6 7 8 9 10'</span>, <span class="string">'1 3\n'</span>]],</span><br><span class="line">        <span class="string">'8'</span>:[[<span class="string">'1 2 3 4 5 6 7 8 9 10'</span>, <span class="string">'55.00 5.50\n'</span>],[<span class="string">'1 1 1 1 1 1 1 1 1 1'</span>, <span class="string">'10.00 1.00\n'</span>],[<span class="string">'0.6798 0.5958 0.5754 0.4854 0.3895 0.2901 0.1942 0.1053 0.045 0.003'</span>,<span class="string">'3.40 0.34\n'</span>]],</span><br><span class="line">        <span class="string">'9'</span>:[[<span class="string">'1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n5 1 2 3 4'</span>,<span class="string">'15 15 15 15 15\n3.00 3.00 3.00 3.00 3.00\n3.00 3.00 3.00 3.00 3.00\n5 5 5 5 5\n1 1 1 1 1'</span>],[<span class="string">'24 14 8 0 46\n36 20 20 20 96\n34 20 20 2 76\n40 20 20 18 98\n36 20 20 20 96'</span>,<span class="string">'92 192 152 196 192\n18.40 38.40 30.40 39.20 38.40\n34.00 18.80 17.60 12.00 82.40\n40 20 20 20 98\n24 14 8 0 46'</span>]],</span><br><span class="line">        <span class="string">'10'</span>:[[<span class="string">'ASJFKLSJFLSJFLSJFIIQJKZVNIRUQ'</span>,<span class="string">'13\n'</span>],[<span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXY'</span>,<span class="string">'25\n'</span>],[<span class="string">'ONNSISSTUPID'</span>,<span class="string">'8\n'</span>]],</span><br><span class="line">        <span class="string">'11'</span>:[[<span class="string">'dzldzldzl\nd'</span>,<span class="string">'3\n'</span>],[<span class="string">'13757769913\n3'</span>,<span class="string">'2\n'</span>],[<span class="string">'2302018dzllp\nl'</span>,<span class="string">'2\n'</span>],[<span class="string">'QCHZK\nq'</span>,<span class="string">'0\n'</span>]],</span><br><span class="line">        <span class="string">'12'</span>:[[<span class="string">'ASJFKLSJFLSJFLSJFIIQJKZVNIRUQ'</span>,<span class="string">'ASJFKLSJFLSJFLSJFIIQJKZVNIRUQ\n'</span>],[<span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXY'</span>,<span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXY\n'</span>]]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">not</span> question <span class="keyword">in</span> question_list):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> test_data <span class="keyword">in</span> question_list[question]:</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> run(oname, test_data[<span class="number">0</span>], test_data[<span class="number">1</span>])):</span><br><span class="line">            print(test_data[<span class="number">0</span>])</span><br><span class="line">            print(test_data[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(data)</span>:</span></span><br><span class="line">    f = open(os.path.join(dir, <span class="string">'result.json'</span>), <span class="string">'r'</span>)</span><br><span class="line">    old_data = json.loads(f.read()[<span class="number">9</span>:<span class="number">-1</span>])</span><br><span class="line">    f.close()</span><br><span class="line">    print(data)</span><br><span class="line">    old_data.append(data)</span><br><span class="line">    f = open(os.path.join(dir, <span class="string">'result.json'</span>), <span class="string">'w'</span>)</span><br><span class="line">    f.write(<span class="string">'callback('</span>+json.dumps(old_data) + <span class="string">')'</span>)</span><br><span class="line">    f.close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    os.chdir(dir)</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">        homework_dir = os.path.join(dir, <span class="string">'homework2'</span>)</span><br><span class="line">        edit(homework_dir)</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">            cname = generate(homework_dir)</span><br><span class="line">            <span class="keyword">if</span>(cname == <span class="string">''</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            res = re.search(<span class="string">r'^1-([0-9]&#123;14&#125;)-([0-9]+)\(([0-9]+)\)'</span>, cname)</span><br><span class="line">            <span class="keyword">if</span>(res):</span><br><span class="line">                date = res.group(<span class="number">1</span>)</span><br><span class="line">                xmuid = res.group(<span class="number">2</span>)</span><br><span class="line">                question = res.group(<span class="number">3</span>)</span><br><span class="line">            cname = os.path.join(homework_dir, cname)</span><br><span class="line">            status = <span class="string">'0'</span></span><br><span class="line">            <span class="keyword">if</span> build(cname, <span class="string">'raw.o'</span>):</span><br><span class="line">                <span class="keyword">if</span>(test(<span class="string">'raw.o'</span>, question)):</span><br><span class="line">                    status = <span class="string">'1'</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    status = <span class="string">'3'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                status = <span class="string">'2'</span></span><br><span class="line">            write(&#123;<span class="string">'date'</span>: date[:<span class="number">8</span>], <span class="string">'time'</span>: date[<span class="number">8</span>:<span class="number">10</span>] + <span class="string">':'</span> + date[<span class="number">10</span>:<span class="number">12</span>] + <span class="string">':'</span> + date[<span class="number">12</span>:<span class="number">14</span>],</span><br><span class="line">                   <span class="string">'xmuid'</span>: xmuid, <span class="string">'question'</span>: question, <span class="string">'status'</span>: status&#125;)</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
          <category> xmu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> c </tag>
            
            <tag> oj </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 book list</title>
      <link href="/blog/2020/01/01/2020-book-list/"/>
      <url>/blog/2020/01/01/2020-book-list/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a class="header-anchor" href="#写在前面">#</a>写在前面</h3><a id="more"></a><h3 id="三月"><a class="header-anchor" href="#三月">#</a>三月</h3><ul><li><a href="https://book.douban.com/subject/3533221/" target="_blank" rel="noopener">《非暴力沟通》</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> book </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx多域名跨域</title>
      <link href="/blog/2019/12/21/nginx-multiple-domains/"/>
      <url>/blog/2019/12/21/nginx-multiple-domains/</url>
      
        <content type="html"><![CDATA[<p>因为需要可能会允许服务器跨域交互数据，所以要设置允许多域名跨域。</p><a id="more"></a><h2 id="通用方法"><a class="header-anchor" href="#通用方法">#</a>通用方法</h2><p>打开 nginx.conf，在 http 里加入如下语句：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Origin *;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Headers X-Requested-With;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>即可。只是这样的方式安全性很差，但像下面的设置方式不被浏览器允许：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Origin domain1;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Origin domain2;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Headers X-Requested-With;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浏览器只允许一个 <code>Access-Control-Allow-Origin</code> 字段。</p><h2 id="解决方法"><a class="header-anchor" href="#解决方法">#</a>解决方法</h2><p>将 <code>add_header Access-Control-Allow-Origin</code> 语句放置在如下位置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Headers X-Requested-With;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line">    ...</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ \.php($|/)</span> &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="attribute">if</span> (<span class="variable">$http_origin</span> <span class="regexp">~* "^domain1$"</span> ) &#123;</span><br><span class="line">                <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="variable">$http_origin</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="attribute">if</span> (<span class="variable">$http_origin</span> <span class="regexp">~* "^domain2$"</span> ) &#123;</span><br><span class="line">                <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="variable">$http_origin</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完。</p><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="https://serverfault.com/questions/350330/nginx-add-header-adding-multiple-headers" target="_blank" rel="noopener">NGINX add_header, adding multiple headers</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> multiple domains </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言编程注意事项</title>
      <link href="/blog/2019/12/11/c-tips/"/>
      <url>/blog/2019/12/11/c-tips/</url>
      
        <content type="html"><![CDATA[<p>最近解答了好多疑问，对大家的期末考试十分堪忧啊</p><center><p><img src="//onns.xyz/blog/image/1_180417102937_1.jpg" alt=""></p></center><p>答应我，下面这些错误不要再犯了好吗。</p><a id="more"></a><h2 id="一些小的知识点"><a class="header-anchor" href="#一些小的知识点">#</a>一些小的知识点</h2><ul><li>数组定义时必须指定固定常数的长度，不能使用变量。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 错误示例</span></span><br><span class="line"><span class="keyword">int</span> n=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确示例</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br></pre></td></tr></table></figure></li></ul><h2 id="变量在使用前，一定要初始化"><a class="header-anchor" href="#变量在使用前，一定要初始化">#</a>变量在使用前，一定要初始化</h2><p><strong>变量在使用前，一定要初始化！</strong><br><strong>变量在使用前，一定要初始化！</strong><br><strong>变量在使用前，一定要初始化！</strong></p><p>举个 🌰：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">min</span> = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">min</span> &gt; a[i][j])</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">min</span> = a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是一个很简单的求 <code>a[i][*]</code> 中最小值的方法，但是 <code>min</code> 在一轮循环后 <code>未被初始化为0</code>，这样就会导致后面的所有 <code>min</code> 错误，正确的写法如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">min</span> = <span class="number">10000</span>;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">min</span> &gt; a[i][j])</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">min</span> = a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一个很容易被人忽视的点，再举个例子，我想得到数组最小的值及其所在的位置：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="built_in">min</span>,index;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">min</span> = a[i][<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">min</span> &gt; a[i][j])</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">min</span> = a[i][j];</span><br><span class="line">      index = j + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种错误很隐蔽，因为只有当碰巧  <code>a[i][0]</code> 最小的时候才会出错，因为 <code>index</code> 没被初始化为 <code>0</code>。</p><p>这种同时带了多个值的情况，所有的值都要初始化，很容易漏掉，需要注意。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="built_in">min</span>,index;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">min</span> = a[i][<span class="number">0</span>];</span><br><span class="line">  <span class="comment">//同时对index进行赋值</span></span><br><span class="line">  index = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">min</span> &gt; a[i][j])</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">min</span> = a[i][j];</span><br><span class="line">      index = j + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="书写格式要规范"><a class="header-anchor" href="#书写格式要规范">#</a>书写格式要规范</h2><h3 id="合理使用tab缩进"><a class="header-anchor" href="#合理使用tab缩进">#</a>合理使用tab缩进</h3><p>虽然C语言是写给机器的语言，不论你写的多乱机器都能识别，但当你程序出现错误要查错的时候，良好的缩进习惯可以帮你快速地阅读代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;<span class="keyword">float</span> avr;</span><br><span class="line">avr=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">sum=sum+a[i][j]; </span><br><span class="line">avr=sum/<span class="number">5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f "</span>,avr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">float</span> avr;</span><br><span class="line">  avr = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    sum = sum + a[i][j];</span><br><span class="line">  avr = sum / <span class="number">5</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%.2f "</span>, avr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="合理使用花括号"><a class="header-anchor" href="#合理使用花括号">#</a>合理使用花括号{}</h3><p>在C语言里 <code>for</code> <code>while</code> 等循环可以接单个语句达到循环的作用，如下段代码所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">  sum = sum + a[i][j];</span><br></pre></td></tr></table></figure><p>假如我们需要在循环里做些别的事情，比如我突然要记录 <code>i</code> 的值，惯性思维的改法如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">  sum = sum + a[i][j];</span><br><span class="line">  index = i;</span><br></pre></td></tr></table></figure><p>乍一看没有任何问题，但实际上这个 <code>i</code> 的值固定为 <code>5</code>。<br>所以一定要合理使用 <code>{}</code>，不要因为这种错误平白浪费时间。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">  sum = sum + a[i][j];</span><br><span class="line">  index = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> xmu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C程序设计基础-第二次作业</title>
      <link href="/blog/2019/12/05/c-homework2/"/>
      <url>/blog/2019/12/05/c-homework2/</url>
      
        <content type="html"><![CDATA[<h2 id="作业要求"><a class="header-anchor" href="#作业要求">#</a>作业要求</h2><ul><li>文件命名格式:     <code>学号(题目).cpp</code></li><li>文件命名样例:     <code>23020181154229(7).cpp</code></li><li>文件上传地址:     <a href="https://inbox.weiyun.com/5usbRaL" target="_blank" rel="noopener">https://inbox.weiyun.com/5usbRaL</a></li><li>作业结果查看:     <a href="http://onns.xyz/s/ctest/">http://onns.xyz/s/ctest/</a></li><li>作业截止日期:     <code>2019-12-17 23:59:59</code></li></ul><h2 id="注意事项"><a class="header-anchor" href="#注意事项">#</a>注意事项</h2><ol><li>可以重复提交。</li><li>注意文件命名里的括号是英文的括号不是中文的。</li><li>题号按照文档中的题号<strong>7-12</strong>。</li><li>文件提交.c或.cpp文件，不要压缩，六道题分别发送。</li><li><strong>测试结果页面</strong>黄色代表未通过所有测试，红色代表编译未通过，绿色代表通过。</li><li>按照文档的要求输入输出，不要自己加提示语句，不然会按照错误算的。</li><li>测试结果已经加了时间，如果发现自己上传了上面还没显示，表面文件命名错误了，仔细核对一下命名格式。</li><li><strong>测试结果页面</strong>学号下的输入框可以输入自己的学号筛选，方便查看所有题目的通过情况。</li><li>判断日期非法不用考虑闰年，只需考虑1月天数不能大于31天，2月不能大于29天…月份不能大于12这种。</li><li>建议大家写完一道题之后就上传，这样就知道如何通过测试系统的测试，因为要按照文档的要求输入输出。</li><li>大家交完之后最后检查一下自己是不是12道都提交正确了，比如那种学号少打一位的同学，到时候可能要算你没提交了。</li></ol><a id="more"></a><h2 id="作业内容"><a class="header-anchor" href="#作业内容">#</a>作业内容</h2><h3 id="题目7"><a class="header-anchor" href="#题目7">#</a>题目7</h3><p>输入一维整型数组a(长度为10)的各元素值，求数组中最小元素的值及其在数组中的位置。</p><ul><li>每行输入、输出的数字间用空格（“ ”）分隔。</li><li>如果最小的元素有多个，输出第一次出现的位置。</li></ul><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8 9 7 1 6 5 3 4 2 10</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 4</span><br></pre></td></tr></table></figure><h3 id="题目8"><a class="header-anchor" href="#题目8">#</a>题目8</h3><p>输入一维实型数组a(长度为10)的各元素值，求数组中所有元素之和（保留两位小数）及其平均值（保留两位小数）。</p><ul><li>每行输入、输出的数字间用空格（“ ”）分隔。</li></ul><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 6 7 8 9 10</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">55.00 5.50</span><br></pre></td></tr></table></figure><h3 id="题目9"><a class="header-anchor" href="#题目9">#</a>题目9</h3><p>编写程序读取一个5X5的整数数组，然后显示出每行的和与每列的和。进一步地，假设输入每个学生5门测验的成绩，有5个学生。然后计算每个学生的总分和平均分，以及每门测验的平均分、最高分和最低分。</p><ul><li>输入分为五行五列，每行代表一门成绩，每列代表一名学生。</li><li>输出分为五行五列，第一行为每个学生的总分，第二行为每个学生的平均分（保留两位小数），第三行为每门测验的平均分（保留两位小数），第四行为每门测验的最高分，第五行为每门测验的最低分。</li><li>每行输入、输出的数字间用空格（“ ”）分隔。</li><li><del>每行和每行之间不要有多余的空格。（考试的时候为人工判卷，不会过分苛求这些细节，但是希望大家平时可以注意到这些细节，毕竟类比下来，算数字哪怕四舍五入差了一点点也会是错误的。）</del> 不要求大家这一点了，可以忽略。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一个错误的样例</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, b[i]);</span><br><span class="line"></span><br><span class="line">会输出:</span><br><span class="line"><span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]</span><br><span class="line">结尾多输出一个空格</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个正确的样例</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, b[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, b[i]);</span><br><span class="line"></span><br><span class="line">会输出:</span><br><span class="line"><span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span>[空格]<span class="number">15</span></span><br><span class="line">理想结果</span><br></pre></td></tr></table></figure><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5</span><br><span class="line">2 3 4 5 1</span><br><span class="line">3 4 5 1 2</span><br><span class="line">4 5 1 2 3</span><br><span class="line">5 1 2 3 4</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">15 15 15 15 15</span><br><span class="line">3.00 3.00 3.00 3.00 3.00</span><br><span class="line">3.00 3.00 3.00 3.00 3.00</span><br><span class="line">5 5 5 5 5</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure><h3 id="题目10"><a class="header-anchor" href="#题目10">#</a>题目10</h3><p>输入一个由大写字母组成的字符串（长度小于100），求字符串中包含了几个不同的字母。</p><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AABBBCD</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="题目11"><a class="header-anchor" href="#题目11">#</a>题目11</h3><p>输入一字符串（长度小于100）和一个字符，统计出字符在字符串中出现的次数。</p><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AABBBCD</span><br><span class="line">A</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="题目12"><a class="header-anchor" href="#题目12">#</a>题目12</h3><p>不要调用strcpy函数，把字符数组str2中的字符串（长度小于100）复制到字符数组str1中。</p><p>Test case:<br>Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCDEFG</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCDEFG</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> xmu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言中float的精度问题</title>
      <link href="/blog/2019/11/06/float-in-c/"/>
      <url>/blog/2019/11/06/float-in-c/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a class="header-anchor" href="#问题">#</a>问题</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> a = <span class="number">123456789</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%f"</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码的输出结果为：<code>123456792.000000</code>，为什么？</p><a id="more"></a><h2 id="float存储方法"><a class="header-anchor" href="#float存储方法">#</a>float存储方法</h2><p>详细内容可以参考<a href="https://blog.csdn.net/qq_35057840/article/details/52430651" target="_blank" rel="noopener">这篇博客</a>，float型的数据占用32位的存储空间，其中：</p><ul><li>1位符号位</li><li>8位指数位</li><li>23位尾数位</li></ul><p>float型数据的存储方法为科学计数法，即 <code>110</code> 可以写成 <code>+ 1.1 * 10^2</code> 的形式，即：</p><ul><li><code>+</code> 为符号位 <code>正</code></li><li><code>2</code> 为指数位 <code>2次幂</code></li><li><code>1</code> 为尾数位 <code>.1</code> 而不是 <code>1.1</code></li></ul><p>这里注意一下，因为科学计数法是 <code>一个大于1小于等于9</code> 的小数(相对于十进制)，二进制的科学计数法的小数的整数部分一定是 <code>1</code>，故省略整数部分，故实际上尾数的有效位数是 <code>24</code> 位。</p><h2 id="数字分析"><a class="header-anchor" href="#数字分析">#</a>数字分析</h2><p>使用<a href="https://tool.lu/hexconvert/" target="_blank" rel="noopener">进制转换工具</a>得到 <code>123456789</code> 的二进制为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111010110111100110100010101</span><br></pre></td></tr></table></figure><p>一共 <code>27</code> 位，前面说过float的有效位数为 <code>23+1</code> 位，第 <code>24</code> 位要根据 <code>就近原则</code><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> 确定是 <code>0</code> 还是 <code>1</code>，其余部位补 <code>0</code>，即：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111010110111100110100011000</span><br></pre></td></tr></table></figure><p>得到结果为 <code>123456792</code>。</p><h2 id="程序验证"><a class="header-anchor" href="#程序验证">#</a>程序验证</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">num是要展示的float数,bin是保存所有二进制位的数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getFloatBin</span><span class="params">(<span class="keyword">float</span> num, <span class="keyword">char</span> bin[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">1</span>;              <span class="comment">//用来按位与操作</span></span><br><span class="line">    <span class="keyword">int</span> *f = (<span class="keyword">int</span> *)(&amp;num); <span class="comment">//将float的解释成int，即float的地址转成int*</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//从最高位开始按位与，如果为1，则bin[i]=1，如果为0，则bin[i]=0</span></span><br><span class="line">        <span class="comment">//这里没有将bin存成字符，而是数字1 0</span></span><br><span class="line">        bin[i] = (*f) &amp; (t &lt;&lt; <span class="number">31</span> - i) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> test = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">32</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"测试float数为:%f\n"</span>, test);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"二进制表示为:"</span>);</span><br><span class="line">    getFloatBin(test, c);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, c[i]);</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">", "</span>);</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">8</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">", "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码摘自<a href="https://blog.csdn.net/wayway0554/article/details/84111889" target="_blank" rel="noopener">在C语言中将float(浮点数)的二进制表示打印出来</a>，结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">测试<span class="built_in">float</span>数为:123456792.000000</span><br><span class="line">二进制表示为:0, 10011001, 11010110111100110100011</span><br></pre></td></tr></table></figure><p>与理论结果比对一致。</p><h2 id="结语"><a class="header-anchor" href="#结语">#</a>结语</h2><p>感谢舍友和老辣鸡们的群策群力！最终初步解决了问题～</p><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="https://blog.csdn.net/leho666/article/details/89204964" target="_blank" rel="noopener">C语言中，float在内存中的储存方式</a></li><li><a href="https://blog.csdn.net/qq_35057840/article/details/52430651" target="_blank" rel="noopener">C语言浮点数存储方式</a></li><li><a href="https://blog.csdn.net/wayway0554/article/details/84111889" target="_blank" rel="noopener">在C语言中将float(浮点数)的二进制表示打印出来</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>”就近原则“无法找到相关文档说明，只能根据测试数据进行推测，准确性有待考究。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> c </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云动态修改域名解析</title>
      <link href="/blog/2019/10/23/aliyun-ddns/"/>
      <url>/blog/2019/10/23/aliyun-ddns/</url>
      
        <content type="html"><![CDATA[<h2 id="20211007-更新"><a class="header-anchor" href="#20211007-更新">#</a>20211007 更新</h2><p>python2 版本太古老了，又弄了一个 golang 版本的，移植性更强：<a href="https://github.com/onns/ddns" target="_blank" rel="noopener">https://github.com/onns/ddns</a></p><p>主要用到两个 api：</p><ul><li><a href="https://next.api.aliyun.com/api/Alidns/2015-01-09/UpdateDomainRecord?params=%7B%7D" target="_blank" rel="noopener">https://next.api.aliyun.com/api/Alidns/2015-01-09/UpdateDomainRecord?params={}</a></li><li><a href="https://next.api.aliyun.com/api/Alidns/2015-01-09/DescribeDomainRecords?params=%7B%7D" target="_blank" rel="noopener">https://next.api.aliyun.com/api/Alidns/2015-01-09/DescribeDomainRecords?params={}</a></li></ul><h2 id="20210215-更新"><a class="header-anchor" href="#20210215-更新">#</a>20210215 更新</h2><p>大概写这个脚本的人也不知道原来会有一个个人用户的域名解析记录会有几十个，导致代码找不到解析记录…<br>修改了脚本，使得每次获取的记录数更多，如果还是找不到，自己去看一下翻页的方法吧，阿里云的文档压根儿没有，我也是醉了。</p><h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>宿舍放着一台换下来的旧手机 Mi5，平时除了双开好像就没用过，抱着闲置物品再利用的原则，在上面装了个 centos 系统，但由于宿舍的宽带是动态 ip 的，如果每次都要手动重新解析域名，那也太麻烦了。于是想设定定时任务自动解析，折腾一番，记录之。</p><a id="more"></a><h2 id="安装环境"><a class="header-anchor" href="#安装环境">#</a>安装环境</h2><h3 id="pip"><a class="header-anchor" href="#pip">#</a>pip</h3><p>因为是最小化安装所以 pip 都没装…<br>直接<a href="https://pip.pypa.io/en/stable/installing/" target="_blank" rel="noopener">官网</a>安装即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><h3 id="gcc"><a class="header-anchor" href="#gcc">#</a>gcc</h3><p>是的 gcc 也没有，要自己装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc -y</span><br></pre></td></tr></table></figure><h3 id="aliyun-sdk"><a class="header-anchor" href="#aliyun-sdk">#</a>aliyun-sdk</h3><p>阿里云已经把框架写好了，我们直接调用就行，省去了自己造轮子的麻烦。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install aliyun-python-sdk-alidns</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">#</a>代码</h2><p>阿里云已经把框架写好了，我们直接调用就行，省去了自己造轮子的麻烦。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python2</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> aliyunsdkcore <span class="keyword">import</span> client</span><br><span class="line"><span class="keyword">from</span> aliyunsdkalidns.request.v20150109 <span class="keyword">import</span> DescribeDomainRecordsRequest</span><br><span class="line"><span class="keyword">from</span> aliyunsdkalidns.request.v20150109 <span class="keyword">import</span> DescribeDomainRecordInfoRequest</span><br><span class="line"><span class="keyword">from</span> aliyunsdkalidns.request.v20150109 <span class="keyword">import</span> UpdateDomainRecordRequest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 阿里云 Access Key ID</span></span><br><span class="line">access_key_id = <span class="string">""</span></span><br><span class="line"><span class="comment"># 阿里云 Access Key Secret</span></span><br><span class="line">access_key_secret = <span class="string">""</span></span><br><span class="line"><span class="comment"># 阿里云 一级域名</span></span><br><span class="line">rc_domain = <span class="string">'onns.xyz'</span></span><br><span class="line"><span class="comment"># 阿里云 二级域名前缀</span></span><br><span class="line">rc_subdomain = <span class="string">'xm'</span></span><br><span class="line"><span class="comment"># 返回内容格式</span></span><br><span class="line">rc_format = <span class="string">'json'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_records</span><span class="params">(dns_domain)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">获取域名的解析信息</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">clt = client.AcsClient(access_key_id, access_key_secret, <span class="string">'cn-hangzhou'</span>)</span><br><span class="line">request = DescribeDomainRecordsRequest.DescribeDomainRecordsRequest()</span><br><span class="line">request.set_DomainName(dns_domain)</span><br><span class="line">request.set_accept_format(rc_format)</span><br><span class="line">request.set_PageSize(<span class="number">100</span>)</span><br><span class="line">result = clt.do_action(request)</span><br><span class="line">result = json.JSONDecoder().decode(result)</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_old_ip</span><span class="params">(record_id)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">根据域名解析记录ID查询上一次的IP记录</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">clt = client.AcsClient(access_key_id, access_key_secret, <span class="string">'cn-hangzhou'</span>)</span><br><span class="line">request = DescribeDomainRecordInfoRequest.DescribeDomainRecordInfoRequest()</span><br><span class="line">request.set_RecordId(record_id)</span><br><span class="line">request.set_accept_format(rc_format)</span><br><span class="line">result = clt.do_action(request)</span><br><span class="line">result = json.JSONDecoder().decode(result)</span><br><span class="line">result = result[<span class="string">'Value'</span>]</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_dns</span><span class="params">(dns_rr, dns_type, dns_value, dns_record_id, dns_ttl, dns_format)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">更新阿里云域名解析记录信息</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">clt = client.AcsClient(access_key_id, access_key_secret, <span class="string">'cn-hangzhou'</span>)</span><br><span class="line">request = UpdateDomainRecordRequest.UpdateDomainRecordRequest()</span><br><span class="line">request.set_RR(dns_rr)</span><br><span class="line">request.set_Type(dns_type)</span><br><span class="line">request.set_Value(dns_value)</span><br><span class="line">request.set_RecordId(dns_record_id)</span><br><span class="line">request.set_TTL(dns_ttl)</span><br><span class="line">request.set_accept_format(dns_format)</span><br><span class="line">result = clt.do_action(request)</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_my_publick_ip</span><span class="params">()</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">获取当前主机的外网IP</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">u = urllib2.urlopen(<span class="string">'http://members.3322.org/dyndns/getip'</span>)</span><br><span class="line"><span class="keyword">return</span> u.read().strip(<span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">except</span> HTTPError <span class="keyword">as</span> e:</span><br><span class="line">print(<span class="string">'getMyIp:'</span>, e)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_file</span><span class="params">(new_ip)</span>:</span></span><br><span class="line">time_now = datetime.now().strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">write_log = open(<span class="string">'aliyun_ddns.txt'</span>, <span class="string">'a'</span>)</span><br><span class="line">write_log.write(time_now + <span class="string">' '</span> + str(new_ip) + <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment"># 之前的解析记录</span></span><br><span class="line">old_ip = <span class="string">""</span></span><br><span class="line">record_id = <span class="string">""</span></span><br><span class="line">dns_records = check_records(rc_domain)</span><br><span class="line"><span class="keyword">for</span> record <span class="keyword">in</span> dns_records[<span class="string">"DomainRecords"</span>][<span class="string">"Record"</span>]:</span><br><span class="line"><span class="keyword">if</span> record[<span class="string">"Type"</span>] == <span class="string">'A'</span> <span class="keyword">and</span> record[<span class="string">"RR"</span>] == rc_subdomain:</span><br><span class="line">record_id = record[<span class="string">"RecordId"</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">"%s.%s recordID is %s"</span> % (rc_subdomain, rc_domain, record_id)</span><br><span class="line"><span class="keyword">if</span> record_id != <span class="string">""</span>:</span><br><span class="line">old_ip = get_old_ip(record_id)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> record_id == <span class="string">""</span>:</span><br><span class="line">exit(<span class="string">"Record ID error!"</span>)</span><br><span class="line">old_ip = get_old_ip(record_id)</span><br><span class="line"><span class="comment"># 获取主机当前的IP</span></span><br><span class="line">now_ip = get_my_publick_ip()</span><br><span class="line"><span class="keyword">print</span> <span class="string">"now host ip is %s, dns ip is %s"</span> % (now_ip, old_ip)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> old_ip == now_ip:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"The specified value of parameter Value is the same as old"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">rc_rr = rc_subdomain        <span class="comment"># 解析记录</span></span><br><span class="line">rc_type = <span class="string">'a'</span>               <span class="comment"># 记录类型, DDNS填写A记录</span></span><br><span class="line">rc_value = now_ip           <span class="comment"># 新的解析记录值</span></span><br><span class="line">rc_record_id = record_id    <span class="comment"># 记录ID</span></span><br><span class="line">rc_ttl = <span class="string">'600'</span>              <span class="comment"># 解析记录有效生存时间TTL,单位:秒</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> update_dns(rc_rr, rc_type, rc_value, rc_record_id, rc_ttl, rc_format)</span><br><span class="line"></span><br><span class="line">write_to_file(now_ip)</span><br></pre></td></tr></table></figure><p>代码拷贝自：<a href="https://www.vincents.cn/2017/03/27/aliyun-ddns/" target="_blank" rel="noopener">阿里云 DNS 动态解析</a>，略作修改。<br>这里只需要改前几行（15-22 行）的值即可，阿里云的<code>accesskey</code>从<a href="https://usercenter.console.aliyun.com/#/manage/ak" target="_blank" rel="noopener">这里</a>获取。</p><h2 id="执行"><a class="header-anchor" href="#执行">#</a>执行</h2><p>可以手动先执行一下命令看下结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python ddns.py</span><br><span class="line"></span><br><span class="line">xm.onns.xyz recordID is XXXXXXXXXXXXXXX</span><br><span class="line">now host ip is XXXXXXXXXXXXXXX, dns ip is XXXXXXXXXXXXXXX</span><br><span class="line">&#123;<span class="string">"RecordId"</span>:<span class="string">"XXXXXXXXXXXXXXX"</span>,<span class="string">"RequestId"</span>:<span class="string">"XXXXXXXXXXXXXXX"</span>&#125;</span><br></pre></td></tr></table></figure><p>接着设置 crontab 定时任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加如下一条记录，为了避免错误，写绝对地址。</span></span><br><span class="line">*/10 * * * * /usr/bin/python /home/android/ddns.py /dev/null 1&gt;/dev/null</span><br></pre></td></tr></table></figure><p>很尴尬的是，不仅仅是最小化安装，连一些 service 的服务都没有写入，所以要手动打开…<code>crontab</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/sbin/crond -s</span><br></pre></td></tr></table></figure><p>然后就可以愉快的使（wan）用（shua）了。</p><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="https://www.vincents.cn/2017/03/27/aliyun-ddns/" target="_blank" rel="noopener">阿里云 DNS 动态解析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ddns </tag>
            
            <tag> aliyun </tag>
            
            <tag> python </tag>
            
            <tag> linux </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS下超好用的软件</title>
      <link href="/blog/2019/09/08/software-for-mac/"/>
      <url>/blog/2019/09/08/software-for-mac/</url>
      
        <content type="html"><![CDATA[<h2 id="日常"><a class="header-anchor" href="#日常">#</a>日常</h2><ul><li><a href="https://justgetflux.com/" target="_blank" rel="noopener">f.lux</a><br>一个自动调节屏幕显示的工具，可以根据日升日落时间调节护眼模式。</li></ul><h2 id="效率"><a class="header-anchor" href="#效率">#</a>效率</h2><ul><li>OmniGraffle</li></ul><h2 id="娱乐"><a class="header-anchor" href="#娱乐">#</a>娱乐</h2><ul><li>VLC</li></ul>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Teamviewer商用解决方案</title>
      <link href="/blog/2019/08/07/solution-for-teamviewer-commercial-use/"/>
      <url>/blog/2019/08/07/solution-for-teamviewer-commercial-use/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>测试了很多远程连接软件，发现还是teamviewer好用，但是莫名其妙被检测成商业用户，不能使用，记录解决方案。</p><a id="more"></a><h2 id="申诉"><a class="header-anchor" href="#申诉">#</a>申诉</h2><p>Teamviewer官方提供了申诉渠道，通过 <a href="https://teamviewer.com/en/support/personal-use-verification/" target="_blank" rel="noopener">TeamViewer Personal Use Verification</a>，提供日志信息即可申诉，会通过邮件回复申诉结果，能不能恢复全凭运气。</p><p>成功例子：</p><blockquote><p>Dear User,</p><p>Thank you for your email and query regarding TeamViewer.</p><p>We have gone ahead and reset your device back to private use.</p><p>For the changes to take effect, please restart your TeamViewer application via “Connection -&gt; Exit TeamViewer”.</p><p>Please keep in mind:</p><ul><li>TeamViewer is only free for private, non-commercial use.</li><li>If the device is used in an office or commercial setting, you will be blocked again and will need to buy a license to continue.</li><li>The partners you connect with also need to be using either a private or a licensed version of the software.</li></ul></blockquote><p>失败例子：</p><blockquote><p>Dear TeamViewer User,</p><p>Thank you for your request regarding being unblocked from using the free version of TeamViewer. After reviewing the information provided to us, we were unable to confirm that the submitted ID is being used privately.</p><p>Requiring commercial users to purchase a license is also part of our effort to maintain the free version, and to therefore make help accessible to everyone. The free version is for people who are using it to help family and friends.</p></blockquote><p>上面两封都是我收到的邮件，╮(╯▽╰)╭</p><h2 id="mac下解决方案"><a class="header-anchor" href="#mac下解决方案">#</a>Mac下解决方案</h2><p>参考 <a href="https://www.590103.idv.tw/blog/%E8%A7%A3%E6%B1%BAmac%E7%89%88teamviewer%E5%80%8B%E4%BA%BA%E7%89%885%E5%88%86%E9%90%98%E6%96%B7%E7%B7%9A%E5%95%8F%E9%A1%8C#.XUqNcpMzZQK" target="_blank" rel="noopener">解決MAC版Teamviewer個人版5分鐘斷線問題</a>，下载运行即可，具体步骤如下：</p><ol><li>记住当前ID，关闭Teamviewer。</li><li>下载 <a href="https://gist.github.com/zhenhappy/3c808a198715978a38acf0ba44044ea6" target="_blank" rel="noopener">TeamViewer-14-id-changer-for-mac.py</a> 或 <a href="https://gist.github.com/zhovner/b1d72f3465c46e7b58a4ea42d625c3e8" target="_blank" rel="noopener">TeamViewer-id-changer.py</a>，第二个不适用于Teamviewer14，推荐第一个。</li><li>打开命令后，输入<code>sudo python TeamViewer-14-id-changer-for-mac.py</code>，点击回车。</li><li>重启电脑，发现ID改变，问题解决。</li></ol><h2 id="windows下解决方案"><a class="header-anchor" href="#windows下解决方案">#</a>Windows下解决方案</h2><p>参考 <a href="https://www.itread01.com/content/1546764964.html" target="_blank" rel="noopener">teamviewer被檢測為商業用途解決方法</a>。</p><h3 id="卸载"><a class="header-anchor" href="#卸载">#</a>卸载</h3>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> teamviewer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sign recognition lab report</title>
      <link href="/blog/2019/01/11/sign-recognition-lab-report/"/>
      <url>/blog/2019/01/11/sign-recognition-lab-report/</url>
      
        <content type="html"><![CDATA[<h2 id="实验报告"><a class="header-anchor" href="#实验报告">#</a>实验报告</h2><a id="more"></a><div class="row">    <embed src="//onns.xyz/blog/files/sign-recognition-lab-report.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer vision </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019 movie list</title>
      <link href="/blog/2019/01/01/2019-movie-list/"/>
      <url>/blog/2019/01/01/2019-movie-list/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a class="header-anchor" href="#写在前面">#</a>写在前面</h3><a id="more"></a><h3 id="一月"><a class="header-anchor" href="#一月">#</a>一月</h3>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>local feature lab report</title>
      <link href="/blog/2018/12/18/local-feature-lab-report/"/>
      <url>/blog/2018/12/18/local-feature-lab-report/</url>
      
        <content type="html"><![CDATA[<h2 id="问题分析"><a class="header-anchor" href="#问题分析">#</a>问题分析</h2><h3 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h3><p>该项目的目标是完成一个找到在不同的视角下拍摄的同一物体或场景中的相似之处的算法。我们主要实现的是一个简易版的SIFT算法。主要需要完成的是以下三个方面的内容：</p><ul><li><p>实现一个Harris角点检测算法</p></li><li><p>实现一个类似SIFT算法的局部特征描述算法</p></li><li><p>实现一个基于<code>比率测试</code>或<code>最近邻距离比测试</code>的局部特征匹配算法</p></li></ul><h3 id="数据集分析"><a class="header-anchor" href="#数据集分析">#</a>数据集分析</h3><p>以<code>NotreDame</code>数据为例，包含了两张同一物体的不同角度的图像，如<code>图1</code>所示。</p><center><p><img src="//onns.xyz/blog/image/921919841_a30df938f2_o.jpg" alt="数据图像"></p><p>图1 数据图像</p></center><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data</span><br><span class="line">├── NotreDame</span><br><span class="line">|   ├── 921919841_a30df938f2_o_to_4191453057_c86028ce1f_o.mat</span><br><span class="line">|   ├── 921919841_a30df938f2_o.jpg</span><br><span class="line">|   └── 4191453057_c86028ce1f_o.jpg</span><br><span class="line">├── ...</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="实验过程"><a class="header-anchor" href="#实验过程">#</a>实验过程</h2><h3 id="编程语言介绍"><a class="header-anchor" href="#编程语言介绍">#</a>编程语言介绍</h3><p>本实验所选择的编程语言为<code>Matlab</code>, 编程软件为<code>Matlab 2018b</code>.</p><h3 id="harris角点检测"><a class="header-anchor" href="#harris角点检测">#</a>Harris角点检测</h3><p>角点是一幅图像上最明显与重要的特征，角点检测的原理是利用角点在各个方向上的梯度值变化明显这一特性。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>选取的描述窗宽度为<code>16像素</code>，首先对图像进行高斯滤波，这一步是为了消除某些噪点对于接下来进行的检测的影响。<br>接着求在xx、yy和xy方向的梯度并进行高斯滤波。<br>最后得到Harris角点的响应值R。计算公式如<code>公示1</code>所示:</p><p>$$<br>R = det(M) - \alpha*trace(M)<br>\tag{1}<br>$$</p><p>其中$\alpha$为系数值，通常取值范围为0.04 ~ 0.06之间.<br>最后将得到的再进行过滤，保留那些重要的兴趣点。</p><p>运行结果如<code>图2</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181218-1.jpg" alt="Harris角点检测结果"></p><p>图2 Harris角点检测结果</p></center><h3 id="局部特征描述"><a class="header-anchor" href="#局部特征描述">#</a>局部特征描述</h3><p>局部特征描述我们运用一种类似SIFT算法的描述方法，我们设置的描述窗口的大小为<code>16*16</code>，接着将窗口划分成16个<code>4*4</code>的小窗口，在这些小窗口中找寻每个像素的主要梯度，然后将其归到0-360度按每45度一划分的8个方向之中。<br>然后对这些特征向量进行归一化处理，以消除光照等变化的影响。</p><h3 id="局部特征匹配"><a class="header-anchor" href="#局部特征匹配">#</a>局部特征匹配</h3><p>在得到特征向量之后，只需要通过计算向量的距离，就能够对特征点进行匹配。<br>具体的方法是算一个向量和来自另一个图的所有特征点的特征向量的欧式距离，然后取最近的一个特征向量进行匹配。<br>匹配结果如<code>图3</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181218-2.jpg" alt="局部特征匹配结果"></p><p>图3 局部特征匹配结果</p></center><h2 id="实验结果"><a class="header-anchor" href="#实验结果">#</a>实验结果</h2><p>成功实现了简单的图片相似点的寻找与匹配。在<code>Notre Dam</code>图像上获得了87%的准确率。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/jia20003/article/details/16908661" target="_blank" rel="noopener">图像处理之角点检测算法</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer vision </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Computational Intelligence Homework No.6</title>
      <link href="/blog/2018/12/10/2018-computational-intelligence-homework-no.6/"/>
      <url>/blog/2018/12/10/2018-computational-intelligence-homework-no.6/</url>
      
        <content type="html"><![CDATA[<h1 id="用人工神经网络求解旅行商-tsp-问题"><a class="header-anchor" href="#用人工神经网络求解旅行商-tsp-问题">#</a>用人工神经网络求解旅行商(TSP)问题</h1><h2 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h2><p>旅行商问题(Travelling Salesman Problem, 简记TSP, 亦称货郎担问题): 设有34个城市及其对应的经纬度坐标, 则问题是要找出遍访每个城市恰好一次的一条回路并使其路径长度为最短.</p><a id="more"></a><h2 id="算法设计"><a class="header-anchor" href="#算法设计">#</a>算法设计</h2><p>Hopfield神经网络是一种单层互相全连接的反馈型神经网络。每个神经元既是输入也是输出，网络中的每一个神经元都将自己的输出通过连接权传送给所有其它神经元，同时又都接收所有其它神经元传递过来的信息。即：网络中的神经元在t时刻的输出状态实际上间接地与自己t-1时刻的输出状态有关。神经元之间互连接，所以得到的权重矩阵将是对称矩阵。<br>同时，Hopfield神经网络成功引入能量函数的概念，使网络运行地稳定性判断有了可靠依据。基本的Hopfield神经网络是一个由非线性元件构成的全连接型单层递归系统。其状态变化可以用差分方程来表示。递归型网络的一个重要特点就是它具有稳定状态, 当网络达到稳定状态的时候，也就是它的能量函数达到最小的时候。这里的能量函数不是物理意义上的能量函数，而是在表达形式上与物理意义上的能量概念一致，即它表征网络状态的变化趋势，并可以依据Hopfield网络模型的工作运行规则不断地进行状态变化，最终能够到达具有某个极小值的目标函数。网络收敛就是指能量函数达到极小值。<br>如果把一个最优化在着递归信号，网络的状态是随时间的变化而变化的，其运动轨迹必然存在着稳定性的问题。这就是递归网络与前向网络在网络性能分析上最大的区别之一在使用递归网络时，必须对其稳定性进行专门的分析与讨论，合理选择网络的参数变化范围，才能确保递归网络的正常工作。<br>Hopfield神经网络模型有离散型和连续性两种，离散型适用于联想记忆，连续性适合处理优化问题。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>将TSP问题映射为神经网络动力系统可用以下步骤完成：</p><ol><li>将TSP问题的每一条可能路径用一换位矩阵表示，并给出相应的距离表示试；</li><li>将TSP问题的换位阵集合与由N个神经元构成的神经元阵列相对应；每一条路径所对应的换位阵的各元素与相应的神经元稳态输出对应；</li><li>找出一反应TSP约束优化问题的能连函数E；</li><li>求出使E取极小值的神经网络连接权重矩阵和偏置参数。</li></ol><h3 id="tsp的能量函数e"><a class="header-anchor" href="#tsp的能量函数e">#</a>TSP的能量函数E</h3>$$\begin{aligned}E = & \frac{A}{2}\sum^n_{x=1}\sum^n_{i=1}\sum^n_{j \ne 1}v_{xi}v_{xj} + \frac{B}{2}\sum^n_{i=1}\sum^n_{x=1}\sum^n_{y \ne x}v_{xi}v_{yi} \\& + \frac{C}{2}(\sum^n_{x=1}\sum^n_{i=1}v_{xi}-n)^2 +\frac{D}{2}\sum^n_{x=1}\sum^n_{y \ne x}\sum^n_{i=1}d_{xy}d_{xi}(v_{y,i+1}+v_{y,i-1})\end{aligned}\tag{1}$$<p>其中参数$ABCD$称为权值，前三项是满足TSP置换矩阵的约束条件，最后一项包含优化目标函数项.</p><h2 id="改进的tsp的能量函数e"><a class="header-anchor" href="#改进的tsp的能量函数e">#</a>改进的TSP的能量函数E</h2>$$\begin{aligned}E = & \frac{A}{2}\sum^n_{x=1}(\sum^n_{i=1}v_{xi}-1)^2+\frac{A}{2}\sum^n_{i=1}(\sum^n_{x=1}v_{xi}-1)^2 \\& + \frac{D}{2}\sum^n_{x=1}\sum^n_{y=1}\sum^n_{i=1}v_{xi}d_{xy}v_{y,i+1}\end{aligned}\tag{2}$$<h3 id="hopfield神经网络动态方程"><a class="header-anchor" href="#hopfield神经网络动态方程">#</a>Hopfield神经网络动态方程</h3>$$\begin{aligned}\frac{du_{xi}}{dt} = - \frac{\partial E}{\partial v_{xi}} =& -A(\sum^n_{i=1}v_{xi}-1)-A(\sum^n_{y=1}v_{yi}-1) \\& - D(\sum^n_{y=1}v_{xi}d_{xy}v_{y,i+1}\end{aligned}\tag{3}$$<h2 id="程序流程"><a class="header-anchor" href="#程序流程">#</a>程序流程</h2><p>程序流程如<code>图1</code>所示</p><center><div id="flowchart-0" class="flow-chart"></div><p>图1 程序流程图</p></center><h2 id="核心伪代码"><a class="header-anchor" href="#核心伪代码">#</a>核心伪代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(num_iter):</span><br><span class="line">    <span class="comment"># 利用动态方程计算du</span></span><br><span class="line">    du = calc_du(V, distance)</span><br><span class="line">    <span class="comment"># 由一阶欧拉法更新下一个时间的输入状态（电路的输入电压U）</span></span><br><span class="line">    U = calc_U(U, du, step)</span><br><span class="line">    <span class="comment"># 由sigmoid函数更新下一个时间的输出状态（电路的输出电压V）</span></span><br><span class="line">    V = calc_V(U, U0)</span><br><span class="line">    <span class="comment"># 计算当前网络的能量E</span></span><br><span class="line">    energys[n] = calc_energy(V, distance)</span><br><span class="line">    <span class="comment"># 检查路径的合法性</span></span><br><span class="line">    route, newV = check_path(V)</span><br><span class="line">    <span class="keyword">if</span> len(np.unique(route)) == N:</span><br><span class="line">        route.append(route[<span class="number">0</span>])</span><br><span class="line">        dis = calc_distance(route)</span><br><span class="line">        <span class="keyword">if</span> dis &lt; best_distance:</span><br><span class="line">            H_path = []</span><br><span class="line">            best_distance = dis</span><br><span class="line">            best_route = route</span><br><span class="line">            [H_path.append((route[i], route[i + <span class="number">1</span>]))</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(len(route) - <span class="number">1</span>)]</span><br><span class="line">            print(<span class="string">'第&#123;&#125;次迭代找到的次优解距离为：&#123;&#125;，能量为：&#123;&#125;，路径为：'</span></span><br><span class="line">            .format(n, best_distance, energys[n]))</span><br><span class="line">            [print(<span class="string">'['</span> + str(citys[v][<span class="number">0</span>]) + <span class="string">','</span> + str(citys[v][<span class="number">1</span>]) </span><br><span class="line">            + <span class="string">']'</span>, end=<span class="string">','</span> <span class="keyword">if</span> i &lt; len(best_route) - <span class="number">1</span> <span class="keyword">else</span> <span class="string">'\n'</span>)</span><br><span class="line">                <span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(best_route)]</span><br><span class="line"><span class="keyword">if</span> len(H_path) &gt; <span class="number">0</span>:</span><br><span class="line">    draw_H_and_E(citys, H_path, energys)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'没有找到最优解'</span>)</span><br></pre></td></tr></table></figure><h2 id="代码运行及测试"><a class="header-anchor" href="#代码运行及测试">#</a>代码运行及测试</h2><p>代码运行结果如<code>图2</code>所示.</p><center><p><img src="//onns.xyz/blog/image/20181210-1.png" alt="运行结果图"></p><p>图2 运行结果图</p></center><h2 id="结论"><a class="header-anchor" href="#结论">#</a>结论</h2><p>34个城市的最终结果为<code>18513.0361</code>公里。<br>Hopfield神经网络是求解TSP的一种优化网络算法。Hopfield神经网络通过神经动力学来映射生物神经网络，在参数设置合理的情况下，有可能找到真实最优解，比近似算法计算的效果要好。Hopfield神经网络比较依赖初始权值的设置，会受到初始输入状态和输出状态的随机性影响，不一定每一次都可以找到最优解，有可能找到的是不同的次优解。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://www.jianshu.com/p/30fdc835d5b3" target="_blank" rel="noopener">TSP问题—Hopfield神经网络算法</a></li></ul><p style="page-break-before: always"></p><h2 id="附录"><a class="header-anchor" href="#附录">#</a>附录</h2><h3 id="城市坐标"><a class="header-anchor" href="#城市坐标">#</a>城市坐标</h3><center id="city_list">城市坐标表</center><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">省份</th><th style="text-align:center">经度</th><th style="text-align:center">纬度</th></tr></thead><tbody><tr><td style="text-align:center">01</td><td style="text-align:center">北京</td><td style="text-align:center">116.4</td><td style="text-align:center">39.9</td></tr><tr><td style="text-align:center">02</td><td style="text-align:center">天津</td><td style="text-align:center">117.2</td><td style="text-align:center">39.12</td></tr><tr><td style="text-align:center">03</td><td style="text-align:center">河北</td><td style="text-align:center">114.52</td><td style="text-align:center">38.05</td></tr><tr><td style="text-align:center">04</td><td style="text-align:center">山西</td><td style="text-align:center">112.55</td><td style="text-align:center">37.87</td></tr><tr><td style="text-align:center">05</td><td style="text-align:center">内蒙古</td><td style="text-align:center">111.73</td><td style="text-align:center">40.83</td></tr><tr><td style="text-align:center">06</td><td style="text-align:center">辽宁</td><td style="text-align:center">123.43</td><td style="text-align:center">41.8</td></tr><tr><td style="text-align:center">07</td><td style="text-align:center">吉林</td><td style="text-align:center">125.32</td><td style="text-align:center">43.9</td></tr><tr><td style="text-align:center">08</td><td style="text-align:center">黑龙江</td><td style="text-align:center">126.53</td><td style="text-align:center">45.8</td></tr><tr><td style="text-align:center">09</td><td style="text-align:center">上海</td><td style="text-align:center">121.47</td><td style="text-align:center">31.23</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">江苏</td><td style="text-align:center">118.78</td><td style="text-align:center">32.07</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">浙江</td><td style="text-align:center">120.15</td><td style="text-align:center">30.28</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">安徽</td><td style="text-align:center">117.25</td><td style="text-align:center">31.83</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">福建</td><td style="text-align:center">119.3</td><td style="text-align:center">26.08</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">江西</td><td style="text-align:center">115.85</td><td style="text-align:center">28.68</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">山东</td><td style="text-align:center">116.98</td><td style="text-align:center">36.67</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">河南</td><td style="text-align:center">113.62</td><td style="text-align:center">34.75</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">湖北</td><td style="text-align:center">114.3</td><td style="text-align:center">30.6</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">湖南</td><td style="text-align:center">112.93</td><td style="text-align:center">28.23</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">广东</td><td style="text-align:center">113.27</td><td style="text-align:center">23.13</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">广西</td><td style="text-align:center">108.37</td><td style="text-align:center">22.82</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">海南</td><td style="text-align:center">108.37</td><td style="text-align:center">22.82</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">重庆</td><td style="text-align:center">106.55</td><td style="text-align:center">29.57</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">四川</td><td style="text-align:center">104.07</td><td style="text-align:center">30.67</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">贵州</td><td style="text-align:center">106.63</td><td style="text-align:center">26.65</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">云南</td><td style="text-align:center">102.72</td><td style="text-align:center">25.05</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">西藏</td><td style="text-align:center">91.13</td><td style="text-align:center">29.65</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">陕西</td><td style="text-align:center">108.93</td><td style="text-align:center">34.27</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">甘肃</td><td style="text-align:center">103.82</td><td style="text-align:center">36.07</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">青海</td><td style="text-align:center">101.78</td><td style="text-align:center">36.62</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">宁夏</td><td style="text-align:center">106.28</td><td style="text-align:center">38.47</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">新疆</td><td style="text-align:center">87.62</td><td style="text-align:center">43.82</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">台北</td><td style="text-align:center">121.52</td><td style="text-align:center">25.03</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">香港</td><td style="text-align:center">114.17</td><td style="text-align:center">22.28</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">澳门</td><td style="text-align:center">113.55</td><td style="text-align:center">22.19</td></tr></tbody></table><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 初始化Hopfield神经网络的初值和权值op1=>operation: 计算n个城市之间的距离矩阵Dxy，初始化神经网络的输入状态op2=>operation: 利用动态方程计算输入状态的增量op3=>operation: 由一阶欧拉方法更新神经网络下一个时刻的输入状态op4=>operation: 由sigmoid函数更新神经网络下个时刻的输出状态op5=>operation: 计算当前的能量函数Econd1=>condition: 是否迭代指定次数?e1=>end: 算法结束st->op1->cond1cond1(no, bottom)->op3->op4->op5->cond1cond1(yes)->e1</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/weixin_39707121/article/details/79041536" target="_blank" rel="noopener">Hopfield神经网络</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computational intelligence </tag>
            
            <tag> artificial neural network </tag>
            
            <tag> perceptron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Computational Intelligence Homework No.5</title>
      <link href="/blog/2018/11/26/2018-computational-intelligence-homework-no.5/"/>
      <url>/blog/2018/11/26/2018-computational-intelligence-homework-no.5/</url>
      
        <content type="html"><![CDATA[<h1 id="人工神经网络-感知器训练"><a class="header-anchor" href="#人工神经网络-感知器训练">#</a>人工神经网络-感知器训练</h1><h2 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h2><p>下面这个训练集合是线性可分的:</p><table><thead><tr><th style="text-align:center">输入</th><th style="text-align:center">输出</th></tr></thead><tbody><tr><td style="text-align:center">1 0 0</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">0 1 1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">1 1 0</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1 1 1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">0 0 1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">1 0 1</td><td style="text-align:center">1</td></tr></tbody></table><p>(手工)训练此训练集合中的线性阈值单元。你的单元包括执行阈值的输入在内的四个输入。设所有权值的初始值为0。用固定递增纠错程序来训练你的单元直至找到一个解。<br>在每次训练循环后标出各组权值。以前面的输入为顶点画出一个三维立方体的草图，并根据最终权集画出分割平面的草图。</p><a id="more"></a><h2 id="训练过程"><a class="header-anchor" href="#训练过程">#</a>训练过程</h2><h3 id="初始化"><a class="header-anchor" href="#初始化">#</a>初始化</h3><p>取μ=0.1, θ=0.0，初始状态w<sub>1</sub>=w<sub>2</sub>=w<sub>3</sub>=0<br>激活函数如<code>公式1</code>所示.</p>$$f_h(x)=\begin{cases}1,&{x \geq 0} \\0,&{x < 0}\end{cases}\tag{1}$$<p>输出结果如<code>公式2</code>所示。</p>$$o = f_h(\omega_1x+\omega_2y+\omega_3z+\theta)\tag{2}$$<p>权重更新规则如<code>公示3</code>所示, 其中 $input$ 为输入。</p>$$\omega' = \omega + \Delta\omega * input \\\theta' = \theta + \Delta\omega\tag{3}$$<p>感知器如<code>图1</code>所示。</p><center><div id="graphviz-0"></div><p>图1 感知器图</p></center><h3 id="第一轮循环"><a class="header-anchor" href="#第一轮循环">#</a>第一轮循环</h3><p>将所有输入输入到感知器中进行计算。</p>$$\begin{aligned}&o|_{(1, 0, 0)}=f_h(0+0+0+0.0)=1, &正确 \\&o|_{(0, 1, 1)}=f_h(0+0+0+0.0)=1, &应该是0 \\\end{aligned}$$<p>更新权重$\Delta\omega=-0.1, \omega_1 = 0 +  -0.1 * 0 = 0.0, 同样地得到\omega_2 = -0.1, \omega_3 = -0.1, \theta = -0.1$</p>$$\begin{aligned}&o|_{(1, 1, 0)}=f_h(0-0.1+0-0.1)=0, &应该是1\end{aligned}$$<p>更新权重$\Delta\omega=0.1, \omega_1 = 0.1, \omega_2 = 0.0, \omega_3 = -0.1, \theta = -0.0$</p>$$\begin{aligned}&o|_{(1, 1, 1)}=f_h(0.1+0-0.1+0.0)=1, &应该是0\end{aligned}$$<p>更新权重$\Delta\omega=-0.1, \omega_1 = 0.1, \omega_2 = -0.1, \omega_3 = -0.2, \theta = -0.1$</p>$$\begin{aligned}&o|_{(0, 0, 1)}=f_h(0+0-0.2-0.1)=0, &正确 \\&o|_{(1, 0, 1)}=f_h(-0.1+0-0.2-0.1)=0, &应该是1 \\\end{aligned}$$<p>更新权重$\Delta\omega=0.1, \omega_1 = 0.1, \omega_2 = -0.1, \omega_3 = -0.1, \theta = -0.0$</p><center><div id="graphviz-1"></div><p>图2 一轮循环后的感知器图</p></center><h3 id="第二轮循环"><a class="header-anchor" href="#第二轮循环">#</a>第二轮循环</h3>$$\begin{aligned}&o|_{(1, 0, 0)}=f_h(0.1+0+0+0.0)=1, &正确 \\&o|_{(0, 1, 1)}=f_h(0-0.1-0.1+0.0)=0, &正确 \\&o|_{(1, 1, 0)}=f_h(0.1-0.1+0+0.0)=1, &正确 \\&o|_{(1, 1, 1)}=f_h(0.1-0.1-0.1+0.0)=0, &正确 \\&o|_{(0, 0, 1)}=f_h(0+0-0.1+0.0)=0, &正确 \\&o|_{(1, 0, 1)}=f_h(0.1+0-0.1+0.0)=1, &正确 \\\end{aligned}$$<p>至此感知器收敛，循环结束。</p><center><div id="graphviz-2"></div><p>图3 最终的的感知器图</p></center><h2 id="结论"><a class="header-anchor" href="#结论">#</a>结论</h2><p>最终权集画出的分割平面的草图如<code>图4</code>所示。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">clear all</span><br><span class="line">x = <span class="number">-2</span>:<span class="number">0.1</span>:<span class="number">2</span></span><br><span class="line">y = <span class="number">-2</span>:<span class="number">0.1</span>:<span class="number">2</span></span><br><span class="line">[X,Y]= <span class="built_in">meshgrid</span>(x,y)</span><br><span class="line">Z = X - Y</span><br><span class="line"><span class="built_in">scatter3</span>([<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],<span class="string">'rp'</span>)</span><br><span class="line"><span class="built_in">scatter3</span>([<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],<span class="string">'k'</span>)</span><br></pre></td></tr></table></figure><center><p><img src="//onns.xyz/blog/image/20181204-1.png" alt="分割平面图"></p><p>图4 分割平面图</p></center><h2 id="附录"><a class="header-anchor" href="#附录">#</a>附录</h2><h3 id="感知器训练代码"><a class="header-anchor" href="#感知器训练代码">#</a>感知器训练代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------model import----------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end model import----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------global variables----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end global variables----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------function definition----------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    activation function</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> <span class="keyword">if</span> x &gt;= <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end function definition----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------class definition----------</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Perceptron</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, input_num, activator)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        initiate</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.activator = activator</span><br><span class="line">        self.weights = [<span class="number">0.0</span>] * input_num</span><br><span class="line">        self.bias = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        print weights and nbias</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'weights: %s\nbias: %f\n'</span> % (list(self.weights), self.bias)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, input_vec)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        predict function</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">return</span> self.activator(</span><br><span class="line">            reduce(<span class="keyword">lambda</span> a, b: a + b,</span><br><span class="line">                   map(<span class="keyword">lambda</span> x_w: x_w[<span class="number">0</span>]*x_w[<span class="number">1</span>],</span><br><span class="line">                       zip(input_vec, self.weights)), <span class="number">0.0</span>) + self.bias)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(self, input_vecs, labels, iteration, rate)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        train the perceptron also print weights and nbias for each iteration</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(iteration):</span><br><span class="line">            print(<span class="string">'iterations: %d'</span> % (i+<span class="number">1</span>))</span><br><span class="line">            self._one_iteration(input_vecs, labels, rate)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_one_iteration</span><span class="params">(self, input_vecs, labels, rate)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        iteration</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        samples = zip(input_vecs, labels)</span><br><span class="line">        <span class="keyword">for</span> (input_vec, label) <span class="keyword">in</span> samples:</span><br><span class="line">            output = self.predict(input_vec)</span><br><span class="line">            self._update_weights(input_vec, output, label, rate)</span><br><span class="line">            print(input_vec, output, label)</span><br><span class="line">            print(self)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_update_weights</span><span class="params">(self, input_vec, output, label, rate)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        update weights</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        delta = label - output</span><br><span class="line">        self.weights = list(map(</span><br><span class="line">            <span class="keyword">lambda</span> x_w: x_w[<span class="number">1</span>] + rate * delta * x_w[<span class="number">0</span>],</span><br><span class="line">            zip(input_vec, self.weights)))</span><br><span class="line">        self.bias += rate * delta</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end class definition----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------main function----------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    p = Perceptron(<span class="number">3</span>, f)</span><br><span class="line">    input_vecs = [[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], [</span><br><span class="line">        <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]]</span><br><span class="line">    labels = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    p.train(input_vecs, labels, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x, y, z <span class="keyword">in</span> input_vecs:</span><br><span class="line">        print(<span class="string">'input: %d %d %d predict: %d'</span> % (x, y, z, p.predict([x, y, z])))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end main function----------</span></span><br></pre></td></tr></table></figure><script src="https://unpkg.com/viz.js@2.1.2/viz.js"></script><script src="https://unpkg.com/viz.js@2.1.2/full.render.js"></script><textarea id="graphviz-0-code" style="display: none">digraph G {    node[shape=circle,style=filled,color=green];    "x" -> "∑"[label="0"]    "y" -> "∑"[label="0"]    "z" -> "∑"[label="0"]    "∑" -> "o"[label="θ = 0.0"]}</textarea><script>  var viz = new Viz();  var code = document.getElementById("graphviz-0-code").value;  viz.renderSVGElement(code)  .then(function(element) {    document.getElementById("graphviz-0").append(element)  });</script><textarea id="graphviz-1-code" style="display: none">digraph G {    node[shape=circle,style=filled,color=green];    "x" -> ""[label="0.1"]    "y" -> ""[label="-0.1"]    "z" -> ""[label="-0.1"]    "" -> "o"[label="θ = 0.0"]}</textarea><script>  var viz = new Viz();  var code = document.getElementById("graphviz-1-code").value;  viz.renderSVGElement(code)  .then(function(element) {    document.getElementById("graphviz-1").append(element)  });</script><textarea id="graphviz-2-code" style="display: none">digraph G {    node[shape=circle,style=filled,color=green];    "x" -> ""[label="0.1"]    "y" -> ""[label="-0.1"]    "z" -> ""[label="-0.1"]    "" -> "o"[label="θ = 0.0"]}</textarea><script>  var viz = new Viz();  var code = document.getElementById("graphviz-2-code").value;  viz.renderSVGElement(code)  .then(function(element) {    document.getElementById("graphviz-2").append(element)  });</script>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computational intelligence </tag>
            
            <tag> artificial neural network </tag>
            
            <tag> perceptron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Computational Intelligence Homework No.4</title>
      <link href="/blog/2018/11/25/2018-computational-intelligence-homework-no.4/"/>
      <url>/blog/2018/11/25/2018-computational-intelligence-homework-no.4/</url>
      
        <content type="html"><![CDATA[<h1 id="多尺度协同变异的粒子群优化算法"><a class="header-anchor" href="#多尺度协同变异的粒子群优化算法">#</a>多尺度协同变异的粒子群优化算法</h1><h2 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h2><p>实现文《一种多尺度协同变异的粒子群优化算法》<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>的测试实验。</p><a id="more"></a><h2 id="算法设计"><a class="header-anchor" href="#算法设计">#</a>算法设计</h2><p>  粒子群算法(Particle Swarm Optimizer，PSO)是由Kennedy和Eberhart博士提出的一种基于群体智能的优化算法, 其基本思想是受到他们早期对许多鸟类的群体行为进行建模与仿真研究的启发. 粒子群算法的优势在于其简单容易实现,没有很多参数需要调整,是非线性连续优化问题、组合优化问题和混合整数非线性优化问题的有效优化工具. 由于PSO算法概念简单、实现容易，在函数优化和神经网络权值训练等方面都有很好的表现. 由于其又具有深刻的智能背景，既适合科学研究，又特别适于工程应用, 因此在近年来得到了飞速的发展. 其应用涉及系统控制、人工智能、模式识别、计算机、通信工程等各个领域. 粒子群优化算法问世以来受到了广泛的重视, 经过十几年的研究, 其不论在应用方面还是在优化性能方面都得到了很大的发展. 然而, 研究人员仍然无法解决一直困扰该算法的两个难题: 早熟和收敛速度慢.<br>  文中提出一种多尺度协同变异的微粒群算法(MAEPSO). 该算法利用不同大小方差的高斯变异机制实现解空间的探索, 这种多个或大或小的变异机制, 能促使整个种群以尽量分散的变异尺度来对解空间进行更加详尽的探索. 同时高斯变异的范围随着适应值的变小也逐渐降低, 在算法后期有利于提高最优解的精度; 在利用不同大小变异算子提高局部精确搜索能力的同时, 该算法同样利用均匀算子维护种群多样性. 利用试验对不同评测函数进行测试均验证新算法优良的优化性能.</p><h3 id="速度更新"><a class="header-anchor" href="#速度更新">#</a>速度更新</h3><p>  速度更新的公式为:</p>$$v_{id}(t+1)=w×v_{id}(t) + c_1×r_1×(p_{id}(t)−x_{id}(t)) \\\ + c_2×r_2×(p_{gd}(t)−x_{id}(t))\tag{1}$$<h3 id="位置更新"><a class="header-anchor" href="#位置更新">#</a>位置更新</h3><p>  位置更新的公式为:</p>$$x_{id}(t+1) = x_{id}(t) + v_{id}(t+1)\tag{2}$$<h3 id="多尺度高斯变异算子"><a class="header-anchor" href="#多尺度高斯变异算子">#</a>多尺度高斯变异算子</h3><p>  设尺度个数为$M$, 首先初始化多尺度高斯变异算子的初始方差</p>$$\sigma^{(0)} = (\sigma_1^{(0)},\sigma_2^{(0)},\cdots,\sigma_M^{(0)})\tag{3}$$<p>  初始时, 方差一般设定为优化变量的取值范围, 随着迭代次数的增加, 多尺度高斯变异算子的方差会随之进行调整, 具体调整方式如下所示, 首先根据适应值的大小对种群中的微粒进行由小到大排序, 然后对其进行组合, 生成$M$个子群, 每一个子群的微粒个数为$P = N / M $, $K$是当前迭代次数, 计算每一个子群的适应度:</p>$$FitX_m^{(K)} = \sum_{i=1}^Pf(x_i^m) / P,m = 1,2,\cdots,M\tag{4}$$<p>  其中$f$是微粒的适应值计算函数, 不同变异尺度之间相互竞争, 根据适应能力的不同而设置不同的变异能力, 因此第$m$个变异算子的标准差为:</p>$$\sigma_m^{(K)} = \sigma_m^{(K-1)} exp(\frac{M\cdot FitX_m^{(K)} - \sum_{m=1}^MFitX_m^{(K)}}{FitX_{max} - FitX_{min}})\tag{5}$$$$FitX_{max} = max(FitX_1^{(K)},FitX_2^{(K)},\cdots,FitX_M^{(K)})\tag{6}$$$$FitX_{min} = min(FitX_1^{(K)},FitX_2^{(K)},\cdots,FitX_M^{(K)})\tag{7}$$<p>由于变异算子的进化是一个递归过程, 排在后面的变异算子可能很大, 因此对变异算子的标准差做如下规范: 如果$\sigma_i^{(k)} &gt;W/4$, 则</p>$$\sigma_i^{(k)} = \vert W/4 - \sigma_i^{(k)} \vert\tag{8}$$<p>$W$为待优化变量空间的宽度, 重复使用上式, 直到满足$\sigma_i^{(k)} &lt; W/4$. 为了能最大范围的实现空间勘探$i$能力, 在进行完多尺度高斯变异后, 同时进行一次均匀变异操作, 比较后取所有变异后适应值最好的位置作为新的逃逸点, 均匀变异算子实现同<code>式(9)</code>.通过多尺度变异算子能实现整个搜索空间的覆盖, 其中大尺度有利于实现解空间的粗搜索, 可以快速定位到最优解区域, 小尺度能在进化后期实现局部精确解的搜索.</p>$$If \quad (v_{id} < T_d ) \quad then \quad v_{id} = rand × V_{max}\tag{9}$$<h2 id="程序流程"><a class="header-anchor" href="#程序流程">#</a>程序流程</h2><p>程序流程如<code>图1</code>所示</p><center><div id="flowchart-0" class="flow-chart"></div><p>图1 程序流程图</p></center><h2 id="代码运行及测试"><a class="header-anchor" href="#代码运行及测试">#</a>代码运行及测试</h2><p>代码运行结果如<code>表1</code>所示.</p><center>表1: 运行结果</center><table><thead><tr><th style="text-align:center">function</th><th style="text-align:center">min</th><th style="text-align:center">max</th><th style="text-align:center">mean</th><th style="text-align:center">derivation</th></tr></thead><tbody><tr><td style="text-align:center">Tablet</td><td style="text-align:center">1.7048e<sup>-25</sup></td><td style="text-align:center">1.8725e<sup>-13</sup></td><td style="text-align:center">2.4511e<sup>-14</sup></td><td style="text-align:center">3.3659e<sup>-27</sup></td></tr><tr><td style="text-align:center">Quadric</td><td style="text-align:center">4.6845e<sup>-24</sup></td><td style="text-align:center">2.1658e<sup>-13</sup></td><td style="text-align:center">1.5153e<sup>-14</sup></td><td style="text-align:center">2.4005e<sup>-27</sup></td></tr><tr><td style="text-align:center">Rosenbrock</td><td style="text-align:center">24.6117</td><td style="text-align:center">35.1629</td><td style="text-align:center">27.9979</td><td style="text-align:center">13.0007</td></tr><tr><td style="text-align:center">Griewank</td><td style="text-align:center">0</td><td style="text-align:center">9.7511e<sup>-13</sup></td><td style="text-align:center">1.1072e<sup>-13</sup></td><td style="text-align:center">9.2515e<sup>-26</sup></td></tr><tr><td style="text-align:center">Rastrigin</td><td style="text-align:center">0</td><td style="text-align:center">0.9950</td><td style="text-align:center">0.0995</td><td style="text-align:center">0.0990</td></tr><tr><td style="text-align:center">Schaffer</td><td style="text-align:center">0.0797</td><td style="text-align:center">0.3685</td><td style="text-align:center">0.1838</td><td style="text-align:center">0.0099</td></tr></tbody></table><h2 id="结论"><a class="header-anchor" href="#结论">#</a>结论</h2><p>论文提出一种新的多尺度协同变异的微粒群算法, 利用不同大小初始方差的高斯变异机制实现解空间的探索, 这种多个或大或小的变异机制, 能促使整个种群以尽量分散的变异尺度来对解空间进行更加详尽的探索. 同时高斯变异的范围随着适应值的变小也逐渐降低, 有利于提高最优解的精度; 在利用不同大小变异算子提高局部精确搜索能力的同时, 该算法同样利用均匀变异算子维护种群多样性. 通过6个benchmark 数据进行测试, 实验结果表明新算法能够在算法初期就能够快速定位到搜索空间的最优解区域, 进而使得微粒通过进化PSO及小尺度变异算子向着最优精确解空间逼近, 使其在进化过程中保持局部最优解空间开采的能力, 加快了算法的收敛速度.</p><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 随机初始化每个粒子op1=>operation: 评估每个粒子并得到全局最优op2=>operation: 更新每个粒子的速度和位置op3=>operation: 评估每个粒子的函数适应值op4=>operation: 更新每个粒子历史最优位置op5=>operation: 更新群体的全局最优位置cond1=>condition: 终止判据是否满足?e1=>end: 算法结束st->op1->cond1cond1(no, bottom)->op2->op3->op4->op5->cond1cond1(yes)->e1</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="http://www.cnki.com.cn/Article/CJFDTotal-RJXB201207015.htm" target="_blank" rel="noopener">一种多尺度协同变异的粒子群优化算法</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computational intelligence </tag>
            
            <tag> TSP </tag>
            
            <tag> GA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Computational Intelligence Homework No.3</title>
      <link href="/blog/2018/11/23/2018-computational-intelligence-homework-no.3/"/>
      <url>/blog/2018/11/23/2018-computational-intelligence-homework-no.3/</url>
      
        <content type="html"><![CDATA[<h1 id="用-ga-算法求解旅行商问题"><a class="header-anchor" href="#用-ga-算法求解旅行商问题">#</a>用 GA 算法求解旅行商问题</h1><h2 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h2><p>旅行商问题(Travelling Salesman Problem, 简记 TSP, 亦称货郎担问题): 设有 34 个城市及其对应的经纬度坐标, 则问题是要找出遍访每个城市恰好一次的一条回路并使其路径长度为最短.</p><a id="more"></a><h2 id="算法设计"><a class="header-anchor" href="#算法设计">#</a>算法设计</h2><p>遗传算法是模拟达尔文生物进化论的自然选择和遗传学机理的生物进化过程的计算模型，是一种通过模拟自然进化过程搜索最优解的方法。遗传算法是从代表问题可能潜在的解集的一个种群开始的，而一个种群则由经过基因编码的一定数目的个体组成。每个个体实际上是染色体带有特征的实体。染色体作为遗传物质的主要载体，即多个基因的集合，其内部表现(即基因型)是某种基因组合，它决定了个体的形状的外部表现，如黑头发的特征是由染色体中控制这一特征的某种基因组合决定的。因此，在一开始需要实现从表现型到基因型的映射即编码工作。由于仿照基因编码的工作很复杂，我们往往进行简化，如二进制编码，初代种群产生之后，按照适者生存和优胜劣汰的原理，逐代演化产生出越来越好的近似解，在每一代，根据问题域中个体的适应度大小选择个体，并借助于自然遗传学的遗传算子进行组合交叉和变异，产生出代表新的解集的种群。这个过程将导致种群像自然进化一样的后生代种群比前代更加适应于环境，末代种群中的最优个体经过解码，可以作为问题近似最优解。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><h3 id="个体适应性"><a class="header-anchor" href="#个体适应性">#</a>个体适应性</h3><p>遗传算法中的适应性在旅行商问题中对应的是走过所有的点的距离之和，距离越小则所代表的适应性越强。</p><h3 id="dna-编码"><a class="header-anchor" href="#dna-编码">#</a>DNA 编码</h3><p>编码是应用遗传算法时要解决的首要问题，也是设计遗传算法时的一个关键步骤。编码方法影响到交叉算子、变异算子等遗传算子的运算方法，大很大程度上决定了遗传进化的效率。在旅行商问题中的 DNA 编码方式是<code>二进制编码</code>方式，具体是将坐标分别放入两条 DNA 中，形成<code>x</code>和<code>y</code>两条 DNA，如下所示:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x:</span><br><span class="line">[<span class="number">121.47</span> <span class="number">115.85</span> <span class="number">117.25</span> <span class="number">108.93</span> <span class="number">106.55</span> <span class="number">112.55</span> <span class="number">114.52</span> <span class="number">121.52</span> <span class="number">108.37</span>  <span class="number">91.13</span></span><br><span class="line">  <span class="number">87.62</span> <span class="number">106.63</span> <span class="number">111.73</span> <span class="number">101.78</span> <span class="number">119.3</span>  <span class="number">114.3</span>  <span class="number">125.32</span> <span class="number">116.4</span>  <span class="number">117.2</span>  <span class="number">116.98</span></span><br><span class="line"> <span class="number">118.78</span> <span class="number">113.62</span> <span class="number">114.17</span> <span class="number">113.27</span> <span class="number">108.37</span> <span class="number">123.43</span> <span class="number">120.15</span> <span class="number">113.55</span> <span class="number">102.72</span> <span class="number">104.07</span></span><br><span class="line"> <span class="number">112.93</span> <span class="number">103.82</span> <span class="number">106.28</span> <span class="number">126.53</span>]</span><br><span class="line">y:</span><br><span class="line">[<span class="number">31.23</span> <span class="number">28.68</span> <span class="number">31.83</span> <span class="number">34.27</span> <span class="number">29.57</span> <span class="number">37.87</span> <span class="number">38.05</span> <span class="number">25.03</span> <span class="number">22.82</span> <span class="number">29.65</span> <span class="number">43.82</span> <span class="number">26.65</span></span><br><span class="line"> <span class="number">40.83</span> <span class="number">36.62</span> <span class="number">26.08</span> <span class="number">30.6</span>  <span class="number">43.9</span>  <span class="number">39.9</span>  <span class="number">39.12</span> <span class="number">36.67</span> <span class="number">32.07</span> <span class="number">34.75</span> <span class="number">22.28</span> <span class="number">23.13</span></span><br><span class="line"> <span class="number">22.82</span> <span class="number">41.8</span>  <span class="number">30.28</span> <span class="number">22.19</span> <span class="number">25.05</span> <span class="number">30.67</span> <span class="number">28.23</span> <span class="number">36.07</span> <span class="number">38.47</span> <span class="number">45.8</span>]</span><br></pre></td></tr></table></figure><h3 id="适者生存-selection"><a class="header-anchor" href="#适者生存-selection">#</a>适者生存 (selection)</h3><p>通过个体适应性来挑选，适应性越高(即距离越小)就越可能被选到。</p><h3 id="交叉配对-crossover"><a class="header-anchor" href="#交叉配对-crossover">#</a>交叉配对 (crossover)</h3><p>在旅行商问题中，交叉配对不能通过简单的从父母的 DNA 中取一半来完成，这样会产生重复点。<br>替代办法是将父代的 DNA 中选取的点得到后按顺序放置到新 DNA 的前半部，然后再从母代的 DNA 中选取剩下的点，放到新 DNA 的后半部。</p><h3 id="变异-mutation"><a class="header-anchor" href="#变异-mutation">#</a>变异 (mutation)</h3><p>在旅行商问题中，变异只需要随机交换两个点的位置即可。</p><h2 id="程序流程"><a class="header-anchor" href="#程序流程">#</a>程序流程</h2><p>程序流程如<code>图1</code>所示</p><center><div id="flowchart-0" class="flow-chart"></div><p>图 1 程序流程图</p></center><h2 id="核心伪代码"><a class="header-anchor" href="#核心伪代码">#</a>核心伪代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 迭代N_GENERATIONS次</span></span><br><span class="line"><span class="keyword">for</span> generation <span class="keyword">in</span> range(N_GENERATIONS):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将城市坐标转换为DNA</span></span><br><span class="line">    lx, ly = translateDNA(pop, CITIES)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算个体适应性</span></span><br><span class="line">    fitness, total_distance = get_fitness(lx, ly)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 适者生存</span></span><br><span class="line">    pop = select(fitness)</span><br><span class="line">    pop_copy = pop.copy()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对于种群中的每一个父母代</span></span><br><span class="line">    <span class="keyword">for</span> parent <span class="keyword">in</span> pop:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 杂交</span></span><br><span class="line">        child = crossover(parent, pop_copy)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 变异</span></span><br><span class="line">        child = mutate(child)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 加入到新种群中</span></span><br><span class="line">        parent[:] = child</span><br></pre></td></tr></table></figure><h2 id="代码运行及测试"><a class="header-anchor" href="#代码运行及测试">#</a>代码运行及测试</h2><p>选取的参数如<code>表1</code>所示.</p><center>参数表</center><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">参数值</th></tr></thead><tbody><tr><td style="text-align:center">城市数量</td><td style="text-align:center">34</td></tr><tr><td style="text-align:center">城市坐标</td><td style="text-align:center"><a href="#city_list">附录:城市坐标</a></td></tr><tr><td style="text-align:center">交叉概率</td><td style="text-align:center">0.1</td></tr><tr><td style="text-align:center">变异概率</td><td style="text-align:center">0.02</td></tr><tr><td style="text-align:center">种群规模</td><td style="text-align:center">1000</td></tr><tr><td style="text-align:center">迭代次数</td><td style="text-align:center">500</td></tr></tbody></table><p>代码运行结果如<code>图2</code>所示.</p><center><p><img src="//onns.xyz/blog/image/20181124-1.png" alt="运行结果图"></p><p>图 2 运行结果图</p></center><h2 id="结论"><a class="header-anchor" href="#结论">#</a>结论</h2><p>34 个城市的最终结果为<code>16434.4730</code>公里。<br>总得来说遗传算法解决旅行商问题是由连续问题归纳到组合问题的求解，使得精度受到很大的影响，最终结果有时也容易陷入到局部早熟而导致结果不理想，不过遗传算法还是具有较强的全局搜索能力，在计算精度要求较高时，对计算时间的花费较少。</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://morvanzhou.github.io/tutorials/machine-learning/evolutionary-algorithm/2-01-genetic-algorithm/" target="_blank" rel="noopener">遗传算法</a></li></ul><p style="page-break-before: always"></p><h2 id="附录"><a class="header-anchor" href="#附录">#</a>附录</h2><h3 id="城市坐标"><a class="header-anchor" href="#城市坐标">#</a>城市坐标</h3><center id="city_list">城市坐标表</center><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">省份</th><th style="text-align:center">经度</th><th style="text-align:center">纬度</th></tr></thead><tbody><tr><td style="text-align:center">01</td><td style="text-align:center">北京</td><td style="text-align:center">116.4</td><td style="text-align:center">39.9</td></tr><tr><td style="text-align:center">02</td><td style="text-align:center">天津</td><td style="text-align:center">117.2</td><td style="text-align:center">39.12</td></tr><tr><td style="text-align:center">03</td><td style="text-align:center">河北</td><td style="text-align:center">114.52</td><td style="text-align:center">38.05</td></tr><tr><td style="text-align:center">04</td><td style="text-align:center">山西</td><td style="text-align:center">112.55</td><td style="text-align:center">37.87</td></tr><tr><td style="text-align:center">05</td><td style="text-align:center">内蒙古</td><td style="text-align:center">111.73</td><td style="text-align:center">40.83</td></tr><tr><td style="text-align:center">06</td><td style="text-align:center">辽宁</td><td style="text-align:center">123.43</td><td style="text-align:center">41.8</td></tr><tr><td style="text-align:center">07</td><td style="text-align:center">吉林</td><td style="text-align:center">125.32</td><td style="text-align:center">43.9</td></tr><tr><td style="text-align:center">08</td><td style="text-align:center">黑龙江</td><td style="text-align:center">126.53</td><td style="text-align:center">45.8</td></tr><tr><td style="text-align:center">09</td><td style="text-align:center">上海</td><td style="text-align:center">121.47</td><td style="text-align:center">31.23</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">江苏</td><td style="text-align:center">118.78</td><td style="text-align:center">32.07</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">浙江</td><td style="text-align:center">120.15</td><td style="text-align:center">30.28</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">安徽</td><td style="text-align:center">117.25</td><td style="text-align:center">31.83</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">福建</td><td style="text-align:center">119.3</td><td style="text-align:center">26.08</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">江西</td><td style="text-align:center">115.85</td><td style="text-align:center">28.68</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">山东</td><td style="text-align:center">116.98</td><td style="text-align:center">36.67</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">河南</td><td style="text-align:center">113.62</td><td style="text-align:center">34.75</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">湖北</td><td style="text-align:center">114.3</td><td style="text-align:center">30.6</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">湖南</td><td style="text-align:center">112.93</td><td style="text-align:center">28.23</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">广东</td><td style="text-align:center">113.27</td><td style="text-align:center">23.13</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">广西</td><td style="text-align:center">108.37</td><td style="text-align:center">22.82</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">海南</td><td style="text-align:center">108.37</td><td style="text-align:center">22.82</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">重庆</td><td style="text-align:center">106.55</td><td style="text-align:center">29.57</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">四川</td><td style="text-align:center">104.07</td><td style="text-align:center">30.67</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">贵州</td><td style="text-align:center">106.63</td><td style="text-align:center">26.65</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">云南</td><td style="text-align:center">102.72</td><td style="text-align:center">25.05</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">西藏</td><td style="text-align:center">91.13</td><td style="text-align:center">29.65</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">陕西</td><td style="text-align:center">108.93</td><td style="text-align:center">34.27</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">甘肃</td><td style="text-align:center">103.82</td><td style="text-align:center">36.07</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">青海</td><td style="text-align:center">101.78</td><td style="text-align:center">36.62</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">宁夏</td><td style="text-align:center">106.28</td><td style="text-align:center">38.47</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">新疆</td><td style="text-align:center">87.62</td><td style="text-align:center">43.82</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">台北</td><td style="text-align:center">121.52</td><td style="text-align:center">25.03</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">香港</td><td style="text-align:center">114.17</td><td style="text-align:center">22.28</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">澳门</td><td style="text-align:center">113.55</td><td style="text-align:center">22.19</td></tr></tbody></table><h3 id="遗传算法代码"><a class="header-anchor" href="#遗传算法代码">#</a>遗传算法代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------model import----------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> radians, cos, sin, asin, sqrt</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end model import----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------global variables----------</span></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">@param:</span></span><br><span class="line"><span class="string">    CITIES          the longitude and the latitude of cities</span></span><br><span class="line"><span class="string">    N_CITIES        the number of cities</span></span><br><span class="line"><span class="string">    CROSS_RATE      the rate of cross</span></span><br><span class="line"><span class="string">    MUTATE_RATE     the rate of mutate</span></span><br><span class="line"><span class="string">    POP_SIZE        the size of population</span></span><br><span class="line"><span class="string">    N_GENERATIONS   the number of generations</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">CITIES = np.array([[<span class="number">116.4</span>, <span class="number">39.9</span>],</span><br><span class="line">                   [<span class="number">117.2</span>, <span class="number">39.12</span>],</span><br><span class="line">                   [<span class="number">114.52</span>, <span class="number">38.05</span>],</span><br><span class="line">                   [<span class="number">112.55</span>, <span class="number">37.87</span>],</span><br><span class="line">                   [<span class="number">111.73</span>, <span class="number">40.83</span>],</span><br><span class="line">                   [<span class="number">123.43</span>, <span class="number">41.8</span>],</span><br><span class="line">                   [<span class="number">125.32</span>, <span class="number">43.9</span>],</span><br><span class="line">                   [<span class="number">126.53</span>, <span class="number">45.8</span>],</span><br><span class="line">                   [<span class="number">121.47</span>, <span class="number">31.23</span>],</span><br><span class="line">                   [<span class="number">118.78</span>, <span class="number">32.07</span>],</span><br><span class="line">                   [<span class="number">120.15</span>, <span class="number">30.28</span>],</span><br><span class="line">                   [<span class="number">117.25</span>, <span class="number">31.83</span>],</span><br><span class="line">                   [<span class="number">119.3</span>, <span class="number">26.08</span>],</span><br><span class="line">                   [<span class="number">115.85</span>, <span class="number">28.68</span>],</span><br><span class="line">                   [<span class="number">116.98</span>, <span class="number">36.67</span>],</span><br><span class="line">                   [<span class="number">113.62</span>, <span class="number">34.75</span>],</span><br><span class="line">                   [<span class="number">114.3</span>, <span class="number">30.6</span>],</span><br><span class="line">                   [<span class="number">112.93</span>, <span class="number">28.23</span>],</span><br><span class="line">                   [<span class="number">113.27</span>, <span class="number">23.13</span>],</span><br><span class="line">                   [<span class="number">108.37</span>, <span class="number">22.82</span>],</span><br><span class="line">                   [<span class="number">108.37</span>, <span class="number">22.82</span>],</span><br><span class="line">                   [<span class="number">106.55</span>, <span class="number">29.57</span>],</span><br><span class="line">                   [<span class="number">104.07</span>, <span class="number">30.67</span>],</span><br><span class="line">                   [<span class="number">106.63</span>, <span class="number">26.65</span>],</span><br><span class="line">                   [<span class="number">102.72</span>, <span class="number">25.05</span>],</span><br><span class="line">                   [<span class="number">91.13</span>, <span class="number">29.65</span>],</span><br><span class="line">                   [<span class="number">108.93</span>, <span class="number">34.27</span>],</span><br><span class="line">                   [<span class="number">103.82</span>, <span class="number">36.07</span>],</span><br><span class="line">                   [<span class="number">101.78</span>, <span class="number">36.62</span>],</span><br><span class="line">                   [<span class="number">106.28</span>, <span class="number">38.47</span>],</span><br><span class="line">                   [<span class="number">87.62</span>, <span class="number">43.82</span>],</span><br><span class="line">                   [<span class="number">121.52</span>, <span class="number">25.03</span>],</span><br><span class="line">                   [<span class="number">114.17</span>, <span class="number">22.28</span>],</span><br><span class="line">                   [<span class="number">113.55</span>, <span class="number">22.19</span>]])</span><br><span class="line">N_CITIES = CITIES.shape[<span class="number">0</span>]</span><br><span class="line">CROSS_RATE = <span class="number">0.1</span></span><br><span class="line">MUTATE_RATE = <span class="number">0.02</span></span><br><span class="line">POP_SIZE = <span class="number">1000</span></span><br><span class="line">N_GENERATIONS = <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end global variables----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------function definition----------</span></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">    Calculate the great circle distance between two points</span></span><br><span class="line"><span class="string">    on the earth (specified in decimal degrees)</span></span><br><span class="line"><span class="string">    @param:</span></span><br><span class="line"><span class="string">        lon1    Longitude of the first point</span></span><br><span class="line"><span class="string">        lat1    Latitude of the first point</span></span><br><span class="line"><span class="string">        lon2    Longitude of the second point</span></span><br><span class="line"><span class="string">        lat2    Latitude of the second point</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">haversine</span><span class="params">(lon1, lat1, lon2, lat2)</span>:</span></span><br><span class="line">    lon1, lat1, lon2, lat2 = map(radians, [lon1, lat1, lon2, lat2])</span><br><span class="line">    dlon = lon2 - lon1</span><br><span class="line">    dlat = lat2 - lat1</span><br><span class="line">    a = sin(dlat/<span class="number">2</span>)**<span class="number">2</span> + cos(lat1) * cos(lat2) * sin(dlon/<span class="number">2</span>)**<span class="number">2</span></span><br><span class="line">    c = <span class="number">2</span> * asin(sqrt(a))</span><br><span class="line">    r = <span class="number">6378.137</span></span><br><span class="line">    <span class="keyword">return</span> c * r</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end function definition----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------class definition----------</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GA</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, DNA_size, cross_rate, mutation_rate, pop_size, )</span>:</span></span><br><span class="line">        self.DNA_size = DNA_size</span><br><span class="line">        self.cross_rate = cross_rate</span><br><span class="line">        self.mutate_rate = mutation_rate</span><br><span class="line">        self.pop_size = pop_size</span><br><span class="line"></span><br><span class="line">        self.pop = np.vstack([np.random.permutation(DNA_size)</span><br><span class="line">                              <span class="keyword">for</span> _ <span class="keyword">in</span> range(pop_size)])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">translateDNA</span><span class="params">(self, DNA, city_position)</span>:</span>     <span class="comment"># get cities' coord in order</span></span><br><span class="line">        line_x = np.empty_like(DNA, dtype=np.float64)</span><br><span class="line">        line_y = np.empty_like(DNA, dtype=np.float64)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i, d <span class="keyword">in</span> enumerate(DNA):</span><br><span class="line"></span><br><span class="line">            city_coord = city_position[d]</span><br><span class="line">            line_x[i, :] = city_coord[:, <span class="number">0</span>]</span><br><span class="line">            line_y[i, :] = city_coord[:, <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> line_x, line_y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_fitness</span><span class="params">(self, line_x, line_y)</span>:</span></span><br><span class="line">        total_distance = np.zeros((line_x.shape[<span class="number">0</span>],), dtype=np.float64)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(line_x.shape[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(line_x.shape[<span class="number">1</span>]<span class="number">-1</span>):</span><br><span class="line">                total_distance[i] += haversine(line_x[i][j],</span><br><span class="line">                    line_y[i][j], line_x[i][j+<span class="number">1</span>], line_y[i][j+<span class="number">1</span>])</span><br><span class="line">            total_distance[i] += haversine(line_x[i][<span class="number">0</span>], line_y[i][<span class="number">0</span>],</span><br><span class="line">                line_x[i][line_x.shape[<span class="number">1</span>]<span class="number">-1</span>], line_y[i][line_x.shape[<span class="number">1</span>]<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line">        fitness = np.exp(self.DNA_size * <span class="number">20000</span> / total_distance)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fitness, total_distance</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">select</span><span class="params">(self, fitness)</span>:</span></span><br><span class="line">        idx = np.random.choice(np.arange(</span><br><span class="line">            self.pop_size), size=self.pop_size, replace=<span class="literal">True</span>, p=fitness / fitness.sum())</span><br><span class="line">        <span class="keyword">return</span> self.pop[idx]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">crossover</span><span class="params">(self, parent, pop)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> np.random.rand() &lt; self.cross_rate:</span><br><span class="line">            <span class="comment"># select another individual from pop</span></span><br><span class="line">            i_ = np.random.randint(<span class="number">0</span>, self.pop_size, size=<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># choose crossover points</span></span><br><span class="line">            cross_points = np.random.randint(</span><br><span class="line">                <span class="number">0</span>, <span class="number">2</span>, self.DNA_size).astype(np.bool)</span><br><span class="line">            <span class="comment"># find the city number</span></span><br><span class="line">            keep_city = parent[~cross_points]</span><br><span class="line">            swap_city = pop[i_, np.in1d(</span><br><span class="line">                pop[i_].ravel(), keep_city, invert=<span class="literal">True</span>)]</span><br><span class="line">            parent[:] = np.concatenate((keep_city, swap_city))</span><br><span class="line">        <span class="keyword">return</span> parent</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mutate</span><span class="params">(self, child)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> point <span class="keyword">in</span> range(self.DNA_size):</span><br><span class="line">            <span class="keyword">if</span> np.random.rand() &lt; self.mutate_rate:</span><br><span class="line">                swap_point = np.random.randint(<span class="number">0</span>, self.DNA_size)</span><br><span class="line">                swapA, swapB = child[point], child[swap_point]</span><br><span class="line">                child[point], child[swap_point] = swapB, swapA</span><br><span class="line">        <span class="keyword">return</span> child</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">evolve</span><span class="params">(self, fitness)</span>:</span></span><br><span class="line">        pop = self.select(fitness)</span><br><span class="line">        pop_copy = pop.copy()</span><br><span class="line">        <span class="comment"># for every parent</span></span><br><span class="line">        <span class="keyword">for</span> parent <span class="keyword">in</span> pop:</span><br><span class="line">            child = self.crossover(parent, pop_copy)</span><br><span class="line">            child = self.mutate(child)</span><br><span class="line">            parent[:] = child</span><br><span class="line">        self.pop = pop</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end class definition----------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------main function----------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    ga = GA(DNA_size=N_CITIES, cross_rate=CROSS_RATE,</span><br><span class="line">            mutation_rate=MUTATE_RATE, pop_size=POP_SIZE)</span><br><span class="line"></span><br><span class="line">    path_list = []</span><br><span class="line">    <span class="keyword">for</span> generation <span class="keyword">in</span> range(N_GENERATIONS):</span><br><span class="line">        lx, ly = ga.translateDNA(ga.pop, CITIES)</span><br><span class="line">        fitness, total_distance = ga.get_fitness(lx, ly)</span><br><span class="line">        ga.evolve(fitness)</span><br><span class="line">        best_idx = np.argmax(fitness)</span><br><span class="line">        print(<span class="string">'Gen:'</span>, generation, <span class="string">'| total distance: %.4f'</span> %</span><br><span class="line">              total_distance[best_idx],)</span><br><span class="line"></span><br><span class="line">        path_x = np.array(list(lx[best_idx]) + [lx[best_idx][<span class="number">0</span>]])</span><br><span class="line">        path_y = np.array(list(ly[best_idx]) + [ly[best_idx][<span class="number">0</span>]])</span><br><span class="line">        path = np.stack((path_x, path_y))</span><br><span class="line">        path = path.transpose(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">        path_list.append(path.tolist())</span><br><span class="line"></span><br><span class="line">    f = open(<span class="string">'data.json'</span>, <span class="string">'w'</span>)</span><br><span class="line">    f.write(json.dumps(path_list))</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------end main function----------</span></span><br></pre></td></tr></table></figure><h3 id="相关链接"><a class="header-anchor" href="#相关链接">#</a>相关链接</h3><ul><li><a href="https://github.com/onns/GaTSP" target="_blank" rel="noopener">GitHub 代码地址</a></li><li><a href="https://onns.xyz/2018/11/24/gatsp/">可视化演示地址</a></li></ul><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 随机产生初始种群op1=>operation: 计算种群中每个个体的适应性op2=>operation: 按适应度进行选择个体op3=>operation: 繁殖op4=>operation: 将新个体复制到新种群op5=>operation: 按适应度进行选择两个个体op6=>operation: 杂交op7=>operation: 将两个新个体加到新种群op8=>operation: 按适应度进行选择个体op9=>operation: 变异op10=>operation: 将变异后的新个体加到新种群op11=>operation: 循环次数加一cond1=>condition: 终止判据是否满足?cond2=>condition: 是否循环指定次数?para1=>parallel: 随机选择遗传算子io1=>inputoutput: 输出结果e1=>end: 算法结束st->cond1cond1(no, bottom)->op1->cond2cond1(yes)->io1->e1cond2(no, bottom)->para1cond2(yes)->cond1para1(path1, left)->op2para1(path2, bottom)->op5para1(path3, right)->op8op2->op3->op4->op11op5->op6->op7->op11op8->op9->op10->op11op11->cond2</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://baike.baidu.com/item/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/838140" target="_blank" rel="noopener">遗传算法_百度百科</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computational intelligence </tag>
            
            <tag> TSP </tag>
            
            <tag> GA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hybrid images lab report</title>
      <link href="/blog/2018/11/11/hybrid-images-lab-report/"/>
      <url>/blog/2018/11/11/hybrid-images-lab-report/</url>
      
        <content type="html"><![CDATA[<h2 id="问题分析"><a class="header-anchor" href="#问题分析">#</a>问题分析</h2><h3 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h3><p>该实验的目标是编写一个图像过滤功能的代码，并使用它来创建混合图像。混合图像是静态图像，其视觉效果随观察距离的变化而变化。基本思想是人的感知对于<code>高频率</code>更加敏感，但是在远处只能看到信号的<code>低频(平滑)</code>部分。通过将一个图像的高频部分与另一个图像的低频部分混合，可以获得混合图像，从而在不同距离处产生不同的视觉效果。实验数据集在<code>proj1.rar</code>中。</p><h3 id="数据集分析"><a class="header-anchor" href="#数据集分析">#</a>数据集分析</h3><p>实验数据集如下所示，由十张不同的<code>bmp</code>图像构成。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">data</span><br><span class="line">├── bicycle.bmp</span><br><span class="line">├── bird.bmp</span><br><span class="line">├── cat.bmp</span><br><span class="line">├── dog.bmp</span><br><span class="line">├── einstein.bmp</span><br><span class="line">├── fish.bmp</span><br><span class="line">├── marilyn.bmp</span><br><span class="line">├── motorcycle.bmp</span><br><span class="line">├── plane.bmp</span><br><span class="line">└── submarine.bmp</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="实验方法"><a class="header-anchor" href="#实验方法">#</a>实验方法</h2><h3 id="实验流程"><a class="header-anchor" href="#实验流程">#</a>实验流程</h3><p>本实验的流程如<code>图1</code>所示。</p><center><div id="flowchart-0" class="flow-chart"></div><p>图 1 实验流程图</p></center><h3 id="滤波器"><a class="header-anchor" href="#滤波器">#</a>滤波器<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h3><p>高通滤波器可以通过低通滤波器取反得到，故不再区分高/低通滤波器。<br>下面对比结果的输入图像如<code>图2</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181117-1.jpg" alt="滤波器输入图像"><br>图 2 输入图像</p></center><h4 id="理想的低通滤波器"><a class="header-anchor" href="#理想的低通滤波器">#</a>理想的低通滤波器</h4><p>$$<br>H(u,v)=<br>\begin{cases}<br>1,&amp;{D(u,v) \leq D_0} \<br>0,&amp;{D(u,v) &gt; D_0}<br>\end{cases}<br>\tag{1}<br>$$</p><p>其中，$D_0$表示通带的半径。$D(u,v)$的计算方式也就是两点间的距离，计算公式如<code>公式2.2</code>所示。</p><p>$$<br>D(u,v)=\sqrt{\left( u-\frac{P}{2} \right)^{2} + \left( v-\frac{Q}{2} \right)^{2}}<br>\tag{2}<br>$$</p><p>低通滤波器所得到的结果如下所示。低通滤波器滤除了高频成分，所以使得图像模糊。由于理想低通滤波器的过度特性过于急峻，所以会产生了振铃现象。</p><center><p><img src="//onns.xyz/blog/image/20181117-2.jpg" alt="理想的低通滤波器"><br><img src="//onns.xyz/blog/image/20181117-3.jpg" alt="理想的低通滤波器"><br>图 3 理想的低通滤波器</p></center><h4 id="巴特沃斯低通滤波器"><a class="header-anchor" href="#巴特沃斯低通滤波器">#</a>巴特沃斯低通滤波器</h4><p>$$<br>H(u,v)=\frac{1}{1+\left(D(u,v) / {D_0} \right)^{2n}}<br>\tag{3}<br>$$</p><p>$D_0$表示通带的半径，$n$表示的是巴特沃斯滤波器的次数。随着次数的增加，振铃现象会越来越明显。</p><center><p><img src="//onns.xyz/blog/image/20181117-4.jpg" alt="理想的低通滤波器"><br><img src="//onns.xyz/blog/image/20181117-5.jpg" alt="理想的低通滤波器"><br>图 4 巴特沃斯低通滤波器</p></center><h4 id="高斯低通滤波器"><a class="header-anchor" href="#高斯低通滤波器">#</a>高斯低通滤波器</h4><p>$$<br>H(u,v)=e^<br>{\frac{-D^2(u,v)}<br>{2{D_0}^2}}<br>\tag{4}<br>$$</p><p>$D_0$表示通带的半径，高斯滤波器的过度特性非常平坦，不会产生振铃现象的。</p><center><p><img src="//onns.xyz/blog/image/20181117-6.jpg" alt="理想的低通滤波器"><br><img src="//onns.xyz/blog/image/20181117-7.jpg" alt="理想的低通滤波器"><br>图 5 高斯低通滤波器</p></center><h3 id="结论"><a class="header-anchor" href="#结论">#</a>结论</h3><p>综合以上分析, 我们最终选择了<code>高斯低通滤波器</code>.</p><h2 id="实验过程"><a class="header-anchor" href="#实验过程">#</a>实验过程</h2><h3 id="编程语言介绍"><a class="header-anchor" href="#编程语言介绍">#</a>编程语言介绍</h3><p>本实验所选择的编程语言为<code>Matlab</code>, 编程软件为<code>Matlab 2018b</code>.</p><h3 id="图像预处理"><a class="header-anchor" href="#图像预处理">#</a>图像预处理</h3><p><code>10张</code>bmp 图像可以分成<code>5对</code>图像进行实验，如<code>图6</code>所示，大小都是<code>225*265</code>，故不需要进行缩放。若选取的图像大小不一，需要先对图像进行大小调整，用<code>Matlab</code>的<code>imresize</code>函数。</p><center><p><img src="//onns.xyz/blog/image/20181117-einstein.bmp" alt="原图以及HOG特征图"><img src="//onns.xyz/blog/image/20181117-marilyn.bmp" alt="原图以及HOG特征图"><br>图 6 样例图像</p></center><h3 id="程序编写"><a class="header-anchor" href="#程序编写">#</a>程序编写</h3><h4 id="空域图像滤波"><a class="header-anchor" href="#空域图像滤波">#</a>空域图像滤波</h4><p>将模板在图像中逐像素移动，将卷积核的每个元素分别和图像矩阵对应位置元素相乘并将结果累加，累加和作为模板中心对应像素点的卷积结果。通俗的讲，卷积就是对整幅图像进行加权平均的过程，每一个像素点的值，都由其本身和邻域内的其他像素值经过加权平均后得到。在像素的处理上，是先将结果暂存在于一个副本，最后统一拷贝，故不会出现处理顺序不同而结果不同的情况。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><p>滤波结果如<code>图7</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181117-8.jpg" alt="高通滤波结果图"><img src="//onns.xyz/blog/image/20181117-9.jpg" alt="低通滤波结果图"><br>图 7 空域图像滤波结果图</p></center><h4 id="频域图像滤波"><a class="header-anchor" href="#频域图像滤波">#</a>频域图像滤波</h4><p>先对图像进行傅里叶变换，转换至频率域，在频域使用滤波函数进行滤波，最后将结果反变换至空间域。</p><p>滤波结果如<code>图8</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181117-11.jpg" alt="高通滤波结果图"><img src="//onns.xyz/blog/image/20181117-12.jpg" alt="低通滤波结果图"><br>图 8 频域图像滤波结果图</p></center><h4 id="图像融合"><a class="header-anchor" href="#图像融合">#</a>图像融合</h4><p>在 Matlab 中将两个滤波后的图像<code>相加</code>即可得到融合图像。</p><p>结果如<code>图9</code>所示。</p><center><p><img src="//onns.xyz/blog/image/20181117-10.jpg" alt="空域图像滤波融合图"><img src="//onns.xyz/blog/image/20181117-13.jpg" alt="频域图像滤波融合图"><br>图 9 图像融合结果图</p></center><h2 id="实验结果"><a class="header-anchor" href="#实验结果">#</a>实验结果</h2><center><p><img src="//onns.xyz/blog/image/20181117-14.png" alt="程序可视化界面图"><br>图 10 程序可视化界面图</p></center><h3 id="实验结果分析"><a class="header-anchor" href="#实验结果分析">#</a>实验结果分析</h3><p>给定频率域滤波器，可对其进行傅里叶逆变换得到对应的空域滤波器；滤波在频域更为直观，但空域适合使用更小的滤波模板以提高滤波速度。因为相同尺寸下，频域滤波器效率高于空域滤波器，故空域滤波需要一个更小尺寸的模板近似得到需要的滤波结果。</p><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st1=>start: 开始e1=>end: 结束io1=>inputoutput: 输入图像1io2=>inputoutput: 输入图像2io3=>inputoutput: 输出混合图像op1=>operation: 通过低通滤波器得到低频部分op2=>operation: 通过高通滤波器得到高频部分op3=>operation: 将两部分相加得到混合图像st1->io1->op1->io2->op2->op3->io3->e1</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/zhoufan900428/article/details/17194289" target="_blank" rel="noopener">基础与低通滤波器</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/u010839382/article/details/41908541" target="_blank" rel="noopener">空域高斯滤波与频域高斯滤波</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer vision </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Computational Intelligence Homework No.2</title>
      <link href="/blog/2018/10/31/2018-computational-intelligence-homework-no.2/"/>
      <url>/blog/2018/10/31/2018-computational-intelligence-homework-no.2/</url>
      
        <content type="html"><![CDATA[<h1 id="用sa算法求解旅行商问题"><a class="header-anchor" href="#用sa算法求解旅行商问题">#</a>用SA算法求解旅行商问题</h1><h2 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h2><p>旅行商问题（Travelling Salesman Problem, 简记TSP, 亦称货郎担问题): 设有n个城市和距离矩阵D=[d<sub>ij</sub>], 其中d<sub>ij</sub>表示城市i到城市j的距离, i, j=1, 2 … n, 则问题是要找出遍访每个城市恰好一次的一条回路并使其路径长度为最短.</p><a id="more"></a><h2 id="算法设计"><a class="header-anchor" href="#算法设计">#</a>算法设计</h2><p>采用模拟退火算法计算旅行商问题, 模拟退火算法(Simulated Annealing Algorithm, 简称SA算法), 源于对固体退火过程的模拟, 采用Metropolis接受准则, 并用一组称为冷却表的参数控制算法进程, 使算法在多项式时间里给出一个近似最优解.</p><h3 id="metropolis算法"><a class="header-anchor" href="#metropolis算法">#</a>Metropolis算法</h3><p>模拟退火算法用Metropolis算法产生组合优化问题解的序列. 并由Metropolis准则对应的转移概率<code>P</code>.</p>$$P(i=>j)=\begin{cases}1,&{当f(j) \leq f(i)} \\e^{\frac{f(i)−f(j)}{t}},&{否则}\end{cases}\tag{1}$$<h3 id="冷却进度表"><a class="header-anchor" href="#冷却进度表">#</a>冷却进度表</h3><p>冷却表(cooling schedule)是一组控制算法进程的参数, 用以逼近模拟退火算法的渐进收敛性态, 使算法在有限时间内执行迭代过程后返回一个近似最优解.<br>冷却表是影响模拟退火算法实验性能的重要因素, 其合理选取是算法应用的关键.<br>一个冷却表应当规定下述参数:</p><ul><li>控制参数t的初值t<sub>0</sub></li><li>控制参数t的衰减函数</li><li>控制参数t的终值t<sub>f</sub>(停止准则)</li><li>Mapkob链长L<sub>k</sub></li></ul><h4 id="初值t0"><a class="header-anchor" href="#初值t0">#</a>初值t<sub>0</sub></h4><p>控制参数初值t<sub>0</sub>要足够大, 才能使算法进程在合理时间里搜索尽可能大的解空间范围.<br>本实验选取t<sub>0</sub>为<code>100</code>.</p><h4 id="衰减函数"><a class="header-anchor" href="#衰减函数">#</a>衰减函数</h4><p>在控制参数的衰减函数应使t<sub>k</sub>的衰减以小为宜.</p>$$\alpha(t)=0.9*t\tag{2}$$<p>本实验选取的衰减函数如<code>公式2</code>所示.</p><h4 id="t的终值tf-停止准则"><a class="header-anchor" href="#t的终值tf-停止准则">#</a>t的终值t<sub>f</sub>(停止准则)</h4><p>控制参数终值t<sub>f</sub>通常由停止准则决定. 合理的停止准则既要确保算法收敛于某一近似解, 又要使最终解具有一定的质量.<br>本实验选取的停止准则为<code>连续两个Mapkob链路径无变化</code>则程序终止.</p><h4 id="mapkob链长lk"><a class="header-anchor" href="#mapkob链长lk">#</a>Mapkob链长L<sub>k</sub></h4><p>Mapkob链长L<sub>k</sub>在控制参数t的衰减函数已选定的前提下, L<sub>k</sub>应选得在控制参数的每一取值上都能恢复准平衡.<br>本实验选取的Mapkob链长为<code>定长20000</code>.</p><h3 id="新解的产生"><a class="header-anchor" href="#新解的产生">#</a>新解的产生</h3><p>采用2变换法. 任选序号<code>u</code>和<code>v</code>(u &lt; v), 将 <code>u</code>和<code>v</code>及其之间的顺序逆转.</p>$$\pi_{1}...\pi_{u-1}\color{red}{\pi_{u}\pi_{u+1}...\pi_{v-1}\pi_{v}}\pi_{v+1}...\pi_{n} \\\downarrow{} \\\pi_{1}...\pi_{u-1}\color{red}{\pi_{v}\pi_{v-1}...\pi_{u-1}\pi_{u}}\pi_{v+1}...\pi_{n}\tag{3}$$<h2 id="程序流程"><a class="header-anchor" href="#程序流程">#</a>程序流程</h2><p>程序流程如<code>图1</code>所示</p><center><div id="flowchart-0" class="flow-chart"></div>图1 程序流程图</center><h2 id="核心伪代码"><a class="header-anchor" href="#核心伪代码">#</a>核心伪代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化路径</span></span><br><span class="line">x1 = random.sample(range(citynum), citynum)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算按此路径运动所花费的代价</span></span><br><span class="line">f1 = calculate(x1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化起始温度</span></span><br><span class="line">T = T_max</span><br><span class="line"></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当起始温度低于预设的最低温度时停止循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    flag = flag + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Mapkob链长, 即迭代次数</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(iter):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 通过2变换法生成新路径</span></span><br><span class="line">        x2 = generate(x1)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算新解所花费的代价</span></span><br><span class="line">        f2 = calculate(x2)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 计算两个解的代价差</span></span><br><span class="line">        df = f2 - f1</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 用Metropolis算法判断是否接受新解</span></span><br><span class="line">        <span class="keyword">if</span> accept(df, T):</span><br><span class="line">            x1 = x2</span><br><span class="line">            f1 = calculate(x1)</span><br><span class="line">            flag = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 模拟温度衰减</span></span><br><span class="line">    T *= rate</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 连续两次Mapkob链路径无变化则停止循环</span></span><br><span class="line">    <span class="keyword">if</span> flag &gt;= <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到最终路径结果</span></span><br><span class="line">x = x1</span><br></pre></td></tr></table></figure><h2 id="代码运行及测试"><a class="header-anchor" href="#代码运行及测试">#</a>代码运行及测试</h2><p>代码的运行结果如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">time: 14.867s</span><br><span class="line">result: 0 -&gt; 3 -&gt; 2 -&gt; 1</span><br><span class="line">cost: 108</span><br><span class="line"></span><br><span class="line">time: 16.764s</span><br><span class="line">result: 5 -&gt; 6 -&gt; 7 -&gt; 1 -&gt; 2 -&gt; 9 -&gt; 0 -&gt; 8 -&gt; 4 -&gt; 3</span><br><span class="line">cost: 229</span><br><span class="line"></span><br><span class="line">time: 24.910s</span><br><span class="line">result: 12 -&gt; 15 -&gt; 8 -&gt; 0 -&gt; 18 -&gt; 3 -&gt; 21 -&gt; 16 -&gt; 27 -&gt; 20</span><br><span class="line"> -&gt; 29 -&gt; 14 -&gt; 10 -&gt; 6 -&gt; 28 -&gt; 25 -&gt; 17 -&gt; 5 -&gt; 4 -&gt; 11</span><br><span class="line"> -&gt; 24 -&gt; 1 -&gt; 26 -&gt; 9 -&gt; 23 -&gt; 7 -&gt; 19 -&gt; 13 -&gt; 2 -&gt; 22</span><br><span class="line">cost: 576</span><br></pre></td></tr></table></figure><p>由于数据计算结果过慢, 在代码中额外增加了终止条件: <code>当温度低于0.01时程序停止</code>.<br>由于前两个测试数据城市数量较少, 已经得到最优解, 后续改进实验仅以<code>30</code>个城市的结果作为对比.<br>考虑到初始值为随机选取的, 且最终的路径为一个<code>头尾相接</code>的&quot;环&quot;, 修改新解的产生方法</p>$$\color{red}{\pi_{1}...\pi_{u-1}}\pi_{u}\pi_{u+1}...\pi_{v-1}\pi_{v}\color{red}{\pi_{v+1}...\pi_{n}} \\\downarrow{} \\\color{red}{\pi_{1}...\pi_{v+1}}\pi_{u}\pi_{u+1}...\pi_{v-1}\pi_{v}\color{red}{\pi_{u-1}...\pi_{n}}\tag{4}$$<p>代码的运行结果如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">time: 22.672s</span><br><span class="line">result: 9 -&gt; 17 -&gt; 5 -&gt; 18 -&gt; 16 -&gt; 27 -&gt; 20 -&gt; 21 -&gt; 4 -&gt; 1</span><br><span class="line"> -&gt; 12 -&gt; 15 -&gt; 8 -&gt; 3 -&gt; 13 -&gt; 25 -&gt; 2 -&gt; 29 -&gt; 14 -&gt; 10</span><br><span class="line"> -&gt; 6 -&gt; 28 -&gt; 22 -&gt; 11 -&gt; 24 -&gt; 7 -&gt; 19 -&gt; 23 -&gt; 26 -&gt; 0</span><br><span class="line">cost: 565</span><br></pre></td></tr></table></figure><p>增大变换的自由度, 只交换<code>u</code>和<code>v</code>的两个序号</p>$$\pi_{1}...\pi_{u-1}\color{red}{\pi_{u}}\pi_{u+1}...\pi_{v-1}\color{red}{\pi_{v}}\pi_{v+1}...\pi_{n} \\\downarrow{} \\\pi_{1}...\pi_{u-1}\color{red}{\pi_{v}}\pi_{u+1}...\pi_{v-1}\color{red}{\pi_{u}}\pi_{v+1}...\pi_{n}\tag{5}$$<p>代码的运行结果如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">time: 11.749s</span><br><span class="line">result: 0 -&gt; 2 -&gt; 22 -&gt; 11 -&gt; 7 -&gt; 28 -&gt; 6 -&gt; 19 -&gt; 23 -&gt; 26</span><br><span class="line"> -&gt; 9 -&gt; 21 -&gt; 12 -&gt; 13 -&gt; 16 -&gt; 27 -&gt; 20 -&gt; 15 -&gt; 8 -&gt; 24</span><br><span class="line"> -&gt; 4 -&gt; 1 -&gt; 5 -&gt; 25 -&gt; 17 -&gt; 18 -&gt; 3 -&gt; 29 -&gt; 14 -&gt; 10</span><br><span class="line">cost: 475</span><br></pre></td></tr></table></figure><p>观察代码运行状态, 都是温度达到<code>最小值以下</code>后退出的程序, 可能未达到<code>当前参数下</code>的最佳结果, 故将循环终止条件改为<code>只有连续两个Mapkob链路径无变化</code>.<br>代码的运行结果如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">time: 7.6435s</span><br><span class="line">result: 8 -&gt; 2 -&gt; 21 -&gt; 6 -&gt; 28 -&gt; 29 -&gt; 14 -&gt; 10 -&gt; 17 -&gt; 23</span><br><span class="line"> -&gt; 26 -&gt; 9 -&gt; 12 -&gt; 15 -&gt; 19 -&gt; 25 -&gt; 1 -&gt; 5 -&gt; 13 -&gt; 16</span><br><span class="line"> -&gt; 27 -&gt; 20 -&gt; 18 -&gt; 22 -&gt; 11 -&gt; 0 -&gt; 24 -&gt; 4 -&gt; 7 -&gt; 3</span><br><span class="line">cost: 467</span><br></pre></td></tr></table></figure><p>所以结果如<code>表1</code>所示:</p><center>表1 代码运行结果</center><table><thead><tr><th style="text-align:center">代码版本</th><th style="text-align:center">时间</th><th style="text-align:center">花费</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">24.910s</td><td style="text-align:center">576</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">22.672s</td><td style="text-align:center">565</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">11.749s</td><td style="text-align:center">475</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><font color=#ff0000>7.6435s</font></td><td style="text-align:center"><font color=#ff0000>467</font></td></tr></tbody></table><h2 id="结论"><a class="header-anchor" href="#结论">#</a>结论</h2><p>算法在多项式时间里给出一个近似最优解.</p><h2 id="附录"><a class="header-anchor" href="#附录">#</a>附录</h2><h3 id="城市矩阵生成代码"><a class="header-anchor" href="#城市矩阵生成代码">#</a>城市矩阵生成代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_city</span><span class="params">(num, min=<span class="number">10</span>, max=<span class="number">100</span>)</span>:</span></span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">temp_data = []</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(num):</span><br><span class="line"><span class="keyword">if</span>(i == j):</span><br><span class="line">temp_data.append(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">temp_data.append(random.randint(min, max))</span><br><span class="line">data.append(temp_data)</span><br><span class="line"><span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">print(generate_city(<span class="number">4</span>))</span><br><span class="line">print(generate_city(<span class="number">10</span>))</span><br><span class="line">print(generate_city(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><h3 id="模拟退火算法代码"><a class="header-anchor" href="#模拟退火算法代码">#</a>模拟退火算法代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SA</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, citymap, T_max=<span class="number">100</span>, T_min=<span class="number">0.01</span>, iter=<span class="number">20000</span>, rate=<span class="number">0.90</span>)</span>:</span></span><br><span class="line">        self.citymap = citymap</span><br><span class="line">        self.citynum = len(citymap)</span><br><span class="line">        self.T_max = T_max</span><br><span class="line">        self.T_min = T_min</span><br><span class="line">        self.iter = iter</span><br><span class="line">        self.rate = rate</span><br><span class="line"></span><br><span class="line">        self.i = random.sample(range(self.citynum), self.citynum)</span><br><span class="line"></span><br><span class="line">        start_time = time.time()</span><br><span class="line">        self.solve()</span><br><span class="line">        end_time = time.time()</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'time: '</span> + str(end_time - start_time)[:<span class="number">6</span>] + <span class="string">'s'</span>)</span><br><span class="line">        print(<span class="string">'result: '</span> + <span class="string">' -&gt; '</span>.join(str(i) <span class="keyword">for</span> i <span class="keyword">in</span> self.x))</span><br><span class="line">        print(<span class="string">'cost: '</span> + str(self.calculate(self.x)))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">calculate</span><span class="params">(self, city_list)</span>:</span></span><br><span class="line">        cost = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.citynum - <span class="number">1</span>):</span><br><span class="line">            cost = cost + self.citymap[city_list[i]][city_list[i + <span class="number">1</span>]]</span><br><span class="line">        cost = cost + self.citymap[city_list[i + <span class="number">1</span>]][city_list[<span class="number">0</span>]]</span><br><span class="line">        <span class="keyword">return</span> cost</span><br><span class="line"></span><br><span class="line">    <span class="comment"># def generate(self, city_list):</span></span><br><span class="line">    <span class="comment">#     u, v = random.sample(range(self.citynum + 1), 2)</span></span><br><span class="line">    <span class="comment">#     if u &gt; v:</span></span><br><span class="line">    <span class="comment">#         temp_list = city_list[u:] + city_list[:v]</span></span><br><span class="line">    <span class="comment">#         temp_list.reverse()</span></span><br><span class="line">    <span class="comment">#         return temp_list[self.citynum-u:] + city_list[v:u] + temp_list[:self.citynum-u]</span></span><br><span class="line">    <span class="comment">#     else:</span></span><br><span class="line">    <span class="comment">#         temp_list = city_list[u:v]</span></span><br><span class="line">    <span class="comment">#         temp_list.reverse()</span></span><br><span class="line">    <span class="comment">#         return city_list[:u] + temp_list + city_list[v:]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def generate(self, city_list):</span></span><br><span class="line">    <span class="comment">#     u, v = random.sample(range(self.citynum + 1), 2)</span></span><br><span class="line">    <span class="comment">#     if u &gt; v:</span></span><br><span class="line">    <span class="comment">#         u, v = v, u</span></span><br><span class="line">    <span class="comment">#     temp_list = city_list[u:v]</span></span><br><span class="line">    <span class="comment">#     temp_list.reverse()</span></span><br><span class="line">    <span class="comment">#     return city_list[:u] + temp_list + city_list[v:]</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(self, city_list)</span>:</span></span><br><span class="line">        u, v = random.sample(range(self.citynum), <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> u &gt; v:</span><br><span class="line">            u, v = v, u</span><br><span class="line">        <span class="keyword">return</span> city_list[:u] + city_list[v:v+<span class="number">1</span>] + city_list[u+<span class="number">1</span>:v] + city_list[u:u+<span class="number">1</span>] + city_list[v+<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">accept</span><span class="params">(self, df, T)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> df &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> np.exp(-df / T) &gt;= random.random():</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">(self)</span>:</span></span><br><span class="line">        x1 = self.i</span><br><span class="line">        f1 = self.calculate(x1)</span><br><span class="line">        T = self.T_max</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            flag = flag + <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(self.iter):</span><br><span class="line">                x2 = self.generate(x1)</span><br><span class="line">                f2 = self.calculate(x2)</span><br><span class="line">                df = f2 - f1</span><br><span class="line">                <span class="keyword">if</span> self.accept(df, T):</span><br><span class="line">                    x1 = x2</span><br><span class="line">                    f1 = self.calculate(x1)</span><br><span class="line">                    flag = <span class="number">0</span></span><br><span class="line">            T *= self.rate</span><br><span class="line">            <span class="keyword">if</span> flag &gt;= <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        self.x = x1</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    SA([[<span class="number">0</span>, <span class="number">48</span>, <span class="number">46</span>, <span class="number">48</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">63</span>, <span class="number">4</span>], [<span class="number">39</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">59</span>], [<span class="number">67</span>, <span class="number">28</span>, <span class="number">56</span>, <span class="number">0</span>]])</span><br><span class="line">    SA([[<span class="number">0</span>, <span class="number">76</span>, <span class="number">62</span>, <span class="number">85</span>, <span class="number">81</span>, <span class="number">99</span>, <span class="number">78</span>, <span class="number">99</span>, <span class="number">37</span>, <span class="number">87</span>],</span><br><span class="line">        [<span class="number">31</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">61</span>, <span class="number">56</span>, <span class="number">89</span>, <span class="number">84</span>, <span class="number">99</span>, <span class="number">48</span>, <span class="number">44</span>],</span><br><span class="line">        [<span class="number">12</span>, <span class="number">54</span>, <span class="number">0</span>, <span class="number">43</span>, <span class="number">53</span>, <span class="number">86</span>, <span class="number">73</span>, <span class="number">90</span>, <span class="number">37</span>, <span class="number">22</span>],</span><br><span class="line">        [<span class="number">77</span>, <span class="number">12</span>, <span class="number">23</span>, <span class="number">0</span>, <span class="number">64</span>, <span class="number">13</span>, <span class="number">61</span>, <span class="number">29</span>, <span class="number">94</span>, <span class="number">54</span>],</span><br><span class="line">        [<span class="number">17</span>, <span class="number">90</span>, <span class="number">81</span>, <span class="number">27</span>, <span class="number">0</span>, <span class="number">61</span>, <span class="number">94</span>, <span class="number">36</span>, <span class="number">79</span>, <span class="number">64</span>],</span><br><span class="line">        [<span class="number">47</span>, <span class="number">27</span>, <span class="number">66</span>, <span class="number">82</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">91</span>, <span class="number">55</span>],</span><br><span class="line">        [<span class="number">98</span>, <span class="number">18</span>, <span class="number">93</span>, <span class="number">72</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">48</span>, <span class="number">47</span>, <span class="number">94</span>],</span><br><span class="line">        [<span class="number">88</span>, <span class="number">13</span>, <span class="number">97</span>, <span class="number">78</span>, <span class="number">80</span>, <span class="number">54</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">96</span>],</span><br><span class="line">        [<span class="number">32</span>, <span class="number">87</span>, <span class="number">75</span>, <span class="number">27</span>, <span class="number">10</span>, <span class="number">94</span>, <span class="number">36</span>, <span class="number">21</span>, <span class="number">0</span>, <span class="number">14</span>],</span><br><span class="line">        [<span class="number">18</span>, <span class="number">97</span>, <span class="number">75</span>, <span class="number">91</span>, <span class="number">57</span>, <span class="number">78</span>, <span class="number">76</span>, <span class="number">70</span>, <span class="number">13</span>, <span class="number">0</span>]])</span><br><span class="line">    SA([[<span class="number">0</span>, <span class="number">84</span>, <span class="number">19</span>, <span class="number">73</span>, <span class="number">83</span>, <span class="number">56</span>, <span class="number">55</span>, <span class="number">78</span>, <span class="number">68</span>, <span class="number">10</span>, <span class="number">33</span>, <span class="number">61</span>, <span class="number">23</span>, <span class="number">41</span>, <span class="number">17</span>,</span><br><span class="line">         <span class="number">81</span>, <span class="number">12</span>, <span class="number">22</span>, <span class="number">24</span>, <span class="number">60</span>, <span class="number">85</span>, <span class="number">53</span>, <span class="number">82</span>, <span class="number">97</span>, <span class="number">13</span>, <span class="number">44</span>, <span class="number">54</span>, <span class="number">96</span>, <span class="number">54</span>, <span class="number">18</span>],</span><br><span class="line">        [<span class="number">56</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">76</span>, <span class="number">60</span>, <span class="number">11</span>, <span class="number">38</span>, <span class="number">35</span>, <span class="number">98</span>, <span class="number">76</span>, <span class="number">25</span>, <span class="number">67</span>, <span class="number">29</span>, <span class="number">51</span>, <span class="number">53</span>,</span><br><span class="line">         <span class="number">29</span>, <span class="number">94</span>, <span class="number">70</span>, <span class="number">76</span>, <span class="number">74</span>, <span class="number">83</span>, <span class="number">29</span>, <span class="number">54</span>, <span class="number">64</span>, <span class="number">75</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">53</span>, <span class="number">23</span>, <span class="number">62</span>],</span><br><span class="line">        [<span class="number">43</span>, <span class="number">89</span>, <span class="number">0</span>, <span class="number">95</span>, <span class="number">100</span>, <span class="number">93</span>, <span class="number">38</span>, <span class="number">95</span>, <span class="number">77</span>, <span class="number">34</span>, <span class="number">33</span>, <span class="number">70</span>, <span class="number">90</span>, <span class="number">75</span>, <span class="number">66</span>,</span><br><span class="line">         <span class="number">75</span>, <span class="number">26</span>, <span class="number">81</span>, <span class="number">90</span>, <span class="number">19</span>, <span class="number">91</span>, <span class="number">27</span>, <span class="number">10</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">37</span>, <span class="number">18</span>, <span class="number">95</span>, <span class="number">13</span>, <span class="number">27</span>],</span><br><span class="line">        [<span class="number">31</span>, <span class="number">26</span>, <span class="number">63</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">71</span>, <span class="number">64</span>, <span class="number">70</span>, <span class="number">10</span>, <span class="number">54</span>, <span class="number">70</span>, <span class="number">47</span>, <span class="number">78</span>, <span class="number">12</span>, <span class="number">18</span>,</span><br><span class="line">         <span class="number">89</span>, <span class="number">69</span>, <span class="number">90</span>, <span class="number">59</span>, <span class="number">37</span>, <span class="number">24</span>, <span class="number">11</span>, <span class="number">90</span>, <span class="number">87</span>, <span class="number">71</span>, <span class="number">48</span>, <span class="number">38</span>, <span class="number">76</span>, <span class="number">84</span>, <span class="number">13</span>],</span><br><span class="line">        [<span class="number">24</span>, <span class="number">16</span>, <span class="number">72</span>, <span class="number">64</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">64</span>, <span class="number">11</span>, <span class="number">82</span>, <span class="number">52</span>, <span class="number">87</span>, <span class="number">14</span>, <span class="number">43</span>, <span class="number">75</span>, <span class="number">32</span>,</span><br><span class="line">         <span class="number">79</span>, <span class="number">66</span>, <span class="number">54</span>, <span class="number">66</span>, <span class="number">50</span>, <span class="number">55</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">85</span>, <span class="number">31</span>, <span class="number">58</span>, <span class="number">37</span>, <span class="number">60</span>, <span class="number">33</span>, <span class="number">83</span>],</span><br><span class="line">        [<span class="number">11</span>, <span class="number">15</span>, <span class="number">56</span>, <span class="number">46</span>, <span class="number">37</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">86</span>, <span class="number">55</span>, <span class="number">76</span>, <span class="number">17</span>, <span class="number">59</span>, <span class="number">58</span>, <span class="number">15</span>, <span class="number">37</span>,</span><br><span class="line">         <span class="number">12</span>, <span class="number">22</span>, <span class="number">39</span>, <span class="number">33</span>, <span class="number">97</span>, <span class="number">65</span>, <span class="number">88</span>, <span class="number">57</span>, <span class="number">56</span>, <span class="number">64</span>, <span class="number">29</span>, <span class="number">69</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">94</span>],</span><br><span class="line">        [<span class="number">63</span>, <span class="number">71</span>, <span class="number">50</span>, <span class="number">34</span>, <span class="number">97</span>, <span class="number">87</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">75</span>, <span class="number">58</span>, <span class="number">68</span>, <span class="number">21</span>, <span class="number">57</span>, <span class="number">74</span>, <span class="number">75</span>,</span><br><span class="line">         <span class="number">84</span>, <span class="number">20</span>, <span class="number">90</span>, <span class="number">77</span>, <span class="number">18</span>, <span class="number">99</span>, <span class="number">59</span>, <span class="number">19</span>, <span class="number">22</span>, <span class="number">40</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">81</span>, <span class="number">11</span>, <span class="number">34</span>],</span><br><span class="line">        [<span class="number">89</span>, <span class="number">79</span>, <span class="number">22</span>, <span class="number">15</span>, <span class="number">78</span>, <span class="number">55</span>, <span class="number">83</span>, <span class="number">0</span>, <span class="number">21</span>, <span class="number">74</span>, <span class="number">22</span>, <span class="number">69</span>, <span class="number">53</span>, <span class="number">25</span>, <span class="number">57</span>,</span><br><span class="line">         <span class="number">100</span>, <span class="number">88</span>, <span class="number">53</span>, <span class="number">68</span>, <span class="number">18</span>, <span class="number">99</span>, <span class="number">71</span>, <span class="number">81</span>, <span class="number">56</span>, <span class="number">72</span>, <span class="number">82</span>, <span class="number">100</span>, <span class="number">21</span>, <span class="number">14</span>, <span class="number">55</span>],</span><br><span class="line">        [<span class="number">19</span>, <span class="number">88</span>, <span class="number">13</span>, <span class="number">28</span>, <span class="number">61</span>, <span class="number">79</span>, <span class="number">73</span>, <span class="number">31</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">85</span>, <span class="number">61</span>, <span class="number">36</span>, <span class="number">39</span>, <span class="number">62</span>,</span><br><span class="line">         <span class="number">44</span>, <span class="number">69</span>, <span class="number">63</span>, <span class="number">25</span>, <span class="number">55</span>, <span class="number">51</span>, <span class="number">100</span>, <span class="number">77</span>, <span class="number">36</span>, <span class="number">11</span>, <span class="number">78</span>, <span class="number">37</span>, <span class="number">76</span>, <span class="number">88</span>, <span class="number">66</span>],</span><br><span class="line">        [<span class="number">15</span>, <span class="number">99</span>, <span class="number">36</span>, <span class="number">61</span>, <span class="number">79</span>, <span class="number">85</span>, <span class="number">57</span>, <span class="number">26</span>, <span class="number">39</span>, <span class="number">0</span>, <span class="number">22</span>, <span class="number">54</span>, <span class="number">13</span>, <span class="number">78</span>, <span class="number">95</span>,</span><br><span class="line">         <span class="number">99</span>, <span class="number">94</span>, <span class="number">11</span>, <span class="number">60</span>, <span class="number">12</span>, <span class="number">43</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>, <span class="number">24</span>, <span class="number">95</span>, <span class="number">94</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">77</span>],</span><br><span class="line">        [<span class="number">34</span>, <span class="number">73</span>, <span class="number">96</span>, <span class="number">100</span>, <span class="number">81</span>, <span class="number">93</span>, <span class="number">21</span>, <span class="number">63</span>, <span class="number">34</span>, <span class="number">19</span>, <span class="number">0</span>, <span class="number">63</span>, <span class="number">47</span>, <span class="number">95</span>, <span class="number">36</span>,</span><br><span class="line">         <span class="number">20</span>, <span class="number">18</span>, <span class="number">13</span>, <span class="number">99</span>, <span class="number">58</span>, <span class="number">30</span>, <span class="number">98</span>, <span class="number">29</span>, <span class="number">75</span>, <span class="number">85</span>, <span class="number">58</span>, <span class="number">99</span>, <span class="number">39</span>, <span class="number">25</span>, <span class="number">79</span>],</span><br><span class="line">        [<span class="number">16</span>, <span class="number">90</span>, <span class="number">15</span>, <span class="number">85</span>, <span class="number">79</span>, <span class="number">53</span>, <span class="number">44</span>, <span class="number">13</span>, <span class="number">83</span>, <span class="number">86</span>, <span class="number">27</span>, <span class="number">0</span>, <span class="number">37</span>, <span class="number">41</span>, <span class="number">42</span>,</span><br><span class="line">         <span class="number">13</span>, <span class="number">50</span>, <span class="number">45</span>, <span class="number">97</span>, <span class="number">36</span>, <span class="number">96</span>, <span class="number">87</span>, <span class="number">59</span>, <span class="number">57</span>, <span class="number">42</span>, <span class="number">36</span>, <span class="number">85</span>, <span class="number">17</span>, <span class="number">55</span>, <span class="number">98</span>],</span><br><span class="line">        [<span class="number">99</span>, <span class="number">85</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">44</span>, <span class="number">34</span>, <span class="number">39</span>, <span class="number">88</span>, <span class="number">35</span>, <span class="number">13</span>, <span class="number">26</span>, <span class="number">40</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">19</span>,</span><br><span class="line">         <span class="number">10</span>, <span class="number">22</span>, <span class="number">28</span>, <span class="number">21</span>, <span class="number">52</span>, <span class="number">54</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">78</span>, <span class="number">53</span>, <span class="number">66</span>, <span class="number">87</span>, <span class="number">17</span>, <span class="number">54</span>, <span class="number">87</span>],</span><br><span class="line">        [<span class="number">80</span>, <span class="number">66</span>, <span class="number">29</span>, <span class="number">77</span>, <span class="number">41</span>, <span class="number">92</span>, <span class="number">61</span>, <span class="number">25</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">92</span>, <span class="number">0</span>, <span class="number">30</span>,</span><br><span class="line">         <span class="number">37</span>, <span class="number">10</span>, <span class="number">81</span>, <span class="number">59</span>, <span class="number">24</span>, <span class="number">75</span>, <span class="number">74</span>, <span class="number">34</span>, <span class="number">65</span>, <span class="number">82</span>, <span class="number">53</span>, <span class="number">100</span>, <span class="number">82</span>, <span class="number">69</span>, <span class="number">92</span>],</span><br><span class="line">        [<span class="number">87</span>, <span class="number">73</span>, <span class="number">97</span>, <span class="number">59</span>, <span class="number">72</span>, <span class="number">77</span>, <span class="number">34</span>, <span class="number">86</span>, <span class="number">57</span>, <span class="number">90</span>, <span class="number">10</span>, <span class="number">74</span>, <span class="number">38</span>, <span class="number">18</span>, <span class="number">0</span>,</span><br><span class="line">         <span class="number">90</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">17</span>, <span class="number">71</span>, <span class="number">63</span>, <span class="number">95</span>, <span class="number">83</span>, <span class="number">88</span>, <span class="number">45</span>, <span class="number">32</span>, <span class="number">40</span>, <span class="number">51</span>, <span class="number">70</span>, <span class="number">71</span>],</span><br><span class="line">        [<span class="number">78</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">92</span>, <span class="number">50</span>, <span class="number">81</span>, <span class="number">91</span>, <span class="number">59</span>, <span class="number">11</span>, <span class="number">48</span>, <span class="number">52</span>, <span class="number">58</span>, <span class="number">30</span>, <span class="number">79</span>, <span class="number">48</span>,</span><br><span class="line">         <span class="number">0</span>, <span class="number">26</span>, <span class="number">28</span>, <span class="number">52</span>, <span class="number">17</span>, <span class="number">24</span>, <span class="number">11</span>, <span class="number">63</span>, <span class="number">55</span>, <span class="number">46</span>, <span class="number">76</span>, <span class="number">59</span>, <span class="number">32</span>, <span class="number">43</span>, <span class="number">96</span>],</span><br><span class="line">        [<span class="number">77</span>, <span class="number">64</span>, <span class="number">11</span>, <span class="number">77</span>, <span class="number">89</span>, <span class="number">64</span>, <span class="number">23</span>, <span class="number">31</span>, <span class="number">81</span>, <span class="number">43</span>, <span class="number">55</span>, <span class="number">30</span>, <span class="number">38</span>, <span class="number">92</span>, <span class="number">63</span>,</span><br><span class="line">         <span class="number">67</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">31</span>, <span class="number">40</span>, <span class="number">59</span>, <span class="number">39</span>, <span class="number">41</span>, <span class="number">35</span>, <span class="number">72</span>, <span class="number">19</span>, <span class="number">37</span>, <span class="number">12</span>, <span class="number">76</span>, <span class="number">65</span>],</span><br><span class="line">        [<span class="number">33</span>, <span class="number">80</span>, <span class="number">18</span>, <span class="number">86</span>, <span class="number">35</span>, <span class="number">18</span>, <span class="number">81</span>, <span class="number">22</span>, <span class="number">32</span>, <span class="number">47</span>, <span class="number">72</span>, <span class="number">43</span>, <span class="number">60</span>, <span class="number">73</span>, <span class="number">88</span>,</span><br><span class="line">         <span class="number">49</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">46</span>, <span class="number">84</span>, <span class="number">72</span>, <span class="number">25</span>, <span class="number">15</span>, <span class="number">88</span>, <span class="number">22</span>, <span class="number">69</span>, <span class="number">60</span>, <span class="number">97</span>, <span class="number">97</span>],</span><br><span class="line">        [<span class="number">57</span>, <span class="number">68</span>, <span class="number">69</span>, <span class="number">33</span>, <span class="number">74</span>, <span class="number">36</span>, <span class="number">24</span>, <span class="number">49</span>, <span class="number">32</span>, <span class="number">11</span>, <span class="number">48</span>, <span class="number">38</span>, <span class="number">56</span>, <span class="number">20</span>, <span class="number">60</span>,</span><br><span class="line">         <span class="number">24</span>, <span class="number">16</span>, <span class="number">69</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">27</span>, <span class="number">98</span>, <span class="number">33</span>, <span class="number">26</span>, <span class="number">73</span>, <span class="number">37</span>, <span class="number">40</span>, <span class="number">83</span>, <span class="number">29</span>, <span class="number">89</span>],</span><br><span class="line">        [<span class="number">83</span>, <span class="number">79</span>, <span class="number">23</span>, <span class="number">58</span>, <span class="number">33</span>, <span class="number">65</span>, <span class="number">76</span>, <span class="number">97</span>, <span class="number">65</span>, <span class="number">17</span>, <span class="number">93</span>, <span class="number">87</span>, <span class="number">66</span>, <span class="number">25</span>, <span class="number">95</span>,</span><br><span class="line">         <span class="number">28</span>, <span class="number">90</span>, <span class="number">78</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">64</span>, <span class="number">90</span>, <span class="number">41</span>, <span class="number">12</span>, <span class="number">74</span>, <span class="number">30</span>, <span class="number">100</span>, <span class="number">86</span>, <span class="number">73</span>, <span class="number">49</span>],</span><br><span class="line">        [<span class="number">57</span>, <span class="number">66</span>, <span class="number">50</span>, <span class="number">82</span>, <span class="number">42</span>, <span class="number">56</span>, <span class="number">54</span>, <span class="number">61</span>, <span class="number">55</span>, <span class="number">65</span>, <span class="number">23</span>, <span class="number">98</span>, <span class="number">78</span>, <span class="number">54</span>, <span class="number">44</span>,</span><br><span class="line">         <span class="number">17</span>, <span class="number">60</span>, <span class="number">89</span>, <span class="number">17</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">100</span>, <span class="number">44</span>, <span class="number">58</span>, <span class="number">11</span>, <span class="number">55</span>, <span class="number">25</span>],</span><br><span class="line">        [<span class="number">88</span>, <span class="number">18</span>, <span class="number">94</span>, <span class="number">98</span>, <span class="number">32</span>, <span class="number">55</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">52</span>, <span class="number">80</span>, <span class="number">30</span>, <span class="number">15</span>, <span class="number">89</span>, <span class="number">60</span>,</span><br><span class="line">         <span class="number">72</span>, <span class="number">20</span>, <span class="number">59</span>, <span class="number">77</span>, <span class="number">31</span>, <span class="number">83</span>, <span class="number">0</span>, <span class="number">83</span>, <span class="number">51</span>, <span class="number">90</span>, <span class="number">48</span>, <span class="number">63</span>, <span class="number">48</span>, <span class="number">42</span>, <span class="number">36</span>],</span><br><span class="line">        [<span class="number">98</span>, <span class="number">51</span>, <span class="number">76</span>, <span class="number">52</span>, <span class="number">42</span>, <span class="number">80</span>, <span class="number">57</span>, <span class="number">36</span>, <span class="number">98</span>, <span class="number">64</span>, <span class="number">28</span>, <span class="number">25</span>, <span class="number">18</span>, <span class="number">62</span>, <span class="number">22</span>,</span><br><span class="line">         <span class="number">59</span>, <span class="number">13</span>, <span class="number">95</span>, <span class="number">65</span>, <span class="number">69</span>, <span class="number">91</span>, <span class="number">28</span>, <span class="number">0</span>, <span class="number">88</span>, <span class="number">64</span>, <span class="number">38</span>, <span class="number">97</span>, <span class="number">66</span>, <span class="number">14</span>, <span class="number">96</span>],</span><br><span class="line">        [<span class="number">32</span>, <span class="number">20</span>, <span class="number">71</span>, <span class="number">94</span>, <span class="number">45</span>, <span class="number">93</span>, <span class="number">98</span>, <span class="number">10</span>, <span class="number">99</span>, <span class="number">78</span>, <span class="number">31</span>, <span class="number">35</span>, <span class="number">56</span>, <span class="number">18</span>, <span class="number">91</span>,</span><br><span class="line">         <span class="number">79</span>, <span class="number">23</span>, <span class="number">16</span>, <span class="number">55</span>, <span class="number">71</span>, <span class="number">53</span>, <span class="number">59</span>, <span class="number">75</span>, <span class="number">0</span>, <span class="number">58</span>, <span class="number">66</span>, <span class="number">11</span>, <span class="number">100</span>, <span class="number">81</span>, <span class="number">53</span>],</span><br><span class="line">        [<span class="number">68</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">62</span>, <span class="number">23</span>, <span class="number">74</span>, <span class="number">55</span>, <span class="number">11</span>, <span class="number">83</span>, <span class="number">64</span>, <span class="number">73</span>, <span class="number">57</span>, <span class="number">73</span>, <span class="number">45</span>, <span class="number">28</span>,</span><br><span class="line">         <span class="number">81</span>, <span class="number">40</span>, <span class="number">93</span>, <span class="number">78</span>, <span class="number">29</span>, <span class="number">97</span>, <span class="number">97</span>, <span class="number">36</span>, <span class="number">17</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">77</span>, <span class="number">65</span>, <span class="number">75</span>, <span class="number">31</span>],</span><br><span class="line">        [<span class="number">45</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">84</span>, <span class="number">72</span>, <span class="number">22</span>, <span class="number">47</span>, <span class="number">93</span>, <span class="number">46</span>, <span class="number">37</span>, <span class="number">85</span>, <span class="number">89</span>, <span class="number">32</span>, <span class="number">92</span>, <span class="number">59</span>,</span><br><span class="line">         <span class="number">93</span>, <span class="number">62</span>, <span class="number">12</span>, <span class="number">80</span>, <span class="number">21</span>, <span class="number">91</span>, <span class="number">80</span>, <span class="number">49</span>, <span class="number">35</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">68</span>, <span class="number">54</span>, <span class="number">17</span>, <span class="number">45</span>],</span><br><span class="line">        [<span class="number">21</span>, <span class="number">49</span>, <span class="number">13</span>, <span class="number">58</span>, <span class="number">100</span>, <span class="number">98</span>, <span class="number">56</span>, <span class="number">12</span>, <span class="number">74</span>, <span class="number">13</span>, <span class="number">87</span>, <span class="number">36</span>, <span class="number">48</span>, <span class="number">59</span>, <span class="number">55</span>,</span><br><span class="line">         <span class="number">71</span>, <span class="number">21</span>, <span class="number">70</span>, <span class="number">45</span>, <span class="number">38</span>, <span class="number">63</span>, <span class="number">91</span>, <span class="number">99</span>, <span class="number">100</span>, <span class="number">41</span>, <span class="number">38</span>, <span class="number">0</span>, <span class="number">91</span>, <span class="number">13</span>, <span class="number">48</span>],</span><br><span class="line">        [<span class="number">69</span>, <span class="number">59</span>, <span class="number">58</span>, <span class="number">28</span>, <span class="number">25</span>, <span class="number">98</span>, <span class="number">54</span>, <span class="number">39</span>, <span class="number">75</span>, <span class="number">33</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">35</span>, <span class="number">43</span>, <span class="number">15</span>,</span><br><span class="line">         <span class="number">34</span>, <span class="number">90</span>, <span class="number">58</span>, <span class="number">62</span>, <span class="number">34</span>, <span class="number">11</span>, <span class="number">23</span>, <span class="number">41</span>, <span class="number">50</span>, <span class="number">81</span>, <span class="number">75</span>, <span class="number">83</span>, <span class="number">0</span>, <span class="number">60</span>, <span class="number">54</span>],</span><br><span class="line">        [<span class="number">36</span>, <span class="number">44</span>, <span class="number">92</span>, <span class="number">14</span>, <span class="number">41</span>, <span class="number">100</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">89</span>, <span class="number">43</span>, <span class="number">30</span>, <span class="number">27</span>, <span class="number">65</span>, <span class="number">80</span>, <span class="number">65</span>,</span><br><span class="line">         <span class="number">81</span>, <span class="number">35</span>, <span class="number">90</span>, <span class="number">17</span>, <span class="number">75</span>, <span class="number">26</span>, <span class="number">89</span>, <span class="number">13</span>, <span class="number">63</span>, <span class="number">16</span>, <span class="number">35</span>, <span class="number">22</span>, <span class="number">86</span>, <span class="number">0</span>, <span class="number">19</span>],</span><br><span class="line">        [<span class="number">85</span>, <span class="number">23</span>, <span class="number">52</span>, <span class="number">95</span>, <span class="number">40</span>, <span class="number">77</span>, <span class="number">71</span>, <span class="number">81</span>, <span class="number">45</span>, <span class="number">66</span>, <span class="number">47</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">69</span>, <span class="number">11</span>,</span><br><span class="line">         <span class="number">22</span>, <span class="number">22</span>, <span class="number">86</span>, <span class="number">90</span>, <span class="number">35</span>, <span class="number">33</span>, <span class="number">12</span>, <span class="number">36</span>, <span class="number">51</span>, <span class="number">86</span>, <span class="number">43</span>, <span class="number">59</span>, <span class="number">65</span>, <span class="number">64</span>, <span class="number">0</span>]])</span><br></pre></td></tr></table></figure><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 输入城市距离矩阵e1=>end: 算法结束, 得到结果op1=>operation: 随机初始化行走路径op2=>operation: 通过2变换法生成新路径op3=>operation: 接受新解op4=>operation: 改变温度参数cond1=>condition: 用Metropolis算法判断是否接受新解?cond2=>condition: 是否连续两次Mapkob链路径无变化?st->op1->op2->cond1cond1(yes)->op3cond1(no)->op4op3->op4->cond2cond2(yes)->e1cond2(no)->op1</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computational intelligence </tag>
            
            <tag> TSP </tag>
            
            <tag> SA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>face recognition lab report</title>
      <link href="/blog/2018/10/16/face-recognition-lab-report/"/>
      <url>/blog/2018/10/16/face-recognition-lab-report/</url>
      
        <content type="html"><![CDATA[<h2 id="问题分析"><a class="header-anchor" href="#问题分析">#</a>问题分析</h2><h3 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h3><p>在给定的Yale人脸数据集上进行人脸识别. 输入一张待测试的人脸图片, 判断其属于数据库中哪个人的脸.</p><h3 id="数据集分析"><a class="header-anchor" href="#数据集分析">#</a>数据集分析</h3><p>Yale人脸数据集中包含有165张<code>bmp</code>格式的黑白人脸图像, 图像大小为<code>100*100</code>像素, 这些图像分别属于15个人, 每人11张图像.</p><a id="more"></a><h2 id="现有方法"><a class="header-anchor" href="#现有方法">#</a>现有方法</h2><h3 id="传统方法"><a class="header-anchor" href="#传统方法">#</a>传统方法</h3><p>传统的方法是先对图像进行处理后, 对图像的特征进行提取, 然后用分类器对图像进行分类, 最后识别出图像的方法.</p><h4 id="特征提取"><a class="header-anchor" href="#特征提取">#</a>特征提取</h4><ul><li>弹性模版<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></li></ul><blockquote><p>为人脸建立属性拓扑图来表示人脸各器官之间的拓扑结构, 实际上是基于几何特征和对灰度分布信息进行小波纹理分析相结合的方法.</p></blockquote><p>该方法对初始参数要求高, 实现较复杂</p><ul><li>特征脸(PCA)<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></li></ul><blockquote><p>将图像由高维投影到低维形成特征矢量, 所有子空间的正交基被称为特征脸.</p></blockquote><p>该方法速度快, 但鲁棒性较差, 受表情、光强和视角的变化影响较大.</p><ul><li>尺度不变特征变换(SIFT)<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></li></ul><blockquote><p>在每个特征点周围的领域内, 在选定的尺度上测量图像的局部梯度, 计算梯度直方图生成具有独特性的向量.</p></blockquote><p>具有尺度不变性的优点, 并且抗遮挡. 缺点是计算量较大, 如果不借助硬件加速或专门的图像处理器很难实现.</p><ul><li>方向梯度直方图(HOG)<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></li></ul><blockquote><p>将图像分割成cell, 然后采集cell中各像素点梯度方向的直方图, 把直方图组合起来就可以构成图像特征.</p></blockquote><p>该方法对图像的颜色信息和光学变化具有不变性, 但对噪声比较敏感.</p><ul><li>局部二值模式(LBP)<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></li></ul><blockquote><p>将某中心像素的灰度值和其相邻的8个像素作比较, 生成LBP码用来反映纹理信息.</p></blockquote><p>它具有旋转和灰度不变性的优点, 对方向信息比较敏感, 一般用于处理8位或16位的图片.</p><h4 id="分类器"><a class="header-anchor" href="#分类器">#</a>分类器</h4><ul><li>最邻近分类器<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></li></ul><blockquote><p>定义一个距离度量, 以测试样本最近的k个样本的主要类别作为测试样本的类别.</p></blockquote><ul><li>线性判别式分析(LDA)<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup></li></ul><blockquote><p>假设数据为均值不同、方差相同的高斯分布, 找出最优决策面.</p></blockquote><ul><li>逻辑回归(Logistic Regression)<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup></li></ul><blockquote><p>假设后验概率为Logistics 分布, 根据贝叶斯理论计算某一类的概率.</p></blockquote><ul><li>支持向量机(SVM)<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup></li></ul><blockquote><p>最小化类间的最大间隔得到最优决策面. 对数据分布的要求低, 适用性更广.</p></blockquote><h3 id="神经网络方法"><a class="header-anchor" href="#神经网络方法">#</a>神经网络方法</h3><p>神经网络方法需要大量的数据, 不符合本实验的条件.</p><h3 id="结论"><a class="header-anchor" href="#结论">#</a>结论</h3><p>综合以上分析, 我们最终选择了<code>HOG+SVM</code>的方法.</p><h2 id="实验过程"><a class="header-anchor" href="#实验过程">#</a>实验过程</h2><h3 id="编程语言介绍"><a class="header-anchor" href="#编程语言介绍">#</a>编程语言介绍</h3><p>本实验所选择的编程语言为<code>Matlab</code>, 编程软件为<code>Matlab 2018b</code>.</p><h3 id="数据集预处理"><a class="header-anchor" href="#数据集预处理">#</a>数据集预处理</h3><p>对每个人选取1张作为测试样本, 其余10张作为训练样本. 因此最终的训练集包含150张图像, 测试集为15张.</p><h3 id="程序编写"><a class="header-anchor" href="#程序编写">#</a>程序编写</h3><h4 id="svm构造15个二分类器"><a class="header-anchor" href="#svm构造15个二分类器">#</a>SVM构造15个二分类器</h4><p>构造15个分类器, 每一个分类器用10张作为正样本, 其余140张作为该分类器的负样本, 然后进行训练. 最终得到15个分类器, 用于分别识别是否为15个人的图像.</p><h4 id="hog-svm构造15个二分类器"><a class="header-anchor" href="#hog-svm构造15个二分类器">#</a>HOG+SVM构造15个二分类器</h4><p>和之前的方法相同, 在图像被加入分类器中进行训练之前, 先将图像的大小转换为<code>256*256</code>, 然后提取出HOG特征, 重复上述实验.<br><code>extractHOGFeatures</code><sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup>是Matlab预先实现好的方法, 选取<code>cell</code>为<code>8*8</code>, <code>block</code>为<code>2*2</code>.<br>图一为<code>s1.bmp</code>和它的HOG特征图:</p><center><p><img src="https://onns.xyz/blog/image/20181017-1.jpg" alt="原图以及HOG特征图"></p><p>图1 原图以及HOG特征图</p></center><h4 id="hog-svm构造多分类器"><a class="header-anchor" href="#hog-svm构造多分类器">#</a>HOG+SVM构造多分类器</h4><p>在训练图像开始之前, 将HOG特征图和特征图对应的标签(即对应的人脸的标号1-15)传入<code>fitcecoc</code><sup class="footnote-ref"><a href="#fn11" id="fnref11">[11]</a></sup>函数即可训练得到一个多标签的SVM, 对于给定的测试样例, 可以给出样例所对应的标签.</p><h2 id="实验结果"><a class="header-anchor" href="#实验结果">#</a>实验结果</h2><h3 id="实验过程说明"><a class="header-anchor" href="#实验过程说明">#</a>实验过程说明</h3><p>由于前一个实验方法并不能到达理想的100%准确率, 所以改变了不同的方法重新实现, 最终有三种不同的实验方法.<br>下述实验结果如无特殊说明, 都是按照<code>训练集10:测试集1</code>进行的实验, 实验结果为<code>1次</code>实验的结果.</p><h3 id="不同实验方法结果对比"><a class="header-anchor" href="#不同实验方法结果对比">#</a>不同实验方法结果对比</h3><center>表1 实验结果</center><table><thead><tr><th style="text-align:left">实验方法</th><th style="text-align:center">准确率</th><th style="text-align:center">程序运行时间</th></tr></thead><tbody><tr><td style="text-align:left">SVM</td><td style="text-align:center">93.333%</td><td style="text-align:center">27.485s</td></tr><tr><td style="text-align:left">SVM+HOG binary</td><td style="text-align:center">93.333%</td><td style="text-align:center"><font color=#ff0000>4.928s</font></td></tr><tr><td style="text-align:left">SVM+HOG</td><td style="text-align:center"><font color=#ff0000>100%</font></td><td style="text-align:center">11.556s</td></tr></tbody></table><p>实验结果如表1所示, 在准确率上, <code>SVM+HOG多分类</code>的方法在准确率上初步达到了<code>100%</code>, 但仍需要后续的多次实验证明; 在程序运行时间上, <code>SVM+HOG二分类</code>的方法耗时最少, 与第一种方法相对比, 提取的特征图较原图像相比, 更容易得到特征, 更容易训练, 与第三种方法相对比, 二分类器只需要判断<code>是或不是</code>的问题, 较<code>是哪个</code>这个问题来说相对简单, 故消耗时间最少.</p><h3 id="svm-hog多分类"><a class="header-anchor" href="#svm-hog多分类">#</a>SVM+HOG多分类</h3><p>一次实验的结果具有随机性, 故取<code>10次</code>实验的<code>平均值</code>并改变训练集与测试集的比例, 得到的结果如表2所示.</p><center>表2 10次随机实验结果平均值</center><table><thead><tr><th style="text-align:center">训练集:测试集</th><th style="text-align:center">准确率</th><th style="text-align:center">程序运行时间</th></tr></thead><tbody><tr><td style="text-align:center">10:1</td><td style="text-align:center">100.00%</td><td style="text-align:center">7.7176s</td></tr><tr><td style="text-align:center">9:2</td><td style="text-align:center">99.50%</td><td style="text-align:center">8.1220s</td></tr><tr><td style="text-align:center">8:3</td><td style="text-align:center">99.78%</td><td style="text-align:center">8.4686s</td></tr><tr><td style="text-align:center">7:4</td><td style="text-align:center">99.50%</td><td style="text-align:center">9.2287s</td></tr><tr><td style="text-align:center">6:5</td><td style="text-align:center">95.73%</td><td style="text-align:center">9.7408s</td></tr></tbody></table><h3 id="实验结果分析"><a class="header-anchor" href="#实验结果分析">#</a>实验结果分析</h3><p><code>SVM分类</code>方法训练的分类器未能识别的图像都是单侧光照下的图像, 故后续改进时增加了对<code>光照不敏感</code>的HOG特性来进行训练; <code>HOG+SVM二分类</code>方法存在着<code>样本不对称</code>的问题, 也未能达到理想的实验效果; <code>SVM+HOG多分类器</code>方法在<code>对光照不敏感</code>的同时, 也不存在<code>样本不对称</code>的问题, 最终达到了预期的实验结果, 即<code>100%</code>的准确率.</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="http://www.arocmag.com/getarticle/?aid=8d1cc55eca76ad42" target="_blank" rel="noopener">人脸识别研究综述</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/liulina603/article/details/7925170" target="_blank" rel="noopener">人脸识别主要算法原理</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://www.zhihu.com/question/45833619" target="_blank" rel="noopener">Scale-Invariant Feature Taransform</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://www.zhihu.com/question/45833619" target="_blank" rel="noopener">Histogram of Oriented Gradient</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p><a href="https://www.zhihu.com/question/45833619" target="_blank" rel="noopener">Local Binary Pattern</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p></li><li id="fn6" class="footnote-item"><p><a href="https://blog.csdn.net/u013146742/article/details/52356560" target="_blank" rel="noopener">最邻近分类器</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p></li><li id="fn7" class="footnote-item"><p><a href="https://blog.csdn.net/u013146742/article/details/52356560" target="_blank" rel="noopener">Linear Discriminant Analysis</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p></li><li id="fn8" class="footnote-item"><p><a href="https://blog.csdn.net/liulina603/article/details/78676723" target="_blank" rel="noopener">Logistic Regression</a> <a href="#fnref8" class="footnote-backref">↩︎</a></p></li><li id="fn9" class="footnote-item"><p><a href="https://blog.csdn.net/liugan528/article/details/79448379" target="_blank" rel="noopener">Support Vector Machine</a> <a href="#fnref9" class="footnote-backref">↩︎</a></p></li><li id="fn10" class="footnote-item"><p><a href="http://ww2.mathworks.cn/help/vision/ref/extracthogfeatures.html" target="_blank" rel="noopener">Extract histogram of oriented gradients (HOG) features</a> <a href="#fnref10" class="footnote-backref">↩︎</a></p></li><li id="fn11" class="footnote-item"><p><a href="https://www.mathworks.com/help/stats/fitcecoc.html" target="_blank" rel="noopener">Fit multiclass models for support vector machines or other classifierscollapse</a> <a href="#fnref11" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer vision </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bim预览</title>
      <link href="/blog/2018/10/04/bim-preview/"/>
      <url>/blog/2018/10/04/bim-preview/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><a id="more"></a><center><p><canvas id="viewer" width="640" height="360"></canvas></p></center><script src="//docs.xbim.net/XbimWebUI/scripts/xbim-viewer.debug.bundle.js"></script><script type="text/javascript">    var canvas = document.getElementById('viewer');    var viewer = new xViewer('viewer');    viewer.load('//onns.xyz/attachment/m6.wexbim');    viewer.start();</script>]]></content>
      
      
      <categories>
          
          <category> bim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bim </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插件整理</title>
      <link href="/blog/2018/10/03/hexo-plugin-list/"/>
      <url>/blog/2018/10/03/hexo-plugin-list/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a class="header-anchor" href="#介绍">#</a>介绍</h2><p>hexo有很多很好用的插件, 可以优化写博客的体验, 尤其是对于一些数学公示或图表的渲染.</p><a id="more"></a><h2 id="公式"><a class="header-anchor" href="#公式">#</a>公式</h2><p>网上的关于数学公式渲染的解决方案基本都是换了hexo的默认markdown解析工具, 我不是很想这样修改, 还是想采用插件的方法.<br><a href="https://github.com/hexojs/hexo-math" target="_blank" rel="noopener">hexo-math</a>是一个渲染数学公式的插件, 虽然从github上的评论来看, 在很多情况下都存在不能渲染的问题, 不过按照下面的配置, 应该可以成功实现数学公式的渲染, 先看一下效果.</p><h3 id="效果"><a class="header-anchor" href="#效果">#</a>效果</h3>$$\begin{aligned}\dot{x} & = \sigma(y-x) \\\dot{y} & = \rho x - y - xz \\\dot{z} & = -\beta z + xy\end{aligned}$$<h3 id="配置"><a class="header-anchor" href="#配置">#</a>配置</h3><p>首先通过npm安装<code>hexo-math</code>, 不知道为什么要连续执行两次才能执行成功.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-math --save</span><br><span class="line">npm install hexo-math --save</span><br></pre></td></tr></table></figure><p>修改网站根目录的<code>_config.yml</code>, 添加如下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">math:</span><br><span class="line">  engine: &#39;mathjax&#39; # or &#39;katex&#39;</span><br><span class="line">  mathjax:</span><br><span class="line">    src: &quot;&#x2F;&#x2F;cdn.mathjax.org&#x2F;mathjax&#x2F;latest&#x2F;MathJax.js?config&#x3D;TeX-AMS-MML_HTMLorMML&quot;</span><br><span class="line">    config:</span><br><span class="line">      # MathJax config</span><br></pre></td></tr></table></figure><h3 id="用法"><a class="header-anchor" href="#用法">#</a>用法</h3><p>由于正常markdown的<code>$$...$$</code>等写法会和hexo的解析方法产生冲突, 改成如下的写法即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">$$</span><br><span class="line">\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class="line">n &amp; \text&#123;Left&#125; &amp; \text&#123;Center&#125; &amp; \text&#123;Right&#125; \\</span><br><span class="line">\hline</span><br><span class="line">1 &amp; 0.24 &amp; 1 &amp; 125 \\</span><br><span class="line">2 &amp; -1 &amp; 189 &amp; -8 \\</span><br><span class="line">3 &amp; -20 &amp; 2000 &amp; 1+10i</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">$$</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>显示结果如下:</p>$$\begin{array}{c|lcr}n & \text{Left} & \text{Center} & \text{Right} \\\hline1 & 0.24 & 1 & 125 \\2 & -1 & 189 & -8 \\3 & -20 & 2000 & 1+10i\end{array}$$]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令整理</title>
      <link href="/blog/2018/10/03/linux-command-list/"/>
      <url>/blog/2018/10/03/linux-command-list/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><a id="more"></a><h2 id="bash"><a class="header-anchor" href="#bash">#</a>bash</h2><ul><li>Centos7防火墙开启或关闭某个端口:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport &lt;port&gt; -j ACCEPT</span><br><span class="line">iptables -I INPUT -p tcp --dport &lt;port&gt; -j REJECT</span><br></pre></td></tr></table></figure><h2 id="git"><a class="header-anchor" href="#git">#</a>git</h2><ul><li>git回退到某一个版本, 即删除commit记录:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;commit_id&gt;</span><br><span class="line">git push -f -u origin &lt;branch&gt;</span><br></pre></td></tr></table></figure><ul><li>git新建一个新的空分支:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout --orphan &lt;branch&gt;</span><br><span class="line">git rm -rf .</span><br></pre></td></tr></table></figure><h2 id="python"><a class="header-anchor" href="#python">#</a>python</h2><ul><li>去掉字符串两边的空格:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.strip()</span><br></pre></td></tr></table></figure><ul><li>大小写转换:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 小写字母转换成大写字母</span></span><br><span class="line">string.upper()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 大写字母转换成小写字母</span></span><br><span class="line">string.lower()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开头字母大写</span></span><br><span class="line">string.capitalize()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有首字母大写</span></span><br><span class="line">string.title()</span><br></pre></td></tr></table></figure><h2 id="selenium"><a class="header-anchor" href="#selenium">#</a>selenium</h2>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Computational Intelligence Homework No.1</title>
      <link href="/blog/2018/09/29/2018-computational-intelligence-homework-no.1/"/>
      <url>/blog/2018/09/29/2018-computational-intelligence-homework-no.1/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h2><p>小孩分油问题：两个小孩去打油，一人带了一个一斤的空瓶，另一个带了一个七两、一个三两的空瓶。原计划各打一斤油，可是由于所带的钱不够，只好两人合打了一斤油，在回家的路上，两人想平分这一斤油，可是又没有其它工具。试仅用三个瓶子(一斤、七两、三两)精确地分出两个半斤油来。</p><a id="more"></a><h2 id="算法设计"><a class="header-anchor" href="#算法设计">#</a>算法设计</h2><h3 id="选择合适的数据结构表示问题状态"><a class="header-anchor" href="#选择合适的数据结构表示问题状态">#</a>选择合适的数据结构表示问题状态</h3><p>用向量<code>(T, S, Q)</code>表示状态, <code>E</code>表示10斤瓶中的油量, <code>S</code>表示7斤瓶中的油量, <code>Q</code>表示3斤瓶中的油量.</p><p>问题的起始状态: <font color="#FF0000">(10, 0, 0)</font></p><p>问题的目标状态: <font color="#FF0000">(5, 5, 0)</font></p><h3 id="确定智能算子，用以变化状态的规则"><a class="header-anchor" href="#确定智能算子，用以变化状态的规则">#</a>确定智能算子，用以变化状态的规则</h3><center id="rulelist">规则表</center><table><thead><tr><th style="text-align:left">规则号</th><th style="text-align:left">规则</th><th style="text-align:left">解释</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">(T, S, Q) and S&lt;7 and T+S≥7 → (T+S-7, 7, Q)</td><td style="text-align:left">用10斤瓶油装满7斤瓶</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">(T, S, Q) and Q&lt;3 and T+Q≥3 → (T+Q-3, S, 3)</td><td style="text-align:left">用10斤瓶油装满3斤瓶</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">(T, S, Q) and T&lt;10 and T+S≥10 → (10, T+S-10, Q)</td><td style="text-align:left">用7斤瓶油装满10斤瓶</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">(T, S, Q) and Q&lt;3 and S+Q≥3 → (T, S+Q-3, 3)</td><td style="text-align:left">用7斤瓶油装满3斤瓶</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">(T, S, Q) and T&lt;10 and T+Q≥10 → (10, S, T+Q-10)</td><td style="text-align:left">用3斤瓶油装满10斤瓶</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">(T, S, Q) and S&lt;7 and S+Q≥7 → (T, 7, S+Q-7)</td><td style="text-align:left">用3斤瓶油装满7斤瓶</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">(T, S, Q) and T&gt;0 and T+S≤7 → (0, T+S, Q)</td><td style="text-align:left">10斤瓶油全部倒入7斤瓶</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">(T, S, Q) and T&gt;0 and T+Q≤3 → (0, S, T+Q)</td><td style="text-align:left">10斤瓶油全部倒入3斤瓶</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">(T, S, Q) and S&gt;0 and T+S≤10 → (T+S, 0, Q)</td><td style="text-align:left">7斤瓶油全部倒入10斤瓶</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">(T, S, Q) and S&gt;0 and S+Q≤3 → (T, 0, S+Q)</td><td style="text-align:left">7斤瓶油全部倒入3斤瓶</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">(T, S, Q) and Q&gt;0 and T+Q≤10 → (T+Q, S, 0)</td><td style="text-align:left">3斤瓶油全部倒入10斤瓶</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">(T, S, Q) and Q&gt;0 and S+Q≤7 → (T, S+Q, 0)</td><td style="text-align:left">3斤瓶油全部倒入7斤瓶</td></tr></tbody></table><h3 id="确定搜索方法"><a class="header-anchor" href="#确定搜索方法">#</a>确定搜索方法</h3><p>最基本的搜索方法为<code>深度优先搜索</code>和<code>广度优先搜索</code>, 考虑到本题目存在着无限深度的情况, 故选用<code>广度优先搜索</code>方法来实现.</p><h2 id="程序流程"><a class="header-anchor" href="#程序流程">#</a>程序流程</h2><p>大体的程序流程如图1所示</p><center><div id="flowchart-0" class="flow-chart"></div>图1 程序流程图</center><h2 id="核心伪代码"><a class="header-anchor" href="#核心伪代码">#</a>核心伪代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="comment">//取出当前队列的头部节点</span></span><br><span class="line">  currNode = list.shift();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//队列为空, 搜索失败</span></span><br><span class="line">  <span class="keyword">if</span>(currNode == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//判断是否为目标状态</span></span><br><span class="line">  <span class="keyword">if</span>(checkNode(currNode)) &#123;</span><br><span class="line">    printPath(currNode);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//将所有可能的下一步状态加入队列尾部</span></span><br><span class="line">  pour(currNode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码运行及测试"><a class="header-anchor" href="#代码运行及测试">#</a>代码运行及测试</h2><p>代码运行结果如图2所示, 由于并未对状态进行优化, 首次出现的目标状态在<code>第十层</code>, 有<code>190221 </code>个重复状态, 严重影响了运算速度.</p><center><p><img src="https://onns.xyz/blog/image/20180930-1.png" alt="代码运行结果图"></p><p>图2 代码运行结果图</p></center><p>改进方法是在对目标状态进行搜索的过程中, 对于那些在之前存在过的状态进行剔除, 只保留新状态, 改进后的代码运行结果如图3所示.</p><center><p><img src="https://onns.xyz/blog/image/20180930-2.png" alt="改进后代码运行结果图"></p><p>图3 改进后代码运行结果图</p></center><h2 id="结论"><a class="header-anchor" href="#结论">#</a>结论</h2><p>从<font color="#FF0000">(10, 0, 0)</font>到<font color="#FF0000">(5, 5, 0)</font>的分油方法为:</p><ul><li>用10斤瓶油装满7斤瓶 (10, 0, 0) -&gt; (3, 7, 0)</li><li>用7斤瓶油装满3斤瓶 (3, 7, 0) -&gt; (3, 4, 3)</li><li>3斤瓶油全部倒入10斤瓶 (3, 4, 3) -&gt; (6, 4, 0)</li><li>用7斤瓶油装满3斤瓶 (6, 4, 0) -&gt; (6, 1, 3)</li><li>3斤瓶油全部倒入10斤瓶 (6, 1, 3) -&gt; (9, 1, 0)</li><li>7斤瓶油全部倒入3斤瓶 (9, 1, 0) -&gt; (9, 0, 1)</li><li>用10斤瓶油装满7斤瓶 (9, 0, 1) -&gt; (2, 7, 1)</li><li>用7斤瓶油装满3斤瓶 (2, 7, 1) -&gt; (2, 5, 3)</li><li>3斤瓶油全部倒入10斤瓶 (2, 5, 3) -&gt; (5, 5, 0)</li></ul><p>如图4所示红色箭头即为分油方法.</p><center><div id="graphviz-0"></div><p>图4 分油方法示意图</p></center><p><a href="#rulelist">注:箭头上方数字即为规则号</a></p><script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script><script src="//flowchart.js.org/flowchart-latest.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 确定初始状态(10, 0, 0), 加入队列e1=>end: 未找到目标状态e2=>end: 达到目标状态(5, 5, 0)op1=>operation: 取出队列头部中的第一个状态cond1=>condition: 此状态是否为空?cond2=>condition: 是否为目标状态?op2=>operation: 将所有可能下一步状态加入队列尾部st->op1->cond1cond1(yes)->e1cond1(no)->cond2cond2(yes)->e2cond2(no)->op2op2->op1</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><script src="https://unpkg.com/viz.js@2.1.2/viz.js"></script><script src="https://unpkg.com/viz.js@2.1.2/full.render.js"></script><textarea id="graphviz-0-code" style="display: none">digraph G {  "(10,0,0)" -> "(3,7,0)"[color=red,label="1"]  "(10,0,0)" -> "(7,0,3)"[label="2"]  "(3,7,0)" -> "(0,7,3)"[label="2"]  "(3,7,0)" -> "(3,4,3)"[color=red,label="4"]  "(7,0,3)" -> "(7,3,0)"[label="12"]  "(3,4,3)" -> "(6,4,0)"[color=red,label="11"]  "(7,3,0)" -> "(4,3,3)"[label="2"]  "(6,4,0)" -> "(6,1,3)"[color=red,label="4"]  "(4,3,3)" -> "(4,6,0)"[label="12"]  "(6,1,3)" -> "(9,1,0)"[color=red,label="11"]  "(4,6,0)" -> "(1,6,3)"[label="2"]  "(9,1,0)" -> "(9,0,1)"[color=red,label="10"]  "(1,6,3)" -> "(1,7,2)"[label="6"]  "(9,0,1)" -> "(2,7,1)"[color=red,label="1"]  "(1,7,2)" -> "(8,0,2)"[label="9"]  "(2,7,1)" -> "(2,5,3)"[color=red,label="4"]  "(8,0,2)" -> "(8,2,0)"[label="12"]  "(2,5,3)" -> "(5,5,0)"[color=red,label="11"]  "(8,2,0)" -> "(5,2,3)"[label="2"]}</textarea><script>  var viz = new Viz();  var code = document.getElementById("graphviz-0-code").value;  viz.renderSVGElement(code)  .then(function(element) {    document.getElementById("graphviz-0").append(element)  });</script>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computational intelligence </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql拼接字符串搜索</title>
      <link href="/blog/2018/04/03/mysql-string-search/"/>
      <url>/blog/2018/04/03/mysql-string-search/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a class="header-anchor" href="#问题描述">#</a>问题描述</h2><p>在mysql的表中某一个键值是由<code>,</code>分隔的多个<code>id</code>组成的字符串, 例如: <code>1,2,3,4,5,6,7,8</code>.<br>现在需要搜索所有拥有<code>id</code>为<code>3</code>的行, 例如: <code>1,2,3,4</code>, <code>1,2,3</code>, <code>3,4,5,6</code>.</p><a id="more"></a><h3 id="方法一"><a class="header-anchor" href="#方法一">#</a>方法一</h3><p>这是我自己想到的最笨的方法, 就是将数据都取出之后再查找, 效率肯定很低.<br>不推荐.</p><h3 id="方法二"><a class="header-anchor" href="#方法二">#</a>方法二</h3><p>用模糊搜索, 但是假如匹配<code>id</code>为<code>3</code>的字段, 也同时会匹配<code>id</code>为<code>31</code>或<code>13</code>的字段.<br>解决方案是将字符串头尾添加<code>,</code>, 这样匹配<code>,3,</code>即可.只是不够优雅.<br>不推荐.</p><h3 id="方法三"><a class="header-anchor" href="#方法三">#</a>方法三</h3><p>mysql提供了内置的函数<code>FIND_IN_SET(str,strlist)</code>,<br>只需<code>find_in_set('3', user_id_list)</code>即可.<br>推荐.</p><p>谢谢群里的大神.</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>乌班图下使用shadowsocksr客户端</title>
      <link href="/blog/2018/04/02/ubuntu-client-setup/"/>
      <url>/blog/2018/04/02/ubuntu-client-setup/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>新配置的电脑需要下载Google的插件和Google的搜索功能, 所以要配置代理. 记录一下.</p><a id="more"></a><h3 id="安装git"><a class="header-anchor" href="#安装git">#</a>安装git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git -y</span><br></pre></td></tr></table></figure><h3 id="获取shadowsocksr"><a class="header-anchor" href="#获取shadowsocksr">#</a>获取shadowsocksr</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b manyuser https://github.com/shadowsocksr-backup/shadowsocksr.git</span><br><span class="line"><span class="built_in">cd</span> shadowsocksr/shadowsocks</span><br></pre></td></tr></table></figure><h3 id="创建配置文件"><a class="header-anchor" href="#创建配置文件">#</a>创建配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="attr">"server_ipv6"</span>: <span class="string">"::"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">8000</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"password"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"udp_timeout"</span>: <span class="number">60</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"auth_aes128_md5"</span>,</span><br><span class="line">    <span class="attr">"protocol_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"obfs"</span>:<span class="string">"http_simple"</span>,</span><br><span class="line">    <span class="attr">"obfs_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workers"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行"><a class="header-anchor" href="#运行">#</a>运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python local.py -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure><h3 id="说明"><a class="header-anchor" href="#说明">#</a>说明</h3><p>此时代理已经运行在了127.0.0.1:1080, 将需要代理的网址代理到此端口即可.</p><h2 id="附录"><a class="header-anchor" href="#附录">#</a>附录</h2><h3 id="chrome插件推荐"><a class="header-anchor" href="#chrome插件推荐">#</a>Chrome插件推荐</h3><h4 id="switchyomega"><a class="header-anchor" href="#switchyomega">#</a><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=en" target="_blank" rel="noopener">SwitchyOmega</a></h4><p>chrome中通过SwitchyOmega可以将访问的网址代理到前面的shadowsocksr客户端访问.<br>代理设置:<br>协议 <code>SOCKS5</code><br>服务器 <code>127.0.0.1</code><br>端口 <code>1080</code></p><p>也可以根据地址选择自动切换代理.<br>代理设置:<br>路由列表格式 <code>AutoProxy</code><br>路由列表地址 <code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code></p><p>应用即可.</p><h4 id="google-input-tools"><a class="header-anchor" href="#google-input-tools">#</a><a href="https://chrome.google.com/webstore/detail/google-input-tools/mclkkofklkfljcocdinagocijmpgbhab?hl=en" target="_blank" rel="noopener">Google Input Tools</a></h4><p>chrome中可以使用的输入法, 支持多种语言和个人词库.</p><h2 id="参考链接"><a class="header-anchor" href="#参考链接">#</a>参考链接</h2><ul><li><a href="https://github.com/shadowsocksr-backup/shadowsocks-rss/wiki" target="_blank" rel="noopener">Python client setup (Mult language)</a></li><li><a href="https://www.switchyomega.com/settings.html" target="_blank" rel="noopener">配置 - SwitchyOmega - 轻松快捷地管理和切换多个代理设置</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> shadowsocksr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器文档</title>
      <link href="/blog/2018/01/30/server-document/"/>
      <url>/blog/2018/01/30/server-document/</url>
      
        <content type="html"><![CDATA[<h2 id="环境依赖"><a class="header-anchor" href="#环境依赖">#</a>环境依赖</h2><ul><li>Centos/7.x.x</li><li>nginx/1.12.2</li><li>PHP/7.1.x、php-fpm/7.1.x</li><li>mysql/5.7.x</li><li>unoconv/0.8.x</li></ul><a id="more"></a><h2 id="系统启动流程"><a class="header-anchor" href="#系统启动流程">#</a>系统启动流程</h2><ol><li>打开nginx服务器 <code>nginx</code></li><li>开启php服务 <code>service php-fpm start</code></li><li>开启mysql服务 <code>service mysqld start</code></li><li>关闭selinux防火墙 <code>setenforce 0</code></li><li>开启iptables对相应端口的屏蔽 <code>iptables -I INPUT -p tcp --dport </code><font color=#ff0000><code>10080</code></font><code> -j ACCEPT</code></li><li>开启unoconv监听器并后台运行 <code>nohup unoconv --listener &amp;</code></li></ol><h2 id="相关配置文件"><a class="header-anchor" href="#相关配置文件">#</a>相关配置文件</h2><ol><li>nginx配置文件目录 <code>/etc/nginx/nginx.conf</code></li><li>php配置文件目录 <code>/etc/php.ini</code></li><li>系统文件目录 <code>/usr/share/nginx/longjing/</code></li><li>上传文件目录 <code>/usr/share/nginx/longjing/upload/</code></li><li>导出表文件目录 <code>/usr/share/nginx/longjing/application/index/file/</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> longking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 movie list</title>
      <link href="/blog/2018/01/01/2018-movie-list/"/>
      <url>/blog/2018/01/01/2018-movie-list/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a class="header-anchor" href="#写在前面">#</a>写在前面</h3><a id="more"></a><h3 id="一月"><a class="header-anchor" href="#一月">#</a>一月</h3><ul><li>2017-01-03 <a href="https://movie.douban.com/subject/26580232/" target="_blank" rel="noopener">《看不见的客人》</a></li><li>2017-01-11 <a href="https://movie.douban.com/subject/22266126/" target="_blank" rel="noopener">《王牌保镖》</a></li><li>2017-01-12 <a href="https://movie.douban.com/subject/1578714/" target="_blank" rel="noopener">《神奇女侠》</a></li><li>2017-01-15 <a href="https://movie.douban.com/subject/10512661/" target="_blank" rel="noopener">《银翼杀手2049》</a></li><li>2017-01-17 <a href="https://movie.douban.com/subject/1292720/" target="_blank" rel="noopener">《阿甘正传》</a></li><li>2017-01-30 <a href="https://movie.douban.com/subject/3205624/" target="_blank" rel="noopener">《社交网络》</a></li></ul><h3 id="二月"><a class="header-anchor" href="#二月">#</a>二月</h3><ul><li>2017-02-02 <a href="https://movie.douban.com/subject/1851857/" target="_blank" rel="noopener">《蝙蝠侠：黑暗骑士》</a></li><li>2017-02-20 <a href="https://movie.douban.com/subject/26861685/" target="_blank" rel="noopener">《红海行动》</a></li><li>2017-02-21 <a href="https://movie.douban.com/subject/3442220/" target="_blank" rel="noopener">《海豚湾》</a></li><li>2017-02-22 <a href="https://movie.douban.com/subject/1309046/" target="_blank" rel="noopener">《V字仇杀队》</a></li><li>2017-02-24 <a href="https://movie.douban.com/subject/26698897/" target="_blank" rel="noopener">《唐人街探案2》</a></li><li>2017-02-26 <a href="https://movie.douban.com/subject/26311973/" target="_blank" rel="noopener">《唐人街探案》</a></li><li>2017-02-27 <a href="https://movie.douban.com/subject/26942674/" target="_blank" rel="noopener">《神秘巨星》</a></li></ul><h3 id="三月"><a class="header-anchor" href="#三月">#</a>三月</h3><ul><li>2017-03-01 <a href="https://movie.douban.com/subject/2158490/" target="_blank" rel="noopener">《正义联盟》</a></li><li>2017-03-06 <a href="https://movie.douban.com/subject/26662193/" target="_blank" rel="noopener">《前任3：再见前任》</a></li><li>2017-03-09 <a href="https://movie.douban.com/subject/6390825/" target="_blank" rel="noopener">《黑豹》</a></li><li>2017-03-09 <a href="https://movie.douban.com/subject/26611804/" target="_blank" rel="noopener">《三块广告牌》</a></li><li>2017-03-12 <a href="https://movie.douban.com/subject/21324900/" target="_blank" rel="noopener">《降临》</a></li><li>2017-03-13 <a href="https://movie.douban.com/subject/1900841/" target="_blank" rel="noopener">《窃听风暴》</a></li><li>2017-03-16 <a href="https://movie.douban.com/subject/26752852/" target="_blank" rel="noopener">《水形物语》</a></li><li>2017-03-18 <a href="https://movie.douban.com/subject/1760622/" target="_blank" rel="noopener">《香水》</a></li><li>2017-03-20 <a href="https://movie.douban.com/subject/1472510/" target="_blank" rel="noopener">《与女人们的对话》</a><blockquote><p>如果那个心脏病医生, 觉得你又老又衰, 而且很丑一点都不可爱了, 我愿意陪你走完最后的人生.</p></blockquote></li><li>2017-03-21 <a href="https://movie.douban.com/subject/1296821/" target="_blank" rel="noopener">《总有骄阳》</a></li><li>2017-03-23 <a href="https://movie.douban.com/subject/27042405/" target="_blank" rel="noopener">《大坏狐狸的故事》</a></li><li>2017-03-26 <a href="https://movie.douban.com/subject/26764928/" target="_blank" rel="noopener">《脸庞，村庄》</a></li><li>2017-03-27 <a href="https://movie.douban.com/subject/3530403/" target="_blank" rel="noopener">《云图》</a></li><li>2017-03-29 <a href="https://movie.douban.com/subject/4920389/" target="_blank" rel="noopener">《头号玩家》</a></li></ul><h3 id="四月"><a class="header-anchor" href="#四月">#</a>四月</h3><ul><li>2017-04-04 <a href="https://movie.douban.com/subject/3364223/" target="_blank" rel="noopener">《了不起的盖茨比》</a></li><li>2017-04-06 <a href="https://movie.douban.com/subject/26353372/" target="_blank" rel="noopener">《夜行动物》</a></li><li>2017-04-14 <a href="https://movie.douban.com/subject/26393561/" target="_blank" rel="noopener">《小萝莉的猴神大叔》</a></li></ul><h3 id="五月"><a class="header-anchor" href="#五月">#</a>五月</h3><ul><li>2017-05-31 <a href="https://movie.douban.com/subject/6874741/" target="_blank" rel="noopener">《无问西东》</a></li></ul><h3 id="六月"><a class="header-anchor" href="#六月">#</a>六月</h3><ul><li>2017-06-01 <a href="https://movie.douban.com/subject/27069070/" target="_blank" rel="noopener">《哆啦A梦：大雄的金银岛》</a></li><li>2017-06-29 <a href="https://movie.douban.com/subject/26925317/" target="_blank" rel="noopener">《动物世界》</a></li></ul><h3 id="七月"><a class="header-anchor" href="#七月">#</a>七月</h3><ul><li>2017-07-13 <a href="https://movie.douban.com/subject/1292780/" target="_blank" rel="noopener">《时光倒流七十年》</a></li><li>2017-07-17 <a href="https://movie.douban.com/subject/3742360/" target="_blank" rel="noopener">《让子弹飞》</a></li><li>2017-07-21 <a href="https://movie.douban.com/subject/1292656/" target="_blank" rel="noopener">《心灵捕手》</a></li></ul><h3 id="八月"><a class="header-anchor" href="#八月">#</a>八月</h3><ul><li>2017-08-09 <a href="https://movie.douban.com/subject/1291841/" target="_blank" rel="noopener">《教父》</a></li><li>2017-08-10 <a href="https://movie.douban.com/subject/1299131/" target="_blank" rel="noopener">《教父2》</a></li><li>2017-08-13 <a href="https://movie.douban.com/subject/1291571/" target="_blank" rel="noopener">《指环王1：魔戒再现》</a></li><li>2017-08-18 <a href="https://movie.douban.com/subject/1291572/" target="_blank" rel="noopener">《指环王2：双塔奇兵》</a></li><li>2017-08-19 <a href="https://movie.douban.com/subject/1291552/" target="_blank" rel="noopener">《指环王3：王者无敌》</a></li><li>2017-08-21 <a href="https://movie.douban.com/subject/1291999/" target="_blank" rel="noopener">《重庆森林》</a></li><li>2017-08-23 <a href="https://movie.douban.com/subject/1295124/" target="_blank" rel="noopener">《辛德勒的名单》</a></li><li>2017-08-24 <a href="https://movie.douban.com/subject/1291549/" target="_blank" rel="noopener">《放牛班的春天》</a></li><li>2017-08-27 <a href="https://movie.douban.com/subject/1292063/" target="_blank" rel="noopener">《美丽人生》</a></li><li>2017-08-28 <a href="https://movie.douban.com/subject/1889243/" target="_blank" rel="noopener">《星际穿越》</a></li><li>2017-08-29 <a href="https://movie.douban.com/subject/1293182/" target="_blank" rel="noopener">《十二怒汉》</a></li><li>2017-08-31 <a href="https://movie.douban.com/subject/25839662/" target="_blank" rel="noopener">《45周年》</a></li></ul><h3 id="九月"><a class="header-anchor" href="#九月">#</a>九月</h3><ul><li>2017-09-01 <a href="https://movie.douban.com/subject/26336252/" target="_blank" rel="noopener">《碟中谍6：全面瓦解》</a></li><li>2017-09-04 <a href="https://movie.douban.com/subject/10727641/" target="_blank" rel="noopener">《碟中谍5：神秘国度》</a></li><li>2017-09-04 <a href="https://movie.douban.com/subject/3068206/" target="_blank" rel="noopener">《碟中谍4》</a></li><li>2017-09-04 <a href="https://movie.douban.com/subject/26416603/" target="_blank" rel="noopener">《萨利机长》</a></li><li>2017-09-06 <a href="https://movie.douban.com/subject/25814705/" target="_blank" rel="noopener">《小森林 夏秋篇》</a></li><li>2017-09-06 <a href="https://movie.douban.com/subject/25814707/" target="_blank" rel="noopener">《小森林 冬春篇》</a></li><li>2017-09-07 <a href="https://movie.douban.com/subject/26874505/" target="_blank" rel="noopener">《人生果实》</a></li><li>2017-09-12 <a href="https://movie.douban.com/subject/1937401/" target="_blank" rel="noopener">《K歌情人》</a></li><li>2017-09-21 <a href="https://movie.douban.com/subject/27605698/" target="_blank" rel="noopener">《西虹市首富》</a></li><li>2017-09-22 <a href="https://movie.douban.com/subject/26806099/" target="_blank" rel="noopener">《爱猫之城》</a></li><li>2017-09-24 <a href="https://movie.douban.com/subject/1294639/" target="_blank" rel="noopener">《勇敢的心》</a></li><li>2017-09-28 <a href="https://movie.douban.com/subject/27133303/" target="_blank" rel="noopener">《超时空同居》</a></li></ul><h3 id="十月"><a class="header-anchor" href="#十月">#</a>十月</h3><h3 id="待看"><a class="header-anchor" href="#待看">#</a>待看</h3><ul><li>《绿里奇迹》</li><li>《了不起的盖茨比》</li><li><a href="https://movie.douban.com/subject/1305725/" target="_blank" rel="noopener">《大卫·戈尔的一生》</a></li><li><a href="https://movie.douban.com/subject/2369845/" target="_blank" rel="noopener">《嫌疑人X的献身》</a></li><li>《王牌特工2: 黄金圈》</li><li>《刺猬的优雅》</li><li><a href="https://movie.douban.com/subject/26356789/" target="_blank" rel="noopener">《心房客》</a></li><li><a href="https://movie.douban.com/subject/20514947/" target="_blank" rel="noopener">《龙虾》</a></li><li><a href="https://movie.douban.com/subject/2053515/" target="_blank" rel="noopener">《曾经》</a><blockquote><p>I paid the cost too late, Now you’re gone.</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2017 movie list</title>
      <link href="/blog/2017/10/30/2017-movie-list/"/>
      <url>/blog/2017/10/30/2017-movie-list/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a class="header-anchor" href="#写在前面">#</a>写在前面</h3><p>好看的电影好多, 截图放到手机里怕丢, 写下来.<br>定期更新.</p><a id="more"></a><h3 id="一月"><a class="header-anchor" href="#一月">#</a>一月</h3><ul><li>2017-01-01 <a href="https://movie.douban.com/subject/25894431/" target="_blank" rel="noopener">《星球大战外传: 侠盗一号》</a></li><li>2017-01-07 <a href="https://movie.douban.com/subject/1309196/" target="_blank" rel="noopener">《婚礼傲客》</a></li><li>2017-01-08 <a href="https://movie.douban.com/subject/25815034/" target="_blank" rel="noopener">《湄公河行动》</a></li></ul><h3 id="二月"><a class="header-anchor" href="#二月">#</a>二月</h3><ul><li>2017-02-02 <a href="https://movie.douban.com/subject/26182910/" target="_blank" rel="noopener">《功夫瑜伽》</a></li><li>2017-02-06 <a href="https://movie.douban.com/subject/26862259/" target="_blank" rel="noopener">《乘风破浪》</a></li><li>2017-02-09 <a href="https://movie.douban.com/subject/1309163/" target="_blank" rel="noopener">《恋恋笔记本》</a></li><li>2017-02-15 <a href="https://movie.douban.com/subject/25934014/" target="_blank" rel="noopener">《爱乐之城》</a></li></ul><h3 id="三月"><a class="header-anchor" href="#三月">#</a>三月</h3><ul><li>2017-03-09 <a href="https://movie.douban.com/subject/26235839/" target="_blank" rel="noopener">《内在美》</a></li><li>2017-03-10 <a href="https://movie.douban.com/subject/25980443/" target="_blank" rel="noopener">《海边的曼彻斯特》</a></li><li>2017-03-11 <a href="https://movie.douban.com/subject/2974278/" target="_blank" rel="noopener">《蓝色情人节》</a></li><li>2017-03-16 <a href="https://movie.douban.com/subject/5360889/" target="_blank" rel="noopener">《月升王国》</a></li><li>2017-03-22 <a href="https://movie.douban.com/subject/1300992/" target="_blank" rel="noopener">《完美的世界》</a></li><li>2017-03-28 <a href="https://movie.douban.com/subject/1340517/" target="_blank" rel="noopener">《初吻》</a></li><li>2017-03-29 <a href="https://movie.douban.com/subject/3550132/" target="_blank" rel="noopener">《非常主播》</a></li></ul><h3 id="四月"><a class="header-anchor" href="#四月">#</a>四月</h3><ul><li>2017-04-12 <a href="https://movie.douban.com/subject/26599076/" target="_blank" rel="noopener">《四月是你的谎言》</a></li><li>2017-04-14 <a href="https://movie.douban.com/subject/26260853/" target="_blank" rel="noopener">《速度与激情8》</a></li><li>2017-04-23 <a href="https://movie.douban.com/subject/10777687/" target="_blank" rel="noopener">《7号房的礼物》</a></li></ul><h3 id="五月"><a class="header-anchor" href="#五月">#</a>五月</h3><ul><li>2017-05-11 <a href="https://movie.douban.com/subject/1301912/" target="_blank" rel="noopener">《秋天的童话》</a></li><li>2017-05-18 <a href="https://movie.douban.com/subject/10577869/" target="_blank" rel="noopener">《时空恋旅人》</a></li><li>2017-05-26 <a href="https://movie.douban.com/subject/6311303/" target="_blank" rel="noopener">《加勒比海盗5: 死无对证》</a></li><li>2017-05-28 <a href="https://movie.douban.com/subject/26593587/" target="_blank" rel="noopener">《天才少女》</a></li><li>2017-05-31 <a href="https://movie.douban.com/subject/26586432/" target="_blank" rel="noopener">《契克》</a></li></ul><h3 id="六月"><a class="header-anchor" href="#六月">#</a>六月</h3><ul><li>2017-06-13 <a href="https://movie.douban.com/subject/1309172/" target="_blank" rel="noopener">《初恋50次》</a></li><li>2017-06-15 <a href="https://movie.douban.com/subject/3025447/" target="_blank" rel="noopener">《金蝉脱壳》</a></li></ul><h3 id="七月"><a class="header-anchor" href="#七月">#</a>七月</h3><ul><li>2017-07-02 <a href="https://movie.douban.com/subject/23761370/" target="_blank" rel="noopener">《速度与激情7》</a></li><li>2017-07-16 <a href="https://movie.douban.com/subject/6845529/" target="_blank" rel="noopener">《有希望的男人》</a></li><li>2017-07-17 <a href="https://movie.douban.com/subject/25812712/" target="_blank" rel="noopener">《神偷奶爸3》</a></li><li>2017-07-19 <a href="https://movie.douban.com/subject/26811587/" target="_blank" rel="noopener">《大护法》</a></li><li>2017-07-24 <a href="https://movie.douban.com/subject/26266085/" target="_blank" rel="noopener">《三个老枪手》</a></li><li>2017-07-29 <a href="https://movie.douban.com/subject/24529353/" target="_blank" rel="noopener">《绝地逃亡》</a></li><li>2017-07-30 <a href="https://movie.douban.com/subject/26816383/" target="_blank" rel="noopener">《喜欢你》</a></li></ul><h3 id="八月"><a class="header-anchor" href="#八月">#</a>八月</h3><ul><li>2017-08-12 <a href="https://movie.douban.com/subject/3011091/" target="_blank" rel="noopener">《忠犬八公的故事》</a></li></ul><h3 id="九月"><a class="header-anchor" href="#九月">#</a>九月</h3><ul><li>2017-09-06 <a href="https://movie.douban.com/subject/26607693/" target="_blank" rel="noopener">《敦刻尔克》</a></li><li>2017-09-09 <a href="https://movie.douban.com/subject/26366465/" target="_blank" rel="noopener">《我的少女时代》</a></li></ul><h3 id="十月"><a class="header-anchor" href="#十月">#</a>十月</h3><ul><li>2017-10-15 <a href="https://movie.douban.com/subject/27024903/" target="_blank" rel="noopener">《天才枪手》</a></li><li>2017-10-22 <a href="https://movie.douban.com/subject/1298624/" target="_blank" rel="noopener">《闻香识女人》</a></li><li>2017-10-29 <a href="https://movie.douban.com/subject/26382962/" target="_blank" rel="noopener">《美好的意外》</a></li></ul><h3 id="十一月"><a class="header-anchor" href="#十一月">#</a>十一月</h3><ul><li>2017-11-16 <a href="https://movie.douban.com/subject/3443074/" target="_blank" rel="noopener">《寂寞芳心》</a></li><li>2017-11-23 <a href="https://movie.douban.com/subject/1308820/" target="_blank" rel="noopener">《花与爱丽丝》</a></li></ul><h3 id="十二月"><a class="header-anchor" href="#十二月">#</a>十二月</h3><ul><li>2017-12-21 <a href="https://movie.douban.com/subject/1293399/" target="_blank" rel="noopener">《莫扎特传》</a></li><li>2017-12-30 <a href="https://movie.douban.com/subject/26799731/" target="_blank" rel="noopener">《请以你的名字呼唤我》</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New Here</title>
      <link href="/blog/2017/10/29/new-here/"/>
      <url>/blog/2017/10/29/new-here/</url>
      
        <content type="html"><![CDATA[<h2 id="first-and-foremost"><a class="header-anchor" href="#first-and-foremost">#</a>First and Foremost</h2><p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> is a fast, simple and powerful blog framework. You write posts in Markdown (or other languages) and Hexo generates static files with a beautiful theme in seconds.</p><a id="more"></a><p>Being tired of my old WordPress blog framework so I want to try something new. Hexo is just the one I really need! Simple and beautiful.</p><p>New here with new change, so in this blog I will try my best to wirte some posts in English.</p><p>博客的主题简单, 但是我意外的发现, 在这个主题下的文章用中文意外的比英文好看.</p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2017/10/28/hello-world/"/>
      <url>/blog/2017/10/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="quick-start"><a class="header-anchor" href="#quick-start">#</a>Quick Start</h2><h3 id="create-a-new-post"><a class="header-anchor" href="#create-a-new-post">#</a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="header-anchor" href="#run-server">#</a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="header-anchor" href="#generate-static-files">#</a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="header-anchor" href="#deploy-to-remote-sites">#</a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Arduino in command line</title>
      <link href="/blog/2017/05/01/arduino-in-command-line/"/>
      <url>/blog/2017/05/01/arduino-in-command-line/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="header-anchor" href="#前言">#</a>前言</h2><p>由于开发环境是树莓派连接Arduino的板子然后控制其它元件,而树莓派和Arduino都已经被放置在了密封装置中,只能通过wifi的方式连接,所以通过Google找到了一个教程成功实现远程Arduino编译上传.</p><a id="more"></a><h2 id="环境"><a class="header-anchor" href="#环境">#</a>环境</h2><p>Raspberry Pi3,Ubuntu-Mate 16.04 LTS,Arduino Mega 2560.</p><h2 id="配置"><a class="header-anchor" href="#配置">#</a>配置</h2><p>找到的工具是 <a href="http://inotool.org/" target="_blank" rel="noopener">Ino</a>. 首先按照文档要求, 安装依赖文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认Ubuntu下有Python 2.6+故无需重新安装</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install arduino arduino-core <span class="comment"># 大概ino也是一个控制工具,还是要依赖arduino的ide</span></span><br><span class="line">sudo apt-get install picocom <span class="comment"># picocom是一个串口调试工具</span></span><br></pre></td></tr></table></figure><p>安装后即可安装ino,官方推荐了可以用过pip和easy_install安装,不过我都安装失败了,故这里选择下载方式:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在https://pypi.python.org/pypi/ino/#downloads网页中找到最新的压缩包下载即可.</span></span><br><span class="line">tar -xvf ino-0.3.6.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ino-0.3.6/</span><br><span class="line">pip install -r requirements.txt <span class="comment"># 不知道为什么我用python setup.py就是会出错,只能手动安装pip依赖</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">sudo mv ino-0.3.6/ /usr/<span class="built_in">local</span>/ino</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/ino/bin/ino /usr/bin/ino</span><br></pre></td></tr></table></figure><h2 id="使用"><a class="header-anchor" href="#使用">#</a>使用</h2><p>因为arduino限制文件必须在工程下才能编译,所以先创建工程(其实就是一个文件夹即可):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir driver</span><br><span class="line"><span class="built_in">cd</span> driver</span><br></pre></td></tr></table></figure><p>使用init命令可以自动帮你生成一个工程:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ino init</span><br></pre></td></tr></table></figure><p>然后修改src文件下的.ino文件即可. 编写完成后,使用build命令编译:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ino build -m mega2560 <span class="comment"># -m参数是板子类型</span></span><br></pre></td></tr></table></figure><p>编译完成后,使用upload命令上传:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ino upload -m mega2560 -p /dev/ttyACM0 <span class="comment"># -p是串口号</span></span><br></pre></td></tr></table></figure><p>可以添加配置文件就不用每次build和upload的时候都带参数:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi ino.ini</span><br><span class="line">[build]</span><br><span class="line">board-model = mega2560</span><br><span class="line"></span><br><span class="line">[upload]</span><br><span class="line">board-model = mega2560</span><br><span class="line">serial-port = /dev/ttyACM0</span><br><span class="line"></span><br><span class="line">[serial]</span><br><span class="line">serial-port = /dev/ttyACM0</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a class="header-anchor" href="#参考文档">#</a>参考文档</h2><ul><li><a href="http://playground.arduino.cc//Linux/Ubuntu" target="_blank" rel="noopener">Install Arduino on Ubuntu Linux</a></li><li><a href="http://inotool.org/#installation" target="_blank" rel="noopener">Ino</a></li><li><a href="http://inotool.org/quickstart" target="_blank" rel="noopener">Ino-Quick start</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arduino </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用Adobe Photoshop创造月光场景效果</title>
      <link href="/blog/2015/12/13/how-to-create-a-moonlight-scene-photo-manipulation-with-adobe-photoshop/"/>
      <url>/blog/2015/12/13/how-to-create-a-moonlight-scene-photo-manipulation-with-adobe-photoshop/</url>
      
        <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/mTf0sRWTETF*eeeP7I5HvMkVA.n8FexdNX9YQ9NFVts!/r/dHQBAAAAAAAA" alt=""><br>最终效果图<br>在这篇教程中，我会向你展示如何制作一张女子赏花的月景图。</p><a id="more"></a><p>首先，我们先添加天空和风景，之后添加月亮，并且通过调整图层、蒙板和笔刷来改变它的效果。这之后我们再添加其它元素，例如地板、阳台、模特和鲜花，我们用相同的手法把它们结合起来。最后的作品将由几个图层构成。</p><p>通过这篇教程，你可以学习到对光线的调整、对景深的加强等等。</p><p>你是一个Lightroom的粉丝么？我们有很多好的<a href="http://graphicriver.net/category/add-ons/lightroom-presets" target="_blank" rel="noopener">Lightroom预设</a>收藏在GraphicRiver，这些将帮你在修改照片的效应和风格上节省很多时间。</p><h3 id="教程所需素材"><a class="header-anchor" href="#教程所需素材">#</a>教程所需素材</h3><p>下面就是本教程需要用到的素材：</p><ul><li><a href="https://pixabay.com/en/gray-clouds-thunderstorm-718177/" target="_blank" rel="noopener">天空</a></li><li><a href="https://pixabay.com/en/mountains-lake-mist-fog-nature-691082/" target="_blank" rel="noopener">风景</a></li><li><a href="https://pixabay.com/en/moon-nocturne-night-nature-232753/" target="_blank" rel="noopener">月亮</a></li><li><a href="http://www.textures.com/download/brickround0092/37917" target="_blank" rel="noopener">地板</a></li><li><a href="http://simbores.deviantart.com/art/Medieval-Garden-07-492641354" target="_blank" rel="noopener">阳台</a></li><li><a href="http://mizzd-stock.deviantart.com/art/Fairytale-Princess-2-206778528" target="_blank" rel="noopener">模特</a></li><li><a href="https://pixabay.com/en/bloom-blossom-bougainvillea-flora-2387/" target="_blank" rel="noopener">花1</a></li><li><a href="https://pixabay.com/en/bougainvillea-flowers-pink-flowers-241690/" target="_blank" rel="noopener">花2</a></li><li><a href="https://pixabay.com/en/bougainvillea-sky-moon-374111/" target="_blank" rel="noopener">花3</a></li></ul><h3 id="1-添加天空和风景"><a class="header-anchor" href="#1-添加天空和风景">#</a>1.添加天空和风景</h3><h4 id="步骤1"><a class="header-anchor" href="#步骤1">#</a>步骤1</h4><p>在Photoshop预设条件下创建一个1500像素*1500像素的新文件：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/cd8TyBtimYUUTH4ycZFUplic5kfm10zs0TMzRqJ*9l4!/r/dHUBAAAAAAAA" alt=""></p><h4 id="步骤2"><a class="header-anchor" href="#步骤2">#</a>步骤2</h4><p>打开天空的图片。将它用移动工具(V)拖动到主文件中，并将它放置在画布的上半部分。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/O*i39A7Lzl.NZCnC5r6A28zvSkOgOFXZJ.lhNkZFcrI!/r/dHIBAAAAAAAA" alt=""></p><p>选择滤镜&gt;模糊&gt;高斯模糊，设置半径为8像素：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/raNpbkQfXiAfVjPvbFfqpof4bEkoQm*WQbFTl*IVaGw!/r/dHMBAAAAAAAA" alt=""></p><h4 id="步骤3"><a class="header-anchor" href="#步骤3">#</a>步骤3</h4><p>使用图像调整让天空变得更暗一些。图层&gt;新建调整图层&gt;曲线：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/uTOJdaTPV0nzusZfKTHhEyBjR0ZP6kgWJzRJ7ToR5So!/r/dHIBAAAAAAAA" alt=""></p><p>在这个图层蒙板上，激活笔刷工具(B)，用一个软圆的、黑颜色的(软黑笔刷)来减少左边的效果，为的是我们之后会在这里添加的月亮。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/R6z4eLPc92UAgDC*DBq8u1m0MLpXN4grKa*XUcnk1lA!/r/dI8BAAAAAAAA" alt=""></p><h4 id="步骤4"><a class="header-anchor" href="#步骤4">#</a>步骤4</h4><p>用另一个曲线调整图层来使天空加亮，特别是左边部分。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/BZ3hmdfcNTRVGVY4lf2gupPDRFGqvQQpJuEod.F1RFk!/r/dGsAAAAAAAAA" alt=""></p><p>使用软黑笔刷隐藏右半部分的效果，这么做是为了让它更暗一些。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/vkVe8ekz*YjMVpEjOaqlrbEIZXV4KDpLgXTLb.RWG3s!/r/dHQBAAAAAAAA" alt=""></p><h4 id="步骤5"><a class="header-anchor" href="#步骤5">#</a>步骤5</h4><p>打开风景的图片。把它放置在画布的下半部分。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/lBPBaiPx7C4u7mJ4dO0SID0uvMkarzzcq8ds4Tphsrc!/r/dHIBAAAAAAAA" alt=""></p><p>在这个图层上添加一个蒙板，用软黑笔刷去掉对比强烈的边缘，让两张图片的天空融合。保留一些山顶周围云雾的边缘。在涂抹左边的山的时候降低笔刷的透明度，让它消失在天空中。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/RCyav9QORhwoYe4YGI1KyDlPnMlLnH0F1b5P7ALG.TQ!/r/dI8BAAAAAAAA" alt="“"></p><h4 id="步骤6"><a class="header-anchor" href="#步骤6">#</a>步骤6</h4><p>在湖面上有一些我们不想要的细节。新建一个图层，把它作为剪切蒙板。选择仿制图章工具(S)来清除这些细节。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/*pkFvZePxW8VNl1*tq8WFJ8F.pCPbEKltd6ifyTQ1*8!/r/dHIBAAAAAAAA" alt="“”/"></p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/fLm4kbuNt2DnfxZWbgsqu6CsyPj5WHL.hkCbeOdkxlM!/r/dHUBAAAAAAAA" alt="“”/"></p><h4 id="步骤7"><a class="header-anchor" href="#步骤7">#</a>步骤7</h4><p>添加一个曲线调整图层(作为剪切蒙板)来让画面暗化。在它的图层蒙板上，用软黑笔刷清除月光照亮的部分的暗化效果。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/HEMFn10HahuPII9fOUosMwMUOiGkxy5Yk1ZOf.MBYh4!/r/dHIBAAAAAAAA" alt="“”/"></p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/xBKAbWNBAolO09QZ7k*W9m7hmg7A*kgdRLvvp4bkVzQ!/r/dHIBAAAAAAAA" alt="“”/"></p><h4 id="步骤8"><a class="header-anchor" href="#步骤8">#</a>步骤8</h4><p>使用色相/饱和度调整图层让风景和天空的饱和度匹配：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/EMHRi*T1lrgTs7ARk*phWVNgWVpy2XzYc9ef*xrVup0!/r/dI8BAAAAAAAA" alt="“"></p><h3 id="2-添加月亮"><a class="header-anchor" href="#2-添加月亮">#</a>2.添加月亮</h3><h4 id="步骤1-2"><a class="header-anchor" href="#步骤1-2">#</a>步骤1</h4><p>用椭圆选区工具(M)将月亮从原始图片中抠出，把它放置到画布的左上角。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/Jn.SihB9uqOgPn6LqrQVFJqckRZi81nwwbl5eeFgHTg!/r/dHQBAAAAAAAA" alt="“"></p><h4 id="步骤2-2"><a class="header-anchor" href="#步骤2-2">#</a>步骤2</h4><p>对月亮图层应用8像素的高斯模糊，使得它和天空的深度和柔软度相匹配：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/HoXp*B40D3Jfqs3Rw00nDNfhnx85n5MpGQoZDet1XlE!/r/dIoBAAAAAAAA" alt="“”/"></p><h4 id="步骤3-2"><a class="header-anchor" href="#步骤3-2">#</a>步骤3</h4><p>双击月亮图层，选择内发光效果，设置的发光颜色为#ededed：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/81POBVcgpZy60yCeovpd3cY*F0jPjNzC2Fr9D7jsUwk!/r/dHQBAAAAAAAA" alt="“”/"></p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/aR0HIA7BiD2HpXFNuM8gD0J96Wtd4pMH1EdKi7wnGmY!/r/dHIBAAAAAAAA" alt="“"></p><h4 id="步骤4-2"><a class="header-anchor" href="#步骤4-2">#</a>步骤4</h4><p>用和我之前的<a href="http://design.tutsplus.com/tutorials/create-a-relaxing-vibrant-fantasy-lake-scene-with-adobe-photoshop--cms-24409" target="_blank" rel="noopener">梦幻湖泊景象教程</a>一样的方法来做月光关于湖面的反射。你应该得到类似向下图一样的效果：</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/JQnLzUr4yNUZY.bkux0yyQJbzS0W6K57HKcHvYZm.2k!/r/dHQBAAAAAAAA" alt="“”/"></p><h4 id="步骤5-2"><a class="header-anchor" href="#步骤5-2">#</a>步骤5</h4><p>新建一个图层，用柔软的、颜色值为#ededed的笔刷来涂抹湖面的区域，达到反射月光的效果。更改图层样式变为柔光100%。</p><p><img src="http://r.photo.store.qq.com/psb?/V10scHBd1P6AZ9/qJcrjAfAdo273Fr9vKtQoD5dJ45OS1r*R*mSZt2nifo!/r/dHYBAAAAAAAA" alt="“”/"></p><p><a href="http://design.tutsplus.com/tutorials/how-to-create-a-moonlight-scene-photo-manipulation-with-adobe-photoshop--cms-25064" target="_blank" rel="noopener">原文链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Photoshop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> photoshop </tag>
            
            <tag> design </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/blog/about/index.html"/>
      <url>/blog/about/index.html</url>
      
        <content type="html"><![CDATA[<p>一些关于我的，有的没的，的东西。</p><ul><li>一个在线视频同步播放插件：<a href="https://onns.xyz/sync-sofa/">https://onns.xyz/sync-sofa/</a></li><li>一个因为 leetcode 刷题不想每次改名的中划线转驼峰：<a href="https://onns.xyz/tools/hyphens-to-camel-case/">https://onns.xyz/tools/hyphens-to-camel-case/</a></li><li>一个不想到处乱登录的文字同步工具：<a href="https://onns.xyz/doc/?anything">https://onns.xyz/doc/?anything</a></li><li>一个PPT的遥控器：<a href="https://github.com/onns/ppt-remoter" target="_blank" rel="noopener">https://github.com/onns/ppt-remoter</a></li><li>一个视频数据标注工具：<a href="https://github.com/onns/video-annotation" target="_blank" rel="noopener">https://github.com/onns/video-annotation</a></li></ul><p>一个简简单单的简历，<code>Adobe Indesign</code> 做的。</p><div class="row">    <embed src="//onns.xyz/blog/files/resume-20200706.pdf" width="100%" height="550" type="application/pdf"></div><p>一些学画画路上的东西：<a href="https://onns.xyz/blog/draw/">乱涂乱画</a></p><p>一些友链，如果没有，不是我没有朋友，是他们老换链接，唉 ╮(╯▽╰)╭：<a href="https://onns.xyz/blog/links/">友链</a></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/blog/categories/index.html"/>
      <url>/blog/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>2019年总结</title>
      <link href="/blog/drafts/2019-summary.html"/>
      <url>/blog/drafts/2019-summary.html</url>
      
        <content type="html"><![CDATA[<p>荒唐事三四</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>ifc file parsing</title>
      <link href="/blog/drafts/ifc-file-parsing.html"/>
      <url>/blog/drafts/ifc-file-parsing.html</url>
      
        <content type="html"><![CDATA[<p>ISO-10303-21;<br>HEADER;<br>FILE_DESCRIPTION ((’’), ‘2;1’);<br>FILE_NAME (’’, ‘2018-10-16T13:20:31’, (’’), (’’), ‘Xbim File Processor version 4.0.0.0’, ‘Xbim version 4.0.0.0’, ‘’);<br>FILE_SCHEMA ((‘IFC4’));<br>ENDSEC;<br>DATA;<br>#1=IFCPROJECT(‘2GZ2lqVtL4RhhgjFpmQj7s’,#2,‘HelloWall’,$,$,$,$,(#20,#23),#8);<br>#2=IFCOWNERHISTORY(#5,#6,$,.ADDED.,$,$,$,0);<br>#3=IFCPERSON($,‘Team’,‘xBIM’,$,$,$,$,$);<br>#4=IFCORGANIZATION($,‘xBimTeam’,$,$,$);<br>#5=IFCPERSONANDORGANIZATION(#3,#4,$);<br>#7=IFCORGANIZATION($,‘xBimTeam’,$,$,$);<br>#6=IFCAPPLICATION(#7,‘1.0’,‘Hello Wall Application’,‘HelloWall.exe’);<br>#8=IFCUNITASSIGNMENT((#9,#10,#11,#12,#13,#14,#15,#16,#17));<br>#9=IFCSIUNIT(<em>,.LENGTHUNIT.,.MILLI.,.METRE.);<br>#10=IFCSIUNIT(</em>,.AREAUNIT.,$,.SQUARE_METRE.);<br>#11=IFCSIUNIT(<em>,.VOLUMEUNIT.,$,.CUBIC_METRE.);<br>#12=IFCSIUNIT(</em>,.SOLIDANGLEUNIT.,$,.STERADIAN.);<br>#13=IFCSIUNIT(<em>,.PLANEANGLEUNIT.,$,.RADIAN.);<br>#14=IFCSIUNIT(</em>,.MASSUNIT.,$,.GRAM.);<br>#15=IFCSIUNIT(<em>,.TIMEUNIT.,$,.SECOND.);<br>#16=IFCSIUNIT(</em>,.THERMODYNAMICTEMPERATUREUNIT.,$,.DEGREE_CELSIUS.);<br>#17=IFCSIUNIT(<em>,.LUMINOUSINTENSITYUNIT.,$,.LUMEN.);<br>#18=IFCCARTESIANPOINT((0.,0.,0.));<br>#19=IFCAXIS2PLACEMENT3D(#18,$,$);<br>#20=IFCGEOMETRICREPRESENTATIONCONTEXT(‘Building Model’,‘Model’,3,1.E-05,#19,$);<br>#21=IFCCARTESIANPOINT((0.,0.));<br>#22=IFCAXIS2PLACEMENT2D(#21,$);<br>#23=IFCGEOMETRICREPRESENTATIONCONTEXT(‘Building Plan View’,‘Plan’,2,1.E-05,#22,$);<br>#24=IFCBUILDING(‘0ClVgjZh5FhBAip2_5_wLe’,#2,‘Default Building’,$,$,#25,$,$,.ELEMENT.,$,$,$);<br>#25=IFCLOCALPLACEMENT($,#26);<br>#26=IFCAXIS2PLACEMENT3D(#27,$,$);<br>#27=IFCCARTESIANPOINT((0.,0.,0.));<br>#28=IFCRELAGGREGATES(‘30n8zf84X9W8Dm9so0gVfb’,#2,$,$,#1,(#24));<br>#29=IFCWALLSTANDARDCASE(‘0m0peqs9P7veKstlE2d0il’,#2,‘A Standard rectangular wall’,$,$,#39,#38,$,$);<br>#30=IFCRECTANGLEPROFILEDEF(.AREA.,$,#32,300.,4000.);<br>#31=IFCCARTESIANPOINT((0.,400.));<br>#32=IFCAXIS2PLACEMENT2D(#31,$);<br>#33=IFCEXTRUDEDAREASOLID(#30,#36,#34,2400.);<br>#34=IFCDIRECTION((0.,0.,1.));<br>#35=IFCCARTESIANPOINT((0.,0.,0.));<br>#36=IFCAXIS2PLACEMENT3D(#35,$,$);<br>#37=IFCSHAPEREPRESENTATION(#20,‘Body’,‘SweptSolid’,(#33));<br>#38=IFCPRODUCTDEFINITIONSHAPE($,$,(#37,#52));<br>#39=IFCLOCALPLACEMENT($,#40);<br>#40=IFCAXIS2PLACEMENT3D(#35,#42,#41);<br>#41=IFCDIRECTION((0.,1.,0.));<br>#42=IFCDIRECTION((0.,0.,1.));<br>#43=IFCMATERIALLAYERSETUSAGE(#44,.AXIS2.,.NEGATIVE.,150.,$);<br>#44=IFCMATERIALLAYERSET((#45),$,$);<br>#45=IFCMATERIALLAYER($,10.,$,$,$,$,$);<br>#46=IFCMATERIAL(‘some material’,$,$);<br>#47=IFCRELASSOCIATESMATERIAL(‘1tSNZgCKP6TOgKn7Pgi4Ni’,#2,$,$,(#29),#43);<br>#48=IFCPRESENTATIONLAYERASSIGNMENT(‘some ifcPresentationLayerAssignment’,$,(#37),$);<br>#49=IFCPOLYLINE((#50,#51));<br>#50=IFCCARTESIANPOINT((0.,0.));<br>#51=IFCCARTESIANPOINT((4000.,0.));<br>#52=IFCSHAPEREPRESENTATION(#20,‘Axis’,‘Curve2D’,(#49));<br>#54=IFCSIUNIT(</em>,.LENGTHUNIT.,.MILLI.,.METRE.);<br>#53=IFCQUANTITYLENGTH(‘IfcQuantityArea:Area’,’’,#54,100.,$);<br>#56=IFCDIMENSIONALEXPONENTS(1,0,0,0,0,0,0);<br>#55=IFCCONTEXTDEPENDENTUNIT(#56,.LENGTHUNIT.,‘Elephants’);<br>#57=IFCQUANTITYCOUNT(‘IfcQuantityCount:Elephant’,$,#55,12.,$);<br>#60=IFCSIUNIT(<em>,.LENGTHUNIT.,.MILLI.,.METRE.);<br>#59=IFCMEASUREWITHUNIT(IFCRATIOMEASURE(25.4),#60);<br>#61=IFCDIMENSIONALEXPONENTS(1,0,0,0,0,0,0);<br>#58=IFCCONVERSIONBASEDUNIT(#61,.LENGTHUNIT.,‘Inch’,#59);<br>#62=IFCQUANTITYLENGTH(‘IfcQuantityLength:Length’,’’,#58,24.,$);<br>#63=IFCELEMENTQUANTITY(‘2eT$$_utH4BR61Fw6jnbaT’,#2,‘Test:IfcElementQuantity’,‘Measurement quantity’,$,(#53,#57,#62));<br>#64=IFCRELDEFINESBYPROPERTIES(‘10Kc9Br0D13961GThfQc7s’,#2,‘Area Association’,‘IfcElementQuantity associated to wall’,(#29),#63);<br>#66=IFCSIUNIT(</em>,.TIMEUNIT.,$,.SECOND.);<br>#65=IFCPROPERTYSINGLEVALUE(‘IfcPropertySingleValue:Time’,’’,IFCTIMEMEASURE(150.),#66);<br>#68=IFCPROPERTYENUMERATION(‘Notes’,(IFCLABEL(‘Do’),IFCLABEL(‘Re’),IFCLABEL(‘Mi’),IFCLABEL(‘Fa’),IFCLABEL(‘So’),IFCLABEL(‘La’),IFCLABEL(‘Ti’)),$);<br>#67=IFCPROPERTYENUMERATEDVALUE(‘IfcPropertyEnumeratedValue:Music’,$,(IFCLABEL(‘Do’),IFCLABEL(‘Re’),IFCLABEL(‘Mi’)),#68);<br>#70=IFCSIUNIT(*,.MASSUNIT.,.KILO.,.GRAM.);<br>#69=IFCPROPERTYBOUNDEDVALUE(‘IfcPropertyBoundedValue:Mass’,’’,IFCMASSMEASURE(5000.),IFCMASSMEASURE(1000.),#70,$);<br>#73=IFCDIMENSIONALEXPONENTS(0,0,0,0,0,0,0);<br>#72=IFCCONTEXTDEPENDENTUNIT(#73,.FREQUENCYUNIT.,‘dB’);<br>#71=IFCPROPERTYTABLEVALUE(‘IfcPropertyTableValue:Sound’,$,(IFCREAL(100.),IFCREAL(200.),IFCREAL(400.),IFCREAL(800.),IFCREAL(1600.),IFCREAL(3200.)),(IFCREAL(20.),IFCREAL(42.),IFCREAL(46.),IFCREAL(56.),IFCREAL(60.),IFCREAL(65.)),$,$,#72,$);<br>#74=IFCPROPERTYLISTVALUE(‘IfcPropertyListValue:Colours’,$,(IFCLABEL(‘Red’),IFCLABEL(‘Green’),IFCLABEL(‘Blue’),IFCLABEL(‘Pink’),IFCLABEL(‘White’),IFCLABEL(‘Black’)),$);<br>#75=IFCMATERIAL(‘Brick’,$,$);<br>#76=IFCPROPERTYREFERENCEVALUE(‘IfcPropertyReferenceValue:Material’,$,$,#75);<br>#78=IFCMATERIAL(‘Cavity’,$,$);<br>#79=IFCMATERIAL(‘Block’,$,$);<br>#77=IFCMATERIALLIST((#75,#78,#79));<br>#80=IFCMATERIALLAYER(#75,100.,$,$,$,$,$);<br>#81=IFCPROPERTYREFERENCEVALUE(‘IfcPropertyReferenceValue:MaterialLayer’,$,$,#80);<br>#82=IFCDOCUMENTREFERENCE(‘c://Documents//TheDoc.Txt’,$,‘Document’,$,$);<br>#83=IFCPROPERTYREFERENCEVALUE(‘IfcPropertyReferenceValue:Document’,$,$,#82);<br>#84=IFCREGULARTIMESERIES(‘Regular Time Series’,‘Time series of events’,‘2015-02-14T12:01:01’,‘2015-05-15T12:01:01’,.CONTINUOUS.,.MEASURED.,$,$,604800.,());<br>#85=IFCPROPERTYREFERENCEVALUE(‘IfcPropertyReferenceValue:TimeSeries’,$,$,#84);<br>#86=IFCPOSTALADDRESS($,$,$,‘Room 101’,(‘12 New road’,‘DoxField’),$,‘Sunderland’,$,‘DL01 6SX’,$);<br>#87=IFCPROPERTYREFERENCEVALUE(‘IfcPropertyReferenceValue:Address’,$,$,#86);<br>#88=IFCTELECOMADDRESS($,$,$,(‘01325 6589965’),$,$,(‘bob@bobsworks.com’),$,$);<br>#89=IFCPROPERTYREFERENCEVALUE(‘IfcPropertyReferenceValue:Telecom’,$,$,#88);<br>#90=IFCPROPERTYSET(‘1qDdK625XDLvD1ADI2cU4Q’,#2,‘Test:IfcPropertySet’,‘Property Set’,(#65,#67,#69,#71,#74,#76,#81,#83,#85,#87,#89));<br>#91=IFCRELDEFINESBYPROPERTIES(‘2oFbfaFWT6SAQkNtJ7W$sB’,#2,‘Property Association’,‘IfcPropertySet associated to wall’,(#29),#90);<br>#92=IFCRELCONTAINEDINSPATIALSTRUCTURE(‘2BRDC5_vD1XfhW_$wVxuAt’,#2,$,$,(#29),#24);<br>ENDSEC;<br>END-ISO-10303-21;</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Xlibrary接口文档</title>
      <link href="/blog/drafts/xlibrary-api-document.html"/>
      <url>/blog/drafts/xlibrary-api-document.html</url>
      
        <content type="html"><![CDATA[<!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} --><!-- code_chunk_output --><ul><li><a href="#%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3">接口文档</a><ul><li><a href="#%E7%94%9F%E6%88%90%E8%BD%AC%E5%80%9F%E7%A0%81">生成转借码</a></li><li><a href="#%E8%BD%AC%E5%80%9F%E5%9B%BE%E4%B9%A6">转借图书</a></li></ul></li></ul><!-- /code_chunk_output --><a id="more"></a><h1 id="接口文档"><a class="header-anchor" href="#接口文档">#</a>接口文档</h1><ul><li>段落标题<ul><li>段落标题<ul><li>段落标题<ul><li>段落标题</li></ul></li><li>段落标题</li></ul></li><li>段落标题</li></ul></li><li>段落标题</li></ul><h2 id="生成转借码"><a class="header-anchor" href="#生成转借码">#</a>生成转借码</h2><ul><li>作者：@Onns</li><li>上次修改：2019-08-14</li></ul><p>拥有书的用户可以生成转借码，将书借给他人。</p><ul><li><strong>网址：</strong><br>/api/book/generate-code</li><li><strong>方法：</strong><br><code>GET</code> | <code>POST</code></li></ul><ul><li><strong>参数：</strong><ul><li>必需：<br><code>isbn=[isbn]</code></li></ul></li></ul><ul><li><strong>成功：</strong><ul><li>返回码：<img src="https://placehold.it/15/00ff00/000000?text=+" alt=""> <strong>10101</strong> <br /><br>返回值：<br /><br><code>{&quot;error&quot;:0,&quot;message&quot;:&quot;10101: 生成转借码成功&quot;,&quot;data&quot;:&quot;LDMvsjLWikpPjXX+ytc3wISPZr66c9oE1XN1NgzBjO0=&quot;}</code></li></ul></li><li><strong>失败：</strong><ul><li>返回码：<img src="https://placehold.it/15/ff0000/000000?text=+" alt=""> <strong>10000</strong> <br /><br>返回值：<br /><br><code>{error: 1, message: &quot;10000: 未登录，禁止操作&quot;}</code></li><li>返回码：<img src="https://placehold.it/15/ff0000/000000?text=+" alt=""> <strong>10102</strong> <br /><br>返回值：<br /><br><code>{error: 1, message: &quot;10102: isbn号有误&quot;}</code></li><li>返回码：<img src="https://placehold.it/15/ff0000/000000?text=+" alt=""> <strong>10103</strong> <br /><br>返回值：<br /><br><code>{error: 1, message: &quot;10103: 未找到相关记录&quot;}</code></li></ul></li></ul><h2 id="转借图书"><a class="header-anchor" href="#转借图书">#</a>转借图书</h2><ul><li>作者：@Onns</li><li>上次修改：2019-08-14</li></ul><p>通过扫码他人的转借码，获得转借的图书。</p><ul><li><p><strong>网址：</strong></p><p>/api/book/subtenancy</p></li><li><p><strong>方法：</strong></p><p><code>GET</code> | <code>POST</code></p></li><li><p><strong>参数：</strong></p><ul><li><p>必需：</p><p><code>code=[code]</code></p></li></ul></li><li><p><strong>成功：</strong></p><ul><li>返回码：<img src="https://placehold.it/15/00ff00/000000?text=+" alt=""> <strong>10201</strong> <br /><br>返回值：<br /><br><code>{&quot;error&quot;:0,&quot;message&quot;:&quot;10201: 转借成功&quot;}</code></li></ul></li><li><p><strong>失败：</strong></p><ul><li><p>返回码：<img src="https://placehold.it/15/ff0000/000000?text=+" alt=""> <strong>10000</strong> <br /><br>返回值：<br /><br><code>{error: 1, message: &quot;10000: 未登录，禁止操作&quot;}</code></p></li><li><p>返回码：<img src="https://placehold.it/15/ff0000/000000?text=+" alt=""> <strong>10202</strong> <br /><br>返回值：<br /><br><code>{error: 1, message: &quot;10202: 不能转借给自己&quot;}</code></p></li><li><p>返回码：<img src="https://placehold.it/15/ff0000/000000?text=+" alt=""> <strong>10103</strong> <br /><br>返回值：<br /><br><code>{error: 1, message: &quot;10103: 未找到相关记录&quot;}</code></p></li><li><p>返回码：<img src="https://placehold.it/15/ff0000/000000?text=+" alt=""> <strong>10204</strong> <br /><br>返回值：<br /><br><code>{&quot;error&quot;:1,&quot;message&quot;:&quot;10204: 转借码有误&quot;}</code></p></li><li><p>返回码：<img src="https://placehold.it/15/ff0000/000000?text=+" alt=""> <strong>10205</strong> <br /><br>返回值：<br /><br><code>{error: 1, message: &quot;10205: 转借码有误&quot;}</code></p></li></ul></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>画啊画涂啊涂</title>
      <link href="/blog/draw/index.html"/>
      <url>/blog/draw/index.html</url>
      
        <content type="html"><![CDATA[<h3 id="2020-02"><a class="header-anchor" href="#2020-02">#</a>2020.02</h3><p><img src="//onns.xyz/blog/image/draw-20200207.jpg" alt="20200207"></p><h3 id="2019-12"><a class="header-anchor" href="#2019-12">#</a>2019.12</h3><p><img src="//onns.xyz/blog/image/draw-20191215.jpg" alt="20191215"></p><h3 id="2019-10"><a class="header-anchor" href="#2019-10">#</a>2019.10</h3><p><img src="//onns.xyz/blog/image/draw-20191031.jpg" alt="20191031"></p><h3 id="2019-07"><a class="header-anchor" href="#2019-07">#</a>2019.07</h3><p><img src="//onns.xyz/blog/image/draw-20190731.jpg" alt="20190731"></p><p><img src="//onns.xyz/blog/image/draw-20190728.jpg" alt="20190728"></p><h3 id="2019-06"><a class="header-anchor" href="#2019-06">#</a>2019.06</h3><p><img src="//onns.xyz/blog/image/draw-20190608.jpg" alt="20190608"></p><p><img src="//onns.xyz/blog/image/draw-20190606.jpg" alt="20190606"></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>home</title>
      <link href="/blog/home/index.html"/>
      <url>/blog/home/index.html</url>
      
        <content type="html"><![CDATA[<script language="javascript" type="text/javascript">window.location.href="//onns.xyz/";</script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>image</title>
      <link href="/blog/image/index.html"/>
      <url>/blog/image/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>links</title>
      <link href="/blog/links/index.html"/>
      <url>/blog/links/index.html</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://www.mycgx.com/" target="_blank" rel="noopener">小鱼 blog</a></li><li><a href="http://xiangyi.pro/" target="_blank" rel="noopener">Xiangyi’s Blog</a></li><li><a href="https://her-cat.com/" target="_blank" rel="noopener">她和她的猫</a></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/blog/tags/index.html"/>
      <url>/blog/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
